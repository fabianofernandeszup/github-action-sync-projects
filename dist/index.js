require('./sourcemap-register.js');/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ 9694:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"__schema":{"queryType":{"name":"Query"},"mutationType":{"name":"Mutation"},"subscriptionType":null,"types":[{"kind":"INPUT_OBJECT","name":"AbortQueuedMigrationsInput","description":"Autogenerated input type of AbortQueuedMigrations","fields":null,"inputFields":[{"name":"ownerId","description":"The ID of the organization that is running the migrations.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AbortQueuedMigrationsPayload","description":"Autogenerated return type of AbortQueuedMigrations","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"success","description":"Did the operation succeed?","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AcceptEnterpriseAdministratorInvitationInput","description":"Autogenerated input type of AcceptEnterpriseAdministratorInvitation","fields":null,"inputFields":[{"name":"invitationId","description":"The id of the invitation being accepted","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AcceptEnterpriseAdministratorInvitationPayload","description":"Autogenerated return type of AcceptEnterpriseAdministratorInvitation","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"invitation","description":"The invitation that was accepted.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of accepting an administrator invitation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AcceptTopicSuggestionInput","description":"Autogenerated input type of AcceptTopicSuggestion","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the suggested topic.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AcceptTopicSuggestionPayload","description":"Autogenerated return type of AcceptTopicSuggestion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topic","description":"The accepted topic.","args":[],"type":{"kind":"OBJECT","name":"Topic","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Actor","description":"Represents an object which can take actions on GitHub. Typically a User or Bot.","fields":[{"name":"avatarUrl","description":"A URL pointing to the actor\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The username of the actor.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this actor.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this actor.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Bot","ofType":null},{"kind":"OBJECT","name":"EnterpriseUserAccount","ofType":null},{"kind":"OBJECT","name":"Mannequin","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"ActorLocation","description":"Location information for an actor","fields":[{"name":"city","description":"City","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"country","description":"Country name","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"countryCode","description":"Country code","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"region","description":"Region name","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"regionCode","description":"Region or state code","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ActorType","description":"The actor\'s type.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"USER","description":"Indicates a user actor.","isDeprecated":false,"deprecationReason":null},{"name":"TEAM","description":"Indicates a team actor.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddAssigneesToAssignableInput","description":"Autogenerated input type of AddAssigneesToAssignable","fields":null,"inputFields":[{"name":"assignableId","description":"The id of the assignable object to add assignees to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"assigneeIds","description":"The id of users to add as assignees.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddAssigneesToAssignablePayload","description":"Autogenerated return type of AddAssigneesToAssignable","fields":[{"name":"assignable","description":"The item that was assigned.","args":[],"type":{"kind":"INTERFACE","name":"Assignable","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddCommentInput","description":"Autogenerated input type of AddComment","fields":null,"inputFields":[{"name":"subjectId","description":"The Node ID of the subject to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"body","description":"The contents of the comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddCommentPayload","description":"Autogenerated return type of AddComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commentEdge","description":"The edge from the subject\'s comment connection.","args":[],"type":{"kind":"OBJECT","name":"IssueCommentEdge","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The subject","args":[],"type":{"kind":"INTERFACE","name":"Node","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"timelineEdge","description":"The edge from the subject\'s timeline connection.","args":[],"type":{"kind":"OBJECT","name":"IssueTimelineItemEdge","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddDiscussionCommentInput","description":"Autogenerated input type of AddDiscussionComment","fields":null,"inputFields":[{"name":"discussionId","description":"The Node ID of the discussion to comment on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"replyToId","description":"The Node ID of the discussion comment within this discussion to reply to.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"body","description":"The contents of the comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddDiscussionCommentPayload","description":"Autogenerated return type of AddDiscussionComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comment","description":"The newly created discussion comment.","args":[],"type":{"kind":"OBJECT","name":"DiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddDiscussionPollVoteInput","description":"Autogenerated input type of AddDiscussionPollVote","fields":null,"inputFields":[{"name":"pollOptionId","description":"The Node ID of the discussion poll option to vote for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddDiscussionPollVotePayload","description":"Autogenerated return type of AddDiscussionPollVote","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pollOption","description":"The poll option that a vote was added to.","args":[],"type":{"kind":"OBJECT","name":"DiscussionPollOption","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddEnterpriseOrganizationMemberInput","description":"Autogenerated input type of AddEnterpriseOrganizationMember","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise which owns the organization.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"organizationId","description":"The ID of the organization the users will be added to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"userIds","description":"The IDs of the enterprise members to add.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"role","description":"The role to assign the users in the organization","type":{"kind":"ENUM","name":"OrganizationMemberRole","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddEnterpriseOrganizationMemberPayload","description":"Autogenerated return type of AddEnterpriseOrganizationMember","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"users","description":"The users who were added to the organization.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddEnterpriseSupportEntitlementInput","description":"Autogenerated input type of AddEnterpriseSupportEntitlement","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the Enterprise which the admin belongs to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"login","description":"The login of a member who will receive the support entitlement.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddEnterpriseSupportEntitlementPayload","description":"Autogenerated return type of AddEnterpriseSupportEntitlement","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of adding the support entitlement.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddLabelsToLabelableInput","description":"Autogenerated input type of AddLabelsToLabelable","fields":null,"inputFields":[{"name":"labelableId","description":"The id of the labelable object to add labels to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"labelIds","description":"The ids of the labels to add.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddLabelsToLabelablePayload","description":"Autogenerated return type of AddLabelsToLabelable","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"labelable","description":"The item that was labeled.","args":[],"type":{"kind":"INTERFACE","name":"Labelable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddProjectCardInput","description":"Autogenerated input type of AddProjectCard","fields":null,"inputFields":[{"name":"projectColumnId","description":"The Node ID of the ProjectColumn.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"contentId","description":"The content of the card. Must be a member of the ProjectCardItem union","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"note","description":"The note on the card.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddProjectCardPayload","description":"Autogenerated return type of AddProjectCard","fields":[{"name":"cardEdge","description":"The edge from the ProjectColumn\'s card connection.","args":[],"type":{"kind":"OBJECT","name":"ProjectCardEdge","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectColumn","description":"The ProjectColumn","args":[],"type":{"kind":"OBJECT","name":"ProjectColumn","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddProjectColumnInput","description":"Autogenerated input type of AddProjectColumn","fields":null,"inputFields":[{"name":"projectId","description":"The Node ID of the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the column.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddProjectColumnPayload","description":"Autogenerated return type of AddProjectColumn","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"columnEdge","description":"The edge from the project\'s column connection.","args":[],"type":{"kind":"OBJECT","name":"ProjectColumnEdge","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddProjectV2DraftIssueInput","description":"Autogenerated input type of AddProjectV2DraftIssue","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to add the draft issue to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the draft issue. A project item can also be created by providing the URL of an Issue or Pull Request if you have access.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The body of the draft issue.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"assigneeIds","description":"The IDs of the assignees of the draft issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddProjectV2DraftIssuePayload","description":"Autogenerated return type of AddProjectV2DraftIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectItem","description":"The draft issue added to the project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddProjectV2ItemByIdInput","description":"Autogenerated input type of AddProjectV2ItemById","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to add the item to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"contentId","description":"The id of the Issue or Pull Request to add.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddProjectV2ItemByIdPayload","description":"Autogenerated return type of AddProjectV2ItemById","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The item added to the project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddPullRequestReviewCommentInput","description":"Autogenerated input type of AddPullRequestReviewComment","fields":null,"inputFields":[{"name":"pullRequestId","description":"The node ID of the pull request reviewing","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"pullRequestReviewId","description":"The Node ID of the review to modify.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"commitOID","description":"The SHA of the commit to comment on.","type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"defaultValue":null},{"name":"body","description":"The text of the comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"path","description":"The relative path of the file to comment on.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"position","description":"The line index in the diff to comment on.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"inReplyTo","description":"The comment id to reply to.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddPullRequestReviewCommentPayload","description":"Autogenerated return type of AddPullRequestReviewComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comment","description":"The newly created comment.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commentEdge","description":"The edge from the review\'s comment connection.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewCommentEdge","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddPullRequestReviewInput","description":"Autogenerated input type of AddPullRequestReview","fields":null,"inputFields":[{"name":"pullRequestId","description":"The Node ID of the pull request to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"commitOID","description":"The commit OID the review pertains to.","type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"defaultValue":null},{"name":"body","description":"The contents of the review body comment.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"event","description":"The event to perform on the pull request review.","type":{"kind":"ENUM","name":"PullRequestReviewEvent","ofType":null},"defaultValue":null},{"name":"comments","description":"The review line comments.","type":{"kind":"LIST","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DraftPullRequestReviewComment","ofType":null}},"defaultValue":null},{"name":"threads","description":"The review line comment threads.","type":{"kind":"LIST","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DraftPullRequestReviewThread","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddPullRequestReviewPayload","description":"Autogenerated return type of AddPullRequestReview","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The newly created pull request review.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reviewEdge","description":"The edge from the pull request\'s review connection.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewEdge","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddPullRequestReviewThreadInput","description":"Autogenerated input type of AddPullRequestReviewThread","fields":null,"inputFields":[{"name":"path","description":"Path to the file being commented on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"Body of the thread\'s first comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"pullRequestId","description":"The node ID of the pull request reviewing","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"pullRequestReviewId","description":"The Node ID of the review to modify.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"line","description":"The line of the blob to which the thread refers. The end of the line range for multi-line comments.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null},{"name":"side","description":"The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.","type":{"kind":"ENUM","name":"DiffSide","ofType":null},"defaultValue":"RIGHT"},{"name":"startLine","description":"The first line of the range to which the comment refers.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"startSide","description":"The side of the diff on which the start line resides.","type":{"kind":"ENUM","name":"DiffSide","ofType":null},"defaultValue":"RIGHT"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddPullRequestReviewThreadPayload","description":"Autogenerated return type of AddPullRequestReviewThread","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"thread","description":"The newly created thread.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddReactionInput","description":"Autogenerated input type of AddReaction","fields":null,"inputFields":[{"name":"subjectId","description":"The Node ID of the subject to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"content","description":"The name of the emoji to react with.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ReactionContent","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddReactionPayload","description":"Autogenerated return type of AddReaction","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reaction","description":"The reaction object.","args":[],"type":{"kind":"OBJECT","name":"Reaction","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"The reaction groups for the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The reactable subject.","args":[],"type":{"kind":"INTERFACE","name":"Reactable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddStarInput","description":"Autogenerated input type of AddStar","fields":null,"inputFields":[{"name":"starrableId","description":"The Starrable ID to star.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddStarPayload","description":"Autogenerated return type of AddStar","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"starrable","description":"The starrable.","args":[],"type":{"kind":"INTERFACE","name":"Starrable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddUpvoteInput","description":"Autogenerated input type of AddUpvote","fields":null,"inputFields":[{"name":"subjectId","description":"The Node ID of the discussion or comment to upvote.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddUpvotePayload","description":"Autogenerated return type of AddUpvote","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The votable subject.","args":[],"type":{"kind":"INTERFACE","name":"Votable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"AddVerifiableDomainInput","description":"Autogenerated input type of AddVerifiableDomain","fields":null,"inputFields":[{"name":"ownerId","description":"The ID of the owner to add the domain to","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"domain","description":"The URL of the domain","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddVerifiableDomainPayload","description":"Autogenerated return type of AddVerifiableDomain","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"domain","description":"The verifiable domain that was added.","args":[],"type":{"kind":"OBJECT","name":"VerifiableDomain","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AddedToProjectEvent","description":"Represents a \'added_to_project\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"AnnouncementBanner","description":"Represents an announcement banner.","fields":[{"name":"announcement","description":"The text of the announcement","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"announcementExpiresAt","description":"The expiration date of the announcement, if any","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"announcementUserDismissible","description":"Whether the announcement can be dismissed by the user","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Enterprise","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null}]},{"kind":"OBJECT","name":"App","description":"A GitHub App.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description of the app.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEntries","description":"The IP addresses of the app.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for IP allow list entries returned.","type":{"kind":"INPUT_OBJECT","name":"IpAllowListEntryOrder","ofType":null},"defaultValue":"{field: ALLOW_LIST_VALUE, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IpAllowListEntryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"logoBackgroundColor","description":"The hex color code, without the leading \'#\', for the logo background.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"logoUrl","description":"A URL pointing to the app\'s logo.","args":[{"name":"size","description":"The size of the resulting image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the app.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"slug","description":"A slug based on the name of the app for use in URLs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The URL to the app\'s homepage.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ApproveDeploymentsInput","description":"Autogenerated input type of ApproveDeployments","fields":null,"inputFields":[{"name":"workflowRunId","description":"The node ID of the workflow run containing the pending deployments.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"environmentIds","description":"The ids of environments to reject deployments","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"comment","description":"Optional comment for approving deployments","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\\"\\""},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ApproveDeploymentsPayload","description":"Autogenerated return type of ApproveDeployments","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deployments","description":"The affected deployments.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Deployment","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ApproveVerifiableDomainInput","description":"Autogenerated input type of ApproveVerifiableDomain","fields":null,"inputFields":[{"name":"id","description":"The ID of the verifiable domain to approve.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ApproveVerifiableDomainPayload","description":"Autogenerated return type of ApproveVerifiableDomain","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"domain","description":"The verifiable domain that was approved.","args":[],"type":{"kind":"OBJECT","name":"VerifiableDomain","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ArchiveProjectV2ItemInput","description":"Autogenerated input type of ArchiveProjectV2Item","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to archive the item from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"itemId","description":"The ID of the ProjectV2Item to archive.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ArchiveProjectV2ItemPayload","description":"Autogenerated return type of ArchiveProjectV2Item","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The item archived from the project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ArchiveRepositoryInput","description":"Autogenerated input type of ArchiveRepository","fields":null,"inputFields":[{"name":"repositoryId","description":"The ID of the repository to mark as archived.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ArchiveRepositoryPayload","description":"Autogenerated return type of ArchiveRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that was marked as archived.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Assignable","description":"An object that can have users assigned to it.","fields":[{"name":"assignees","description":"A list of Users assigned to this object.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"OBJECT","name":"AssignedEvent","description":"Represents an \'assigned\' event on any assignable object.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"assignable","description":"Identifies the assignable associated with the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Assignable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"assignee","description":"Identifies the user or mannequin that was assigned.","args":[],"type":{"kind":"UNION","name":"Assignee","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"Identifies the user who was assigned.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":true,"deprecationReason":"Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC."}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"Assignee","description":"Types that can be assigned to issues.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Bot","ofType":null},{"kind":"OBJECT","name":"Mannequin","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"INTERFACE","name":"AuditEntry","description":"An entry in the audit log.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"MembersCanDeleteReposClearAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"OauthApplicationCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgBlockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteToBusinessAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessApprovedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessDeniedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessRequestedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveOutsideCollaboratorAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRestoreMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUnblockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateDefaultRepositoryPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryCreationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoArchivedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoChangeMergeSettingAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigLockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigUnlockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoDestroyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddRepositoryAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamChangeParentTeamAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveRepositoryAuditEntry","ofType":null}]},{"kind":"UNION","name":"AuditEntryActor","description":"Types that can initiate an audit log event.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Bot","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"INPUT_OBJECT","name":"AuditLogOrder","description":"Ordering options for Audit Log connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order Audit Logs by.","type":{"kind":"ENUM","name":"AuditLogOrderField","ofType":null},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"AuditLogOrderField","description":"Properties by which Audit Log connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order audit log entries by timestamp","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"AutoMergeDisabledEvent","description":"Represents a \'auto_merge_disabled\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"disabler","description":"The user who disabled auto-merge for this Pull Request","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reason","description":"The reason auto-merge was disabled","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reasonCode","description":"The reason_code relating to why auto-merge was disabled","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AutoMergeEnabledEvent","description":"Represents a \'auto_merge_enabled\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enabler","description":"The user who enabled auto-merge for this Pull Request","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AutoMergeRequest","description":"Represents an auto-merge request for a pull request","fields":[{"name":"authorEmail","description":"The email address of the author of this auto-merge request.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commitBody","description":"The commit message of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commitHeadline","description":"The commit title of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enabledAt","description":"When was this auto-merge request was enabled.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enabledBy","description":"The actor who created the auto-merge request.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergeMethod","description":"The merge method of the auto-merge request. If a merge queue is required by the base branch, this value will be set by the merge queue when merging.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestMergeMethod","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that this auto-merge request is set against.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AutoRebaseEnabledEvent","description":"Represents a \'auto_rebase_enabled\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enabler","description":"The user who enabled auto-merge (rebase) for this Pull Request","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AutoSquashEnabledEvent","description":"Represents a \'auto_squash_enabled\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enabler","description":"The user who enabled auto-merge (squash) for this Pull Request","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AutomaticBaseChangeFailedEvent","description":"Represents a \'automatic_base_change_failed\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"newBase","description":"The new base for this PR","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oldBase","description":"The old base for this PR","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"AutomaticBaseChangeSucceededEvent","description":"Represents a \'automatic_base_change_succeeded\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"newBase","description":"The new base for this PR","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oldBase","description":"The old base for this PR","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Base64String","description":"A (potentially binary) string encoded using base64.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BaseRefChangedEvent","description":"Represents a \'base_ref_changed\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"currentRefName","description":"Identifies the name of the base ref for the pull request after it was changed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"previousRefName","description":"Identifies the name of the base ref for the pull request before it was changed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BaseRefDeletedEvent","description":"Represents a \'base_ref_deleted\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"baseRefName","description":"Identifies the name of the Ref associated with the `base_ref_deleted` event.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BaseRefForcePushedEvent","description":"Represents a \'base_ref_force_pushed\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"afterCommit","description":"Identifies the after commit SHA for the \'base_ref_force_pushed\' event.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"beforeCommit","description":"Identifies the before commit SHA for the \'base_ref_force_pushed\' event.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"Identifies the fully qualified ref name for the \'base_ref_force_pushed\' event.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Blame","description":"Represents a Git blame.","fields":[{"name":"ranges","description":"The list of ranges from a Git blame.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"BlameRange","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BlameRange","description":"Represents a range of information from a Git blame.","fields":[{"name":"age","description":"Identifies the recency of the change, from 1 (new) to 10 (old). This is calculated as a 2-quantile and determines the length of distance between the median age of all the changes in the file and the recency of the current range\'s change.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"Identifies the line author","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"endingLine","description":"The ending line for the range","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startingLine","description":"The starting line for the range","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Blob","description":"Represents a Git blob.","fields":[{"name":"abbreviatedOid","description":"An abbreviated version of the Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"byteSize","description":"Byte size of Blob object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitResourcePath","description":"The HTTP path for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitUrl","description":"The HTTP URL for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isBinary","description":"Indicates whether the Blob is binary or text. Returns null if unable to determine the encoding.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isTruncated","description":"Indicates whether the contents is truncated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oid","description":"The Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The Repository the Git object belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"text","description":"UTF8 text data or null if the Blob is binary","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"GitObject","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Boolean","description":"Represents `true` or `false` values.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Bot","description":"A special type of user which takes actions on behalf of GitHub Apps.","fields":[{"name":"avatarUrl","description":"A URL pointing to the GitHub App\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The username of the actor.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this bot","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this bot","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Actor","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"BranchActorAllowanceActor","description":"Types which can be actors for `BranchActorAllowance` objects.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"App","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"BranchProtectionRule","description":"A branch protection rule.","fields":[{"name":"allowsDeletions","description":"Can this branch be deleted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"allowsForcePushes","description":"Are force pushes allowed on this branch.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"blocksCreations","description":"Is branch creation a protected operation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"branchProtectionRuleConflicts","description":"A list of conflicts matching branches protection rule and other branch protection rules","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"BranchProtectionRuleConflictConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bypassForcePushAllowances","description":"A list of actors able to force push for this branch protection rule.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"BypassForcePushAllowanceConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bypassPullRequestAllowances","description":"A list of actors able to bypass PRs for this branch protection rule.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"BypassPullRequestAllowanceConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created this branch protection rule.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissesStaleReviews","description":"Will new commits pushed to matching branches dismiss pull request review approvals.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isAdminEnforced","description":"Can admins overwrite branch protection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lockAllowsFetchAndMerge","description":"Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lockBranch","description":"Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"matchingRefs","description":"Repository refs that are protected by this rule","args":[{"name":"query","description":"Filters refs with query on name","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RefConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pattern","description":"Identifies the protection rule pattern.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pushAllowances","description":"A list push allowances for this branch protection rule.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PushAllowanceConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this branch protection rule.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"requireLastPushApproval","description":"Whether the most recent push must be approved by someone other than the person who pushed it","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiredApprovingReviewCount","description":"Number of approving reviews required to update matching branches.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"requiredDeploymentEnvironments","description":"List of required deployment environments that must be deployed successfully to update matching branches","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiredStatusCheckContexts","description":"List of required status check contexts that must pass for commits to be accepted to matching branches.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiredStatusChecks","description":"List of required status checks that must pass for commits to be accepted to matching branches.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RequiredStatusCheckDescription","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresApprovingReviews","description":"Are approving reviews required to update matching branches.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresCodeOwnerReviews","description":"Are reviews from code owners required to update matching branches.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresCommitSignatures","description":"Are commits required to be signed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresConversationResolution","description":"Are conversations required to be resolved before merging.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresDeployments","description":"Does this branch require deployment to specific environments before merging","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresLinearHistory","description":"Are merge commits prohibited from being pushed to this branch.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresStatusChecks","description":"Are status checks required to update matching branches.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresStrictStatusChecks","description":"Are branches required to be up to date before merging.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"restrictsPushes","description":"Is pushing to matching branches restricted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"restrictsReviewDismissals","description":"Is dismissal of pull request reviews restricted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reviewDismissalAllowances","description":"A list review dismissal allowances for this branch protection rule.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReviewDismissalAllowanceConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BranchProtectionRuleConflict","description":"A conflict between two branch protection rules.","fields":[{"name":"branchProtectionRule","description":"Identifies the branch protection rule.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"conflictingBranchProtectionRule","description":"Identifies the conflicting branch protection rule.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"Identifies the branch ref that has conflicting rules","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BranchProtectionRuleConflictConnection","description":"The connection type for BranchProtectionRuleConflict.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BranchProtectionRuleConflictEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BranchProtectionRuleConflict","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BranchProtectionRuleConflictEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRuleConflict","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BranchProtectionRuleConnection","description":"The connection type for BranchProtectionRule.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BranchProtectionRuleEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BranchProtectionRuleEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BypassForcePushAllowance","description":"A user, team, or app who has the ability to bypass a force push requirement on a protected branch.","fields":[{"name":"actor","description":"The actor that can force push.","args":[],"type":{"kind":"UNION","name":"BranchActorAllowanceActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"branchProtectionRule","description":"Identifies the branch protection rule associated with the allowed user, team, or app.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BypassForcePushAllowanceConnection","description":"The connection type for BypassForcePushAllowance.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BypassForcePushAllowanceEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BypassForcePushAllowance","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BypassForcePushAllowanceEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"BypassForcePushAllowance","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BypassPullRequestAllowance","description":"A user, team, or app who has the ability to bypass a pull request requirement on a protected branch.","fields":[{"name":"actor","description":"The actor that can bypass.","args":[],"type":{"kind":"UNION","name":"BranchActorAllowanceActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"branchProtectionRule","description":"Identifies the branch protection rule associated with the allowed user, team, or app.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BypassPullRequestAllowanceConnection","description":"The connection type for BypassPullRequestAllowance.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BypassPullRequestAllowanceEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"BypassPullRequestAllowance","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"BypassPullRequestAllowanceEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"BypassPullRequestAllowance","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CVSS","description":"The Common Vulnerability Scoring System","fields":[{"name":"score","description":"The CVSS score associated with this advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vectorString","description":"The CVSS vector string associated with this advisory","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CWE","description":"A common weakness enumeration","fields":[{"name":"cweId","description":"The id of the CWE","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"A detailed description of this CWE","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of this CWE","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CWEConnection","description":"The connection type for CWE.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CWEEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CWE","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CWEEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CWE","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CancelEnterpriseAdminInvitationInput","description":"Autogenerated input type of CancelEnterpriseAdminInvitation","fields":null,"inputFields":[{"name":"invitationId","description":"The Node ID of the pending enterprise administrator invitation.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CancelEnterpriseAdminInvitationPayload","description":"Autogenerated return type of CancelEnterpriseAdminInvitation","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"invitation","description":"The invitation that was canceled.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of canceling an administrator invitation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CancelSponsorshipInput","description":"Autogenerated input type of CancelSponsorship","fields":null,"inputFields":[{"name":"sponsorId","description":"The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"sponsorLogin","description":"The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"sponsorableId","description":"The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"sponsorableLogin","description":"The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CancelSponsorshipPayload","description":"Autogenerated return type of CancelSponsorship","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsTier","description":"The tier that was being used at the time of cancellation.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ChangeUserStatusInput","description":"Autogenerated input type of ChangeUserStatus","fields":null,"inputFields":[{"name":"emoji","description":"The emoji to represent your status. Can either be a native Unicode emoji or an emoji name with colons, e.g., :grinning:.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"message","description":"A short description of your current status.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"organizationId","description":"The ID of the organization whose members will be allowed to see the status. If omitted, the status will be publicly visible.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"limitedAvailability","description":"Whether this status should indicate you are not fully available on GitHub, e.g., you are away.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"expiresAt","description":"If set, the user status will not be shown after this date.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ChangeUserStatusPayload","description":"Autogenerated return type of ChangeUserStatus","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"status","description":"Your updated status.","args":[],"type":{"kind":"OBJECT","name":"UserStatus","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckAnnotation","description":"A single check annotation.","fields":[{"name":"annotationLevel","description":"The annotation\'s severity level.","args":[],"type":{"kind":"ENUM","name":"CheckAnnotationLevel","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blobUrl","description":"The path to the file that this annotation was made on.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"location","description":"The position of this annotation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CheckAnnotationSpan","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"The annotation\'s message.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The path that this annotation was made on.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"rawDetails","description":"Additional information about the annotation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The annotation\'s title","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckAnnotationConnection","description":"The connection type for CheckAnnotation.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckAnnotationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckAnnotation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckAnnotationData","description":"Information from a check run analysis to specific lines of code.","fields":null,"inputFields":[{"name":"path","description":"The path of the file to add an annotation to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"location","description":"The location of the annotation","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CheckAnnotationRange","ofType":null}},"defaultValue":null},{"name":"annotationLevel","description":"Represents an annotation\'s information level","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CheckAnnotationLevel","ofType":null}},"defaultValue":null},{"name":"message","description":"A short description of the feedback for these lines of code.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"title","description":"The title that represents the annotation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"rawDetails","description":"Details about this annotation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckAnnotationEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CheckAnnotation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"CheckAnnotationLevel","description":"Represents an annotation\'s information level.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"FAILURE","description":"An annotation indicating an inescapable error.","isDeprecated":false,"deprecationReason":null},{"name":"NOTICE","description":"An annotation indicating some information.","isDeprecated":false,"deprecationReason":null},{"name":"WARNING","description":"An annotation indicating an ignorable error.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"CheckAnnotationPosition","description":"A character position in a check annotation.","fields":[{"name":"column","description":"Column number (1 indexed).","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"line","description":"Line number (1 indexed).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckAnnotationRange","description":"Information from a check run analysis to specific lines of code.","fields":null,"inputFields":[{"name":"startLine","description":"The starting line of the range.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null},{"name":"startColumn","description":"The starting column of the range.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"endLine","description":"The ending line of the range.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null},{"name":"endColumn","description":"The ending column of the range.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckAnnotationSpan","description":"An inclusive pair of positions for a check annotation.","fields":[{"name":"end","description":"End position (inclusive).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CheckAnnotationPosition","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"start","description":"Start position (inclusive).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CheckAnnotationPosition","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"CheckConclusionState","description":"The possible states for a check suite or run conclusion.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ACTION_REQUIRED","description":"The check suite or run requires action.","isDeprecated":false,"deprecationReason":null},{"name":"TIMED_OUT","description":"The check suite or run has timed out.","isDeprecated":false,"deprecationReason":null},{"name":"CANCELLED","description":"The check suite or run has been cancelled.","isDeprecated":false,"deprecationReason":null},{"name":"FAILURE","description":"The check suite or run has failed.","isDeprecated":false,"deprecationReason":null},{"name":"SUCCESS","description":"The check suite or run has succeeded.","isDeprecated":false,"deprecationReason":null},{"name":"NEUTRAL","description":"The check suite or run was neutral.","isDeprecated":false,"deprecationReason":null},{"name":"SKIPPED","description":"The check suite or run was skipped.","isDeprecated":false,"deprecationReason":null},{"name":"STARTUP_FAILURE","description":"The check suite or run has failed at startup.","isDeprecated":false,"deprecationReason":null},{"name":"STALE","description":"The check suite or run was marked stale by GitHub. Only GitHub can use this conclusion.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"CheckRun","description":"A check run.","fields":[{"name":"annotations","description":"The check run\'s annotations","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CheckAnnotationConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"checkSuite","description":"The check suite that this run is a part of.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CheckSuite","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"completedAt","description":"Identifies the date and time when the check run was completed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"conclusion","description":"The conclusion of the check run.","args":[],"type":{"kind":"ENUM","name":"CheckConclusionState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deployment","description":"The corresponding deployment for this job, if any","args":[],"type":{"kind":"OBJECT","name":"Deployment","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"detailsUrl","description":"The URL from which to find full details of the check run on the integrator\'s site.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"externalId","description":"A reference for the check run on the integrator\'s system.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isRequired","description":"Whether this is required to pass before merging for a specific pull request.","args":[{"name":"pullRequestId","description":"The id of the pull request this is required for","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"pullRequestNumber","description":"The number of the pull request this is required for","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the check for this check run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pendingDeploymentRequest","description":"Information about a pending deployment, if any, in this check run","args":[],"type":{"kind":"OBJECT","name":"DeploymentRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permalink","description":"The permalink to the check run summary.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this check run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this check run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startedAt","description":"Identifies the date and time when the check run was started.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"status","description":"The current status of the check run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CheckStatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"steps","description":"The check run\'s steps","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"number","description":"Step number","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CheckStepConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"summary","description":"A string representing the check run\'s summary","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"text","description":"A string representing the check run\'s text","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"A string representing the check run","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this check run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"RequirableByPullRequest","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckRunAction","description":"Possible further actions the integrator can perform.","fields":null,"inputFields":[{"name":"label","description":"The text to be displayed on a button in the web UI.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"description","description":"A short explanation of what this action would do.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"identifier","description":"A reference for the action on the integrator\'s system. ","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckRunConnection","description":"The connection type for CheckRun.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckRunEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckRun","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckRunEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CheckRun","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckRunFilter","description":"The filters that are available when fetching check runs.","fields":null,"inputFields":[{"name":"checkType","description":"Filters the check runs by this type.","type":{"kind":"ENUM","name":"CheckRunType","ofType":null},"defaultValue":null},{"name":"appId","description":"Filters the check runs created by this application ID.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"checkName","description":"Filters the check runs by this name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"status","description":"Filters the check runs by this status. Superceded by statuses.","type":{"kind":"ENUM","name":"CheckStatusState","ofType":null},"defaultValue":null},{"name":"statuses","description":"Filters the check runs by this status. Overrides status.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CheckStatusState","ofType":null}}},"defaultValue":null},{"name":"conclusions","description":"Filters the check runs by these conclusions.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CheckConclusionState","ofType":null}}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckRunOutput","description":"Descriptive details about the check run.","fields":null,"inputFields":[{"name":"title","description":"A title to provide for this check run.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"summary","description":"The summary of the check run (supports Commonmark).","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"text","description":"The details of the check run (supports Commonmark).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"annotations","description":"The annotations that are made as part of the check run.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CheckAnnotationData","ofType":null}}},"defaultValue":null},{"name":"images","description":"Images attached to the check run output displayed in the GitHub pull request UI.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CheckRunOutputImage","ofType":null}}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckRunOutputImage","description":"Images attached to the check run output displayed in the GitHub pull request UI.","fields":null,"inputFields":[{"name":"alt","description":"The alternative text for the image.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"imageUrl","description":"The full URL of the image.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"defaultValue":null},{"name":"caption","description":"A short image description.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"CheckRunState","description":"The possible states of a check run in a status rollup.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ACTION_REQUIRED","description":"The check run requires action.","isDeprecated":false,"deprecationReason":null},{"name":"CANCELLED","description":"The check run has been cancelled.","isDeprecated":false,"deprecationReason":null},{"name":"COMPLETED","description":"The check run has been completed.","isDeprecated":false,"deprecationReason":null},{"name":"FAILURE","description":"The check run has failed.","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The check run is in progress.","isDeprecated":false,"deprecationReason":null},{"name":"NEUTRAL","description":"The check run was neutral.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING","description":"The check run is in pending state.","isDeprecated":false,"deprecationReason":null},{"name":"QUEUED","description":"The check run has been queued.","isDeprecated":false,"deprecationReason":null},{"name":"SKIPPED","description":"The check run was skipped.","isDeprecated":false,"deprecationReason":null},{"name":"STALE","description":"The check run was marked stale by GitHub. Only GitHub can use this conclusion.","isDeprecated":false,"deprecationReason":null},{"name":"STARTUP_FAILURE","description":"The check run has failed at startup.","isDeprecated":false,"deprecationReason":null},{"name":"SUCCESS","description":"The check run has succeeded.","isDeprecated":false,"deprecationReason":null},{"name":"TIMED_OUT","description":"The check run has timed out.","isDeprecated":false,"deprecationReason":null},{"name":"WAITING","description":"The check run is in waiting state.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"CheckRunStateCount","description":"Represents a count of the state of a check run.","fields":[{"name":"count","description":"The number of check runs with this state.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of a check run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CheckRunState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"CheckRunType","description":"The possible types of check runs.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ALL","description":"Every check run available.","isDeprecated":false,"deprecationReason":null},{"name":"LATEST","description":"The latest check run.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"CheckStatusState","description":"The possible states for a check suite or run status.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUEUED","description":"The check suite or run has been queued.","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The check suite or run is in progress.","isDeprecated":false,"deprecationReason":null},{"name":"COMPLETED","description":"The check suite or run has been completed.","isDeprecated":false,"deprecationReason":null},{"name":"WAITING","description":"The check suite or run is in waiting state.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING","description":"The check suite or run is in pending state.","isDeprecated":false,"deprecationReason":null},{"name":"REQUESTED","description":"The check suite or run has been requested.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"CheckStep","description":"A single check step.","fields":[{"name":"completedAt","description":"Identifies the date and time when the check step was completed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"conclusion","description":"The conclusion of the check step.","args":[],"type":{"kind":"ENUM","name":"CheckConclusionState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"externalId","description":"A reference for the check step on the integrator\'s system.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The step\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"The index of the step in the list of steps of the parent check run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"secondsToCompletion","description":"Number of seconds to completion.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startedAt","description":"Identifies the date and time when the check step was started.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"status","description":"The current status of the check step.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CheckStatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckStepConnection","description":"The connection type for CheckStep.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckStepEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckStep","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckStepEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CheckStep","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckSuite","description":"A check suite.","fields":[{"name":"app","description":"The GitHub App which created this check suite.","args":[],"type":{"kind":"OBJECT","name":"App","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"branch","description":"The name of the branch for this check suite.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"checkRuns","description":"The check runs associated with a check suite.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"filterBy","description":"Filters the check runs by this type.","type":{"kind":"INPUT_OBJECT","name":"CheckRunFilter","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CheckRunConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"The commit for this check suite","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"conclusion","description":"The conclusion of this check suite.","args":[],"type":{"kind":"ENUM","name":"CheckConclusionState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The user who triggered the check suite.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"matchingPullRequests","description":"A list of open pull requests matching the check suite.","args":[{"name":"states","description":"A list of states to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestState","ofType":null}}},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"headRefName","description":"The head ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"baseRefName","description":"The base ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"push","description":"The push that triggered this check suite.","args":[],"type":{"kind":"OBJECT","name":"Push","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this check suite.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this check suite","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"status","description":"The status of this check suite.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CheckStatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this check suite","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"workflowRun","description":"The workflow run associated with this check suite.","args":[],"type":{"kind":"OBJECT","name":"WorkflowRun","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckSuiteAutoTriggerPreference","description":"The auto-trigger preferences that are available for check suites.","fields":null,"inputFields":[{"name":"appId","description":"The node ID of the application that owns the check suite.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"setting","description":"Set to `true` to enable automatic creation of CheckSuite events upon pushes to the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckSuiteConnection","description":"The connection type for CheckSuite.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckSuiteEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CheckSuite","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CheckSuiteEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CheckSuite","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CheckSuiteFilter","description":"The filters that are available when fetching check suites.","fields":null,"inputFields":[{"name":"appId","description":"Filters the check suites created by this application ID.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"checkName","description":"Filters the check suites by this name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"Claimable","description":"An object which can have its data claimed or claim data from another.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Mannequin","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"INPUT_OBJECT","name":"ClearLabelsFromLabelableInput","description":"Autogenerated input type of ClearLabelsFromLabelable","fields":null,"inputFields":[{"name":"labelableId","description":"The id of the labelable object to clear the labels from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ClearLabelsFromLabelablePayload","description":"Autogenerated return type of ClearLabelsFromLabelable","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"labelable","description":"The item that was unlabeled.","args":[],"type":{"kind":"INTERFACE","name":"Labelable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ClearProjectV2ItemFieldValueInput","description":"Autogenerated input type of ClearProjectV2ItemFieldValue","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"itemId","description":"The ID of the item to be cleared.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"fieldId","description":"The ID of the field to be cleared.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ClearProjectV2ItemFieldValuePayload","description":"Autogenerated return type of ClearProjectV2ItemFieldValue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2Item","description":"The updated item.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CloneProjectInput","description":"Autogenerated input type of CloneProject","fields":null,"inputFields":[{"name":"targetOwnerId","description":"The owner ID to create the project under.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"sourceId","description":"The source project to clone.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"includeWorkflows","description":"Whether or not to clone the source project\'s workflows.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The description of the project.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"public","description":"The visibility of the project, defaults to false (private).","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CloneProjectPayload","description":"Autogenerated return type of CloneProject","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"jobStatusId","description":"The id of the JobStatus for populating cloned fields.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The new cloned project.","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CloneTemplateRepositoryInput","description":"Autogenerated input type of CloneTemplateRepository","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the template repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the new repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"ownerId","description":"The ID of the owner for the new repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"description","description":"A short description of the new repository.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"visibility","description":"Indicates the repository\'s visibility level.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryVisibility","ofType":null}},"defaultValue":null},{"name":"includeAllBranches","description":"Whether to copy all branches from the template to the new repository. Defaults to copying only the default branch of the template.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CloneTemplateRepositoryPayload","description":"Autogenerated return type of CloneTemplateRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The new repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Closable","description":"An object that can be closed","fields":[{"name":"closed","description":"Indicates if the object is closed (definition of closed may depend on type)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closedAt","description":"Identifies the date and time when the object was closed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"Milestone","ofType":null},{"kind":"OBJECT","name":"Project","ofType":null},{"kind":"OBJECT","name":"ProjectV2","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"INPUT_OBJECT","name":"CloseIssueInput","description":"Autogenerated input type of CloseIssue","fields":null,"inputFields":[{"name":"issueId","description":"ID of the issue to be closed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"stateReason","description":"The reason the issue is to be closed.","type":{"kind":"ENUM","name":"IssueClosedStateReason","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CloseIssuePayload","description":"Autogenerated return type of CloseIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue that was closed.","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ClosePullRequestInput","description":"Autogenerated input type of ClosePullRequest","fields":null,"inputFields":[{"name":"pullRequestId","description":"ID of the pull request to be closed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ClosePullRequestPayload","description":"Autogenerated return type of ClosePullRequest","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that was closed.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ClosedEvent","description":"Represents a \'closed\' event on any `Closable`.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"closable","description":"Object that was closed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Closable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closer","description":"Object which triggered the creation of this event.","args":[],"type":{"kind":"UNION","name":"Closer","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this closed event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stateReason","description":"The reason the issue state was changed to closed.","args":[],"type":{"kind":"ENUM","name":"IssueStateReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this closed event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"Closer","description":"The object which triggered a `ClosedEvent`.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Commit","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"OBJECT","name":"CodeOfConduct","description":"The Code of Conduct for a repository","fields":[{"name":"body","description":"The body of the Code of Conduct","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"key","description":"The key for the Code of Conduct","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The formal name of the Code of Conduct","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this Code of Conduct","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this Code of Conduct","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"CollaboratorAffiliation","description":"Collaborators affiliation level with a subject.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OUTSIDE","description":"All outside collaborators of an organization-owned subject.","isDeprecated":false,"deprecationReason":null},{"name":"DIRECT","description":"All collaborators with permissions to an organization-owned subject, regardless of organization membership status.","isDeprecated":false,"deprecationReason":null},{"name":"ALL","description":"All collaborators the authenticated user can see.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"Comment","description":"Represents a comment.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The body as Markdown.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null},{"kind":"OBJECT","name":"GistComment","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null}]},{"kind":"ENUM","name":"CommentAuthorAssociation","description":"A comment author association with repository.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MEMBER","description":"Author is a member of the organization that owns the repository.","isDeprecated":false,"deprecationReason":null},{"name":"OWNER","description":"Author is the owner of the repository.","isDeprecated":false,"deprecationReason":null},{"name":"MANNEQUIN","description":"Author is a placeholder for an unclaimed user.","isDeprecated":false,"deprecationReason":null},{"name":"COLLABORATOR","description":"Author has been invited to collaborate on the repository.","isDeprecated":false,"deprecationReason":null},{"name":"CONTRIBUTOR","description":"Author has previously committed to the repository.","isDeprecated":false,"deprecationReason":null},{"name":"FIRST_TIME_CONTRIBUTOR","description":"Author has not previously committed to the repository.","isDeprecated":false,"deprecationReason":null},{"name":"FIRST_TIMER","description":"Author has not previously committed to GitHub.","isDeprecated":false,"deprecationReason":null},{"name":"NONE","description":"Author has no association with the repository.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"CommentCannotUpdateReason","description":"The possible errors that will prevent a user from updating a comment.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ARCHIVED","description":"Unable to create comment because repository is archived.","isDeprecated":false,"deprecationReason":null},{"name":"INSUFFICIENT_ACCESS","description":"You must be the author or have write access to this repository to update this comment.","isDeprecated":false,"deprecationReason":null},{"name":"LOCKED","description":"Unable to create comment because issue is locked.","isDeprecated":false,"deprecationReason":null},{"name":"LOGIN_REQUIRED","description":"You must be logged in to update this comment.","isDeprecated":false,"deprecationReason":null},{"name":"MAINTENANCE","description":"Repository is under maintenance.","isDeprecated":false,"deprecationReason":null},{"name":"VERIFIED_EMAIL_REQUIRED","description":"At least one email address must be verified to update this comment.","isDeprecated":false,"deprecationReason":null},{"name":"DENIED","description":"You cannot update this comment","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"CommentDeletedEvent","description":"Represents a \'comment_deleted\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletedCommentAuthor","description":"The user who authored the deleted comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Commit","description":"Represents a Git commit.","fields":[{"name":"abbreviatedOid","description":"An abbreviated version of the Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"additions","description":"The number of additions in this commit.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"associatedPullRequests","description":"The merged Pull Request that introduced the commit to the repository. If the commit is not present in the default branch, additionally returns open Pull Requests associated with the commit","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests.","type":{"kind":"INPUT_OBJECT","name":"PullRequestOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"}],"type":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"author","description":"Authorship details of the commit.","args":[],"type":{"kind":"OBJECT","name":"GitActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authoredByCommitter","description":"Check if the committer and the author match.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"authoredDate","description":"The datetime when this commit was authored.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"authors","description":"The list of authors for this commit based on the git author and the Co-authored-by\\nmessage trailer. The git author will always be first.\\n","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"GitActorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"blame","description":"Fetches `git blame` information.","args":[{"name":"path","description":"The file whose Git blame information you want.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Blame","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"changedFiles","description":"We recommend using the `changedFielsIfAvailable` field instead of `changedFiles`, as `changedFiles` will cause your request to return an error if GitHub is unable to calculate the number of changed files.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":true,"deprecationReason":"`changedFiles` will be removed. Use `changedFilesIfAvailable` instead. Removal on 2023-01-01 UTC."},{"name":"changedFilesIfAvailable","description":"The number of changed files in this commit. If GitHub is unable to calculate the number of changed files (for example due to a timeout), this will return `null`. We recommend using this field instead of `changedFiles`.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"checkSuites","description":"The check suites associated with a commit.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"filterBy","description":"Filters the check suites by this type.","type":{"kind":"INPUT_OBJECT","name":"CheckSuiteFilter","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CheckSuiteConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comments","description":"Comments made on the commit.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitResourcePath","description":"The HTTP path for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitUrl","description":"The HTTP URL for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"committedDate","description":"The datetime when this commit was committed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"committedViaWeb","description":"Check if committed via GitHub web UI.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"committer","description":"Committer details of the commit.","args":[],"type":{"kind":"OBJECT","name":"GitActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletions","description":"The number of deletions in this commit.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deployments","description":"The deployments associated with a commit.","args":[{"name":"environments","description":"Environments to list deployments for","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for deployments returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"DeploymentOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeploymentConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"file","description":"The tree entry representing the file located at the given path.","args":[{"name":"path","description":"The path for the file","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"TreeEntry","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"history","description":"The linear commit history starting from (and including) this commit, in the same order as `git log`.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"path","description":"If non-null, filters history to only show commits touching files under this path.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"author","description":"If non-null, filters history to only show commits with matching authorship.","type":{"kind":"INPUT_OBJECT","name":"CommitAuthor","ofType":null},"defaultValue":null},{"name":"since","description":"Allows specifying a beginning time or date for fetching commits.","type":{"kind":"SCALAR","name":"GitTimestamp","ofType":null},"defaultValue":null},{"name":"until","description":"Allows specifying an ending time or date for fetching commits.","type":{"kind":"SCALAR","name":"GitTimestamp","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitHistoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"The Git commit message","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"messageBody","description":"The Git commit message body","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"messageBodyHTML","description":"The commit message body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"messageHeadline","description":"The Git commit message headline","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"messageHeadlineHTML","description":"The commit message headline rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oid","description":"The Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"onBehalfOf","description":"The organization this commit was made on behalf of.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parents","description":"The parents of a commit.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pushedDate","description":"The datetime when this commit was pushed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The Repository this commit belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this commit","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signature","description":"Commit signing information, if present.","args":[],"type":{"kind":"INTERFACE","name":"GitSignature","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"status","description":"Status information for this commit","args":[],"type":{"kind":"OBJECT","name":"Status","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"statusCheckRollup","description":"Check and Status rollup information for this commit.","args":[],"type":{"kind":"OBJECT","name":"StatusCheckRollup","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"submodules","description":"Returns a list of all submodules in this repository as of this Commit parsed from the .gitmodules file.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SubmoduleConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tarballUrl","description":"Returns a URL to download a tarball archive for a repository.\\nNote: For private repositories, these links are temporary and expire after five minutes.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tree","description":"Commit\'s root Tree","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Tree","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"treeResourcePath","description":"The HTTP path for the tree of this commit","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"treeUrl","description":"The HTTP URL for the tree of this commit","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this commit","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"zipballUrl","description":"Returns a URL to download a zipball archive for a repository.\\nNote: For private repositories, these links are temporary and expire after five minutes.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"GitObject","ofType":null},{"kind":"INTERFACE","name":"Subscribable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CommitAuthor","description":"Specifies an author for filtering Git commits.","fields":null,"inputFields":[{"name":"id","description":"ID of a User to filter by. If non-null, only commits authored by this user will be returned. This field takes precedence over emails.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"emails","description":"Email addresses to filter by. Commits authored by any of the specified email addresses will be returned.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CommitComment","description":"Represents a comment on a given Commit.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"Identifies the comment body.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"Identifies the commit associated with the comment, if the commit exists.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isMinimized","description":"Returns whether or not a comment has been minimized.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimizedReason","description":"Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"Identifies the file path associated with the comment.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"position","description":"Identifies the line position associated with the comment.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path permalink for this commit comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL permalink for this commit comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMinimize","description":"Check if the current viewer can minimize this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Minimizable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CommitCommentConnection","description":"The connection type for CommitComment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CommitCommentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CommitComment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CommitCommentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CommitComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CommitCommentThread","description":"A thread of comments on a commit.","fields":[{"name":"comments","description":"The comments that exist in this thread.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"The commit the comments were made on.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The file the comments were made on.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"position","description":"The position in the diff for the commit that the comment was made on.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CommitConnection","description":"The connection type for Commit.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CommitEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CommitContributionOrder","description":"Ordering options for commit contribution connections.","fields":null,"inputFields":[{"name":"field","description":"The field by which to order commit contributions.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommitContributionOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"CommitContributionOrderField","description":"Properties by which commit contribution connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OCCURRED_AT","description":"Order commit contributions by when they were made.","isDeprecated":false,"deprecationReason":null},{"name":"COMMIT_COUNT","description":"Order commit contributions by how many commits they represent.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"CommitContributionsByRepository","description":"This aggregates commits made by a user within one repository.","fields":[{"name":"contributions","description":"The commit contributions, each representing a day.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for commit contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"CommitContributionOrder","ofType":null},"defaultValue":"{field: OCCURRED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedCommitContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository in which the commits were made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for the user\'s commits to the repository in this time range.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for the user\'s commits to the repository in this time range.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CommitEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CommitHistoryConnection","description":"The connection type for Commit.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CommitEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CommitMessage","description":"A message to include with a new commit","fields":null,"inputFields":[{"name":"headline","description":"The headline of the message.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The body of the message.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CommittableBranch","description":"A git ref for a commit to be appended to.\\n\\nThe ref must be a branch, i.e. its fully qualified name must start\\nwith `refs/heads/` (although the input is not required to be fully\\nqualified).\\n\\nThe Ref may be specified by its global node ID or by the\\n`repositoryNameWithOwner` and `branchName`.\\n\\n### Examples\\n\\nSpecify a branch using a global node ID:\\n\\n    { \\"id\\": \\"MDM6UmVmMTpyZWZzL2hlYWRzL21haW4=\\" }\\n\\nSpecify a branch using `repositoryNameWithOwner` and `branchName`:\\n\\n    {\\n      \\"repositoryNameWithOwner\\": \\"github/graphql-client\\",\\n      \\"branchName\\": \\"main\\"\\n    }\\n\\n","fields":null,"inputFields":[{"name":"id","description":"The Node ID of the Ref to be updated.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"repositoryNameWithOwner","description":"The nameWithOwner of the repository to commit to.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"branchName","description":"The unqualified name of the branch to append the commit to.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Comparison","description":"Represents a comparison between two commit revisions.","fields":[{"name":"aheadBy","description":"The number of commits ahead of the base branch.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"baseTarget","description":"The base revision of this comparison.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"GitObject","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"behindBy","description":"The number of commits behind the base branch.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commits","description":"The commits which compose this comparison.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ComparisonCommitConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"headTarget","description":"The head revision of this comparison.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"GitObject","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"status","description":"The status of this comparison.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ComparisonStatus","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ComparisonCommitConnection","description":"The connection type for Commit.","fields":[{"name":"authorCount","description":"The total count of authors and co-authors across all commits.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CommitEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ComparisonStatus","description":"The status of a git comparison between two refs.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DIVERGED","description":"The head ref is both ahead and behind of the base ref, indicating git history has diverged.","isDeprecated":false,"deprecationReason":null},{"name":"AHEAD","description":"The head ref is ahead of the base ref.","isDeprecated":false,"deprecationReason":null},{"name":"BEHIND","description":"The head ref is behind the base ref.","isDeprecated":false,"deprecationReason":null},{"name":"IDENTICAL","description":"The head ref and base ref are identical.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ConnectedEvent","description":"Represents a \'connected\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCrossRepository","description":"Reference originated in a different repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"source","description":"Issue or pull request that made the reference.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ReferencedSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"Issue or pull request which was connected.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ReferencedSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Contribution","description":"Represents a contribution a user made on GitHub, such as opening an issue.","fields":[{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CreatedCommitContribution","ofType":null},{"kind":"OBJECT","name":"CreatedIssueContribution","ofType":null},{"kind":"OBJECT","name":"CreatedPullRequestContribution","ofType":null},{"kind":"OBJECT","name":"CreatedPullRequestReviewContribution","ofType":null},{"kind":"OBJECT","name":"CreatedRepositoryContribution","ofType":null},{"kind":"OBJECT","name":"JoinedGitHubContribution","ofType":null},{"kind":"OBJECT","name":"RestrictedContribution","ofType":null}]},{"kind":"OBJECT","name":"ContributionCalendar","description":"A calendar of contributions made on GitHub by a user.","fields":[{"name":"colors","description":"A list of hex color codes used in this calendar. The darker the color, the more contributions it represents.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"isHalloween","description":"Determine if the color set was chosen because it\'s currently Halloween.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"months","description":"A list of the months of contributions in this calendar.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ContributionCalendarMonth","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"totalContributions","description":"The count of total contributions in the calendar.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"weeks","description":"A list of the weeks of contributions in this calendar.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ContributionCalendarWeek","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ContributionCalendarDay","description":"Represents a single day of contributions on GitHub by a user.","fields":[{"name":"color","description":"The hex color code that represents how many contributions were made on this day compared to others in the calendar.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"contributionCount","description":"How many contributions were made by the user on this day.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"contributionLevel","description":"Indication of contributions, relative to other days. Can be used to indicate which color to represent this day on a calendar.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ContributionLevel","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"date","description":"The day this square represents.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Date","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"weekday","description":"A number representing which day of the week this square represents, e.g., 1 is Monday.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ContributionCalendarMonth","description":"A month of contributions in a user\'s contribution graph.","fields":[{"name":"firstDay","description":"The date of the first day of this month.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Date","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the month.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalWeeks","description":"How many weeks started in this month.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"year","description":"The year the month occurred in.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ContributionCalendarWeek","description":"A week of contributions in a user\'s contribution graph.","fields":[{"name":"contributionDays","description":"The days of contributions in this week.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ContributionCalendarDay","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"firstDay","description":"The date of the earliest square in this week.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Date","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ContributionLevel","description":"Varying levels of contributions from none to many.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NONE","description":"No contributions occurred.","isDeprecated":false,"deprecationReason":null},{"name":"FIRST_QUARTILE","description":"Lowest 25% of days of contributions.","isDeprecated":false,"deprecationReason":null},{"name":"SECOND_QUARTILE","description":"Second lowest 25% of days of contributions. More contributions than the first quartile.","isDeprecated":false,"deprecationReason":null},{"name":"THIRD_QUARTILE","description":"Second highest 25% of days of contributions. More contributions than second quartile, less than the fourth quartile.","isDeprecated":false,"deprecationReason":null},{"name":"FOURTH_QUARTILE","description":"Highest 25% of days of contributions. More contributions than the third quartile.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ContributionOrder","description":"Ordering options for contribution connections.","fields":null,"inputFields":[{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ContributionsCollection","description":"A contributions collection aggregates contributions such as opened issues and commits created by a user.","fields":[{"name":"commitContributionsByRepository","description":"Commit contributions made by the user, grouped by repository.","args":[{"name":"maxRepositories","description":"How many repositories should be included.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"25"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitContributionsByRepository","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"contributionCalendar","description":"A calendar of this user\'s contributions on GitHub.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ContributionCalendar","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"contributionYears","description":"The years the user has been making contributions with the most recent year first.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"doesEndInCurrentMonth","description":"Determine if this collection\'s time span ends in the current month.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"earliestRestrictedContributionDate","description":"The date of the first restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts.","args":[],"type":{"kind":"SCALAR","name":"Date","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"endedAt","description":"The ending date and time of this collection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"firstIssueContribution","description":"The first issue the user opened on GitHub. This will be null if that issue was opened outside the collection\'s time range and ignoreTimeRange is false. If the issue is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned.","args":[],"type":{"kind":"UNION","name":"CreatedIssueOrRestrictedContribution","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"firstPullRequestContribution","description":"The first pull request the user opened on GitHub. This will be null if that pull request was opened outside the collection\'s time range and ignoreTimeRange is not true. If the pull request is not visible but the user has opted to show private contributions, a RestrictedContribution will be returned.","args":[],"type":{"kind":"UNION","name":"CreatedPullRequestOrRestrictedContribution","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"firstRepositoryContribution","description":"The first repository the user created on GitHub. This will be null if that first repository was created outside the collection\'s time range and ignoreTimeRange is false. If the repository is not visible, then a RestrictedContribution is returned.","args":[],"type":{"kind":"UNION","name":"CreatedRepositoryOrRestrictedContribution","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"hasActivityInThePast","description":"Does the user have any more activity in the timeline that occurred prior to the collection\'s time range?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasAnyContributions","description":"Determine if there are any contributions in this collection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasAnyRestrictedContributions","description":"Determine if the user made any contributions in this time frame whose details are not visible because they were made in a private repository. Can only be true if the user enabled private contribution counts.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSingleDay","description":"Whether or not the collector\'s time span is all within the same day.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issueContributions","description":"A list of issues the user opened.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"excludeFirst","description":"Should the user\'s first issue ever be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented issue be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ContributionOrder","ofType":null},"defaultValue":"{direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedIssueContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issueContributionsByRepository","description":"Issue contributions made by the user, grouped by repository.","args":[{"name":"maxRepositories","description":"How many repositories should be included.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"25"},{"name":"excludeFirst","description":"Should the user\'s first issue ever be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented issue be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueContributionsByRepository","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"joinedGitHubContribution","description":"When the user signed up for GitHub. This will be null if that sign up date falls outside the collection\'s time range and ignoreTimeRange is false.","args":[],"type":{"kind":"OBJECT","name":"JoinedGitHubContribution","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"latestRestrictedContributionDate","description":"The date of the most recent restricted contribution the user made in this time period. Can only be non-null when the user has enabled private contribution counts.","args":[],"type":{"kind":"SCALAR","name":"Date","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mostRecentCollectionWithActivity","description":"When this collection\'s time range does not include any activity from the user, use this\\nto get a different collection from an earlier time range that does have activity.\\n","args":[],"type":{"kind":"OBJECT","name":"ContributionsCollection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mostRecentCollectionWithoutActivity","description":"Returns a different contributions collection from an earlier time range than this one\\nthat does not have any contributions.\\n","args":[],"type":{"kind":"OBJECT","name":"ContributionsCollection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"popularIssueContribution","description":"The issue the user opened on GitHub that received the most comments in the specified\\ntime frame.\\n","args":[],"type":{"kind":"OBJECT","name":"CreatedIssueContribution","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"popularPullRequestContribution","description":"The pull request the user opened on GitHub that received the most comments in the\\nspecified time frame.\\n","args":[],"type":{"kind":"OBJECT","name":"CreatedPullRequestContribution","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestContributions","description":"Pull request contributions made by the user.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"excludeFirst","description":"Should the user\'s first pull request ever be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented pull request be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ContributionOrder","ofType":null},"defaultValue":"{direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestContributionsByRepository","description":"Pull request contributions made by the user, grouped by repository.","args":[{"name":"maxRepositories","description":"How many repositories should be included.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"25"},{"name":"excludeFirst","description":"Should the user\'s first pull request ever be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented pull request be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestContributionsByRepository","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReviewContributions","description":"Pull request review contributions made by the user. Returns the most recently\\nsubmitted review for each PR reviewed by the user.\\n","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ContributionOrder","ofType":null},"defaultValue":"{direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestReviewContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReviewContributionsByRepository","description":"Pull request review contributions made by the user, grouped by repository.","args":[{"name":"maxRepositories","description":"How many repositories should be included.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"25"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewContributionsByRepository","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryContributions","description":"A list of repositories owned by the user that the user created in this time range.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"excludeFirst","description":"Should the user\'s first repository ever be excluded from the result.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ContributionOrder","ofType":null},"defaultValue":"{direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedRepositoryContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"restrictedContributionsCount","description":"A count of contributions made by the user that the viewer cannot access. Only non-zero when the user has chosen to share their private contribution counts.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startedAt","description":"The beginning date and time of this collection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCommitContributions","description":"How many commits were made by the user in this time span.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalIssueContributions","description":"How many issues the user opened.","args":[{"name":"excludeFirst","description":"Should the user\'s first issue ever be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented issue be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalPullRequestContributions","description":"How many pull requests the user opened.","args":[{"name":"excludeFirst","description":"Should the user\'s first pull request ever be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented pull request be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalPullRequestReviewContributions","description":"How many pull request reviews the user left.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRepositoriesWithContributedCommits","description":"How many different repositories the user committed to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRepositoriesWithContributedIssues","description":"How many different repositories the user opened issues in.","args":[{"name":"excludeFirst","description":"Should the user\'s first issue ever be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented issue be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRepositoriesWithContributedPullRequestReviews","description":"How many different repositories the user left pull request reviews in.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRepositoriesWithContributedPullRequests","description":"How many different repositories the user opened pull requests in.","args":[{"name":"excludeFirst","description":"Should the user\'s first pull request ever be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"excludePopular","description":"Should the user\'s most commented pull request be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRepositoryContributions","description":"How many repositories the user created.","args":[{"name":"excludeFirst","description":"Should the user\'s first repository ever be excluded from this count.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made the contributions in this collection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ConvertProjectCardNoteToIssueInput","description":"Autogenerated input type of ConvertProjectCardNoteToIssue","fields":null,"inputFields":[{"name":"projectCardId","description":"The ProjectCard ID to convert.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"The ID of the repository to create the issue in.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the newly created issue. Defaults to the card\'s note text.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The body of the newly created issue.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ConvertProjectCardNoteToIssuePayload","description":"Autogenerated return type of ConvertProjectCardNoteToIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectCard","description":"The updated ProjectCard.","args":[],"type":{"kind":"OBJECT","name":"ProjectCard","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ConvertPullRequestToDraftInput","description":"Autogenerated input type of ConvertPullRequestToDraft","fields":null,"inputFields":[{"name":"pullRequestId","description":"ID of the pull request to convert to draft","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ConvertPullRequestToDraftPayload","description":"Autogenerated return type of ConvertPullRequestToDraft","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that is now a draft.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ConvertToDraftEvent","description":"Represents a \'convert_to_draft\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this convert to draft event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this convert to draft event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ConvertedNoteToIssueEvent","description":"Represents a \'converted_note_to_issue\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ConvertedToDiscussionEvent","description":"Represents a \'converted_to_discussion\' event on a given issue.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion that the issue was converted into.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CopyProjectV2Input","description":"Autogenerated input type of CopyProjectV2","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the source Project to copy.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"ownerId","description":"The owner ID of the new project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"includeDraftIssues","description":"Include draft issues in the new project","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CopyProjectV2Payload","description":"Autogenerated return type of CopyProjectV2","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"The copied project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateAttributionInvitationInput","description":"Autogenerated input type of CreateAttributionInvitation","fields":null,"inputFields":[{"name":"ownerId","description":"The Node ID of the owner scoping the reattributable data.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"sourceId","description":"The Node ID of the account owning the data to reattribute.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"targetId","description":"The Node ID of the account which may claim the data.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateAttributionInvitationPayload","description":"Autogenerated return type of CreateAttributionInvitation","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The owner scoping the reattributable data.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"source","description":"The account owning the data to reattribute.","args":[],"type":{"kind":"UNION","name":"Claimable","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"target","description":"The account which may claim the data.","args":[],"type":{"kind":"UNION","name":"Claimable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateBranchProtectionRuleInput","description":"Autogenerated input type of CreateBranchProtectionRule","fields":null,"inputFields":[{"name":"repositoryId","description":"The global relay id of the repository in which a new branch protection rule should be created in.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"pattern","description":"The glob-like pattern used to determine matching branches.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"requiresApprovingReviews","description":"Are approving reviews required to update matching branches.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiredApprovingReviewCount","description":"Number of approving reviews required to update matching branches.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"requiresCommitSignatures","description":"Are commits required to be signed.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresLinearHistory","description":"Are merge commits prohibited from being pushed to this branch.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"blocksCreations","description":"Is branch creation a protected operation.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"allowsForcePushes","description":"Are force pushes allowed on this branch.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"allowsDeletions","description":"Can this branch be deleted.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"isAdminEnforced","description":"Can admins overwrite branch protection.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresStatusChecks","description":"Are status checks required to update matching branches.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresStrictStatusChecks","description":"Are branches required to be up to date before merging.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresCodeOwnerReviews","description":"Are reviews from code owners required to update matching branches.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"dismissesStaleReviews","description":"Will new commits pushed to matching branches dismiss pull request review approvals.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"restrictsReviewDismissals","description":"Is dismissal of pull request reviews restricted.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"reviewDismissalActorIds","description":"A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"bypassPullRequestActorIds","description":"A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"bypassForcePushActorIds","description":"A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"restrictsPushes","description":"Is pushing to matching branches restricted.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"pushActorIds","description":"A list of User, Team, or App IDs allowed to push to matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"requiredStatusCheckContexts","description":"List of required status check contexts that must pass for commits to be accepted to matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"requiredStatusChecks","description":"The list of required status checks","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RequiredStatusCheckInput","ofType":null}}},"defaultValue":null},{"name":"requiresDeployments","description":"Are successful deployments required before merging.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiredDeploymentEnvironments","description":"The list of required deployment environments","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"requiresConversationResolution","description":"Are conversations required to be resolved before merging.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requireLastPushApproval","description":"Whether the most recent push must be approved by someone other than the person who pushed it","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"lockBranch","description":"Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"lockAllowsFetchAndMerge","description":"Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateBranchProtectionRulePayload","description":"Autogenerated return type of CreateBranchProtectionRule","fields":[{"name":"branchProtectionRule","description":"The newly created BranchProtectionRule.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateCheckRunInput","description":"Autogenerated input type of CreateCheckRun","fields":null,"inputFields":[{"name":"repositoryId","description":"The node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the check.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"headSha","description":"The SHA of the head commit.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"defaultValue":null},{"name":"detailsUrl","description":"The URL of the integrator\'s site that has the full details of the check.","type":{"kind":"SCALAR","name":"URI","ofType":null},"defaultValue":null},{"name":"externalId","description":"A reference for the run on the integrator\'s system.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"status","description":"The current status.","type":{"kind":"ENUM","name":"RequestableCheckStatusState","ofType":null},"defaultValue":null},{"name":"startedAt","description":"The time that the check run began.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"conclusion","description":"The final conclusion of the check.","type":{"kind":"ENUM","name":"CheckConclusionState","ofType":null},"defaultValue":null},{"name":"completedAt","description":"The time that the check run finished.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"output","description":"Descriptive details about the run.","type":{"kind":"INPUT_OBJECT","name":"CheckRunOutput","ofType":null},"defaultValue":null},{"name":"actions","description":"Possible further actions the integrator can perform, which a user may trigger.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CheckRunAction","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateCheckRunPayload","description":"Autogenerated return type of CreateCheckRun","fields":[{"name":"checkRun","description":"The newly created check run.","args":[],"type":{"kind":"OBJECT","name":"CheckRun","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateCheckSuiteInput","description":"Autogenerated input type of CreateCheckSuite","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"headSha","description":"The SHA of the head commit.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateCheckSuitePayload","description":"Autogenerated return type of CreateCheckSuite","fields":[{"name":"checkSuite","description":"The newly created check suite.","args":[],"type":{"kind":"OBJECT","name":"CheckSuite","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateCommitOnBranchInput","description":"Autogenerated input type of CreateCommitOnBranch","fields":null,"inputFields":[{"name":"branch","description":"The Ref to be updated.  Must be a branch.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CommittableBranch","ofType":null}},"defaultValue":null},{"name":"fileChanges","description":"A description of changes to files in this commit.","type":{"kind":"INPUT_OBJECT","name":"FileChanges","ofType":null},"defaultValue":null},{"name":"message","description":"The commit message the be included with the commit.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CommitMessage","ofType":null}},"defaultValue":null},{"name":"expectedHeadOid","description":"The git commit oid expected at the head of the branch prior to the commit","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateCommitOnBranchPayload","description":"Autogenerated return type of CreateCommitOnBranch","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"The new commit.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"The ref which has been updated to point to the new commit.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateDiscussionInput","description":"Autogenerated input type of CreateDiscussion","fields":null,"inputFields":[{"name":"repositoryId","description":"The id of the repository on which to create the discussion.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the discussion.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The body of the discussion.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"categoryId","description":"The id of the discussion category to associate with this discussion.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateDiscussionPayload","description":"Autogenerated return type of CreateDiscussion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion that was just created.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateEnterpriseOrganizationInput","description":"Autogenerated input type of CreateEnterpriseOrganization","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise owning the new organization.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"login","description":"The login of the new organization.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"profileName","description":"The profile name of the new organization.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"billingEmail","description":"The email used for sending billing receipts.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"adminLogins","description":"The logins for the administrators of the new organization.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateEnterpriseOrganizationPayload","description":"Autogenerated return type of CreateEnterpriseOrganization","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise that owns the created organization.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization that was created.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateEnvironmentInput","description":"Autogenerated input type of CreateEnvironment","fields":null,"inputFields":[{"name":"repositoryId","description":"The node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the environment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateEnvironmentPayload","description":"Autogenerated return type of CreateEnvironment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"environment","description":"The new or existing environment.","args":[],"type":{"kind":"OBJECT","name":"Environment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateIpAllowListEntryInput","description":"Autogenerated input type of CreateIpAllowListEntry","fields":null,"inputFields":[{"name":"ownerId","description":"The ID of the owner for which to create the new IP allow list entry.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"allowListValue","description":"An IP address or range of addresses in CIDR notation.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"name","description":"An optional name for the IP allow list entry.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"isActive","description":"Whether the IP allow list entry is active when an IP allow list is enabled.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateIpAllowListEntryPayload","description":"Autogenerated return type of CreateIpAllowListEntry","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEntry","description":"The IP allow list entry that was created.","args":[],"type":{"kind":"OBJECT","name":"IpAllowListEntry","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateIssueInput","description":"Autogenerated input type of CreateIssue","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title for the issue.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The body for the issue description.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"assigneeIds","description":"The Node ID for the user assignee for this issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"milestoneId","description":"The Node ID of the milestone for this issue.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"labelIds","description":"An array of Node IDs of labels for this issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"projectIds","description":"An array of Node IDs for projects associated with this issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"issueTemplate","description":"The name of an issue template in the repository, assigns labels and assignees from the template to the issue","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateIssuePayload","description":"Autogenerated return type of CreateIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The new issue.","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateLinkedBranchInput","description":"Autogenerated input type of CreateLinkedBranch","fields":null,"inputFields":[{"name":"issueId","description":"ID of the issue to link to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"oid","description":"The commit SHA to base the new branch on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the new branch. Defaults to issue number and title.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"repositoryId","description":"ID of the repository to create the branch in. Defaults to the issue repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateLinkedBranchPayload","description":"Autogenerated return type of CreateLinkedBranch","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"linkedBranch","description":"The new branch issue reference.","args":[],"type":{"kind":"OBJECT","name":"LinkedBranch","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateMigrationSourceInput","description":"Autogenerated input type of CreateMigrationSource","fields":null,"inputFields":[{"name":"name","description":"The migration source name.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"url","description":"The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"accessToken","description":"The migration source access token.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"type","description":"The migration source type.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MigrationSourceType","ofType":null}},"defaultValue":null},{"name":"ownerId","description":"The ID of the organization that will own the migration source.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"githubPat","description":"The GitHub personal access token of the user importing to the target repository.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateMigrationSourcePayload","description":"Autogenerated return type of CreateMigrationSource","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"migrationSource","description":"The created migration source.","args":[],"type":{"kind":"OBJECT","name":"MigrationSource","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateProjectInput","description":"Autogenerated input type of CreateProject","fields":null,"inputFields":[{"name":"ownerId","description":"The owner ID to create the project under.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The description of project.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"template","description":"The name of the GitHub-provided template.","type":{"kind":"ENUM","name":"ProjectTemplate","ofType":null},"defaultValue":null},{"name":"repositoryIds","description":"A list of repository IDs to create as linked repositories for the project","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateProjectPayload","description":"Autogenerated return type of CreateProject","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The new project.","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateProjectV2FieldInput","description":"Autogenerated input type of CreateProjectV2Field","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to create the field in.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"dataType","description":"The data type of the field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2CustomFieldType","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"singleSelectOptions","description":"Options for a single select field. At least one value is required if data_type is SINGLE_SELECT","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ProjectV2SingleSelectFieldOptionInput","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateProjectV2FieldPayload","description":"Autogenerated return type of CreateProjectV2Field","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2Field","description":"The new field.","args":[],"type":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateProjectV2Input","description":"Autogenerated input type of CreateProjectV2","fields":null,"inputFields":[{"name":"ownerId","description":"The owner ID to create the project under.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"The repository to link the project to.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"teamId","description":"The team to link the project to. The team will be granted read permissions.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateProjectV2Payload","description":"Autogenerated return type of CreateProjectV2","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"The new project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreatePullRequestInput","description":"Autogenerated input type of CreatePullRequest","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"baseRefName","description":"The name of the branch you want your changes pulled into. This should be an existing branch\\non the current repository. You cannot update the base branch on a pull request to point\\nto another repository.\\n","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"headRefName","description":"The name of the branch where your changes are implemented. For cross-repository pull requests\\nin the same network, namespace `head_ref_name` with a user like this: `username:branch`.\\n","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"headRepositoryId","description":"The Node ID of the head repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"title","description":"The title of the pull request.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The contents of the pull request.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"maintainerCanModify","description":"Indicates whether maintainers can modify the pull request.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"draft","description":"Indicates whether this pull request should be a draft.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatePullRequestPayload","description":"Autogenerated return type of CreatePullRequest","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The new pull request.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateRefInput","description":"Autogenerated input type of CreateRef","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the Repository to create the Ref in.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The fully qualified name of the new Ref (ie: `refs/heads/my_new_branch`).","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"oid","description":"The GitObjectID that the new Ref shall target. Must point to a commit.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateRefPayload","description":"Autogenerated return type of CreateRef","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"The newly created ref.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateRepositoryInput","description":"Autogenerated input type of CreateRepository","fields":null,"inputFields":[{"name":"name","description":"The name of the new repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"ownerId","description":"The ID of the owner for the new repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"description","description":"A short description of the new repository.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"visibility","description":"Indicates the repository\'s visibility level.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryVisibility","ofType":null}},"defaultValue":null},{"name":"template","description":"Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"homepageUrl","description":"The URL for a web page about this repository.","type":{"kind":"SCALAR","name":"URI","ofType":null},"defaultValue":null},{"name":"hasWikiEnabled","description":"Indicates if the repository should have the wiki feature enabled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"hasIssuesEnabled","description":"Indicates if the repository should have the issues feature enabled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"teamId","description":"When an organization is specified as the owner, this ID identifies the team that should be granted access to the new repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateRepositoryPayload","description":"Autogenerated return type of CreateRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The new repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateSponsorsListingInput","description":"Autogenerated input type of CreateSponsorsListing","fields":null,"inputFields":[{"name":"sponsorableLogin","description":"The username of the organization to create a GitHub Sponsors profile for, if desired. Defaults to creating a GitHub Sponsors profile for the authenticated user if omitted.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"fiscalHostLogin","description":"The username of the supported fiscal host\'s GitHub organization, if you want to receive sponsorship payouts through a fiscal host rather than directly to a bank account. For example, \'Open-Source-Collective\' for Open Source Collective or \'numfocus\' for numFOCUS. Case insensitive. See https://docs.github.com/sponsors/receiving-sponsorships-through-github-sponsors/using-a-fiscal-host-to-receive-github-sponsors-payouts for more information.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"fiscallyHostedProjectProfileUrl","description":"The URL for your profile page on the fiscal host\'s website, e.g., https://opencollective.com/babel or https://numfocus.org/project/bokeh. Required if fiscalHostLogin is specified.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"billingCountryOrRegionCode","description":"The country or region where the sponsorable\'s bank account is located. Required if fiscalHostLogin is not specified, ignored when fiscalHostLogin is specified.","type":{"kind":"ENUM","name":"SponsorsCountryOrRegionCode","ofType":null},"defaultValue":null},{"name":"residenceCountryOrRegionCode","description":"The country or region where the sponsorable resides. This is for tax purposes. Required if the sponsorable is yourself, ignored when sponsorableLogin specifies an organization.","type":{"kind":"ENUM","name":"SponsorsCountryOrRegionCode","ofType":null},"defaultValue":null},{"name":"contactEmail","description":"The email address we should use to contact you about the GitHub Sponsors profile being created. This will not be shared publicly. Must be a verified email address already on your GitHub account. Only relevant when the sponsorable is yourself. Defaults to your primary email address on file if omitted.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"fullDescription","description":"Provide an introduction to serve as the main focus that appears on your GitHub Sponsors profile. It\'s a great opportunity to help potential sponsors learn more about you, your work, and why their sponsorship is important to you. GitHub-flavored Markdown is supported.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateSponsorsListingPayload","description":"Autogenerated return type of CreateSponsorsListing","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsListing","description":"The new GitHub Sponsors profile.","args":[],"type":{"kind":"OBJECT","name":"SponsorsListing","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateSponsorsTierInput","description":"Autogenerated input type of CreateSponsorsTier","fields":null,"inputFields":[{"name":"sponsorableId","description":"The ID of the user or organization who owns the GitHub Sponsors profile. Defaults to the current user if omitted and sponsorableLogin is not given.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"sponsorableLogin","description":"The username of the user or organization who owns the GitHub Sponsors profile. Defaults to the current user if omitted and sponsorableId is not given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"amount","description":"The value of the new tier in US dollars. Valid values: 1-12000.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null},{"name":"isRecurring","description":"Whether sponsorships using this tier should happen monthly/yearly or just once.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"repositoryId","description":"Optional ID of the private repository that sponsors at this tier should gain read-only access to. Must be owned by an organization.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"repositoryOwnerLogin","description":"Optional login of the organization owner of the private repository that sponsors at this tier should gain read-only access to. Necessary if repositoryName is given. Will be ignored if repositoryId is given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"repositoryName","description":"Optional name of the private repository that sponsors at this tier should gain read-only access to. Must be owned by an organization. Necessary if repositoryOwnerLogin is given. Will be ignored if repositoryId is given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"welcomeMessage","description":"Optional message new sponsors at this tier will receive.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"description","description":"A description of what this tier is, what perks sponsors might receive, what a sponsorship at this tier means for you, etc.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"publish","description":"Whether to make the tier available immediately for sponsors to choose. Defaults to creating a draft tier that will not be publicly visible.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateSponsorsTierPayload","description":"Autogenerated return type of CreateSponsorsTier","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsTier","description":"The new tier.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateSponsorshipInput","description":"Autogenerated input type of CreateSponsorship","fields":null,"inputFields":[{"name":"sponsorId","description":"The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"sponsorLogin","description":"The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"sponsorableId","description":"The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"sponsorableLogin","description":"The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"tierId","description":"The ID of one of sponsorable\'s existing tiers to sponsor at. Required if amount is not specified.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"amount","description":"The amount to pay to the sponsorable in US dollars. Required if a tierId is not specified. Valid values: 1-12000.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"isRecurring","description":"Whether the sponsorship should happen monthly/yearly or just this one time. Required if a tierId is not specified.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"receiveEmails","description":"Whether the sponsor should receive email updates from the sponsorable.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"privacyLevel","description":"Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used.","type":{"kind":"ENUM","name":"SponsorshipPrivacy","ofType":null},"defaultValue":"PUBLIC"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateSponsorshipPayload","description":"Autogenerated return type of CreateSponsorship","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorship","description":"The sponsorship that was started.","args":[],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateTeamDiscussionCommentInput","description":"Autogenerated input type of CreateTeamDiscussionComment","fields":null,"inputFields":[{"name":"discussionId","description":"The ID of the discussion to which the comment belongs.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"body","description":"The content of the comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateTeamDiscussionCommentPayload","description":"Autogenerated return type of CreateTeamDiscussionComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamDiscussionComment","description":"The new comment.","args":[],"type":{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"CreateTeamDiscussionInput","description":"Autogenerated input type of CreateTeamDiscussion","fields":null,"inputFields":[{"name":"teamId","description":"The ID of the team to which the discussion belongs.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the discussion.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"body","description":"The content of the discussion.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"private","description":"If true, restricts the visibility of this discussion to team members and organization admins. If false or not specified, allows any organization member to view this discussion.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreateTeamDiscussionPayload","description":"Autogenerated return type of CreateTeamDiscussion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamDiscussion","description":"The new discussion.","args":[],"type":{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedCommitContribution","description":"Represents the contribution a user made by committing to a repository.","fields":[{"name":"commitCount","description":"How many commits were made on this day to this repository by the user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository the user made a commit in.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Contribution","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedCommitContributionConnection","description":"The connection type for CreatedCommitContribution.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedCommitContributionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedCommitContribution","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of commits across days and repositories in the connection.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedCommitContributionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CreatedCommitContribution","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedIssueContribution","description":"Represents the contribution a user made on GitHub by opening an issue.","fields":[{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue that was opened.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Issue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Contribution","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedIssueContributionConnection","description":"The connection type for CreatedIssueContribution.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedIssueContributionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedIssueContribution","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedIssueContributionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CreatedIssueContribution","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"CreatedIssueOrRestrictedContribution","description":"Represents either a issue the viewer can access or a restricted contribution.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CreatedIssueContribution","ofType":null},{"kind":"OBJECT","name":"RestrictedContribution","ofType":null}]},{"kind":"OBJECT","name":"CreatedPullRequestContribution","description":"Represents the contribution a user made on GitHub by opening a pull request.","fields":[{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that was opened.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Contribution","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedPullRequestContributionConnection","description":"The connection type for CreatedPullRequestContribution.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestContributionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestContribution","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedPullRequestContributionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CreatedPullRequestContribution","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"CreatedPullRequestOrRestrictedContribution","description":"Represents either a pull request the viewer can access or a restricted contribution.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CreatedPullRequestContribution","ofType":null},{"kind":"OBJECT","name":"RestrictedContribution","ofType":null}]},{"kind":"OBJECT","name":"CreatedPullRequestReviewContribution","description":"Represents the contribution a user made by leaving a review on a pull request.","fields":[{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request the user reviewed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The review the user left on the pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReview","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository containing the pull request that the user reviewed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Contribution","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedPullRequestReviewContributionConnection","description":"The connection type for CreatedPullRequestReviewContribution.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestReviewContributionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestReviewContribution","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedPullRequestReviewContributionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CreatedPullRequestReviewContribution","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedRepositoryContribution","description":"Represents the contribution a user made on GitHub by creating a repository.","fields":[{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Contribution","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedRepositoryContributionConnection","description":"The connection type for CreatedRepositoryContribution.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedRepositoryContributionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CreatedRepositoryContribution","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"CreatedRepositoryContributionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"CreatedRepositoryContribution","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"CreatedRepositoryOrRestrictedContribution","description":"Represents either a repository the viewer can access or a restricted contribution.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CreatedRepositoryContribution","ofType":null},{"kind":"OBJECT","name":"RestrictedContribution","ofType":null}]},{"kind":"OBJECT","name":"CrossReferencedEvent","description":"Represents a mention made by one issue or pull request to another.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCrossRepository","description":"Reference originated in a different repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"referencedAt","description":"Identifies when the reference was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"source","description":"Issue or pull request that made the reference.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ReferencedSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"target","description":"Issue or pull request to which the reference was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ReferencedSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"willCloseTarget","description":"Checks if the target will be closed when the source is merged.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"Date","description":"An ISO-8601 encoded date string.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"DateTime","description":"An ISO-8601 encoded UTC date string.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeclineTopicSuggestionInput","description":"Autogenerated input type of DeclineTopicSuggestion","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the suggested topic.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"reason","description":"The reason why the suggested topic is declined.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TopicSuggestionDeclineReason","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeclineTopicSuggestionPayload","description":"Autogenerated return type of DeclineTopicSuggestion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topic","description":"The declined topic.","args":[],"type":{"kind":"OBJECT","name":"Topic","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DefaultRepositoryPermissionField","description":"The possible base permissions for repositories.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NONE","description":"No access","isDeprecated":false,"deprecationReason":null},{"name":"READ","description":"Can read repos by default","isDeprecated":false,"deprecationReason":null},{"name":"WRITE","description":"Can read and write repos by default","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"Can read, write, and administrate repos by default","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"Deletable","description":"Entities that can be deleted.","fields":[{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null},{"kind":"OBJECT","name":"GistComment","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null}]},{"kind":"INPUT_OBJECT","name":"DeleteBranchProtectionRuleInput","description":"Autogenerated input type of DeleteBranchProtectionRule","fields":null,"inputFields":[{"name":"branchProtectionRuleId","description":"The global relay id of the branch protection rule to be deleted.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteBranchProtectionRulePayload","description":"Autogenerated return type of DeleteBranchProtectionRule","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteDeploymentInput","description":"Autogenerated input type of DeleteDeployment","fields":null,"inputFields":[{"name":"id","description":"The Node ID of the deployment to be deleted.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteDeploymentPayload","description":"Autogenerated return type of DeleteDeployment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteDiscussionCommentInput","description":"Autogenerated input type of DeleteDiscussionComment","fields":null,"inputFields":[{"name":"id","description":"The Node id of the discussion comment to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteDiscussionCommentPayload","description":"Autogenerated return type of DeleteDiscussionComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comment","description":"The discussion comment that was just deleted.","args":[],"type":{"kind":"OBJECT","name":"DiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteDiscussionInput","description":"Autogenerated input type of DeleteDiscussion","fields":null,"inputFields":[{"name":"id","description":"The id of the discussion to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteDiscussionPayload","description":"Autogenerated return type of DeleteDiscussion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion that was just deleted.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteEnvironmentInput","description":"Autogenerated input type of DeleteEnvironment","fields":null,"inputFields":[{"name":"id","description":"The Node ID of the environment to be deleted.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteEnvironmentPayload","description":"Autogenerated return type of DeleteEnvironment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteIpAllowListEntryInput","description":"Autogenerated input type of DeleteIpAllowListEntry","fields":null,"inputFields":[{"name":"ipAllowListEntryId","description":"The ID of the IP allow list entry to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteIpAllowListEntryPayload","description":"Autogenerated return type of DeleteIpAllowListEntry","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEntry","description":"The IP allow list entry that was deleted.","args":[],"type":{"kind":"OBJECT","name":"IpAllowListEntry","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteIssueCommentInput","description":"Autogenerated input type of DeleteIssueComment","fields":null,"inputFields":[{"name":"id","description":"The ID of the comment to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteIssueCommentPayload","description":"Autogenerated return type of DeleteIssueComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteIssueInput","description":"Autogenerated input type of DeleteIssue","fields":null,"inputFields":[{"name":"issueId","description":"The ID of the issue to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteIssuePayload","description":"Autogenerated return type of DeleteIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository the issue belonged to","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteLinkedBranchInput","description":"Autogenerated input type of DeleteLinkedBranch","fields":null,"inputFields":[{"name":"linkedBranchId","description":"The ID of the linked branch","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteLinkedBranchPayload","description":"Autogenerated return type of DeleteLinkedBranch","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue the linked branch was unlinked from.","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteProjectCardInput","description":"Autogenerated input type of DeleteProjectCard","fields":null,"inputFields":[{"name":"cardId","description":"The id of the card to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteProjectCardPayload","description":"Autogenerated return type of DeleteProjectCard","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"column","description":"The column the deleted card was in.","args":[],"type":{"kind":"OBJECT","name":"ProjectColumn","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletedCardId","description":"The deleted card ID.","args":[],"type":{"kind":"SCALAR","name":"ID","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteProjectColumnInput","description":"Autogenerated input type of DeleteProjectColumn","fields":null,"inputFields":[{"name":"columnId","description":"The id of the column to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteProjectColumnPayload","description":"Autogenerated return type of DeleteProjectColumn","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletedColumnId","description":"The deleted column ID.","args":[],"type":{"kind":"SCALAR","name":"ID","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project the deleted column was in.","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteProjectInput","description":"Autogenerated input type of DeleteProject","fields":null,"inputFields":[{"name":"projectId","description":"The Project ID to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteProjectPayload","description":"Autogenerated return type of DeleteProject","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The repository or organization the project was removed from.","args":[],"type":{"kind":"INTERFACE","name":"ProjectOwner","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteProjectV2FieldInput","description":"Autogenerated input type of DeleteProjectV2Field","fields":null,"inputFields":[{"name":"fieldId","description":"The ID of the field to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteProjectV2FieldPayload","description":"Autogenerated return type of DeleteProjectV2Field","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2Field","description":"The deleted field.","args":[],"type":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteProjectV2Input","description":"Autogenerated input type of DeleteProjectV2","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteProjectV2ItemInput","description":"Autogenerated input type of DeleteProjectV2Item","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project from which the item should be removed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"itemId","description":"The ID of the item to be removed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteProjectV2ItemPayload","description":"Autogenerated return type of DeleteProjectV2Item","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletedItemId","description":"The ID of the deleted item.","args":[],"type":{"kind":"SCALAR","name":"ID","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteProjectV2Payload","description":"Autogenerated return type of DeleteProjectV2","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"The deleted Project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeletePullRequestReviewCommentInput","description":"Autogenerated input type of DeletePullRequestReviewComment","fields":null,"inputFields":[{"name":"id","description":"The ID of the comment to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeletePullRequestReviewCommentPayload","description":"Autogenerated return type of DeletePullRequestReviewComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The pull request review the deleted comment belonged to.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReviewComment","description":"The deleted pull request review comment.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeletePullRequestReviewInput","description":"Autogenerated input type of DeletePullRequestReview","fields":null,"inputFields":[{"name":"pullRequestReviewId","description":"The Node ID of the pull request review to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeletePullRequestReviewPayload","description":"Autogenerated return type of DeletePullRequestReview","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The deleted pull request review.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteRefInput","description":"Autogenerated input type of DeleteRef","fields":null,"inputFields":[{"name":"refId","description":"The Node ID of the Ref to be deleted.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteRefPayload","description":"Autogenerated return type of DeleteRef","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteTeamDiscussionCommentInput","description":"Autogenerated input type of DeleteTeamDiscussionComment","fields":null,"inputFields":[{"name":"id","description":"The ID of the comment to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteTeamDiscussionCommentPayload","description":"Autogenerated return type of DeleteTeamDiscussionComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteTeamDiscussionInput","description":"Autogenerated input type of DeleteTeamDiscussion","fields":null,"inputFields":[{"name":"id","description":"The discussion ID to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteTeamDiscussionPayload","description":"Autogenerated return type of DeleteTeamDiscussion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeleteVerifiableDomainInput","description":"Autogenerated input type of DeleteVerifiableDomain","fields":null,"inputFields":[{"name":"id","description":"The ID of the verifiable domain to delete.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeleteVerifiableDomainPayload","description":"Autogenerated return type of DeleteVerifiableDomain","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The owning account from which the domain was deleted.","args":[],"type":{"kind":"UNION","name":"VerifiableDomainOwner","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DemilestonedEvent","description":"Represents a \'demilestoned\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"milestoneTitle","description":"Identifies the milestone title associated with the \'demilestoned\' event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"Object referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"MilestoneItem","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DependabotUpdate","description":"A Dependabot Update for a dependency in a repository","fields":[{"name":"error","description":"The error from a dependency update","args":[],"type":{"kind":"OBJECT","name":"DependabotUpdateError","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The associated pull request","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DependabotUpdateError","description":"An error produced from a Dependabot Update","fields":[{"name":"body","description":"The body of the error","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"errorType","description":"The error code","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The title of the error","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DependencyGraphEcosystem","description":"The possible ecosystems of a dependency graph package.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"RUBYGEMS","description":"Ruby gems hosted at RubyGems.org","isDeprecated":false,"deprecationReason":null},{"name":"NPM","description":"JavaScript packages hosted at npmjs.com","isDeprecated":false,"deprecationReason":null},{"name":"PIP","description":"Python packages hosted at PyPI.org","isDeprecated":false,"deprecationReason":null},{"name":"MAVEN","description":"Java artifacts hosted at the Maven central repository","isDeprecated":false,"deprecationReason":null},{"name":"NUGET","description":".NET packages hosted at the NuGet Gallery","isDeprecated":false,"deprecationReason":null},{"name":"COMPOSER","description":"PHP packages hosted at packagist.org","isDeprecated":false,"deprecationReason":null},{"name":"GO","description":"Go modules","isDeprecated":false,"deprecationReason":null},{"name":"ACTIONS","description":"GitHub Actions","isDeprecated":false,"deprecationReason":null},{"name":"RUST","description":"Rust crates","isDeprecated":false,"deprecationReason":null},{"name":"PUB","description":"Dart packages hosted at pub.dev","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"DeployKey","description":"A repository deploy key.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"key","description":"The deploy key.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"readOnly","description":"Whether or not the deploy key is read only.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The deploy key title.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"verified","description":"Whether or not the deploy key has been verified.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeployKeyConnection","description":"The connection type for DeployKey.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeployKeyEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeployKey","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeployKeyEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DeployKey","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeployedEvent","description":"Represents a \'deployed\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deployment","description":"The deployment associated with the \'deployed\' event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Deployment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"The ref associated with the \'deployed\' event.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Deployment","description":"Represents triggered deployment instance.","fields":[{"name":"commit","description":"Identifies the commit sha of the deployment.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commitOid","description":"Identifies the oid of the deployment commit, even if the commit has been deleted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"Identifies the actor who triggered the deployment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Actor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The deployment description.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"environment","description":"The latest environment to which this deployment was made.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"latestEnvironment","description":"The latest environment to which this deployment was made.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"latestStatus","description":"The latest status of this deployment.","args":[],"type":{"kind":"OBJECT","name":"DeploymentStatus","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"originalEnvironment","description":"The original environment to which this deployment was made.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"payload","description":"Extra information that a deployment system might need.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"Identifies the Ref of the deployment, if the deployment was created by ref.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"Identifies the repository associated with the deployment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The current state of the deployment.","args":[],"type":{"kind":"ENUM","name":"DeploymentState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"statuses","description":"A list of statuses associated with the deployment.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeploymentStatusConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"task","description":"The deployment task.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentConnection","description":"The connection type for Deployment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Deployment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Deployment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentEnvironmentChangedEvent","description":"Represents a \'deployment_environment_changed\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deploymentStatus","description":"The deployment status that updated the deployment environment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentStatus","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DeploymentOrder","description":"Ordering options for deployment connections","fields":null,"inputFields":[{"name":"field","description":"The field to order deployments by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DeploymentOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DeploymentOrderField","description":"Properties by which deployment connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order collection by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentProtectionRule","description":"A protection rule.","fields":[{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reviewers","description":"The teams or users that can review the deployment","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentReviewerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"timeout","description":"The timeout in minutes for this protection rule.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":"The type of protection rule.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DeploymentProtectionRuleType","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentProtectionRuleConnection","description":"The connection type for DeploymentProtectionRule.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentProtectionRuleEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentProtectionRule","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentProtectionRuleEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DeploymentProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DeploymentProtectionRuleType","description":"The possible protection rule types.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"REQUIRED_REVIEWERS","description":"Required reviewers","isDeprecated":false,"deprecationReason":null},{"name":"WAIT_TIMER","description":"Wait timer","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentRequest","description":"A request to deploy a workflow run to an environment.","fields":[{"name":"currentUserCanApprove","description":"Whether or not the current user can approve the deployment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"environment","description":"The target environment of the deployment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Environment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reviewers","description":"The teams or users that can review the deployment","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentReviewerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"waitTimer","description":"The wait timer in minutes configured in the environment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"waitTimerStartedAt","description":"The wait timer in minutes configured in the environment","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentRequestConnection","description":"The connection type for DeploymentRequest.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentRequestEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentRequestEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DeploymentRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentReview","description":"A deployment review.","fields":[{"name":"comment","description":"The comment the user left.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"environments","description":"The environments approved or rejected","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnvironmentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The decision of the user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DeploymentReviewState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user that reviewed the deployment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentReviewConnection","description":"The connection type for DeploymentReview.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentReviewEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentReview","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentReviewEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DeploymentReview","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DeploymentReviewState","description":"The possible states for a deployment review.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"APPROVED","description":"The deployment was approved.","isDeprecated":false,"deprecationReason":null},{"name":"REJECTED","description":"The deployment was rejected.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"DeploymentReviewer","description":"Users and teams.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Team","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"DeploymentReviewerConnection","description":"The connection type for DeploymentReviewer.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentReviewerEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"DeploymentReviewer","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentReviewerEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"DeploymentReviewer","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DeploymentState","description":"The possible states in which a deployment can be.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ABANDONED","description":"The pending deployment was not updated after 30 minutes.","isDeprecated":false,"deprecationReason":null},{"name":"ACTIVE","description":"The deployment is currently active.","isDeprecated":false,"deprecationReason":null},{"name":"DESTROYED","description":"An inactive transient deployment.","isDeprecated":false,"deprecationReason":null},{"name":"ERROR","description":"The deployment experienced an error.","isDeprecated":false,"deprecationReason":null},{"name":"FAILURE","description":"The deployment has failed.","isDeprecated":false,"deprecationReason":null},{"name":"INACTIVE","description":"The deployment is inactive.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING","description":"The deployment is pending.","isDeprecated":false,"deprecationReason":null},{"name":"QUEUED","description":"The deployment has queued","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The deployment is in progress.","isDeprecated":false,"deprecationReason":null},{"name":"WAITING","description":"The deployment is waiting.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentStatus","description":"Describes the status of a given deployment attempt.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"Identifies the actor who triggered the deployment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Actor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deployment","description":"Identifies the deployment associated with status.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Deployment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"Identifies the description of the deployment.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"environmentUrl","description":"Identifies the environment URL of the deployment.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"logUrl","description":"Identifies the log URL of the deployment.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Identifies the current state of the deployment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DeploymentStatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentStatusConnection","description":"The connection type for DeploymentStatus.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentStatusEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentStatus","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DeploymentStatusEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DeploymentStatus","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DeploymentStatusState","description":"The possible states for a deployment status.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PENDING","description":"The deployment is pending.","isDeprecated":false,"deprecationReason":null},{"name":"SUCCESS","description":"The deployment was successful.","isDeprecated":false,"deprecationReason":null},{"name":"FAILURE","description":"The deployment has failed.","isDeprecated":false,"deprecationReason":null},{"name":"INACTIVE","description":"The deployment is inactive.","isDeprecated":false,"deprecationReason":null},{"name":"ERROR","description":"The deployment experienced an error.","isDeprecated":false,"deprecationReason":null},{"name":"QUEUED","description":"The deployment is queued","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The deployment is in progress.","isDeprecated":false,"deprecationReason":null},{"name":"WAITING","description":"The deployment is waiting.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"DiffSide","description":"The possible sides of a diff.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LEFT","description":"The left side of the diff.","isDeprecated":false,"deprecationReason":null},{"name":"RIGHT","description":"The right side of the diff.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DisablePullRequestAutoMergeInput","description":"Autogenerated input type of DisablePullRequestAutoMerge","fields":null,"inputFields":[{"name":"pullRequestId","description":"ID of the pull request to disable auto merge on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DisablePullRequestAutoMergePayload","description":"Autogenerated return type of DisablePullRequestAutoMerge","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request auto merge was disabled on.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DisconnectedEvent","description":"Represents a \'disconnected\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCrossRepository","description":"Reference originated in a different repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"source","description":"Issue or pull request from which the issue was disconnected.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ReferencedSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"Issue or pull request which was disconnected.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ReferencedSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Discussion","description":"A discussion in a repository.","fields":[{"name":"activeLockReason","description":"Reason that the conversation was locked.","args":[],"type":{"kind":"ENUM","name":"LockReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"answer","description":"The comment chosen as this discussion\'s answer, if any.","args":[],"type":{"kind":"OBJECT","name":"DiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"answerChosenAt","description":"The time when a user chose this discussion\'s answer, if answered.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"answerChosenBy","description":"The user who chose this discussion\'s answer, if answered.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The main text of the discussion post.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"category","description":"The category for this discussion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCategory","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closed","description":"Indicates if the object is closed (definition of closed may depend on type)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closedAt","description":"Identifies the date and time when the object was closed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comments","description":"The replies to the discussion.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"labels","description":"A list of labels associated with the object.","args":[{"name":"orderBy","description":"Ordering options for labels returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"LabelOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LabelConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"locked","description":"`true` if the object is locked","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"The number identifying this discussion within the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"poll","description":"The poll associated with this discussion, if one exists.","args":[],"type":{"kind":"OBJECT","name":"DiscussionPoll","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The path for this discussion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The title of this discussion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"upvoteCount","description":"Number of upvotes that this subject has received.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The URL for this discussion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpvote","description":"Whether or not the current user can add or remove an upvote on this subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasUpvoted","description":"Whether or not the current user has already upvoted this subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Closable","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Labelable","ofType":null},{"kind":"INTERFACE","name":"Lockable","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null},{"kind":"INTERFACE","name":"Subscribable","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"Votable","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionCategory","description":"A category for discussions in a repository.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"A description of this category.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"emoji","description":"An emoji representing this category.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"emojiHTML","description":"This category\'s emoji rendered as HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isAnswerable","description":"Whether or not discussions in this category support choosing an answer with the markDiscussionCommentAsAnswer mutation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of this category.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"slug","description":"The slug of this category.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionCategoryConnection","description":"The connection type for DiscussionCategory.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCategoryEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCategory","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionCategoryEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DiscussionCategory","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionComment","description":"A comment on a discussion.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The body as Markdown.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletedAt","description":"The time when this replied-to comment was deleted","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion this comment was created in","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isAnswer","description":"Has this comment been chosen as the answer of its discussion?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isMinimized","description":"Returns whether or not a comment has been minimized.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimizedReason","description":"Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"replies","description":"The threaded replies to this comment.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"replyTo","description":"The discussion comment this comment is a reply to","args":[],"type":{"kind":"OBJECT","name":"DiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The path for this discussion comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"upvoteCount","description":"Number of upvotes that this subject has received.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The URL for this discussion comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMarkAsAnswer","description":"Can the current user mark this comment as an answer?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMinimize","description":"Check if the current viewer can minimize this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUnmarkAsAnswer","description":"Can the current user unmark this comment as an answer?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpvote","description":"Whether or not the current user can add or remove an upvote on this subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasUpvoted","description":"Whether or not the current user has already upvoted this subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Minimizable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"Votable","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionCommentConnection","description":"The connection type for DiscussionComment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCommentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionComment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionCommentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionConnection","description":"The connection type for Discussion.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Discussion","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DiscussionOrder","description":"Ways in which lists of discussions can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field by which to order discussions.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DiscussionOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order discussions by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DiscussionOrderField","description":"Properties by which discussion connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order discussions by creation time.","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order discussions by most recent modification time.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionPoll","description":"A poll for a discussion.","fields":[{"name":"discussion","description":"The discussion that this poll belongs to.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"options","description":"The options for this poll.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the options for the discussion poll.","type":{"kind":"INPUT_OBJECT","name":"DiscussionPollOptionOrder","ofType":null},"defaultValue":"{field: AUTHORED_ORDER, direction: ASC}"}],"type":{"kind":"OBJECT","name":"DiscussionPollOptionConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"question","description":"The question that is being asked by this poll.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalVoteCount","description":"The total number of votes that have been cast for this poll.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanVote","description":"Indicates if the viewer has permission to vote in this poll.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasVoted","description":"Indicates if the viewer has voted for any option in this poll.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionPollOption","description":"An option for a discussion poll.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"option","description":"The text for this option.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"poll","description":"The discussion poll that this option belongs to.","args":[],"type":{"kind":"OBJECT","name":"DiscussionPoll","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"totalVoteCount","description":"The total number of votes that have been cast for this option.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasVoted","description":"Indicates if the viewer has voted for this option in the poll.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionPollOptionConnection","description":"The connection type for DiscussionPollOption.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionPollOptionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionPollOption","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DiscussionPollOptionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"DiscussionPollOption","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DiscussionPollOptionOrder","description":"Ordering options for discussion poll option connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order poll options by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DiscussionPollOptionOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DiscussionPollOptionOrderField","description":"Properties by which discussion poll option connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AUTHORED_ORDER","description":"Order poll options by the order that the poll author specified when creating the poll.","isDeprecated":false,"deprecationReason":null},{"name":"VOTE_COUNT","description":"Order poll options by the number of votes it has.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DismissPullRequestReviewInput","description":"Autogenerated input type of DismissPullRequestReview","fields":null,"inputFields":[{"name":"pullRequestReviewId","description":"The Node ID of the pull request review to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"message","description":"The contents of the pull request review dismissal message.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DismissPullRequestReviewPayload","description":"Autogenerated return type of DismissPullRequestReview","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The dismissed pull request review.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"DismissReason","description":"The possible reasons that a Dependabot alert was dismissed.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"FIX_STARTED","description":"A fix has already been started","isDeprecated":false,"deprecationReason":null},{"name":"NO_BANDWIDTH","description":"No bandwidth to fix this","isDeprecated":false,"deprecationReason":null},{"name":"TOLERABLE_RISK","description":"Risk is tolerable to this project","isDeprecated":false,"deprecationReason":null},{"name":"INACCURATE","description":"This alert is inaccurate or incorrect","isDeprecated":false,"deprecationReason":null},{"name":"NOT_USED","description":"Vulnerable code is not actually used","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DismissRepositoryVulnerabilityAlertInput","description":"Autogenerated input type of DismissRepositoryVulnerabilityAlert","fields":null,"inputFields":[{"name":"repositoryVulnerabilityAlertId","description":"The Dependabot alert ID to dismiss.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"dismissReason","description":"The reason the Dependabot alert is being dismissed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DismissReason","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DismissRepositoryVulnerabilityAlertPayload","description":"Autogenerated return type of DismissRepositoryVulnerabilityAlert","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryVulnerabilityAlert","description":"The Dependabot alert that was dismissed","args":[],"type":{"kind":"OBJECT","name":"RepositoryVulnerabilityAlert","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"DraftIssue","description":"A draft issue within a project.","fields":[{"name":"assignees","description":"A list of users to assigned to this draft issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The body of the draft issue.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body of the draft issue rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body of the draft issue rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created this draft issue.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2Items","description":"List of items linked with the draft issue (currently draft issue can be linked to only one item).","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"Projects that link to this draft issue (currently draft issue can be linked to only one project).","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The title of the draft issue","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DraftPullRequestReviewComment","description":"Specifies a review comment to be left with a Pull Request Review.","fields":null,"inputFields":[{"name":"path","description":"Path to the file being commented on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"position","description":"Position in the file to leave a comment on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null},{"name":"body","description":"Body of the comment to leave.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"DraftPullRequestReviewThread","description":"Specifies a review comment thread to be left with a Pull Request Review.","fields":null,"inputFields":[{"name":"path","description":"Path to the file being commented on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"line","description":"The line of the blob to which the thread refers. The end of the line range for multi-line comments.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null},{"name":"side","description":"The side of the diff on which the line resides. For multi-line comments, this is the side for the end of the line range.","type":{"kind":"ENUM","name":"DiffSide","ofType":null},"defaultValue":"RIGHT"},{"name":"startLine","description":"The first line of the range to which the comment refers.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"startSide","description":"The side of the diff on which the start line resides.","type":{"kind":"ENUM","name":"DiffSide","ofType":null},"defaultValue":"RIGHT"},{"name":"body","description":"Body of the comment to leave.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"EnablePullRequestAutoMergeInput","description":"Autogenerated input type of EnablePullRequestAutoMerge","fields":null,"inputFields":[{"name":"pullRequestId","description":"ID of the pull request to enable auto-merge on.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"commitHeadline","description":"Commit headline to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit headline is ignored.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"commitBody","description":"Commit body to use for the commit when the PR is mergable; if omitted, a default message will be used. NOTE: when merging with a merge queue any input value for commit message is ignored.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"mergeMethod","description":"The merge method to use. If omitted, defaults to `MERGE`. NOTE: when merging with a merge queue any input value for merge method is ignored.","type":{"kind":"ENUM","name":"PullRequestMergeMethod","ofType":null},"defaultValue":"MERGE"},{"name":"authorEmail","description":"The email address to associate with this merge.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"expectedHeadOid","description":"The expected head OID of the pull request.","type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnablePullRequestAutoMergePayload","description":"Autogenerated return type of EnablePullRequestAutoMerge","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request auto-merge was enabled on.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Enterprise","description":"An account to manage multiple organizations with consolidated policy and billing.","fields":[{"name":"announcement","description":"The text of the announcement","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"announcementExpiresAt","description":"The expiration date of the announcement, if any","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"announcementUserDismissible","description":"Whether the announcement can be dismissed by the user","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"avatarUrl","description":"A URL pointing to the enterprise\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"billingInfo","description":"Enterprise billing information visible to enterprise billing managers.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseBillingInfo","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"descriptionHTML","description":"The description of the enterprise as HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"location","description":"The location of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"members","description":"A list of users who are members of this enterprise.","args":[{"name":"organizationLogins","description":"Only return members within the organizations with these logins","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for members returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseMemberOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"role","description":"The role of the user in the enterprise organization or server.","type":{"kind":"ENUM","name":"EnterpriseUserAccountMembershipRole","ofType":null},"defaultValue":null},{"name":"deployment","description":"Only return members within the selected GitHub Enterprise deployment","type":{"kind":"ENUM","name":"EnterpriseUserDeployment","ofType":null},"defaultValue":null},{"name":"hasTwoFactorEnabled","description":"Only return members with this two-factor authentication status. Does not include members who only have an account on a GitHub Enterprise Server instance.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseMemberConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"organizations","description":"A list of organizations that belong to this enterprise.","args":[{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"viewerOrganizationRole","description":"The viewer\'s role in an organization.","type":{"kind":"ENUM","name":"RoleInOrganization","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ownerInfo","description":"Enterprise information only visible to enterprise owners.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseOwnerInfo","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"slug","description":"The URL-friendly identifier for the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsAdmin","description":"Is the current viewer an admin of this enterprise?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"websiteUrl","description":"The URL of the enterprise website.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AnnouncementBanner","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseAdministratorConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseAdministratorEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseAdministratorEdge","description":"A User who is an administrator of an enterprise.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"role","description":"The role of the administrator.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseAdministratorRole","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","description":"An invitation for a user to become an owner or billing manager of an enterprise.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The email of the person who was invited to the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise the invitation is for.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Enterprise","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"invitee","description":"The user who was invited to the enterprise.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"inviter","description":"The user who created the invitation.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"role","description":"The invitee\'s pending role in the enterprise (owner or billing_manager).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseAdministratorRole","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseAdministratorInvitationConnection","description":"The connection type for EnterpriseAdministratorInvitation.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseAdministratorInvitationEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"EnterpriseAdministratorInvitationOrder","description":"Ordering options for enterprise administrator invitation connections","fields":null,"inputFields":[{"name":"field","description":"The field to order enterprise administrator invitations by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseAdministratorInvitationOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseAdministratorInvitationOrderField","description":"Properties by which enterprise administrator invitation connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order enterprise administrator member invitations by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseAdministratorRole","description":"The possible administrator roles in an enterprise account.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OWNER","description":"Represents an owner of the enterprise account.","isDeprecated":false,"deprecationReason":null},{"name":"BILLING_MANAGER","description":"Represents a billing manager of the enterprise account.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseAllowPrivateRepositoryForkingPolicyValue","description":"The possible values for the enterprise allow private repository forking policy value.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENTERPRISE_ORGANIZATIONS","description":"Members can fork a repository to an organization within this enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"SAME_ORGANIZATION","description":"Members can fork a repository only within the same organization (intra-org).","isDeprecated":false,"deprecationReason":null},{"name":"SAME_ORGANIZATION_USER_ACCOUNTS","description":"Members can fork a repository to their user account or within the same organization.","isDeprecated":false,"deprecationReason":null},{"name":"ENTERPRISE_ORGANIZATIONS_USER_ACCOUNTS","description":"Members can fork a repository to their enterprise-managed user account or an organization inside this enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"USER_ACCOUNTS","description":"Members can fork a repository to their user account.","isDeprecated":false,"deprecationReason":null},{"name":"EVERYWHERE","description":"Members can fork a repository to their user account or an organization, either inside or outside of this enterprise.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","description":"Metadata for an audit entry containing enterprise account information.","fields":[{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"MembersCanDeleteReposClearAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteToBusinessAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeEnableAuditEntry","ofType":null}]},{"kind":"OBJECT","name":"EnterpriseBillingInfo","description":"Enterprise billing information visible to enterprise billing managers and owners.","fields":[{"name":"allLicensableUsersCount","description":"The number of licenseable users/emails across the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"assetPacks","description":"The number of data packs used by all organizations owned by the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bandwidthQuota","description":"The bandwidth quota in GB for all organizations owned by the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bandwidthUsage","description":"The bandwidth usage in GB for all organizations owned by the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bandwidthUsagePercentage","description":"The bandwidth usage as a percentage of the bandwidth quota.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"storageQuota","description":"The storage quota in GB for all organizations owned by the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"storageUsage","description":"The storage usage in GB for all organizations owned by the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"storageUsagePercentage","description":"The storage usage as a percentage of the storage quota.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalAvailableLicenses","description":"The number of available licenses across all owned organizations based on the unique number of billable users.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalLicenses","description":"The total number of licenses allocated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseDefaultRepositoryPermissionSettingValue","description":"The possible values for the enterprise base repository permission setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NO_POLICY","description":"Organizations in the enterprise choose base repository permissions for their members.","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"Organization members will be able to clone, pull, push, and add new collaborators to all organization repositories.","isDeprecated":false,"deprecationReason":null},{"name":"WRITE","description":"Organization members will be able to clone, pull, and push all organization repositories.","isDeprecated":false,"deprecationReason":null},{"name":"READ","description":"Organization members will be able to clone and pull all organization repositories.","isDeprecated":false,"deprecationReason":null},{"name":"NONE","description":"Organization members will only be able to clone and pull public repositories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","description":"The possible values for an enabled/disabled enterprise setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENABLED","description":"The setting is enabled for organizations in the enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"DISABLED","description":"The setting is disabled for organizations in the enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"NO_POLICY","description":"There is no policy set for organizations in the enterprise.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseEnabledSettingValue","description":"The possible values for an enabled/no policy enterprise setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENABLED","description":"The setting is enabled for organizations in the enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"NO_POLICY","description":"There is no policy set for organizations in the enterprise.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseFailedInvitationConnection","description":"The connection type for OrganizationInvitation.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseFailedInvitationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalUniqueUserCount","description":"Identifies the total count of unique users in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseFailedInvitationEdge","description":"A failed invitation to be a member in an enterprise organization.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseIdentityProvider","description":"An identity provider configured to provision identities for an enterprise.","fields":[{"name":"digestMethod","description":"The digest algorithm used to sign SAML requests for the identity provider.","args":[],"type":{"kind":"ENUM","name":"SamlDigestAlgorithm","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise this identity provider belongs to.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"externalIdentities","description":"ExternalIdentities provisioned by this identity provider.","args":[{"name":"membersOnly","description":"Filter to external identities with valid org membership only","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"login","description":"Filter to external identities with the users login","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"userName","description":"Filter to external identities with the users userName/NameID attribute","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ExternalIdentityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"idpCertificate","description":"The x509 certificate used by the identity provider to sign assertions and responses.","args":[],"type":{"kind":"SCALAR","name":"X509Certificate","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issuer","description":"The Issuer Entity ID for the SAML identity provider.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"recoveryCodes","description":"Recovery codes that can be used by admins to access the enterprise if the identity provider is unavailable.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"signatureMethod","description":"The signature algorithm used to sign SAML requests for the identity provider.","args":[],"type":{"kind":"ENUM","name":"SamlSignatureAlgorithm","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ssoUrl","description":"The URL endpoint for the identity provider\'s SAML SSO.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"EnterpriseMember","description":"An object that is a member of an enterprise.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"EnterpriseUserAccount","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"EnterpriseMemberConnection","description":"The connection type for EnterpriseMember.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseMemberEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"EnterpriseMember","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseMemberEdge","description":"A User who is a member of an enterprise through one or more organizations.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"EnterpriseMember","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"EnterpriseMemberOrder","description":"Ordering options for enterprise member connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order enterprise members by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseMemberOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseMemberOrderField","description":"Properties by which enterprise member connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOGIN","description":"Order enterprise members by login","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order enterprise members by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseMembersCanCreateRepositoriesSettingValue","description":"The possible values for the enterprise members can create repositories setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NO_POLICY","description":"Organization administrators choose whether to allow members to create repositories.","isDeprecated":false,"deprecationReason":null},{"name":"ALL","description":"Members will be able to create public and private repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"Members will be able to create only public repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"Members will be able to create only private repositories.","isDeprecated":false,"deprecationReason":null},{"name":"DISABLED","description":"Members will not be able to create public or private repositories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseMembersCanMakePurchasesSettingValue","description":"The possible values for the members can make purchases setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENABLED","description":"The setting is enabled for organizations in the enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"DISABLED","description":"The setting is disabled for organizations in the enterprise.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseOrganizationMembershipConnection","description":"The connection type for Organization.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseOrganizationMembershipEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Organization","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseOrganizationMembershipEdge","description":"An enterprise organization that a user is a member of.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"role","description":"The role of the user in the enterprise membership.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseUserAccountMembershipRole","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseOutsideCollaboratorConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseOutsideCollaboratorEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseOutsideCollaboratorEdge","description":"A User who is an outside collaborator of an enterprise through one or more organizations.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositories","description":"The enterprise organization repositories this user is a member of.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories.","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":"{field: NAME, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseRepositoryInfoConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseOwnerInfo","description":"Enterprise information only visible to enterprise owners.","fields":[{"name":"admins","description":"A list of all of the administrators for this enterprise.","args":[{"name":"organizationLogins","description":"Only return members within the organizations with these logins","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"role","description":"The role to filter by.","type":{"kind":"ENUM","name":"EnterpriseAdministratorRole","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for administrators returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseMemberOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"hasTwoFactorEnabled","description":"Only return administrators with this two-factor authentication status.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseAdministratorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"affiliatedUsersWithTwoFactorDisabled","description":"A list of users in the enterprise who currently have two-factor authentication disabled.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"affiliatedUsersWithTwoFactorDisabledExist","description":"Whether or not affiliated users with two-factor authentication disabled exist in the enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"allowPrivateRepositoryForkingSetting","description":"The setting value for whether private repository forking is enabled for repositories in organizations in this enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"allowPrivateRepositoryForkingSettingOrganizations","description":"A list of enterprise organizations configured with the provided private repository forking setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"allowPrivateRepositoryForkingSettingPolicyValue","description":"The value for the allow private repository forking policy on the enterprise.","args":[],"type":{"kind":"ENUM","name":"EnterpriseAllowPrivateRepositoryForkingPolicyValue","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"defaultRepositoryPermissionSetting","description":"The setting value for base repository permissions for organizations in this enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseDefaultRepositoryPermissionSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"defaultRepositoryPermissionSettingOrganizations","description":"A list of enterprise organizations configured with the provided base repository permission.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The permission to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DefaultRepositoryPermissionField","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"domains","description":"A list of domains owned by the enterprise.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"isVerified","description":"Filter whether or not the domain is verified.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"},{"name":"isApproved","description":"Filter whether or not the domain is approved.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"},{"name":"orderBy","description":"Ordering options for verifiable domains returned.","type":{"kind":"INPUT_OBJECT","name":"VerifiableDomainOrder","ofType":null},"defaultValue":"{field: DOMAIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"VerifiableDomainConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseServerInstallations","description":"Enterprise Server installations owned by the enterprise.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"connectedOnly","description":"Whether or not to only return installations discovered via GitHub Connect.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for Enterprise Server installations returned.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseServerInstallationOrder","ofType":null},"defaultValue":"{field: HOST_NAME, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerInstallationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"failedInvitations","description":"A list of failed invitations in the enterprise.","args":[{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseFailedInvitationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEnabledSetting","description":"The setting value for whether the enterprise has an IP allow list enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IpAllowListEnabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEntries","description":"The IP addresses that are allowed to access resources owned by the enterprise.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for IP allow list entries returned.","type":{"kind":"INPUT_OBJECT","name":"IpAllowListEntryOrder","ofType":null},"defaultValue":"{field: ALLOW_LIST_VALUE, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IpAllowListEntryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListForInstalledAppsEnabledSetting","description":"The setting value for whether the enterprise has IP allow list configuration for installed GitHub Apps enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IpAllowListForInstalledAppsEnabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isUpdatingDefaultRepositoryPermission","description":"Whether or not the base repository permission is currently being updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isUpdatingTwoFactorRequirement","description":"Whether the two-factor authentication requirement is currently being enforced.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanChangeRepositoryVisibilitySetting","description":"The setting value for whether organization members with admin permissions on a repository can change repository visibility.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanChangeRepositoryVisibilitySettingOrganizations","description":"A list of enterprise organizations configured with the provided can change repository visibility setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanCreateInternalRepositoriesSetting","description":"The setting value for whether members of organizations in the enterprise can create internal repositories.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanCreatePrivateRepositoriesSetting","description":"The setting value for whether members of organizations in the enterprise can create private repositories.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanCreatePublicRepositoriesSetting","description":"The setting value for whether members of organizations in the enterprise can create public repositories.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanCreateRepositoriesSetting","description":"The setting value for whether members of organizations in the enterprise can create repositories.","args":[],"type":{"kind":"ENUM","name":"EnterpriseMembersCanCreateRepositoriesSettingValue","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanCreateRepositoriesSettingOrganizations","description":"A list of enterprise organizations configured with the provided repository creation setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrganizationMembersCanCreateRepositoriesSettingValue","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanDeleteIssuesSetting","description":"The setting value for whether members with admin permissions for repositories can delete issues.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanDeleteIssuesSettingOrganizations","description":"A list of enterprise organizations configured with the provided members can delete issues setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanDeleteRepositoriesSetting","description":"The setting value for whether members with admin permissions for repositories can delete or transfer repositories.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanDeleteRepositoriesSettingOrganizations","description":"A list of enterprise organizations configured with the provided members can delete repositories setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanInviteCollaboratorsSetting","description":"The setting value for whether members of organizations in the enterprise can invite outside collaborators.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanInviteCollaboratorsSettingOrganizations","description":"A list of enterprise organizations configured with the provided members can invite collaborators setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanMakePurchasesSetting","description":"Indicates whether members of this enterprise\'s organizations can purchase additional services for those organizations.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseMembersCanMakePurchasesSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanUpdateProtectedBranchesSetting","description":"The setting value for whether members with admin permissions for repositories can update protected branches.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanUpdateProtectedBranchesSettingOrganizations","description":"A list of enterprise organizations configured with the provided members can update protected branches setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanViewDependencyInsightsSetting","description":"The setting value for whether members can view dependency insights.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanViewDependencyInsightsSettingOrganizations","description":"A list of enterprise organizations configured with the provided members can view dependency insights setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"notificationDeliveryRestrictionEnabledSetting","description":"Indicates if email notification delivery for this enterprise is restricted to verified or approved domains.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"NotificationRestrictionSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oidcProvider","description":"The OIDC Identity Provider for the enterprise.","args":[],"type":{"kind":"OBJECT","name":"OIDCProvider","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationProjectsSetting","description":"The setting value for whether organization projects are enabled for organizations in this enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"organizationProjectsSettingOrganizations","description":"A list of enterprise organizations configured with the provided organization projects setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"outsideCollaborators","description":"A list of outside collaborators across the repositories in the enterprise.","args":[{"name":"login","description":"The login of one specific outside collaborator.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for outside collaborators returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseMemberOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"visibility","description":"Only return outside collaborators on repositories with this visibility.","type":{"kind":"ENUM","name":"RepositoryVisibility","ofType":null},"defaultValue":null},{"name":"hasTwoFactorEnabled","description":"Only return outside collaborators with this two-factor authentication status.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"},{"name":"organizationLogins","description":"Only return outside collaborators within the organizations with these logins","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseOutsideCollaboratorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pendingAdminInvitations","description":"A list of pending administrator invitations for the enterprise.","args":[{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pending enterprise administrator invitations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseAdministratorInvitationOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"},{"name":"role","description":"The role to filter by.","type":{"kind":"ENUM","name":"EnterpriseAdministratorRole","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pendingCollaboratorInvitations","description":"A list of pending collaborator invitations across the repositories in the enterprise.","args":[{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pending repository collaborator invitations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"RepositoryInvitationOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryInvitationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pendingMemberInvitations","description":"A list of pending member invitations for organizations in the enterprise.","args":[{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"organizationLogins","description":"Only return invitations within the organizations with these logins","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"invitationSource","description":"Only return invitations matching this invitation source","type":{"kind":"ENUM","name":"OrganizationInvitationSource","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterprisePendingMemberInvitationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryProjectsSetting","description":"The setting value for whether repository projects are enabled in this enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryProjectsSettingOrganizations","description":"A list of enterprise organizations configured with the provided repository projects setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"samlIdentityProvider","description":"The SAML Identity Provider for the enterprise. When used by a GitHub App, requires an installation token with read and write access to members.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseIdentityProvider","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"samlIdentityProviderSettingOrganizations","description":"A list of enterprise organizations configured with the SAML single sign-on setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IdentityProviderConfigurationState","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"supportEntitlements","description":"A list of members with a support entitlement.","args":[{"name":"orderBy","description":"Ordering options for support entitlement users returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseMemberOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseMemberConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamDiscussionsSetting","description":"The setting value for whether team discussions are enabled for organizations in this enterprise.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamDiscussionsSettingOrganizations","description":"A list of enterprise organizations configured with the provided team discussions setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"twoFactorRequiredSetting","description":"The setting value for whether the enterprise requires two-factor authentication for its organizations and users.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"twoFactorRequiredSettingOrganizations","description":"A list of enterprise organizations configured with the two-factor authentication setting value.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"value","description":"The setting value to find organizations for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations with this setting.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterprisePendingMemberInvitationConnection","description":"The connection type for OrganizationInvitation.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterprisePendingMemberInvitationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalUniqueUserCount","description":"Identifies the total count of unique users in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterprisePendingMemberInvitationEdge","description":"An invitation to be a member in an enterprise organization.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseRepositoryInfo","description":"A subset of repository information queryable from an enterprise.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPrivate","description":"Identifies if the repository is private or internal.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The repository\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nameWithOwner","description":"The repository\'s name with owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseRepositoryInfoConnection","description":"The connection type for EnterpriseRepositoryInfo.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseRepositoryInfoEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseRepositoryInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseRepositoryInfoEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseRepositoryInfo","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerInstallation","description":"An Enterprise Server installation.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"customerName","description":"The customer name to which the Enterprise Server installation belongs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hostName","description":"The host name of the Enterprise Server installation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isConnected","description":"Whether or not the installation is connected to an Enterprise Server installation via GitHub Connect.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userAccounts","description":"User accounts on this Enterprise Server installation.","args":[{"name":"orderBy","description":"Ordering options for Enterprise Server user accounts returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseServerUserAccountOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userAccountsUploads","description":"User accounts uploads for the Enterprise Server installation.","args":[{"name":"orderBy","description":"Ordering options for Enterprise Server user accounts uploads returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseServerUserAccountsUploadOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUploadConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerInstallationConnection","description":"The connection type for EnterpriseServerInstallation.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerInstallationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerInstallation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerInstallationEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseServerInstallation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"EnterpriseServerInstallationOrder","description":"Ordering options for Enterprise Server installation connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order Enterprise Server installations by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseServerInstallationOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseServerInstallationOrderField","description":"Properties by which Enterprise Server installation connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"HOST_NAME","description":"Order Enterprise Server installations by host name","isDeprecated":false,"deprecationReason":null},{"name":"CUSTOMER_NAME","description":"Order Enterprise Server installations by customer name","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order Enterprise Server installations by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccount","description":"A user account on an Enterprise Server installation.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"emails","description":"User emails belonging to this user account.","args":[{"name":"orderBy","description":"Ordering options for Enterprise Server user account emails returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"EnterpriseServerUserAccountEmailOrder","ofType":null},"defaultValue":"{field: EMAIL, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmailConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseServerInstallation","description":"The Enterprise Server installation on which this user account exists.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerInstallation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSiteAdmin","description":"Whether the user account is a site administrator on the Enterprise Server installation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The login of the user account on the Enterprise Server installation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"profileName","description":"The profile name of the user account on the Enterprise Server installation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"remoteCreatedAt","description":"The date and time when the user account was created on the Enterprise Server installation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"remoteUserId","description":"The ID of the user account on the Enterprise Server installation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountConnection","description":"The connection type for EnterpriseServerUserAccount.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccount","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseServerUserAccount","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmail","description":"An email belonging to a user account on an Enterprise Server installation.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The email address.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPrimary","description":"Indicates whether this is the primary email of the associated user account.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userAccount","description":"The user account to which the email belongs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccount","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmailConnection","description":"The connection type for EnterpriseServerUserAccountEmail.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmailEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmail","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmailEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmail","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"EnterpriseServerUserAccountEmailOrder","description":"Ordering options for Enterprise Server user account email connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order emails by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseServerUserAccountEmailOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseServerUserAccountEmailOrderField","description":"Properties by which Enterprise Server user account email connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"EMAIL","description":"Order emails by email","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"EnterpriseServerUserAccountOrder","description":"Ordering options for Enterprise Server user account connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order user accounts by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseServerUserAccountOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseServerUserAccountOrderField","description":"Properties by which Enterprise Server user account connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOGIN","description":"Order user accounts by login","isDeprecated":false,"deprecationReason":null},{"name":"REMOTE_CREATED_AT","description":"Order user accounts by creation time on the Enterprise Server installation","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUpload","description":"A user accounts upload from an Enterprise Server installation.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise to which this upload belongs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Enterprise","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseServerInstallation","description":"The Enterprise Server installation for which this upload was generated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerInstallation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the file uploaded.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"syncState","description":"The synchronization state of the upload","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseServerUserAccountsUploadSyncState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUploadConnection","description":"The connection type for EnterpriseServerUserAccountsUpload.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUploadEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUpload","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUploadEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUpload","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"EnterpriseServerUserAccountsUploadOrder","description":"Ordering options for Enterprise Server user accounts upload connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order user accounts uploads by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseServerUserAccountsUploadOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseServerUserAccountsUploadOrderField","description":"Properties by which Enterprise Server user accounts upload connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order user accounts uploads by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseServerUserAccountsUploadSyncState","description":"Synchronization state of the Enterprise Server user accounts upload","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PENDING","description":"The synchronization of the upload is pending.","isDeprecated":false,"deprecationReason":null},{"name":"SUCCESS","description":"The synchronization of the upload succeeded.","isDeprecated":false,"deprecationReason":null},{"name":"FAILURE","description":"The synchronization of the upload failed.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"EnterpriseUserAccount","description":"An account for a user who is an admin of an enterprise or a member of an enterprise through one or more organizations.","fields":[{"name":"avatarUrl","description":"A URL pointing to the enterprise user account\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise in which this user account exists.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Enterprise","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"An identifier for the enterprise user account, a login or email address","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the enterprise user account","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizations","description":"A list of enterprise organizations this user is a member of.","args":[{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for organizations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"role","description":"The role of the user in the enterprise organization.","type":{"kind":"ENUM","name":"EnterpriseUserAccountMembershipRole","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnterpriseOrganizationMembershipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user within the enterprise.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Actor","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseUserAccountMembershipRole","description":"The possible roles for enterprise membership.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MEMBER","description":"The user is a member of an organization in the enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"OWNER","description":"The user is an owner of an organization in the enterprise.","isDeprecated":false,"deprecationReason":null},{"name":"UNAFFILIATED","description":"The user is not an owner of the enterprise, and not a member or owner of any organizations in the enterprise; only for EMU-enabled enterprises.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"EnterpriseUserDeployment","description":"The possible GitHub Enterprise deployments where this user can exist.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CLOUD","description":"The user is part of a GitHub Enterprise Cloud deployment.","isDeprecated":false,"deprecationReason":null},{"name":"SERVER","description":"The user is part of a GitHub Enterprise Server deployment.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Environment","description":"An environment.","fields":[{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the environment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"protectionRules","description":"The protection rules defined for this environment","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentProtectionRuleConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnvironmentConnection","description":"The connection type for Environment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"EnvironmentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Environment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"EnvironmentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Environment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ExternalIdentity","description":"An external identity provisioned by SAML SSO or SCIM.","fields":[{"name":"guid","description":"The GUID for this identity","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"organizationInvitation","description":"Organization invitation for this SCIM-provisioned external identity","args":[],"type":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"samlIdentity","description":"SAML Identity attributes","args":[],"type":{"kind":"OBJECT","name":"ExternalIdentitySamlAttributes","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"scimIdentity","description":"SCIM Identity attributes","args":[],"type":{"kind":"OBJECT","name":"ExternalIdentityScimAttributes","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"User linked to this external identity. Will be NULL if this identity has not been claimed by an organization member.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ExternalIdentityAttribute","description":"An attribute for the External Identity attributes collection","fields":[{"name":"metadata","description":"The attribute metadata as JSON","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The attribute name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"value","description":"The attribute value","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ExternalIdentityConnection","description":"The connection type for ExternalIdentity.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ExternalIdentityEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ExternalIdentity","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ExternalIdentityEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ExternalIdentity","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ExternalIdentitySamlAttributes","description":"SAML attributes for the External Identity","fields":[{"name":"attributes","description":"SAML Identity attributes","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ExternalIdentityAttribute","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"emails","description":"The emails associated with the SAML identity","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserEmailMetadata","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"familyName","description":"Family name of the SAML identity","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"givenName","description":"Given name of the SAML identity","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"groups","description":"The groups linked to this identity in IDP","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"nameId","description":"The NameID of the SAML identity","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"username","description":"The userName of the SAML identity","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ExternalIdentityScimAttributes","description":"SCIM attributes for the External Identity","fields":[{"name":"emails","description":"The emails associated with the SCIM identity","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserEmailMetadata","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"familyName","description":"Family name of the SCIM identity","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"givenName","description":"Given name of the SCIM identity","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"groups","description":"The groups linked to this identity in IDP","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"username","description":"The userName of the SCIM identity","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"FileAddition","description":"A command to add a file at the given path with the given contents as part of a commit.  Any existing file at that that path will be replaced.","fields":null,"inputFields":[{"name":"path","description":"The path in the repository where the file will be located","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"contents","description":"The base64 encoded contents of the file","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Base64String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"FileChanges","description":"A description of a set of changes to a file tree to be made as part of\\na git commit, modeled as zero or more file `additions` and zero or more\\nfile `deletions`.\\n\\nBoth fields are optional; omitting both will produce a commit with no\\nfile changes.\\n\\n`deletions` and `additions` describe changes to files identified\\nby their path in the git tree using unix-style path separators, i.e.\\n`/`.  The root of a git tree is an empty string, so paths are not\\nslash-prefixed.\\n\\n`path` values must be unique across all `additions` and `deletions`\\nprovided.  Any duplication will result in a validation error.\\n\\n### Encoding\\n\\nFile contents must be provided in full for each `FileAddition`.\\n\\nThe `contents` of a `FileAddition` must be encoded using RFC 4648\\ncompliant base64, i.e. correct padding is required and no characters\\noutside the standard alphabet may be used.  Invalid base64\\nencoding will be rejected with a validation error.\\n\\nThe encoded contents may be binary.\\n\\nFor text files, no assumptions are made about the character encoding of\\nthe file contents (after base64 decoding).  No charset transcoding or\\nline-ending normalization will be performed; it is the client\'s\\nresponsibility to manage the character encoding of files they provide.\\nHowever, for maximum compatibility we recommend using UTF-8 encoding\\nand ensuring that all files in a repository use a consistent\\nline-ending convention (`\\\\n` or `\\\\r\\\\n`), and that all files end\\nwith a newline.\\n\\n### Modeling file changes\\n\\nEach of the the five types of conceptual changes that can be made in a\\ngit commit can be described using the `FileChanges` type as follows:\\n\\n1. New file addition: create file `hello world\\\\n` at path `docs/README.txt`:\\n\\n       {\\n         \\"additions\\" [\\n           {\\n             \\"path\\": \\"docs/README.txt\\",\\n             \\"contents\\": base64encode(\\"hello world\\\\n\\")\\n           }\\n         ]\\n       }\\n\\n2. Existing file modification: change existing `docs/README.txt` to have new\\n   content `new content here\\\\n`:\\n\\n       {\\n         \\"additions\\" [\\n           {\\n             \\"path\\": \\"docs/README.txt\\",\\n             \\"contents\\": base64encode(\\"new content here\\\\n\\")\\n           }\\n         ]\\n       }\\n\\n3. Existing file deletion: remove existing file `docs/README.txt`.\\n   Note that the path is required to exist -- specifying a\\n   path that does not exist on the given branch will abort the\\n   commit and return an error.\\n\\n       {\\n         \\"deletions\\" [\\n           {\\n             \\"path\\": \\"docs/README.txt\\"\\n           }\\n         ]\\n       }\\n\\n\\n4. File rename with no changes: rename `docs/README.txt` with\\n   previous content `hello world\\\\n` to the same content at\\n   `newdocs/README.txt`:\\n\\n       {\\n         \\"deletions\\" [\\n           {\\n             \\"path\\": \\"docs/README.txt\\",\\n           }\\n         ],\\n         \\"additions\\" [\\n           {\\n             \\"path\\": \\"newdocs/README.txt\\",\\n             \\"contents\\": base64encode(\\"hello world\\\\n\\")\\n           }\\n         ]\\n       }\\n\\n\\n5. File rename with changes: rename `docs/README.txt` with\\n   previous content `hello world\\\\n` to a file at path\\n   `newdocs/README.txt` with content `new contents\\\\n`:\\n\\n       {\\n         \\"deletions\\" [\\n           {\\n             \\"path\\": \\"docs/README.txt\\",\\n           }\\n         ],\\n         \\"additions\\" [\\n           {\\n             \\"path\\": \\"newdocs/README.txt\\",\\n             \\"contents\\": base64encode(\\"new contents\\\\n\\")\\n           }\\n         ]\\n       }\\n","fields":null,"inputFields":[{"name":"deletions","description":"Files to delete.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"FileDeletion","ofType":null}}},"defaultValue":"[]"},{"name":"additions","description":"File to add or change.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"FileAddition","ofType":null}}},"defaultValue":"[]"}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"FileDeletion","description":"A command to delete the file at the given path as part of a commit.","fields":null,"inputFields":[{"name":"path","description":"The path to delete","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"FileViewedState","description":"The possible viewed states of a file .","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DISMISSED","description":"The file has new changes since last viewed.","isDeprecated":false,"deprecationReason":null},{"name":"VIEWED","description":"The file has been marked as viewed.","isDeprecated":false,"deprecationReason":null},{"name":"UNVIEWED","description":"The file has not been marked as viewed.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"Float","description":"Represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"FollowOrganizationInput","description":"Autogenerated input type of FollowOrganization","fields":null,"inputFields":[{"name":"organizationId","description":"ID of the organization to follow.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"FollowOrganizationPayload","description":"Autogenerated return type of FollowOrganization","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization that was followed.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"FollowUserInput","description":"Autogenerated input type of FollowUser","fields":null,"inputFields":[{"name":"userId","description":"ID of the user to follow.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"FollowUserPayload","description":"Autogenerated return type of FollowUser","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user that was followed.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"FollowerConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"UserEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"FollowingConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"UserEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"FundingLink","description":"A funding platform link for a repository.","fields":[{"name":"platform","description":"The funding platform this link is for.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"FundingPlatform","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The configured URL for this funding link.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"FundingPlatform","description":"The possible funding platforms for repository funding links.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"GITHUB","description":"GitHub funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"PATREON","description":"Patreon funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"OPEN_COLLECTIVE","description":"Open Collective funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"KO_FI","description":"Ko-fi funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"TIDELIFT","description":"Tidelift funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"COMMUNITY_BRIDGE","description":"Community Bridge funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"LIBERAPAY","description":"Liberapay funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"ISSUEHUNT","description":"IssueHunt funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"OTECHIE","description":"Otechie funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"LFX_CROWDFUNDING","description":"LFX Crowdfunding funding platform.","isDeprecated":false,"deprecationReason":null},{"name":"CUSTOM","description":"Custom funding platform.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"GenericHovercardContext","description":"A generic hovercard context with a message and icon","fields":[{"name":"message","description":"A string describing this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"octicon","description":"An octicon to accompany this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"HovercardContext","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Gist","description":"A Gist.","fields":[{"name":"comments","description":"A list of comments associated with the gist","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"GistCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The gist description.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"files","description":"The files in this gist.","args":[{"name":"limit","description":"The maximum number of files to return.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"10"},{"name":"oid","description":"The oid of the files to return","type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"defaultValue":null}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"GistFile","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"forks","description":"A list of forks associated with the gist","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for gists returned from the connection","type":{"kind":"INPUT_OBJECT","name":"GistOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"GistConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isFork","description":"Identifies if the gist is a fork.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPublic","description":"Whether the gist is public or not.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The gist name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The gist owner.","args":[],"type":{"kind":"INTERFACE","name":"RepositoryOwner","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pushedAt","description":"Identifies when the gist was last pushed to.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTML path to this resource.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazerCount","description":"Returns a count of how many stargazers there are on this object\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazers","description":"A list of users who have starred this starrable.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"StarOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StargazerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this Gist.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasStarred","description":"Returns a boolean indicating whether the viewing user has starred this starrable.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Starrable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GistComment","description":"Represents a comment on an Gist.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the gist.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"Identifies the comment body.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"gist","description":"The associated gist.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Gist","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isMinimized","description":"Returns whether or not a comment has been minimized.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimizedReason","description":"Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMinimize","description":"Check if the current viewer can minimize this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Minimizable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GistCommentConnection","description":"The connection type for GistComment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"GistCommentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"GistComment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GistCommentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"GistComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GistConnection","description":"The connection type for Gist.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"GistEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Gist","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GistEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Gist","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GistFile","description":"A file in a gist.","fields":[{"name":"encodedName","description":"The file name encoded to remove characters that are invalid in URL paths.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"encoding","description":"The gist file encoding.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"extension","description":"The file extension from the file name.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isImage","description":"Indicates if this file is an image.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isTruncated","description":"Whether the file\'s contents were truncated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"language","description":"The programming language this file is written in.","args":[],"type":{"kind":"OBJECT","name":"Language","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The gist file name.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"size","description":"The gist file size in bytes.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"text","description":"UTF8 text data or null if the file is binary","args":[{"name":"truncate","description":"Optionally truncate the returned file to this length.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"GistOrder","description":"Ordering options for gist connections","fields":null,"inputFields":[{"name":"field","description":"The field to order repositories by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"GistOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"GistOrderField","description":"Properties by which gist connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order gists by creation time","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order gists by update time","isDeprecated":false,"deprecationReason":null},{"name":"PUSHED_AT","description":"Order gists by push time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"GistPrivacy","description":"The privacy of a Gist","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PUBLIC","description":"Public","isDeprecated":false,"deprecationReason":null},{"name":"SECRET","description":"Secret","isDeprecated":false,"deprecationReason":null},{"name":"ALL","description":"Gists that are public and secret","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"GitActor","description":"Represents an actor in a Git commit (ie. an author or committer).","fields":[{"name":"avatarUrl","description":"A URL pointing to the author\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"date","description":"The timestamp of the Git action (authoring or committing).","args":[],"type":{"kind":"SCALAR","name":"GitTimestamp","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The email in the Git commit.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name in the Git commit.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The GitHub user corresponding to the email field. Null if no such user exists.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GitActorConnection","description":"The connection type for GitActor.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"GitActorEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"GitActor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GitActorEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"GitActor","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GitHubMetadata","description":"Represents information about the GitHub instance.","fields":[{"name":"gitHubServicesSha","description":"Returns a String that\'s a SHA of `github-services`","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"gitIpAddresses","description":"IP addresses that users connect to for git operations","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"hookIpAddresses","description":"IP addresses that service hooks are sent from","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"importerIpAddresses","description":"IP addresses that the importer connects from","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"isPasswordAuthenticationVerifiable","description":"Whether or not users are verified","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pagesIpAddresses","description":"IP addresses for GitHub Pages\' A records","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"GitObject","description":"Represents a Git object.","fields":[{"name":"abbreviatedOid","description":"An abbreviated version of the Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitResourcePath","description":"The HTTP path for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitUrl","description":"The HTTP URL for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oid","description":"The Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The Repository the Git object belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Blob","ofType":null},{"kind":"OBJECT","name":"Commit","ofType":null},{"kind":"OBJECT","name":"Tag","ofType":null},{"kind":"OBJECT","name":"Tree","ofType":null}]},{"kind":"SCALAR","name":"GitObjectID","description":"A Git object ID.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"GitSSHRemote","description":"Git SSH string","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"GitSignature","description":"Information about a signature (GPG or S/MIME) on a Commit or Tag.","fields":[{"name":"email","description":"Email used to sign this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isValid","description":"True if the signature is valid and verified by GitHub.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"payload","description":"Payload for GPG signing object. Raw ODB object without the signature header.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signature","description":"ASCII-armored signature header from object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signer","description":"GitHub user corresponding to the email signing this commit.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"GitSignatureState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"wasSignedByGitHub","description":"True if the signature was made with GitHub\'s signing key.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"GpgSignature","ofType":null},{"kind":"OBJECT","name":"SmimeSignature","ofType":null},{"kind":"OBJECT","name":"SshSignature","ofType":null},{"kind":"OBJECT","name":"UnknownSignature","ofType":null}]},{"kind":"ENUM","name":"GitSignatureState","description":"The state of a Git signature.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"VALID","description":"Valid signature and verified by GitHub","isDeprecated":false,"deprecationReason":null},{"name":"INVALID","description":"Invalid signature","isDeprecated":false,"deprecationReason":null},{"name":"MALFORMED_SIG","description":"Malformed signature","isDeprecated":false,"deprecationReason":null},{"name":"UNKNOWN_KEY","description":"Key used for signing not known to GitHub","isDeprecated":false,"deprecationReason":null},{"name":"BAD_EMAIL","description":"Invalid email used for signing","isDeprecated":false,"deprecationReason":null},{"name":"UNVERIFIED_EMAIL","description":"Email used for signing unverified on GitHub","isDeprecated":false,"deprecationReason":null},{"name":"NO_USER","description":"Email used for signing not known to GitHub","isDeprecated":false,"deprecationReason":null},{"name":"UNKNOWN_SIG_TYPE","description":"Unknown signature type","isDeprecated":false,"deprecationReason":null},{"name":"UNSIGNED","description":"Unsigned","isDeprecated":false,"deprecationReason":null},{"name":"GPGVERIFY_UNAVAILABLE","description":"Internal error - the GPG verification service is unavailable at the moment","isDeprecated":false,"deprecationReason":null},{"name":"GPGVERIFY_ERROR","description":"Internal error - the GPG verification service misbehaved","isDeprecated":false,"deprecationReason":null},{"name":"NOT_SIGNING_KEY","description":"The usage flags for the key that signed this don\'t allow signing","isDeprecated":false,"deprecationReason":null},{"name":"EXPIRED_KEY","description":"Signing key expired","isDeprecated":false,"deprecationReason":null},{"name":"OCSP_PENDING","description":"Valid signature, pending certificate revocation checking","isDeprecated":false,"deprecationReason":null},{"name":"OCSP_ERROR","description":"Valid signature, though certificate revocation check failed","isDeprecated":false,"deprecationReason":null},{"name":"BAD_CERT","description":"The signing certificate or its chain could not be verified","isDeprecated":false,"deprecationReason":null},{"name":"OCSP_REVOKED","description":"One or more certificates in chain has been revoked","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"GitTimestamp","description":"An ISO-8601 encoded date string. Unlike the DateTime type, GitTimestamp is not converted in UTC.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GpgSignature","description":"Represents a GPG signature on a Commit or Tag.","fields":[{"name":"email","description":"Email used to sign this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isValid","description":"True if the signature is valid and verified by GitHub.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"keyId","description":"Hex-encoded ID of the key that signed this object.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"payload","description":"Payload for GPG signing object. Raw ODB object without the signature header.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signature","description":"ASCII-armored signature header from object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signer","description":"GitHub user corresponding to the email signing this commit.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"GitSignatureState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"wasSignedByGitHub","description":"True if the signature was made with GitHub\'s signing key.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"GitSignature","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"GrantEnterpriseOrganizationsMigratorRoleInput","description":"Autogenerated input type of GrantEnterpriseOrganizationsMigratorRole","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise to which all organizations managed by it will be granted the migrator role.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"login","description":"The login of the user to grant the migrator role","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GrantEnterpriseOrganizationsMigratorRolePayload","description":"Autogenerated return type of GrantEnterpriseOrganizationsMigratorRole","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizations","description":"The organizations that had the migrator role applied to for the given user.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"GrantMigratorRoleInput","description":"Autogenerated input type of GrantMigratorRole","fields":null,"inputFields":[{"name":"organizationId","description":"The ID of the organization that the user/team belongs to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"actor","description":"The user login or Team slug to grant the migrator role.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"actorType","description":"Specifies the type of the actor, can be either USER or TEAM.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ActorType","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"GrantMigratorRolePayload","description":"Autogenerated return type of GrantMigratorRole","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"success","description":"Did the operation succeed?","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"HTML","description":"A string containing HTML code.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"HeadRefDeletedEvent","description":"Represents a \'head_ref_deleted\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"headRef","description":"Identifies the Ref associated with the `head_ref_deleted` event.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"headRefName","description":"Identifies the name of the Ref associated with the `head_ref_deleted` event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"HeadRefForcePushedEvent","description":"Represents a \'head_ref_force_pushed\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"afterCommit","description":"Identifies the after commit SHA for the \'head_ref_force_pushed\' event.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"beforeCommit","description":"Identifies the before commit SHA for the \'head_ref_force_pushed\' event.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"Identifies the fully qualified ref name for the \'head_ref_force_pushed\' event.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"HeadRefRestoredEvent","description":"Represents a \'head_ref_restored\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Hovercard","description":"Detail needed to display a hovercard for a user","fields":[{"name":"contexts","description":"Each of the contexts for this hovercard","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"HovercardContext","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"HovercardContext","description":"An individual line of a hovercard","fields":[{"name":"message","description":"A string describing this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"octicon","description":"An octicon to accompany this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"GenericHovercardContext","ofType":null},{"kind":"OBJECT","name":"OrganizationTeamsHovercardContext","ofType":null},{"kind":"OBJECT","name":"OrganizationsHovercardContext","ofType":null},{"kind":"OBJECT","name":"ReviewStatusHovercardContext","ofType":null},{"kind":"OBJECT","name":"ViewerHovercardContext","ofType":null}]},{"kind":"SCALAR","name":"ID","description":"Represents a unique identifier that is Base64 obfuscated. It is often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\\"VXNlci0xMA==\\"`) or integer (such as `4`) input value will be accepted as an ID.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"IdentityProviderConfigurationState","description":"The possible states in which authentication can be configured with an identity provider.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENFORCED","description":"Authentication with an identity provider is configured and enforced.","isDeprecated":false,"deprecationReason":null},{"name":"CONFIGURED","description":"Authentication with an identity provider is configured but not enforced.","isDeprecated":false,"deprecationReason":null},{"name":"UNCONFIGURED","description":"Authentication with an identity provider is not configured.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"Int","description":"Represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"InviteEnterpriseAdminInput","description":"Autogenerated input type of InviteEnterpriseAdmin","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise to which you want to invite an administrator.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"invitee","description":"The login of a user to invite as an administrator.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"email","description":"The email of the person to invite as an administrator.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"role","description":"The role of the administrator.","type":{"kind":"ENUM","name":"EnterpriseAdministratorRole","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"InviteEnterpriseAdminPayload","description":"Autogenerated return type of InviteEnterpriseAdmin","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"invitation","description":"The created enterprise administrator invitation.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"IpAllowListEnabledSettingValue","description":"The possible values for the IP allow list enabled setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENABLED","description":"The setting is enabled for the owner.","isDeprecated":false,"deprecationReason":null},{"name":"DISABLED","description":"The setting is disabled for the owner.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"IpAllowListEntry","description":"An IP address or range of addresses that is allowed to access an owner\'s resources.","fields":[{"name":"allowListValue","description":"A single IP address or range of IP addresses in CIDR notation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isActive","description":"Whether the entry is currently active.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the IP allow list entry.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The owner of the IP allow list entry.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"IpAllowListOwner","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IpAllowListEntryConnection","description":"The connection type for IpAllowListEntry.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"IpAllowListEntryEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"IpAllowListEntry","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IpAllowListEntryEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"IpAllowListEntry","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"IpAllowListEntryOrder","description":"Ordering options for IP allow list entry connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order IP allow list entries by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IpAllowListEntryOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"IpAllowListEntryOrderField","description":"Properties by which IP allow list entry connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order IP allow list entries by creation time.","isDeprecated":false,"deprecationReason":null},{"name":"ALLOW_LIST_VALUE","description":"Order IP allow list entries by the allow list value.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"IpAllowListForInstalledAppsEnabledSettingValue","description":"The possible values for the IP allow list configuration for installed GitHub Apps setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENABLED","description":"The setting is enabled for the owner.","isDeprecated":false,"deprecationReason":null},{"name":"DISABLED","description":"The setting is disabled for the owner.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"IpAllowListOwner","description":"Types that can own an IP allow list.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"App","ofType":null},{"kind":"OBJECT","name":"Enterprise","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null}]},{"kind":"OBJECT","name":"Issue","description":"An Issue is a place to discuss ideas, enhancements, tasks, and bugs for a project.","fields":[{"name":"activeLockReason","description":"Reason that the conversation was locked.","args":[],"type":{"kind":"ENUM","name":"LockReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"assignees","description":"A list of Users assigned to this object.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"Identifies the body of the issue.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyResourcePath","description":"The http path for this issue body","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"Identifies the body of the issue rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyUrl","description":"The http URL for this issue body","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closed","description":"Indicates if the object is closed (definition of closed may depend on type)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closedAt","description":"Identifies the date and time when the object was closed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comments","description":"A list of comments associated with the Issue.","args":[{"name":"orderBy","description":"Ordering options for issue comments returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueCommentOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"hovercard","description":"The hovercard information for this issue","args":[{"name":"includeNotificationContexts","description":"Whether or not to include notification contexts","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Hovercard","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPinned","description":"Indicates whether or not this issue is currently pinned to the repository issues list","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isReadByViewer","description":"Is this issue read by the viewer","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"labels","description":"A list of labels associated with the object.","args":[{"name":"orderBy","description":"Ordering options for labels returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"LabelOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LabelConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"linkedBranches","description":"Branches linked to this issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"LinkedBranchConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"locked","description":"`true` if the object is locked","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"milestone","description":"Identifies the milestone associated with the issue.","args":[],"type":{"kind":"OBJECT","name":"Milestone","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"Identifies the issue number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"participants","description":"A list of Users that are participating in the Issue conversation.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectCards","description":"List of project cards associated with this issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"archivedStates","description":"A list of archived states to filter the cards by","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"ProjectCardArchivedState","ofType":null}},"defaultValue":"[ARCHIVED, NOT_ARCHIVED]"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectCardConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectItems","description":"List of project items associated with this issue.","args":[{"name":"includeArchived","description":"Include archived items.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"Find a project by number.","args":[{"name":"number","description":"The project number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"A list of projects under the owner.","args":[{"name":"query","description":"A project to search for under the the owner.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the returned projects.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Order","ofType":null},"defaultValue":"{field: NUMBER, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this issue","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Identifies the state of the issue.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stateReason","description":"Identifies the reason for the issue state.","args":[],"type":{"kind":"ENUM","name":"IssueStateReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"timeline","description":"A list of events, comments, commits, etc. associated with the issue.","args":[{"name":"since","description":"Allows filtering timeline events by a `since` timestamp.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueTimelineConnection","ofType":null}},"isDeprecated":true,"deprecationReason":"`timeline` will be removed Use Issue.timelineItems instead. Removal on 2020-10-01 UTC."},{"name":"timelineItems","description":"A list of events, comments, commits, etc. associated with the issue.","args":[{"name":"since","description":"Filter timeline items by a `since` timestamp.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"skip","description":"Skips the first _n_ elements in the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"itemTypes","description":"Filter timeline items by type.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueTimelineItemsItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueTimelineItemsConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"Identifies the issue title.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"titleHTML","description":"Identifies the issue title rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"trackedInIssues","description":"A list of issues that track this issue","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"trackedIssues","description":"A list of issues tracked inside the current issue","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"trackedIssuesCount","description":"The number of tracked issues for this issue","args":[{"name":"states","description":"Limit the count to tracked issues with the specified states.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"TrackedIssueStates","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this issue","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Assignable","ofType":null},{"kind":"INTERFACE","name":"Closable","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null},{"kind":"INTERFACE","name":"Labelable","ofType":null},{"kind":"INTERFACE","name":"Lockable","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null},{"kind":"INTERFACE","name":"Subscribable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"ProjectV2Owner","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"IssueClosedStateReason","description":"The possible state reasons of a closed issue.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"COMPLETED","description":"An issue that has been closed as completed","isDeprecated":false,"deprecationReason":null},{"name":"NOT_PLANNED","description":"An issue that has been closed as not planned","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"IssueComment","description":"Represents a comment on an Issue.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The body as Markdown.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isMinimized","description":"Returns whether or not a comment has been minimized.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"Identifies the issue associated with the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Issue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimizedReason","description":"Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"Returns the pull request associated with the comment, if this comment was made on a\\npull request.\\n","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this issue comment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this issue comment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMinimize","description":"Check if the current viewer can minimize this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Minimizable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IssueCommentConnection","description":"The connection type for IssueComment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"IssueCommentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"IssueComment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IssueCommentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"IssueComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"IssueCommentOrder","description":"Ways in which lists of issue comments can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order issue comments by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueCommentOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order issue comments by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"IssueCommentOrderField","description":"Properties by which issue comment connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"UPDATED_AT","description":"Order issue comments by update time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"IssueConnection","description":"The connection type for Issue.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"IssueEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Issue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IssueContributionsByRepository","description":"This aggregates issues opened by a user within one repository.","fields":[{"name":"contributions","description":"The issue contributions.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ContributionOrder","ofType":null},"defaultValue":"{direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedIssueContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository in which the issues were opened.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IssueEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"IssueFilters","description":"Ways in which to filter lists of issues.","fields":null,"inputFields":[{"name":"assignee","description":"List issues assigned to given name. Pass in `null` for issues with no assigned user, and `*` for issues assigned to any user.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"createdBy","description":"List issues created by given name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"labels","description":"List issues where the list of label names exist on the issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"mentioned","description":"List issues where the given name is mentioned in the issue.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"milestone","description":"List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its database ID. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"milestoneNumber","description":"List issues by given milestone argument. If an string representation of an integer is passed, it should refer to a milestone by its number field. Pass in `null` for issues with no milestone, and `*` for issues that are assigned to any milestone.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"since","description":"List issues that have been updated at or after the given date.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"states","description":"List issues filtered by the list of states given.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueState","ofType":null}}},"defaultValue":null},{"name":"viewerSubscribed","description":"List issues subscribed to by viewer.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"IssueOrPullRequest","description":"Used for return value of Repository.issueOrPullRequest.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"INPUT_OBJECT","name":"IssueOrder","description":"Ways in which lists of issues can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order issues by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order issues by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"IssueOrderField","description":"Properties by which issue connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order issues by creation time","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order issues by update time","isDeprecated":false,"deprecationReason":null},{"name":"COMMENTS","description":"Order issues by comment count","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"IssueState","description":"The possible states of an issue.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"An issue that is still open","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED","description":"An issue that has been closed","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"IssueStateReason","description":"The possible state reasons of an issue.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"REOPENED","description":"An issue that has been reopened","isDeprecated":false,"deprecationReason":null},{"name":"NOT_PLANNED","description":"An issue that has been closed as not planned","isDeprecated":false,"deprecationReason":null},{"name":"COMPLETED","description":"An issue that has been closed as completed","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"IssueTemplate","description":"A repository issue template.","fields":[{"name":"about","description":"The template purpose.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The suggested issue body.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"filename","description":"The template filename.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The template name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The suggested issue title.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IssueTimelineConnection","description":"The connection type for IssueTimelineItem.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"IssueTimelineItemEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"IssueTimelineItem","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"IssueTimelineItem","description":"An item in an issue timeline","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"AssignedEvent","ofType":null},{"kind":"OBJECT","name":"ClosedEvent","ofType":null},{"kind":"OBJECT","name":"Commit","ofType":null},{"kind":"OBJECT","name":"CrossReferencedEvent","ofType":null},{"kind":"OBJECT","name":"DemilestonedEvent","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"LabeledEvent","ofType":null},{"kind":"OBJECT","name":"LockedEvent","ofType":null},{"kind":"OBJECT","name":"MilestonedEvent","ofType":null},{"kind":"OBJECT","name":"ReferencedEvent","ofType":null},{"kind":"OBJECT","name":"RenamedTitleEvent","ofType":null},{"kind":"OBJECT","name":"ReopenedEvent","ofType":null},{"kind":"OBJECT","name":"SubscribedEvent","ofType":null},{"kind":"OBJECT","name":"TransferredEvent","ofType":null},{"kind":"OBJECT","name":"UnassignedEvent","ofType":null},{"kind":"OBJECT","name":"UnlabeledEvent","ofType":null},{"kind":"OBJECT","name":"UnlockedEvent","ofType":null},{"kind":"OBJECT","name":"UnsubscribedEvent","ofType":null},{"kind":"OBJECT","name":"UserBlockedEvent","ofType":null}]},{"kind":"OBJECT","name":"IssueTimelineItemEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"IssueTimelineItem","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"IssueTimelineItems","description":"An item in an issue timeline","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"AddedToProjectEvent","ofType":null},{"kind":"OBJECT","name":"AssignedEvent","ofType":null},{"kind":"OBJECT","name":"ClosedEvent","ofType":null},{"kind":"OBJECT","name":"CommentDeletedEvent","ofType":null},{"kind":"OBJECT","name":"ConnectedEvent","ofType":null},{"kind":"OBJECT","name":"ConvertedNoteToIssueEvent","ofType":null},{"kind":"OBJECT","name":"ConvertedToDiscussionEvent","ofType":null},{"kind":"OBJECT","name":"CrossReferencedEvent","ofType":null},{"kind":"OBJECT","name":"DemilestonedEvent","ofType":null},{"kind":"OBJECT","name":"DisconnectedEvent","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"LabeledEvent","ofType":null},{"kind":"OBJECT","name":"LockedEvent","ofType":null},{"kind":"OBJECT","name":"MarkedAsDuplicateEvent","ofType":null},{"kind":"OBJECT","name":"MentionedEvent","ofType":null},{"kind":"OBJECT","name":"MilestonedEvent","ofType":null},{"kind":"OBJECT","name":"MovedColumnsInProjectEvent","ofType":null},{"kind":"OBJECT","name":"PinnedEvent","ofType":null},{"kind":"OBJECT","name":"ReferencedEvent","ofType":null},{"kind":"OBJECT","name":"RemovedFromProjectEvent","ofType":null},{"kind":"OBJECT","name":"RenamedTitleEvent","ofType":null},{"kind":"OBJECT","name":"ReopenedEvent","ofType":null},{"kind":"OBJECT","name":"SubscribedEvent","ofType":null},{"kind":"OBJECT","name":"TransferredEvent","ofType":null},{"kind":"OBJECT","name":"UnassignedEvent","ofType":null},{"kind":"OBJECT","name":"UnlabeledEvent","ofType":null},{"kind":"OBJECT","name":"UnlockedEvent","ofType":null},{"kind":"OBJECT","name":"UnmarkedAsDuplicateEvent","ofType":null},{"kind":"OBJECT","name":"UnpinnedEvent","ofType":null},{"kind":"OBJECT","name":"UnsubscribedEvent","ofType":null},{"kind":"OBJECT","name":"UserBlockedEvent","ofType":null}]},{"kind":"OBJECT","name":"IssueTimelineItemsConnection","description":"The connection type for IssueTimelineItems.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"IssueTimelineItemsEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"filteredCount","description":"Identifies the count of items after applying `before` and `after` filters.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"IssueTimelineItems","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageCount","description":"Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the timeline was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"IssueTimelineItemsEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"IssueTimelineItems","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"IssueTimelineItemsItemType","description":"The possible item types found in a timeline.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ISSUE_COMMENT","description":"Represents a comment on an Issue.","isDeprecated":false,"deprecationReason":null},{"name":"CROSS_REFERENCED_EVENT","description":"Represents a mention made by one issue or pull request to another.","isDeprecated":false,"deprecationReason":null},{"name":"ADDED_TO_PROJECT_EVENT","description":"Represents a \'added_to_project\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"ASSIGNED_EVENT","description":"Represents an \'assigned\' event on any assignable object.","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED_EVENT","description":"Represents a \'closed\' event on any `Closable`.","isDeprecated":false,"deprecationReason":null},{"name":"COMMENT_DELETED_EVENT","description":"Represents a \'comment_deleted\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"CONNECTED_EVENT","description":"Represents a \'connected\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"CONVERTED_NOTE_TO_ISSUE_EVENT","description":"Represents a \'converted_note_to_issue\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"CONVERTED_TO_DISCUSSION_EVENT","description":"Represents a \'converted_to_discussion\' event on a given issue.","isDeprecated":false,"deprecationReason":null},{"name":"DEMILESTONED_EVENT","description":"Represents a \'demilestoned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"DISCONNECTED_EVENT","description":"Represents a \'disconnected\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"LABELED_EVENT","description":"Represents a \'labeled\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"LOCKED_EVENT","description":"Represents a \'locked\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MARKED_AS_DUPLICATE_EVENT","description":"Represents a \'marked_as_duplicate\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MENTIONED_EVENT","description":"Represents a \'mentioned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MILESTONED_EVENT","description":"Represents a \'milestoned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MOVED_COLUMNS_IN_PROJECT_EVENT","description":"Represents a \'moved_columns_in_project\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"PINNED_EVENT","description":"Represents a \'pinned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"REFERENCED_EVENT","description":"Represents a \'referenced\' event on a given `ReferencedSubject`.","isDeprecated":false,"deprecationReason":null},{"name":"REMOVED_FROM_PROJECT_EVENT","description":"Represents a \'removed_from_project\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"RENAMED_TITLE_EVENT","description":"Represents a \'renamed\' event on a given issue or pull request","isDeprecated":false,"deprecationReason":null},{"name":"REOPENED_EVENT","description":"Represents a \'reopened\' event on any `Closable`.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIBED_EVENT","description":"Represents a \'subscribed\' event on a given `Subscribable`.","isDeprecated":false,"deprecationReason":null},{"name":"TRANSFERRED_EVENT","description":"Represents a \'transferred\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNASSIGNED_EVENT","description":"Represents an \'unassigned\' event on any assignable object.","isDeprecated":false,"deprecationReason":null},{"name":"UNLABELED_EVENT","description":"Represents an \'unlabeled\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNLOCKED_EVENT","description":"Represents an \'unlocked\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"USER_BLOCKED_EVENT","description":"Represents a \'user_blocked\' event on a given user.","isDeprecated":false,"deprecationReason":null},{"name":"UNMARKED_AS_DUPLICATE_EVENT","description":"Represents an \'unmarked_as_duplicate\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNPINNED_EVENT","description":"Represents an \'unpinned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNSUBSCRIBED_EVENT","description":"Represents an \'unsubscribed\' event on a given `Subscribable`.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"JoinedGitHubContribution","description":"Represents a user signing up for a GitHub account.","fields":[{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Contribution","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Label","description":"A label for categorizing Issues, Pull Requests, Milestones, or Discussions with a given Repository.","fields":[{"name":"color","description":"Identifies the label color.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the label was created.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"A brief description of this label.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDefault","description":"Indicates whether or not this is a default label.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issues","description":"A list of issues associated with this label.","args":[{"name":"orderBy","description":"Ordering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"states","description":"A list of states to filter the issues by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueState","ofType":null}}},"defaultValue":null},{"name":"filterBy","description":"Filtering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueFilters","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Identifies the label name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequests","description":"A list of pull requests associated with this label.","args":[{"name":"states","description":"A list of states to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestState","ofType":null}}},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"headRefName","description":"The head ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"baseRefName","description":"The base ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this label.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this label.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the label was last updated.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this label.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LabelConnection","description":"The connection type for Label.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LabelEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Label","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LabelEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Label","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"LabelOrder","description":"Ways in which lists of labels can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order labels by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"LabelOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order labels by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"LabelOrderField","description":"Properties by which label connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NAME","description":"Order labels by name ","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order labels by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"Labelable","description":"An object that can have labels assigned to it.","fields":[{"name":"labels","description":"A list of labels associated with the object.","args":[{"name":"orderBy","description":"Ordering options for labels returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"LabelOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LabelConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"OBJECT","name":"LabeledEvent","description":"Represents a \'labeled\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"label","description":"Identifies the label associated with the \'labeled\' event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Label","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"labelable","description":"Identifies the `Labelable` associated with the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Labelable","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Language","description":"Represents a given language found in repositories.","fields":[{"name":"color","description":"The color defined for the current language.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the current language.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LanguageConnection","description":"A list of languages associated with the parent.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LanguageEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Language","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalSize","description":"The total size in bytes of files written in that language.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LanguageEdge","description":"Represents the language of a repository.","fields":[{"name":"cursor","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Language","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"size","description":"The number of bytes of code written in the language.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"LanguageOrder","description":"Ordering options for language connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order languages by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"LanguageOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"LanguageOrderField","description":"Properties by which language connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SIZE","description":"Order languages by the size of all files containing the language","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"License","description":"A repository\'s open source license","fields":[{"name":"body","description":"The full text of the license","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"conditions","description":"The conditions set by the license","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LicenseRule","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"A human-readable description of the license","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"featured","description":"Whether the license should be featured","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hidden","description":"Whether the license should be displayed in license pickers","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"implementation","description":"Instructions on how to implement the license","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"key","description":"The lowercased SPDX ID of the license","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"limitations","description":"The limitations set by the license","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LicenseRule","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The license full name specified by <https://spdx.org/licenses>","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nickname","description":"Customary short name if applicable (e.g, GPLv3)","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permissions","description":"The permissions set by the license","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LicenseRule","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"pseudoLicense","description":"Whether the license is a pseudo-license placeholder (e.g., other, no-license)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"spdxId","description":"Short identifier specified by <https://spdx.org/licenses>","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"URL to the license on <https://choosealicense.com>","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LicenseRule","description":"Describes a License\'s conditions, permissions, and limitations","fields":[{"name":"description","description":"A description of the rule","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"key","description":"The machine-readable rule key","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"label","description":"The human-readable rule label","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"LinkProjectV2ToRepositoryInput","description":"Autogenerated input type of LinkProjectV2ToRepository","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the project to link to the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"The ID of the repository to link to the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LinkProjectV2ToRepositoryPayload","description":"Autogenerated return type of LinkProjectV2ToRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository the project is linked to.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"LinkProjectV2ToTeamInput","description":"Autogenerated input type of LinkProjectV2ToTeam","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the project to link to the team.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"teamId","description":"The ID of the team to link to the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LinkProjectV2ToTeamPayload","description":"Autogenerated return type of LinkProjectV2ToTeam","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team the project is linked to","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"LinkRepositoryToProjectInput","description":"Autogenerated input type of LinkRepositoryToProject","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to link to a Repository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"The ID of the Repository to link to a Project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LinkRepositoryToProjectPayload","description":"Autogenerated return type of LinkRepositoryToProject","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The linked Project.","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The linked Repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LinkedBranch","description":"A branch linked to an issue.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"The branch\'s ref.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LinkedBranchConnection","description":"The connection type for LinkedBranch.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LinkedBranchEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"LinkedBranch","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LinkedBranchEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"LinkedBranch","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"LockLockableInput","description":"Autogenerated input type of LockLockable","fields":null,"inputFields":[{"name":"lockableId","description":"ID of the item to be locked.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"lockReason","description":"A reason for why the item will be locked.","type":{"kind":"ENUM","name":"LockReason","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"LockLockablePayload","description":"Autogenerated return type of LockLockable","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lockedRecord","description":"The item that was locked.","args":[],"type":{"kind":"INTERFACE","name":"Lockable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"LockReason","description":"The possible reasons that an issue or pull request was locked.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OFF_TOPIC","description":"The issue or pull request was locked because the conversation was off-topic.","isDeprecated":false,"deprecationReason":null},{"name":"TOO_HEATED","description":"The issue or pull request was locked because the conversation was too heated.","isDeprecated":false,"deprecationReason":null},{"name":"RESOLVED","description":"The issue or pull request was locked because the conversation was resolved.","isDeprecated":false,"deprecationReason":null},{"name":"SPAM","description":"The issue or pull request was locked because the conversation was spam.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"Lockable","description":"An object that can be locked.","fields":[{"name":"activeLockReason","description":"Reason that the conversation was locked.","args":[],"type":{"kind":"ENUM","name":"LockReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"locked","description":"`true` if the object is locked","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"OBJECT","name":"LockedEvent","description":"Represents a \'locked\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lockReason","description":"Reason that the conversation was locked (optional).","args":[],"type":{"kind":"ENUM","name":"LockReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lockable","description":"Object that was locked.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Lockable","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Mannequin","description":"A placeholder user for attribution of imported data on GitHub.","fields":[{"name":"avatarUrl","description":"A URL pointing to the GitHub App\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"claimant","description":"The user that has claimed the data attributed to this mannequin.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The mannequin\'s email on the source instance.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The username of the actor.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTML path to this resource.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The URL to this resource.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Actor","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MannequinConnection","description":"The connection type for Mannequin.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"MannequinEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Mannequin","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MannequinEdge","description":"Represents a mannequin.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Mannequin","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MannequinOrder","description":"Ordering options for mannequins.","fields":null,"inputFields":[{"name":"field","description":"The field to order mannequins by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MannequinOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"MannequinOrderField","description":"Properties by which mannequins can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOGIN","description":"Order mannequins alphabetically by their source login.","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order mannequins why when they were created.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MarkDiscussionCommentAsAnswerInput","description":"Autogenerated input type of MarkDiscussionCommentAsAnswer","fields":null,"inputFields":[{"name":"id","description":"The Node ID of the discussion comment to mark as an answer.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarkDiscussionCommentAsAnswerPayload","description":"Autogenerated return type of MarkDiscussionCommentAsAnswer","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion that includes the chosen comment.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MarkFileAsViewedInput","description":"Autogenerated input type of MarkFileAsViewed","fields":null,"inputFields":[{"name":"pullRequestId","description":"The Node ID of the pull request.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"path","description":"The path of the file to mark as viewed","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarkFileAsViewedPayload","description":"Autogenerated return type of MarkFileAsViewed","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The updated pull request.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MarkPullRequestReadyForReviewInput","description":"Autogenerated input type of MarkPullRequestReadyForReview","fields":null,"inputFields":[{"name":"pullRequestId","description":"ID of the pull request to be marked as ready for review.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarkPullRequestReadyForReviewPayload","description":"Autogenerated return type of MarkPullRequestReadyForReview","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that is ready for review.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarkedAsDuplicateEvent","description":"Represents a \'marked_as_duplicate\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"canonical","description":"The authoritative issue or pull request which has been duplicated by another.","args":[],"type":{"kind":"UNION","name":"IssueOrPullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"duplicate","description":"The issue or pull request which has been marked as a duplicate of another.","args":[],"type":{"kind":"UNION","name":"IssueOrPullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCrossRepository","description":"Canonical and duplicate belong to different repositories.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarketplaceCategory","description":"A public description of a Marketplace category.","fields":[{"name":"description","description":"The category\'s description.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"howItWorks","description":"The technical description of how apps listed in this category work with GitHub.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The category\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"primaryListingCount","description":"How many Marketplace listings have this as their primary category.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this Marketplace category.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"secondaryListingCount","description":"How many Marketplace listings have this as their secondary category.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"slug","description":"The short name of the category used in its URL.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this Marketplace category.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarketplaceListing","description":"A listing in the GitHub integration marketplace.","fields":[{"name":"app","description":"The GitHub App this listing represents.","args":[],"type":{"kind":"OBJECT","name":"App","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"companyUrl","description":"URL to the listing owner\'s company site.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"configurationResourcePath","description":"The HTTP path for configuring access to the listing\'s integration or OAuth app","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"configurationUrl","description":"The HTTP URL for configuring access to the listing\'s integration or OAuth app","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"documentationUrl","description":"URL to the listing\'s documentation.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"extendedDescription","description":"The listing\'s detailed description.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"extendedDescriptionHTML","description":"The listing\'s detailed description rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"fullDescription","description":"The listing\'s introductory description.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"fullDescriptionHTML","description":"The listing\'s introductory description rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasPublishedFreeTrialPlans","description":"Does this listing have any plans with a free trial?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasTermsOfService","description":"Does this listing have a terms of service link?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasVerifiedOwner","description":"Whether the creator of the app is a verified org","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"howItWorks","description":"A technical description of how this app works with GitHub.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"howItWorksHTML","description":"The listing\'s technical description rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"installationUrl","description":"URL to install the product to the viewer\'s account or organization.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"installedForViewer","description":"Whether this listing\'s app has been installed for the current viewer","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isArchived","description":"Whether this listing has been removed from the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDraft","description":"Whether this listing is still an editable draft that has not been submitted for review and is not publicly visible in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPaid","description":"Whether the product this listing represents is available as part of a paid plan.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPublic","description":"Whether this listing has been approved for display in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isRejected","description":"Whether this listing has been rejected by GitHub for display in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isUnverified","description":"Whether this listing has been approved for unverified display in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isUnverifiedPending","description":"Whether this draft listing has been submitted for review for approval to be unverified in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isVerificationPendingFromDraft","description":"Whether this draft listing has been submitted for review from GitHub for approval to be verified in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isVerificationPendingFromUnverified","description":"Whether this unverified listing has been submitted for review from GitHub for approval to be verified in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isVerified","description":"Whether this listing has been approved for verified display in the Marketplace.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"logoBackgroundColor","description":"The hex color code, without the leading \'#\', for the logo background.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"logoUrl","description":"URL for the listing\'s logo image.","args":[{"name":"size","description":"The size in pixels of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"400"}],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The listing\'s full name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"normalizedShortDescription","description":"The listing\'s very short description without a trailing period or ampersands.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pricingUrl","description":"URL to the listing\'s detailed pricing.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"primaryCategory","description":"The category that best describes the listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"MarketplaceCategory","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"privacyPolicyUrl","description":"URL to the listing\'s privacy policy, may return an empty string for listings that do not require a privacy policy URL.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for the Marketplace listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"screenshotUrls","description":"The URLs for the listing\'s screenshots.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"secondaryCategory","description":"An alternate category that describes the listing.","args":[],"type":{"kind":"OBJECT","name":"MarketplaceCategory","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"shortDescription","description":"The listing\'s very short description.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"slug","description":"The short name of the listing used in its URL.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"statusUrl","description":"URL to the listing\'s status page.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"supportEmail","description":"An email address for support for this listing\'s app.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"supportUrl","description":"Either a URL or an email address for support for this listing\'s app, may return an empty string for listings that do not require a support URL.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"termsOfServiceUrl","description":"URL to the listing\'s terms of service.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for the Marketplace listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanAddPlans","description":"Can the current viewer add plans for this Marketplace listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanApprove","description":"Can the current viewer approve this Marketplace listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelist","description":"Can the current viewer delist this Marketplace listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanEdit","description":"Can the current viewer edit this Marketplace listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanEditCategories","description":"Can the current viewer edit the primary and secondary category of this\\nMarketplace listing.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanEditPlans","description":"Can the current viewer edit the plans for this Marketplace listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanRedraft","description":"Can the current viewer return this Marketplace listing to draft state\\nso it becomes editable again.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReject","description":"Can the current viewer reject this Marketplace listing by returning it to\\nan editable draft state or rejecting it entirely.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanRequestApproval","description":"Can the current viewer request this listing be reviewed for display in\\nthe Marketplace as verified.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasPurchased","description":"Indicates whether the current user has an active subscription to this Marketplace listing.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasPurchasedForAllOrganizations","description":"Indicates if the current user has purchased a subscription to this Marketplace listing\\nfor all of the organizations the user owns.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsListingAdmin","description":"Does the current viewer role allow them to administer this Marketplace listing.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarketplaceListingConnection","description":"Look up Marketplace Listings","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"MarketplaceListingEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"MarketplaceListing","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MarketplaceListingEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"MarketplaceListing","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"MemberStatusable","description":"Entities that have members who can set status messages.","fields":[{"name":"memberStatuses","description":"Get the status messages members of this entity have set that are either public or visible only to the organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for user statuses returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"UserStatusOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserStatusConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null}]},{"kind":"OBJECT","name":"MembersCanDeleteReposClearAuditEntry","description":"Audit log entry for a members_can_delete_repos.clear event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MembersCanDeleteReposDisableAuditEntry","description":"Audit log entry for a members_can_delete_repos.disable event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MembersCanDeleteReposEnableAuditEntry","description":"Audit log entry for a members_can_delete_repos.enable event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MentionedEvent","description":"Represents a \'mentioned\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MergeBranchInput","description":"Autogenerated input type of MergeBranch","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the Repository containing the base branch that will be modified.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"base","description":"The name of the base branch that the provided head will be merged into.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"head","description":"The head to merge into the base branch. This can be a branch name or a commit GitObjectID.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"commitMessage","description":"Message to use for the merge commit. If omitted, a default will be used.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"authorEmail","description":"The email address to associate with this commit.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MergeBranchPayload","description":"Autogenerated return type of MergeBranch","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergeCommit","description":"The resulting merge Commit.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"MergeCommitMessage","description":"The possible default commit messages for merges.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PR_TITLE","description":"Default to the pull request\'s title.","isDeprecated":false,"deprecationReason":null},{"name":"PR_BODY","description":"Default to the pull request\'s body.","isDeprecated":false,"deprecationReason":null},{"name":"BLANK","description":"Default to a blank commit message.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"MergeCommitTitle","description":"The possible default commit titles for merges.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PR_TITLE","description":"Default to the pull request\'s title.","isDeprecated":false,"deprecationReason":null},{"name":"MERGE_MESSAGE","description":"Default to the classic title for a merge message (e.g., Merge pull request #123 from branch-name).","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MergePullRequestInput","description":"Autogenerated input type of MergePullRequest","fields":null,"inputFields":[{"name":"pullRequestId","description":"ID of the pull request to be merged.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"commitHeadline","description":"Commit headline to use for the merge commit; if omitted, a default message will be used.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"commitBody","description":"Commit body to use for the merge commit; if omitted, a default message will be used","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"expectedHeadOid","description":"OID that the pull request head ref must match to allow merge; if omitted, no check is performed.","type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"defaultValue":null},{"name":"mergeMethod","description":"The merge method to use. If omitted, defaults to \'MERGE\'","type":{"kind":"ENUM","name":"PullRequestMergeMethod","ofType":null},"defaultValue":"MERGE"},{"name":"authorEmail","description":"The email address to associate with this merge.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MergePullRequestPayload","description":"Autogenerated return type of MergePullRequest","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that was merged.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"MergeableState","description":"Whether or not a PullRequest can be merged.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MERGEABLE","description":"The pull request can be merged.","isDeprecated":false,"deprecationReason":null},{"name":"CONFLICTING","description":"The pull request cannot be merged due to merge conflicts.","isDeprecated":false,"deprecationReason":null},{"name":"UNKNOWN","description":"The mergeability of the pull request is still being calculated.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"MergedEvent","description":"Represents a \'merged\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"Identifies the commit associated with the `merge` event.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mergeRef","description":"Identifies the Ref associated with the `merge` event.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergeRefName","description":"Identifies the name of the Ref associated with the `merge` event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this merged event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this merged event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Migration","description":"Represents a GitHub Enterprise Importer (GEI) migration.","fields":[{"name":"continueOnError","description":"The migration flag to continue on error.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"failureReason","description":"The reason the migration failed.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"migrationLogUrl","description":"The URL for the migration log (expires 1 day after migration completes).","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"migrationSource","description":"The migration source.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"MigrationSource","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The target repository name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sourceUrl","description":"The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The migration state.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MigrationState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"RepositoryMigration","ofType":null}]},{"kind":"OBJECT","name":"MigrationSource","description":"A GitHub Enterprise Importer (GEI) migration source.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The migration source name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":"The migration source type.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MigrationSourceType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"MigrationSourceType","description":"Represents the different GitHub Enterprise Importer (GEI) migration sources.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AZURE_DEVOPS","description":"An Azure DevOps migration source.","isDeprecated":false,"deprecationReason":null},{"name":"BITBUCKET_SERVER","description":"A Bitbucket Server migration source.","isDeprecated":false,"deprecationReason":null},{"name":"GITHUB_ARCHIVE","description":"A GitHub Migration API source.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"MigrationState","description":"The GitHub Enterprise Importer (GEI) migration state.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NOT_STARTED","description":"The migration has not started.","isDeprecated":false,"deprecationReason":null},{"name":"QUEUED","description":"The migration has been queued.","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The migration is in progress.","isDeprecated":false,"deprecationReason":null},{"name":"SUCCEEDED","description":"The migration has succeeded.","isDeprecated":false,"deprecationReason":null},{"name":"FAILED","description":"The migration has failed.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING_VALIDATION","description":"The migration needs to have its credentials validated.","isDeprecated":false,"deprecationReason":null},{"name":"FAILED_VALIDATION","description":"The migration has invalid credentials.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Milestone","description":"Represents a Milestone object on a given repository.","fields":[{"name":"closed","description":"Indicates if the object is closed (definition of closed may depend on type)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closedAt","description":"Identifies the date and time when the object was closed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"Identifies the actor who created the milestone.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"Identifies the description of the milestone.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dueOn","description":"Identifies the due date of the milestone.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issues","description":"A list of issues associated with the milestone.","args":[{"name":"orderBy","description":"Ordering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"states","description":"A list of states to filter the issues by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueState","ofType":null}}},"defaultValue":null},{"name":"filterBy","description":"Filtering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueFilters","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"Identifies the number of the milestone.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"progressPercentage","description":"Identifies the percentage complete for the milestone","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequests","description":"A list of pull requests associated with the milestone.","args":[{"name":"states","description":"A list of states to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestState","ofType":null}}},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"headRefName","description":"The head ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"baseRefName","description":"The base ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this milestone.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this milestone","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Identifies the state of the milestone.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MilestoneState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"Identifies the title of the milestone.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this milestone","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Closable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MilestoneConnection","description":"The connection type for Milestone.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"MilestoneEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Milestone","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MilestoneEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Milestone","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"MilestoneItem","description":"Types that can be inside a Milestone.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"INPUT_OBJECT","name":"MilestoneOrder","description":"Ordering options for milestone connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order milestones by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MilestoneOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"MilestoneOrderField","description":"Properties by which milestone connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DUE_DATE","description":"Order milestones by when they are due.","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order milestones by when they were created.","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order milestones by when they were last updated.","isDeprecated":false,"deprecationReason":null},{"name":"NUMBER","description":"Order milestones by their number.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"MilestoneState","description":"The possible states of a milestone.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"A milestone that is still open.","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED","description":"A milestone that has been closed.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"MilestonedEvent","description":"Represents a \'milestoned\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"milestoneTitle","description":"Identifies the milestone title associated with the \'milestoned\' event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"Object referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"MilestoneItem","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Minimizable","description":"Entities that can be minimized.","fields":[{"name":"isMinimized","description":"Returns whether or not a comment has been minimized.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"minimizedReason","description":"Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMinimize","description":"Check if the current viewer can minimize this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null},{"kind":"OBJECT","name":"GistComment","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null}]},{"kind":"INPUT_OBJECT","name":"MinimizeCommentInput","description":"Autogenerated input type of MinimizeComment","fields":null,"inputFields":[{"name":"subjectId","description":"The Node ID of the subject to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"classifier","description":"The classification of comment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ReportedContentClassifiers","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MinimizeCommentPayload","description":"Autogenerated return type of MinimizeComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimizedComment","description":"The comment that was minimized.","args":[],"type":{"kind":"INTERFACE","name":"Minimizable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MoveProjectCardInput","description":"Autogenerated input type of MoveProjectCard","fields":null,"inputFields":[{"name":"cardId","description":"The id of the card to move.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"columnId","description":"The id of the column to move it into.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"afterCardId","description":"Place the new card after the card with this id. Pass null to place it at the top.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MoveProjectCardPayload","description":"Autogenerated return type of MoveProjectCard","fields":[{"name":"cardEdge","description":"The new edge of the moved card.","args":[],"type":{"kind":"OBJECT","name":"ProjectCardEdge","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"MoveProjectColumnInput","description":"Autogenerated input type of MoveProjectColumn","fields":null,"inputFields":[{"name":"columnId","description":"The id of the column to move.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"afterColumnId","description":"Place the new column after the column with this id. Pass null to place it at the front.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MoveProjectColumnPayload","description":"Autogenerated return type of MoveProjectColumn","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"columnEdge","description":"The new edge of the moved column.","args":[],"type":{"kind":"OBJECT","name":"ProjectColumnEdge","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"MovedColumnsInProjectEvent","description":"Represents a \'moved_columns_in_project\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Mutation","description":"The root query for implementing GraphQL mutations.","fields":[{"name":"abortQueuedMigrations","description":"Clear all of a customer\'s queued migrations","args":[{"name":"input","description":"Parameters for AbortQueuedMigrations","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AbortQueuedMigrationsInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AbortQueuedMigrationsPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"acceptEnterpriseAdministratorInvitation","description":"Accepts a pending invitation for a user to become an administrator of an enterprise.","args":[{"name":"input","description":"Parameters for AcceptEnterpriseAdministratorInvitation","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AcceptEnterpriseAdministratorInvitationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AcceptEnterpriseAdministratorInvitationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"acceptTopicSuggestion","description":"Applies a suggested topic to the repository.","args":[{"name":"input","description":"Parameters for AcceptTopicSuggestion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AcceptTopicSuggestionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AcceptTopicSuggestionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addAssigneesToAssignable","description":"Adds assignees to an assignable object.","args":[{"name":"input","description":"Parameters for AddAssigneesToAssignable","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddAssigneesToAssignableInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddAssigneesToAssignablePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addComment","description":"Adds a comment to an Issue or Pull Request.","args":[{"name":"input","description":"Parameters for AddComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addDiscussionComment","description":"Adds a comment to a Discussion, possibly as a reply to another comment.","args":[{"name":"input","description":"Parameters for AddDiscussionComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddDiscussionCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddDiscussionCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addDiscussionPollVote","description":"Vote for an option in a discussion poll.","args":[{"name":"input","description":"Parameters for AddDiscussionPollVote","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddDiscussionPollVoteInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddDiscussionPollVotePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addEnterpriseOrganizationMember","description":"Adds enterprise members to an organization within the enterprise.","args":[{"name":"input","description":"Parameters for AddEnterpriseOrganizationMember","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddEnterpriseOrganizationMemberInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddEnterpriseOrganizationMemberPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addEnterpriseSupportEntitlement","description":"Adds a support entitlement to an enterprise member.","args":[{"name":"input","description":"Parameters for AddEnterpriseSupportEntitlement","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddEnterpriseSupportEntitlementInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddEnterpriseSupportEntitlementPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addLabelsToLabelable","description":"Adds labels to a labelable object.","args":[{"name":"input","description":"Parameters for AddLabelsToLabelable","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddLabelsToLabelableInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddLabelsToLabelablePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addProjectCard","description":"Adds a card to a ProjectColumn. Either `contentId` or `note` must be provided but **not** both.","args":[{"name":"input","description":"Parameters for AddProjectCard","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddProjectCardInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddProjectCardPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addProjectColumn","description":"Adds a column to a Project.","args":[{"name":"input","description":"Parameters for AddProjectColumn","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddProjectColumnInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddProjectColumnPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addProjectV2DraftIssue","description":"Creates a new draft issue and add it to a Project.","args":[{"name":"input","description":"Parameters for AddProjectV2DraftIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddProjectV2DraftIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddProjectV2DraftIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addProjectV2ItemById","description":"Links an existing content instance to a Project.","args":[{"name":"input","description":"Parameters for AddProjectV2ItemById","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddProjectV2ItemByIdInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddProjectV2ItemByIdPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addPullRequestReview","description":"Adds a review to a Pull Request.","args":[{"name":"input","description":"Parameters for AddPullRequestReview","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddPullRequestReviewInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddPullRequestReviewPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addPullRequestReviewComment","description":"Adds a comment to a review.","args":[{"name":"input","description":"Parameters for AddPullRequestReviewComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddPullRequestReviewCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddPullRequestReviewCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addPullRequestReviewThread","description":"Adds a new thread to a pending Pull Request Review.","args":[{"name":"input","description":"Parameters for AddPullRequestReviewThread","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddPullRequestReviewThreadInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddPullRequestReviewThreadPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addReaction","description":"Adds a reaction to a subject.","args":[{"name":"input","description":"Parameters for AddReaction","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddReactionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddReactionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addStar","description":"Adds a star to a Starrable.","args":[{"name":"input","description":"Parameters for AddStar","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddStarInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddStarPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addUpvote","description":"Add an upvote to a discussion or discussion comment.","args":[{"name":"input","description":"Parameters for AddUpvote","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddUpvoteInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddUpvotePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"addVerifiableDomain","description":"Adds a verifiable domain to an owning account.","args":[{"name":"input","description":"Parameters for AddVerifiableDomain","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"AddVerifiableDomainInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"AddVerifiableDomainPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"approveDeployments","description":"Approve all pending deployments under one or more environments","args":[{"name":"input","description":"Parameters for ApproveDeployments","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ApproveDeploymentsInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ApproveDeploymentsPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"approveVerifiableDomain","description":"Approve a verifiable domain for notification delivery.","args":[{"name":"input","description":"Parameters for ApproveVerifiableDomain","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ApproveVerifiableDomainInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ApproveVerifiableDomainPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"archiveProjectV2Item","description":"Archives a ProjectV2Item","args":[{"name":"input","description":"Parameters for ArchiveProjectV2Item","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ArchiveProjectV2ItemInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ArchiveProjectV2ItemPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"archiveRepository","description":"Marks a repository as archived.","args":[{"name":"input","description":"Parameters for ArchiveRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ArchiveRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ArchiveRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"cancelEnterpriseAdminInvitation","description":"Cancels a pending invitation for an administrator to join an enterprise.","args":[{"name":"input","description":"Parameters for CancelEnterpriseAdminInvitation","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CancelEnterpriseAdminInvitationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CancelEnterpriseAdminInvitationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"cancelSponsorship","description":"Cancel an active sponsorship.","args":[{"name":"input","description":"Parameters for CancelSponsorship","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CancelSponsorshipInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CancelSponsorshipPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"changeUserStatus","description":"Update your status on GitHub.","args":[{"name":"input","description":"Parameters for ChangeUserStatus","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ChangeUserStatusInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ChangeUserStatusPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clearLabelsFromLabelable","description":"Clears all labels from a labelable object.","args":[{"name":"input","description":"Parameters for ClearLabelsFromLabelable","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ClearLabelsFromLabelableInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ClearLabelsFromLabelablePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clearProjectV2ItemFieldValue","description":"This mutation clears the value of a field for an item in a Project. Currently only text, number, date, assignees, labels, single-select, iteration and milestone fields are supported.","args":[{"name":"input","description":"Parameters for ClearProjectV2ItemFieldValue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ClearProjectV2ItemFieldValueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ClearProjectV2ItemFieldValuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"cloneProject","description":"Creates a new project by cloning configuration from an existing project.","args":[{"name":"input","description":"Parameters for CloneProject","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CloneProjectInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CloneProjectPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"cloneTemplateRepository","description":"Create a new repository with the same files and directory structure as a template repository.","args":[{"name":"input","description":"Parameters for CloneTemplateRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CloneTemplateRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CloneTemplateRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"closeIssue","description":"Close an issue.","args":[{"name":"input","description":"Parameters for CloseIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CloseIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CloseIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"closePullRequest","description":"Close a pull request.","args":[{"name":"input","description":"Parameters for ClosePullRequest","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ClosePullRequestInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ClosePullRequestPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"convertProjectCardNoteToIssue","description":"Convert a project note card to one associated with a newly created issue.","args":[{"name":"input","description":"Parameters for ConvertProjectCardNoteToIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ConvertProjectCardNoteToIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ConvertProjectCardNoteToIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"convertPullRequestToDraft","description":"Converts a pull request to draft","args":[{"name":"input","description":"Parameters for ConvertPullRequestToDraft","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ConvertPullRequestToDraftInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ConvertPullRequestToDraftPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"copyProjectV2","description":"Copy a project.","args":[{"name":"input","description":"Parameters for CopyProjectV2","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CopyProjectV2Input","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CopyProjectV2Payload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createAttributionInvitation","description":"Invites a user to claim reattributable data","args":[{"name":"input","description":"Parameters for CreateAttributionInvitation","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateAttributionInvitationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateAttributionInvitationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createBranchProtectionRule","description":"Create a new branch protection rule","args":[{"name":"input","description":"Parameters for CreateBranchProtectionRule","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateBranchProtectionRuleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateBranchProtectionRulePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createCheckRun","description":"Create a check run.","args":[{"name":"input","description":"Parameters for CreateCheckRun","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateCheckRunInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateCheckRunPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createCheckSuite","description":"Create a check suite","args":[{"name":"input","description":"Parameters for CreateCheckSuite","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateCheckSuiteInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateCheckSuitePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createCommitOnBranch","description":"Appends a commit to the given branch as the authenticated user.\\n\\nThis mutation creates a commit whose parent is the HEAD of the provided\\nbranch and also updates that branch to point to the new commit.\\nIt can be thought of as similar to `git commit`.\\n\\n### Locating a Branch\\n\\nCommits are appended to a `branch` of type `Ref`.\\nThis must refer to a git branch (i.e.  the fully qualified path must\\nbegin with `refs/heads/`, although including this prefix is optional.\\n\\nCallers may specify the `branch` to commit to either by its global node\\nID or by passing both of `repositoryNameWithOwner` and `refName`.  For\\nmore details see the documentation for `CommittableBranch`.\\n\\n### Describing Changes\\n\\n`fileChanges` are specified as a `FilesChanges` object describing\\n`FileAdditions` and `FileDeletions`.\\n\\nPlease see the documentation for `FileChanges` for more information on\\nhow to use this argument to describe any set of file changes.\\n\\n### Authorship\\n\\nSimilar to the web commit interface, this mutation does not support\\nspecifying the author or committer of the commit and will not add\\nsupport for this in the future.\\n\\nA commit created by a successful execution of this mutation will be\\nauthored by the owner of the credential which authenticates the API\\nrequest.  The committer will be identical to that of commits authored\\nusing the web interface.\\n\\nIf you need full control over author and committer information, please\\nuse the Git Database REST API instead.\\n\\n### Commit Signing\\n\\nCommits made using this mutation are automatically signed by GitHub if\\nsupported and will be marked as verified in the user interface.\\n","args":[{"name":"input","description":"Parameters for CreateCommitOnBranch","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateCommitOnBranchInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateCommitOnBranchPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createDiscussion","description":"Create a discussion.","args":[{"name":"input","description":"Parameters for CreateDiscussion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateDiscussionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateDiscussionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createEnterpriseOrganization","description":"Creates an organization as part of an enterprise account.","args":[{"name":"input","description":"Parameters for CreateEnterpriseOrganization","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateEnterpriseOrganizationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateEnterpriseOrganizationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createEnvironment","description":"Creates an environment or simply returns it if already exists.","args":[{"name":"input","description":"Parameters for CreateEnvironment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateEnvironmentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateEnvironmentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createIpAllowListEntry","description":"Creates a new IP allow list entry.","args":[{"name":"input","description":"Parameters for CreateIpAllowListEntry","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateIpAllowListEntryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateIpAllowListEntryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createIssue","description":"Creates a new issue.","args":[{"name":"input","description":"Parameters for CreateIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createLinkedBranch","description":"Create a branch linked to an issue.","args":[{"name":"input","description":"Parameters for CreateLinkedBranch","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateLinkedBranchInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateLinkedBranchPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createMigrationSource","description":"Creates a GitHub Enterprise Importer (GEI) migration source.","args":[{"name":"input","description":"Parameters for CreateMigrationSource","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateMigrationSourceInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateMigrationSourcePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createProject","description":"Creates a new project.","args":[{"name":"input","description":"Parameters for CreateProject","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateProjectInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateProjectPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createProjectV2","description":"Creates a new project.","args":[{"name":"input","description":"Parameters for CreateProjectV2","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateProjectV2Input","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateProjectV2Payload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createProjectV2Field","description":"Create a new project field.","args":[{"name":"input","description":"Parameters for CreateProjectV2Field","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateProjectV2FieldInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateProjectV2FieldPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createPullRequest","description":"Create a new pull request","args":[{"name":"input","description":"Parameters for CreatePullRequest","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreatePullRequestInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreatePullRequestPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createRef","description":"Create a new Git Ref.","args":[{"name":"input","description":"Parameters for CreateRef","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateRefInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateRefPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createRepository","description":"Create a new repository.","args":[{"name":"input","description":"Parameters for CreateRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createSponsorsListing","description":"Create a GitHub Sponsors profile to allow others to sponsor you or your organization.","args":[{"name":"input","description":"Parameters for CreateSponsorsListing","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateSponsorsListingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateSponsorsListingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createSponsorsTier","description":"Create a new payment tier for your GitHub Sponsors profile.","args":[{"name":"input","description":"Parameters for CreateSponsorsTier","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateSponsorsTierInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateSponsorsTierPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createSponsorship","description":"Start a new sponsorship of a maintainer in GitHub Sponsors, or reactivate a past sponsorship.","args":[{"name":"input","description":"Parameters for CreateSponsorship","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateSponsorshipInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateSponsorshipPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createTeamDiscussion","description":"Creates a new team discussion.","args":[{"name":"input","description":"Parameters for CreateTeamDiscussion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateTeamDiscussionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateTeamDiscussionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createTeamDiscussionComment","description":"Creates a new team discussion comment.","args":[{"name":"input","description":"Parameters for CreateTeamDiscussionComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CreateTeamDiscussionCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CreateTeamDiscussionCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"declineTopicSuggestion","description":"Rejects a suggested topic for the repository.","args":[{"name":"input","description":"Parameters for DeclineTopicSuggestion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeclineTopicSuggestionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeclineTopicSuggestionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteBranchProtectionRule","description":"Delete a branch protection rule","args":[{"name":"input","description":"Parameters for DeleteBranchProtectionRule","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteBranchProtectionRuleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteBranchProtectionRulePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteDeployment","description":"Deletes a deployment.","args":[{"name":"input","description":"Parameters for DeleteDeployment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteDeploymentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteDeploymentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteDiscussion","description":"Delete a discussion and all of its replies.","args":[{"name":"input","description":"Parameters for DeleteDiscussion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteDiscussionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteDiscussionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteDiscussionComment","description":"Delete a discussion comment. If it has replies, wipe it instead.","args":[{"name":"input","description":"Parameters for DeleteDiscussionComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteDiscussionCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteDiscussionCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteEnvironment","description":"Deletes an environment","args":[{"name":"input","description":"Parameters for DeleteEnvironment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteEnvironmentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteEnvironmentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteIpAllowListEntry","description":"Deletes an IP allow list entry.","args":[{"name":"input","description":"Parameters for DeleteIpAllowListEntry","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteIpAllowListEntryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteIpAllowListEntryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteIssue","description":"Deletes an Issue object.","args":[{"name":"input","description":"Parameters for DeleteIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteIssueComment","description":"Deletes an IssueComment object.","args":[{"name":"input","description":"Parameters for DeleteIssueComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteIssueCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteIssueCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteLinkedBranch","description":"Unlink a branch from an issue.","args":[{"name":"input","description":"Parameters for DeleteLinkedBranch","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteLinkedBranchInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteLinkedBranchPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteProject","description":"Deletes a project.","args":[{"name":"input","description":"Parameters for DeleteProject","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteProjectInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteProjectPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteProjectCard","description":"Deletes a project card.","args":[{"name":"input","description":"Parameters for DeleteProjectCard","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteProjectCardInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteProjectCardPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteProjectColumn","description":"Deletes a project column.","args":[{"name":"input","description":"Parameters for DeleteProjectColumn","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteProjectColumnInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteProjectColumnPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteProjectV2","description":"Delete a project.","args":[{"name":"input","description":"Parameters for DeleteProjectV2","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteProjectV2Input","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteProjectV2Payload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteProjectV2Field","description":"Delete a project field.","args":[{"name":"input","description":"Parameters for DeleteProjectV2Field","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteProjectV2FieldInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteProjectV2FieldPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteProjectV2Item","description":"Deletes an item from a Project.","args":[{"name":"input","description":"Parameters for DeleteProjectV2Item","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteProjectV2ItemInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteProjectV2ItemPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletePullRequestReview","description":"Deletes a pull request review.","args":[{"name":"input","description":"Parameters for DeletePullRequestReview","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeletePullRequestReviewInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeletePullRequestReviewPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletePullRequestReviewComment","description":"Deletes a pull request review comment.","args":[{"name":"input","description":"Parameters for DeletePullRequestReviewComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeletePullRequestReviewCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeletePullRequestReviewCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteRef","description":"Delete a Git Ref.","args":[{"name":"input","description":"Parameters for DeleteRef","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteRefInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteRefPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteTeamDiscussion","description":"Deletes a team discussion.","args":[{"name":"input","description":"Parameters for DeleteTeamDiscussion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteTeamDiscussionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteTeamDiscussionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteTeamDiscussionComment","description":"Deletes a team discussion comment.","args":[{"name":"input","description":"Parameters for DeleteTeamDiscussionComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteTeamDiscussionCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteTeamDiscussionCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteVerifiableDomain","description":"Deletes a verifiable domain.","args":[{"name":"input","description":"Parameters for DeleteVerifiableDomain","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DeleteVerifiableDomainInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DeleteVerifiableDomainPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"disablePullRequestAutoMerge","description":"Disable auto merge on the given pull request","args":[{"name":"input","description":"Parameters for DisablePullRequestAutoMerge","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DisablePullRequestAutoMergeInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DisablePullRequestAutoMergePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissPullRequestReview","description":"Dismisses an approved or rejected pull request review.","args":[{"name":"input","description":"Parameters for DismissPullRequestReview","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DismissPullRequestReviewInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DismissPullRequestReviewPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissRepositoryVulnerabilityAlert","description":"Dismisses the Dependabot alert.","args":[{"name":"input","description":"Parameters for DismissRepositoryVulnerabilityAlert","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"DismissRepositoryVulnerabilityAlertInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DismissRepositoryVulnerabilityAlertPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enablePullRequestAutoMerge","description":"Enable the default auto-merge on a pull request.","args":[{"name":"input","description":"Parameters for EnablePullRequestAutoMerge","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"EnablePullRequestAutoMergeInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"EnablePullRequestAutoMergePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"followOrganization","description":"Follow an organization.","args":[{"name":"input","description":"Parameters for FollowOrganization","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"FollowOrganizationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"FollowOrganizationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"followUser","description":"Follow a user.","args":[{"name":"input","description":"Parameters for FollowUser","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"FollowUserInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"FollowUserPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"grantEnterpriseOrganizationsMigratorRole","description":"Grant the migrator role to a user for all organizations under an enterprise account.","args":[{"name":"input","description":"Parameters for GrantEnterpriseOrganizationsMigratorRole","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"GrantEnterpriseOrganizationsMigratorRoleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"GrantEnterpriseOrganizationsMigratorRolePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"grantMigratorRole","description":"Grant the migrator role to a user or a team.","args":[{"name":"input","description":"Parameters for GrantMigratorRole","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"GrantMigratorRoleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"GrantMigratorRolePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"inviteEnterpriseAdmin","description":"Invite someone to become an administrator of the enterprise.","args":[{"name":"input","description":"Parameters for InviteEnterpriseAdmin","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"InviteEnterpriseAdminInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"InviteEnterpriseAdminPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"linkProjectV2ToRepository","description":"Links a project to a repository.","args":[{"name":"input","description":"Parameters for LinkProjectV2ToRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"LinkProjectV2ToRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LinkProjectV2ToRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"linkProjectV2ToTeam","description":"Links a project to a team.","args":[{"name":"input","description":"Parameters for LinkProjectV2ToTeam","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"LinkProjectV2ToTeamInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LinkProjectV2ToTeamPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"linkRepositoryToProject","description":"Creates a repository link for a project.","args":[{"name":"input","description":"Parameters for LinkRepositoryToProject","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"LinkRepositoryToProjectInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LinkRepositoryToProjectPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lockLockable","description":"Lock a lockable object","args":[{"name":"input","description":"Parameters for LockLockable","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"LockLockableInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LockLockablePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"markDiscussionCommentAsAnswer","description":"Mark a discussion comment as the chosen answer for discussions in an answerable category.","args":[{"name":"input","description":"Parameters for MarkDiscussionCommentAsAnswer","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MarkDiscussionCommentAsAnswerInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MarkDiscussionCommentAsAnswerPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"markFileAsViewed","description":"Mark a pull request file as viewed","args":[{"name":"input","description":"Parameters for MarkFileAsViewed","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MarkFileAsViewedInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MarkFileAsViewedPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"markPullRequestReadyForReview","description":"Marks a pull request ready for review.","args":[{"name":"input","description":"Parameters for MarkPullRequestReadyForReview","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MarkPullRequestReadyForReviewInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MarkPullRequestReadyForReviewPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergeBranch","description":"Merge a head into a branch.","args":[{"name":"input","description":"Parameters for MergeBranch","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MergeBranchInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MergeBranchPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergePullRequest","description":"Merge a pull request.","args":[{"name":"input","description":"Parameters for MergePullRequest","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MergePullRequestInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MergePullRequestPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimizeComment","description":"Minimizes a comment on an Issue, Commit, Pull Request, or Gist","args":[{"name":"input","description":"Parameters for MinimizeComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MinimizeCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MinimizeCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"moveProjectCard","description":"Moves a project card to another place.","args":[{"name":"input","description":"Parameters for MoveProjectCard","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MoveProjectCardInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MoveProjectCardPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"moveProjectColumn","description":"Moves a project column to another place.","args":[{"name":"input","description":"Parameters for MoveProjectColumn","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"MoveProjectColumnInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MoveProjectColumnPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pinIssue","description":"Pin an issue to a repository","args":[{"name":"input","description":"Parameters for PinIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"PinIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PinIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishSponsorsTier","description":"Publish an existing sponsorship tier that is currently still a draft to a GitHub Sponsors profile.","args":[{"name":"input","description":"Parameters for PublishSponsorsTier","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"PublishSponsorsTierInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PublishSponsorsTierPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"regenerateEnterpriseIdentityProviderRecoveryCodes","description":"Regenerates the identity provider recovery codes for an enterprise","args":[{"name":"input","description":"Parameters for RegenerateEnterpriseIdentityProviderRecoveryCodes","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RegenerateEnterpriseIdentityProviderRecoveryCodesInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"regenerateVerifiableDomainToken","description":"Regenerates a verifiable domain\'s verification token.","args":[{"name":"input","description":"Parameters for RegenerateVerifiableDomainToken","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RegenerateVerifiableDomainTokenInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RegenerateVerifiableDomainTokenPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rejectDeployments","description":"Reject all pending deployments under one or more environments","args":[{"name":"input","description":"Parameters for RejectDeployments","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RejectDeploymentsInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RejectDeploymentsPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeAssigneesFromAssignable","description":"Removes assignees from an assignable object.","args":[{"name":"input","description":"Parameters for RemoveAssigneesFromAssignable","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveAssigneesFromAssignableInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveAssigneesFromAssignablePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeEnterpriseAdmin","description":"Removes an administrator from the enterprise.","args":[{"name":"input","description":"Parameters for RemoveEnterpriseAdmin","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseAdminInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveEnterpriseAdminPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeEnterpriseIdentityProvider","description":"Removes the identity provider from an enterprise","args":[{"name":"input","description":"Parameters for RemoveEnterpriseIdentityProvider","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseIdentityProviderInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveEnterpriseIdentityProviderPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeEnterpriseMember","description":"Removes a user from all organizations within the enterprise","args":[{"name":"input","description":"Parameters for RemoveEnterpriseMember","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseMemberInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveEnterpriseMemberPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeEnterpriseOrganization","description":"Removes an organization from the enterprise","args":[{"name":"input","description":"Parameters for RemoveEnterpriseOrganization","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseOrganizationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveEnterpriseOrganizationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeEnterpriseSupportEntitlement","description":"Removes a support entitlement from an enterprise member.","args":[{"name":"input","description":"Parameters for RemoveEnterpriseSupportEntitlement","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseSupportEntitlementInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveEnterpriseSupportEntitlementPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeLabelsFromLabelable","description":"Removes labels from a Labelable object.","args":[{"name":"input","description":"Parameters for RemoveLabelsFromLabelable","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveLabelsFromLabelableInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveLabelsFromLabelablePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeOutsideCollaborator","description":"Removes outside collaborator from all repositories in an organization.","args":[{"name":"input","description":"Parameters for RemoveOutsideCollaborator","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveOutsideCollaboratorInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveOutsideCollaboratorPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeReaction","description":"Removes a reaction from a subject.","args":[{"name":"input","description":"Parameters for RemoveReaction","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveReactionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveReactionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeStar","description":"Removes a star from a Starrable.","args":[{"name":"input","description":"Parameters for RemoveStar","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveStarInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveStarPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removeUpvote","description":"Remove an upvote to a discussion or discussion comment.","args":[{"name":"input","description":"Parameters for RemoveUpvote","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RemoveUpvoteInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RemoveUpvotePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reopenIssue","description":"Reopen a issue.","args":[{"name":"input","description":"Parameters for ReopenIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ReopenIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ReopenIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reopenPullRequest","description":"Reopen a pull request.","args":[{"name":"input","description":"Parameters for ReopenPullRequest","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ReopenPullRequestInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ReopenPullRequestPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"requestReviews","description":"Set review requests on a pull request.","args":[{"name":"input","description":"Parameters for RequestReviews","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RequestReviewsInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RequestReviewsPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rerequestCheckSuite","description":"Rerequests an existing check suite.","args":[{"name":"input","description":"Parameters for RerequestCheckSuite","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RerequestCheckSuiteInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RerequestCheckSuitePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resolveReviewThread","description":"Marks a review thread as resolved.","args":[{"name":"input","description":"Parameters for ResolveReviewThread","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ResolveReviewThreadInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ResolveReviewThreadPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"retireSponsorsTier","description":"Retire a published payment tier from your GitHub Sponsors profile so it cannot be used to start new sponsorships.","args":[{"name":"input","description":"Parameters for RetireSponsorsTier","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RetireSponsorsTierInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RetireSponsorsTierPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"revertPullRequest","description":"Create a pull request that reverts the changes from a merged pull request.","args":[{"name":"input","description":"Parameters for RevertPullRequest","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RevertPullRequestInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RevertPullRequestPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"revokeEnterpriseOrganizationsMigratorRole","description":"Revoke the migrator role to a user for all organizations under an enterprise account.","args":[{"name":"input","description":"Parameters for RevokeEnterpriseOrganizationsMigratorRole","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RevokeEnterpriseOrganizationsMigratorRoleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RevokeEnterpriseOrganizationsMigratorRolePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"revokeMigratorRole","description":"Revoke the migrator role from a user or a team.","args":[{"name":"input","description":"Parameters for RevokeMigratorRole","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RevokeMigratorRoleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RevokeMigratorRolePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"setEnterpriseIdentityProvider","description":"Creates or updates the identity provider for an enterprise.","args":[{"name":"input","description":"Parameters for SetEnterpriseIdentityProvider","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"SetEnterpriseIdentityProviderInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"SetEnterpriseIdentityProviderPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"setOrganizationInteractionLimit","description":"Set an organization level interaction limit for an organization\'s public repositories.","args":[{"name":"input","description":"Parameters for SetOrganizationInteractionLimit","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"SetOrganizationInteractionLimitInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"SetOrganizationInteractionLimitPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"setRepositoryInteractionLimit","description":"Sets an interaction limit setting for a repository.","args":[{"name":"input","description":"Parameters for SetRepositoryInteractionLimit","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"SetRepositoryInteractionLimitInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"SetRepositoryInteractionLimitPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"setUserInteractionLimit","description":"Set a user level interaction limit for an user\'s public repositories.","args":[{"name":"input","description":"Parameters for SetUserInteractionLimit","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"SetUserInteractionLimitInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"SetUserInteractionLimitPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startOrganizationMigration","description":"Starts a GitHub Enterprise Importer organization migration.","args":[{"name":"input","description":"Parameters for StartOrganizationMigration","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"StartOrganizationMigrationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"StartOrganizationMigrationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startRepositoryMigration","description":"Starts a GitHub Enterprise Importer (GEI) repository migration.","args":[{"name":"input","description":"Parameters for StartRepositoryMigration","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"StartRepositoryMigrationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"StartRepositoryMigrationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"submitPullRequestReview","description":"Submits a pending pull request review.","args":[{"name":"input","description":"Parameters for SubmitPullRequestReview","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"SubmitPullRequestReviewInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"SubmitPullRequestReviewPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"transferEnterpriseOrganization","description":"Transfer an organization from one enterprise to another enterprise.","args":[{"name":"input","description":"Parameters for TransferEnterpriseOrganization","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"TransferEnterpriseOrganizationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"TransferEnterpriseOrganizationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"transferIssue","description":"Transfer an issue to a different repository","args":[{"name":"input","description":"Parameters for TransferIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"TransferIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"TransferIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unarchiveProjectV2Item","description":"Unarchives a ProjectV2Item","args":[{"name":"input","description":"Parameters for UnarchiveProjectV2Item","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnarchiveProjectV2ItemInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnarchiveProjectV2ItemPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unarchiveRepository","description":"Unarchives a repository.","args":[{"name":"input","description":"Parameters for UnarchiveRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnarchiveRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnarchiveRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unfollowOrganization","description":"Unfollow an organization.","args":[{"name":"input","description":"Parameters for UnfollowOrganization","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnfollowOrganizationInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnfollowOrganizationPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unfollowUser","description":"Unfollow a user.","args":[{"name":"input","description":"Parameters for UnfollowUser","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnfollowUserInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnfollowUserPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unlinkProjectV2FromRepository","description":"Unlinks a project from a repository.","args":[{"name":"input","description":"Parameters for UnlinkProjectV2FromRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnlinkProjectV2FromRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnlinkProjectV2FromRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unlinkProjectV2FromTeam","description":"Unlinks a project to a team.","args":[{"name":"input","description":"Parameters for UnlinkProjectV2FromTeam","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnlinkProjectV2FromTeamInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnlinkProjectV2FromTeamPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unlinkRepositoryFromProject","description":"Deletes a repository link from a project.","args":[{"name":"input","description":"Parameters for UnlinkRepositoryFromProject","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnlinkRepositoryFromProjectInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnlinkRepositoryFromProjectPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unlockLockable","description":"Unlock a lockable object","args":[{"name":"input","description":"Parameters for UnlockLockable","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnlockLockableInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnlockLockablePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unmarkDiscussionCommentAsAnswer","description":"Unmark a discussion comment as the chosen answer for discussions in an answerable category.","args":[{"name":"input","description":"Parameters for UnmarkDiscussionCommentAsAnswer","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnmarkDiscussionCommentAsAnswerInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnmarkDiscussionCommentAsAnswerPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unmarkFileAsViewed","description":"Unmark a pull request file as viewed","args":[{"name":"input","description":"Parameters for UnmarkFileAsViewed","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnmarkFileAsViewedInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnmarkFileAsViewedPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unmarkIssueAsDuplicate","description":"Unmark an issue as a duplicate of another issue.","args":[{"name":"input","description":"Parameters for UnmarkIssueAsDuplicate","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnmarkIssueAsDuplicateInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnmarkIssueAsDuplicatePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unminimizeComment","description":"Unminimizes a comment on an Issue, Commit, Pull Request, or Gist","args":[{"name":"input","description":"Parameters for UnminimizeComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnminimizeCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnminimizeCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unpinIssue","description":"Unpin a pinned issue from a repository","args":[{"name":"input","description":"Parameters for UnpinIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnpinIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnpinIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unresolveReviewThread","description":"Marks a review thread as unresolved.","args":[{"name":"input","description":"Parameters for UnresolveReviewThread","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UnresolveReviewThreadInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UnresolveReviewThreadPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateBranchProtectionRule","description":"Update a branch protection rule","args":[{"name":"input","description":"Parameters for UpdateBranchProtectionRule","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateBranchProtectionRuleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateBranchProtectionRulePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateCheckRun","description":"Update a check run","args":[{"name":"input","description":"Parameters for UpdateCheckRun","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateCheckRunInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateCheckRunPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateCheckSuitePreferences","description":"Modifies the settings of an existing check suite","args":[{"name":"input","description":"Parameters for UpdateCheckSuitePreferences","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateCheckSuitePreferencesInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateCheckSuitePreferencesPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateDiscussion","description":"Update a discussion","args":[{"name":"input","description":"Parameters for UpdateDiscussion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateDiscussionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateDiscussionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateDiscussionComment","description":"Update the contents of a comment on a Discussion","args":[{"name":"input","description":"Parameters for UpdateDiscussionComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateDiscussionCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateDiscussionCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseAdministratorRole","description":"Updates the role of an enterprise administrator.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseAdministratorRole","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseAdministratorRoleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseAdministratorRolePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseAllowPrivateRepositoryForkingSetting","description":"Sets whether private repository forks are enabled for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseAllowPrivateRepositoryForkingSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseDefaultRepositoryPermissionSetting","description":"Sets the base repository permission for organizations in an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseDefaultRepositoryPermissionSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseDefaultRepositoryPermissionSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanChangeRepositoryVisibilitySetting","description":"Sets whether organization members with admin permissions on a repository can change repository visibility.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanCreateRepositoriesSetting","description":"Sets the members can create repositories setting for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanCreateRepositoriesSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanCreateRepositoriesSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanDeleteIssuesSetting","description":"Sets the members can delete issues setting for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanDeleteIssuesSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanDeleteIssuesSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanDeleteRepositoriesSetting","description":"Sets the members can delete repositories setting for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanDeleteRepositoriesSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanInviteCollaboratorsSetting","description":"Sets whether members can invite collaborators are enabled for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanInviteCollaboratorsSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanMakePurchasesSetting","description":"Sets whether or not an organization admin can make purchases.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanMakePurchasesSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanMakePurchasesSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanMakePurchasesSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanUpdateProtectedBranchesSetting","description":"Sets the members can update protected branches setting for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseMembersCanViewDependencyInsightsSetting","description":"Sets the members can view dependency insights for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseMembersCanViewDependencyInsightsSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseOrganizationProjectsSetting","description":"Sets whether organization projects are enabled for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseOrganizationProjectsSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseOrganizationProjectsSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseOrganizationProjectsSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseOwnerOrganizationRole","description":"Updates the role of an enterprise owner with an organization.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseOwnerOrganizationRole","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseOwnerOrganizationRoleInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseOwnerOrganizationRolePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseProfile","description":"Updates an enterprise\'s profile.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseProfile","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseProfileInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseProfilePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseRepositoryProjectsSetting","description":"Sets whether repository projects are enabled for a enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseRepositoryProjectsSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseRepositoryProjectsSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseRepositoryProjectsSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseTeamDiscussionsSetting","description":"Sets whether team discussions are enabled for an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseTeamDiscussionsSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseTeamDiscussionsSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseTeamDiscussionsSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnterpriseTwoFactorAuthenticationRequiredSetting","description":"Sets whether two factor authentication is required for all users in an enterprise.","args":[{"name":"input","description":"Parameters for UpdateEnterpriseTwoFactorAuthenticationRequiredSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateEnvironment","description":"Updates an environment.","args":[{"name":"input","description":"Parameters for UpdateEnvironment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateEnvironmentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateEnvironmentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateIpAllowListEnabledSetting","description":"Sets whether an IP allow list is enabled on an owner.","args":[{"name":"input","description":"Parameters for UpdateIpAllowListEnabledSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateIpAllowListEnabledSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateIpAllowListEnabledSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateIpAllowListEntry","description":"Updates an IP allow list entry.","args":[{"name":"input","description":"Parameters for UpdateIpAllowListEntry","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateIpAllowListEntryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateIpAllowListEntryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateIpAllowListForInstalledAppsEnabledSetting","description":"Sets whether IP allow list configuration for installed GitHub Apps is enabled on an owner.","args":[{"name":"input","description":"Parameters for UpdateIpAllowListForInstalledAppsEnabledSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateIpAllowListForInstalledAppsEnabledSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateIpAllowListForInstalledAppsEnabledSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateIssue","description":"Updates an Issue.","args":[{"name":"input","description":"Parameters for UpdateIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateIssueComment","description":"Updates an IssueComment object.","args":[{"name":"input","description":"Parameters for UpdateIssueComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateIssueCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateIssueCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateNotificationRestrictionSetting","description":"Update the setting to restrict notifications to only verified or approved domains available to an owner.","args":[{"name":"input","description":"Parameters for UpdateNotificationRestrictionSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateNotificationRestrictionSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateNotificationRestrictionSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateOrganizationAllowPrivateRepositoryForkingSetting","description":"Sets whether private repository forks are enabled for an organization.","args":[{"name":"input","description":"Parameters for UpdateOrganizationAllowPrivateRepositoryForkingSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateOrganizationAllowPrivateRepositoryForkingSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateOrganizationWebCommitSignoffSetting","description":"Sets whether contributors are required to sign off on web-based commits for repositories in an organization.","args":[{"name":"input","description":"Parameters for UpdateOrganizationWebCommitSignoffSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateOrganizationWebCommitSignoffSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateOrganizationWebCommitSignoffSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateProject","description":"Updates an existing project.","args":[{"name":"input","description":"Parameters for UpdateProject","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateProjectInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateProjectPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateProjectCard","description":"Updates an existing project card.","args":[{"name":"input","description":"Parameters for UpdateProjectCard","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateProjectCardInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateProjectCardPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateProjectColumn","description":"Updates an existing project column.","args":[{"name":"input","description":"Parameters for UpdateProjectColumn","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateProjectColumnInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateProjectColumnPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateProjectV2","description":"Updates an existing project (beta).","args":[{"name":"input","description":"Parameters for UpdateProjectV2","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateProjectV2Input","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateProjectV2Payload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateProjectV2DraftIssue","description":"Updates a draft issue within a Project.","args":[{"name":"input","description":"Parameters for UpdateProjectV2DraftIssue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateProjectV2DraftIssueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateProjectV2DraftIssuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateProjectV2ItemFieldValue","description":"This mutation updates the value of a field for an item in a Project. Currently only single-select, text, number, date, and iteration fields are supported.","args":[{"name":"input","description":"Parameters for UpdateProjectV2ItemFieldValue","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateProjectV2ItemFieldValueInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateProjectV2ItemFieldValuePayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateProjectV2ItemPosition","description":"This mutation updates the position of the item in the project, where the position represents the priority of an item.","args":[{"name":"input","description":"Parameters for UpdateProjectV2ItemPosition","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateProjectV2ItemPositionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateProjectV2ItemPositionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatePullRequest","description":"Update a pull request","args":[{"name":"input","description":"Parameters for UpdatePullRequest","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdatePullRequestInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdatePullRequestPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatePullRequestBranch","description":"Merge or Rebase HEAD from upstream branch into pull request branch","args":[{"name":"input","description":"Parameters for UpdatePullRequestBranch","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdatePullRequestBranchInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdatePullRequestBranchPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatePullRequestReview","description":"Updates the body of a pull request review.","args":[{"name":"input","description":"Parameters for UpdatePullRequestReview","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdatePullRequestReviewInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdatePullRequestReviewPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatePullRequestReviewComment","description":"Updates a pull request review comment.","args":[{"name":"input","description":"Parameters for UpdatePullRequestReviewComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdatePullRequestReviewCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdatePullRequestReviewCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateRef","description":"Update a Git Ref.","args":[{"name":"input","description":"Parameters for UpdateRef","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateRefInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateRefPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateRepository","description":"Update information about a repository.","args":[{"name":"input","description":"Parameters for UpdateRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateRepositoryWebCommitSignoffSetting","description":"Sets whether contributors are required to sign off on web-based commits for a repository.","args":[{"name":"input","description":"Parameters for UpdateRepositoryWebCommitSignoffSetting","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateRepositoryWebCommitSignoffSettingInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateRepositoryWebCommitSignoffSettingPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateSponsorshipPreferences","description":"Change visibility of your sponsorship and opt in or out of email updates from the maintainer.","args":[{"name":"input","description":"Parameters for UpdateSponsorshipPreferences","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateSponsorshipPreferencesInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateSponsorshipPreferencesPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateSubscription","description":"Updates the state for subscribable subjects.","args":[{"name":"input","description":"Parameters for UpdateSubscription","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateSubscriptionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateSubscriptionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateTeamDiscussion","description":"Updates a team discussion.","args":[{"name":"input","description":"Parameters for UpdateTeamDiscussion","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateTeamDiscussionInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateTeamDiscussionPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateTeamDiscussionComment","description":"Updates a discussion comment.","args":[{"name":"input","description":"Parameters for UpdateTeamDiscussionComment","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateTeamDiscussionCommentInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateTeamDiscussionCommentPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateTeamsRepository","description":"Update team repository.","args":[{"name":"input","description":"Parameters for UpdateTeamsRepository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateTeamsRepositoryInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateTeamsRepositoryPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updateTopics","description":"Replaces the repository\'s topics with the given topics.","args":[{"name":"input","description":"Parameters for UpdateTopics","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"UpdateTopicsInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UpdateTopicsPayload","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"verifyVerifiableDomain","description":"Verify that a verifiable domain has the expected DNS record.","args":[{"name":"input","description":"Parameters for VerifyVerifiableDomain","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"VerifyVerifiableDomainInput","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"VerifyVerifiableDomainPayload","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Node","description":"An object with an ID.","fields":[{"name":"id","description":"ID of the object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"AddedToProjectEvent","ofType":null},{"kind":"OBJECT","name":"App","ofType":null},{"kind":"OBJECT","name":"AssignedEvent","ofType":null},{"kind":"OBJECT","name":"AutoMergeDisabledEvent","ofType":null},{"kind":"OBJECT","name":"AutoMergeEnabledEvent","ofType":null},{"kind":"OBJECT","name":"AutoRebaseEnabledEvent","ofType":null},{"kind":"OBJECT","name":"AutoSquashEnabledEvent","ofType":null},{"kind":"OBJECT","name":"AutomaticBaseChangeFailedEvent","ofType":null},{"kind":"OBJECT","name":"AutomaticBaseChangeSucceededEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefChangedEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefDeletedEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefForcePushedEvent","ofType":null},{"kind":"OBJECT","name":"Blob","ofType":null},{"kind":"OBJECT","name":"Bot","ofType":null},{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},{"kind":"OBJECT","name":"BypassForcePushAllowance","ofType":null},{"kind":"OBJECT","name":"BypassPullRequestAllowance","ofType":null},{"kind":"OBJECT","name":"CWE","ofType":null},{"kind":"OBJECT","name":"CheckRun","ofType":null},{"kind":"OBJECT","name":"CheckSuite","ofType":null},{"kind":"OBJECT","name":"ClosedEvent","ofType":null},{"kind":"OBJECT","name":"CodeOfConduct","ofType":null},{"kind":"OBJECT","name":"CommentDeletedEvent","ofType":null},{"kind":"OBJECT","name":"Commit","ofType":null},{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"CommitCommentThread","ofType":null},{"kind":"OBJECT","name":"Comparison","ofType":null},{"kind":"OBJECT","name":"ConnectedEvent","ofType":null},{"kind":"OBJECT","name":"ConvertToDraftEvent","ofType":null},{"kind":"OBJECT","name":"ConvertedNoteToIssueEvent","ofType":null},{"kind":"OBJECT","name":"ConvertedToDiscussionEvent","ofType":null},{"kind":"OBJECT","name":"CrossReferencedEvent","ofType":null},{"kind":"OBJECT","name":"DemilestonedEvent","ofType":null},{"kind":"OBJECT","name":"DeployKey","ofType":null},{"kind":"OBJECT","name":"DeployedEvent","ofType":null},{"kind":"OBJECT","name":"Deployment","ofType":null},{"kind":"OBJECT","name":"DeploymentEnvironmentChangedEvent","ofType":null},{"kind":"OBJECT","name":"DeploymentReview","ofType":null},{"kind":"OBJECT","name":"DeploymentStatus","ofType":null},{"kind":"OBJECT","name":"DisconnectedEvent","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"DiscussionCategory","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null},{"kind":"OBJECT","name":"DiscussionPoll","ofType":null},{"kind":"OBJECT","name":"DiscussionPollOption","ofType":null},{"kind":"OBJECT","name":"DraftIssue","ofType":null},{"kind":"OBJECT","name":"Enterprise","ofType":null},{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null},{"kind":"OBJECT","name":"EnterpriseIdentityProvider","ofType":null},{"kind":"OBJECT","name":"EnterpriseRepositoryInfo","ofType":null},{"kind":"OBJECT","name":"EnterpriseServerInstallation","ofType":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccount","ofType":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountEmail","ofType":null},{"kind":"OBJECT","name":"EnterpriseServerUserAccountsUpload","ofType":null},{"kind":"OBJECT","name":"EnterpriseUserAccount","ofType":null},{"kind":"OBJECT","name":"Environment","ofType":null},{"kind":"OBJECT","name":"ExternalIdentity","ofType":null},{"kind":"OBJECT","name":"Gist","ofType":null},{"kind":"OBJECT","name":"GistComment","ofType":null},{"kind":"OBJECT","name":"HeadRefDeletedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefForcePushedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefRestoredEvent","ofType":null},{"kind":"OBJECT","name":"IpAllowListEntry","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"Label","ofType":null},{"kind":"OBJECT","name":"LabeledEvent","ofType":null},{"kind":"OBJECT","name":"Language","ofType":null},{"kind":"OBJECT","name":"License","ofType":null},{"kind":"OBJECT","name":"LinkedBranch","ofType":null},{"kind":"OBJECT","name":"LockedEvent","ofType":null},{"kind":"OBJECT","name":"Mannequin","ofType":null},{"kind":"OBJECT","name":"MarkedAsDuplicateEvent","ofType":null},{"kind":"OBJECT","name":"MarketplaceCategory","ofType":null},{"kind":"OBJECT","name":"MarketplaceListing","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposClearAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"MentionedEvent","ofType":null},{"kind":"OBJECT","name":"MergedEvent","ofType":null},{"kind":"OBJECT","name":"MigrationSource","ofType":null},{"kind":"OBJECT","name":"Milestone","ofType":null},{"kind":"OBJECT","name":"MilestonedEvent","ofType":null},{"kind":"OBJECT","name":"MovedColumnsInProjectEvent","ofType":null},{"kind":"OBJECT","name":"OIDCProvider","ofType":null},{"kind":"OBJECT","name":"OauthApplicationCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgBlockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteToBusinessAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessApprovedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessDeniedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessRequestedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveOutsideCollaboratorAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRestoreMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUnblockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateDefaultRepositoryPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryCreationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"OrganizationIdentityProvider","ofType":null},{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null},{"kind":"OBJECT","name":"OrganizationMigration","ofType":null},{"kind":"OBJECT","name":"Package","ofType":null},{"kind":"OBJECT","name":"PackageFile","ofType":null},{"kind":"OBJECT","name":"PackageTag","ofType":null},{"kind":"OBJECT","name":"PackageVersion","ofType":null},{"kind":"OBJECT","name":"PinnedDiscussion","ofType":null},{"kind":"OBJECT","name":"PinnedEvent","ofType":null},{"kind":"OBJECT","name":"PinnedIssue","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"Project","ofType":null},{"kind":"OBJECT","name":"ProjectCard","ofType":null},{"kind":"OBJECT","name":"ProjectColumn","ofType":null},{"kind":"OBJECT","name":"ProjectV2","ofType":null},{"kind":"OBJECT","name":"ProjectV2Field","ofType":null},{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldDateValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldIterationValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldNumberValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldSingleSelectValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldTextValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2IterationField","ofType":null},{"kind":"OBJECT","name":"ProjectV2SingleSelectField","ofType":null},{"kind":"OBJECT","name":"ProjectV2View","ofType":null},{"kind":"OBJECT","name":"ProjectV2Workflow","ofType":null},{"kind":"OBJECT","name":"PublicKey","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"PullRequestCommit","ofType":null},{"kind":"OBJECT","name":"PullRequestCommitCommentThread","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null},{"kind":"OBJECT","name":"PullRequestThread","ofType":null},{"kind":"OBJECT","name":"Push","ofType":null},{"kind":"OBJECT","name":"PushAllowance","ofType":null},{"kind":"OBJECT","name":"Reaction","ofType":null},{"kind":"OBJECT","name":"ReadyForReviewEvent","ofType":null},{"kind":"OBJECT","name":"Ref","ofType":null},{"kind":"OBJECT","name":"ReferencedEvent","ofType":null},{"kind":"OBJECT","name":"Release","ofType":null},{"kind":"OBJECT","name":"ReleaseAsset","ofType":null},{"kind":"OBJECT","name":"RemovedFromProjectEvent","ofType":null},{"kind":"OBJECT","name":"RenamedTitleEvent","ofType":null},{"kind":"OBJECT","name":"ReopenedEvent","ofType":null},{"kind":"OBJECT","name":"RepoAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoArchivedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoChangeMergeSettingAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigLockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigUnlockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoDestroyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"RepositoryInvitation","ofType":null},{"kind":"OBJECT","name":"RepositoryMigration","ofType":null},{"kind":"OBJECT","name":"RepositoryTopic","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVulnerabilityAlert","ofType":null},{"kind":"OBJECT","name":"ReviewDismissalAllowance","ofType":null},{"kind":"OBJECT","name":"ReviewDismissedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewRequest","ofType":null},{"kind":"OBJECT","name":"ReviewRequestRemovedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewRequestedEvent","ofType":null},{"kind":"OBJECT","name":"SavedReply","ofType":null},{"kind":"OBJECT","name":"SecurityAdvisory","ofType":null},{"kind":"OBJECT","name":"SponsorsActivity","ofType":null},{"kind":"OBJECT","name":"SponsorsListing","ofType":null},{"kind":"OBJECT","name":"SponsorsListingFeaturedItem","ofType":null},{"kind":"OBJECT","name":"SponsorsTier","ofType":null},{"kind":"OBJECT","name":"Sponsorship","ofType":null},{"kind":"OBJECT","name":"SponsorshipNewsletter","ofType":null},{"kind":"OBJECT","name":"Status","ofType":null},{"kind":"OBJECT","name":"StatusCheckRollup","ofType":null},{"kind":"OBJECT","name":"StatusContext","ofType":null},{"kind":"OBJECT","name":"SubscribedEvent","ofType":null},{"kind":"OBJECT","name":"Tag","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null},{"kind":"OBJECT","name":"TeamAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddRepositoryAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamChangeParentTeamAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null},{"kind":"OBJECT","name":"TeamRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveRepositoryAuditEntry","ofType":null},{"kind":"OBJECT","name":"Topic","ofType":null},{"kind":"OBJECT","name":"TransferredEvent","ofType":null},{"kind":"OBJECT","name":"Tree","ofType":null},{"kind":"OBJECT","name":"UnassignedEvent","ofType":null},{"kind":"OBJECT","name":"UnlabeledEvent","ofType":null},{"kind":"OBJECT","name":"UnlockedEvent","ofType":null},{"kind":"OBJECT","name":"UnmarkedAsDuplicateEvent","ofType":null},{"kind":"OBJECT","name":"UnpinnedEvent","ofType":null},{"kind":"OBJECT","name":"UnsubscribedEvent","ofType":null},{"kind":"OBJECT","name":"User","ofType":null},{"kind":"OBJECT","name":"UserBlockedEvent","ofType":null},{"kind":"OBJECT","name":"UserContentEdit","ofType":null},{"kind":"OBJECT","name":"UserStatus","ofType":null},{"kind":"OBJECT","name":"VerifiableDomain","ofType":null},{"kind":"OBJECT","name":"Workflow","ofType":null},{"kind":"OBJECT","name":"WorkflowRun","ofType":null}]},{"kind":"ENUM","name":"NotificationRestrictionSettingValue","description":"The possible values for the notification restriction setting.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ENABLED","description":"The setting is enabled for the owner.","isDeprecated":false,"deprecationReason":null},{"name":"DISABLED","description":"The setting is disabled for the owner.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OIDCProvider","description":"An OIDC identity provider configured to provision identities for an enterprise.","fields":[{"name":"enterprise","description":"The enterprise this identity provider belongs to.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"externalIdentities","description":"ExternalIdentities provisioned by this identity provider.","args":[{"name":"membersOnly","description":"Filter to external identities with valid org membership only","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"login","description":"Filter to external identities with the users login","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"userName","description":"Filter to external identities with the users userName/NameID attribute","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ExternalIdentityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"providerType","description":"The OIDC identity provider type","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OIDCProviderType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tenantId","description":"The id of the tenant this provider is attached to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OIDCProviderType","description":"The OIDC identity provider type","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AAD","description":"Azure Active Directory","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"OauthApplicationAuditEntryData","description":"Metadata for an audit entry with action oauth_application.*","fields":[{"name":"oauthApplicationName","description":"The name of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationResourcePath","description":"The HTTP path for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationUrl","description":"The HTTP URL for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"OauthApplicationCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessApprovedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessDeniedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessRequestedAuditEntry","ofType":null}]},{"kind":"OBJECT","name":"OauthApplicationCreateAuditEntry","description":"Audit log entry for a oauth_application.create event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"applicationUrl","description":"The application URL of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"callbackUrl","description":"The callback URL of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationName","description":"The name of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationResourcePath","description":"The HTTP path for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationUrl","description":"The HTTP URL for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rateLimit","description":"The rate limit of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of the OAuth Application.","args":[],"type":{"kind":"ENUM","name":"OauthApplicationCreateAuditEntryState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OauthApplicationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OauthApplicationCreateAuditEntryState","description":"The state of an OAuth Application when it was created.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ACTIVE","description":"The OAuth Application was active and allowed to have OAuth Accesses.","isDeprecated":false,"deprecationReason":null},{"name":"SUSPENDED","description":"The OAuth Application was suspended from generating OAuth Accesses due to abuse or security concerns.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING_DELETION","description":"The OAuth Application was in the process of being deleted.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OperationType","description":"The corresponding operation type for the action","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ACCESS","description":"An existing resource was accessed","isDeprecated":false,"deprecationReason":null},{"name":"AUTHENTICATION","description":"A resource performed an authentication event","isDeprecated":false,"deprecationReason":null},{"name":"CREATE","description":"A new resource was created","isDeprecated":false,"deprecationReason":null},{"name":"MODIFY","description":"An existing resource was modified","isDeprecated":false,"deprecationReason":null},{"name":"REMOVE","description":"An existing resource was removed","isDeprecated":false,"deprecationReason":null},{"name":"RESTORE","description":"An existing resource was restored","isDeprecated":false,"deprecationReason":null},{"name":"TRANSFER","description":"An existing resource was transferred between multiple resources","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OrderDirection","description":"Possible directions in which to order a list of items when provided an `orderBy` argument.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ASC","description":"Specifies an ascending order for a given `orderBy` argument.","isDeprecated":false,"deprecationReason":null},{"name":"DESC","description":"Specifies a descending order for a given `orderBy` argument.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgAddBillingManagerAuditEntry","description":"Audit log entry for a org.add_billing_manager","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"invitationEmail","description":"The email address used to invite a billing manager for the organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgAddMemberAuditEntry","description":"Audit log entry for a org.add_member","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permission","description":"The permission level of the member added to the organization.","args":[],"type":{"kind":"ENUM","name":"OrgAddMemberAuditEntryPermission","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgAddMemberAuditEntryPermission","description":"The permissions available to members on an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"READ","description":"Can read and clone repositories.","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"Can read, clone, push, and add collaborators to repositories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgBlockUserAuditEntry","description":"Audit log entry for a org.block_user","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUser","description":"The blocked user.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUserName","description":"The username of the blocked user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUserResourcePath","description":"The HTTP path for the blocked user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUserUrl","description":"The HTTP URL for the blocked user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgConfigDisableCollaboratorsOnlyAuditEntry","description":"Audit log entry for a org.config.disable_collaborators_only event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgConfigEnableCollaboratorsOnlyAuditEntry","description":"Audit log entry for a org.config.enable_collaborators_only event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgCreateAuditEntry","description":"Audit log entry for a org.create event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"billingPlan","description":"The billing plan for the Organization.","args":[],"type":{"kind":"ENUM","name":"OrgCreateAuditEntryBillingPlan","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgCreateAuditEntryBillingPlan","description":"The billing plans available for organizations.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"FREE","description":"Free Plan","isDeprecated":false,"deprecationReason":null},{"name":"BUSINESS","description":"Team Plan","isDeprecated":false,"deprecationReason":null},{"name":"BUSINESS_PLUS","description":"Enterprise Cloud Plan","isDeprecated":false,"deprecationReason":null},{"name":"UNLIMITED","description":"Legacy Unlimited Plan","isDeprecated":false,"deprecationReason":null},{"name":"TIERED_PER_SEAT","description":"Tiered Per Seat Plan","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgDisableOauthAppRestrictionsAuditEntry","description":"Audit log entry for a org.disable_oauth_app_restrictions event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgDisableSamlAuditEntry","description":"Audit log entry for a org.disable_saml event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"digestMethodUrl","description":"The SAML provider\'s digest algorithm URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issuerUrl","description":"The SAML provider\'s issuer URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"signatureMethodUrl","description":"The SAML provider\'s signature algorithm URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"singleSignOnUrl","description":"The SAML provider\'s single sign-on URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgDisableTwoFactorRequirementAuditEntry","description":"Audit log entry for a org.disable_two_factor_requirement event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgEnableOauthAppRestrictionsAuditEntry","description":"Audit log entry for a org.enable_oauth_app_restrictions event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgEnableSamlAuditEntry","description":"Audit log entry for a org.enable_saml event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"digestMethodUrl","description":"The SAML provider\'s digest algorithm URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issuerUrl","description":"The SAML provider\'s issuer URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"signatureMethodUrl","description":"The SAML provider\'s signature algorithm URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"singleSignOnUrl","description":"The SAML provider\'s single sign-on URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgEnableTwoFactorRequirementAuditEntry","description":"Audit log entry for a org.enable_two_factor_requirement event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"OrgEnterpriseOwnerOrder","description":"Ordering options for an organization\'s enterprise owner connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order enterprise owners by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrgEnterpriseOwnerOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgEnterpriseOwnerOrderField","description":"Properties by which enterprise owners can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOGIN","description":"Order enterprise owners by login.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgInviteMemberAuditEntry","description":"Audit log entry for a org.invite_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The email address of the organization invitation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationInvitation","description":"The organization invitation.","args":[],"type":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgInviteToBusinessAuditEntry","description":"Audit log entry for a org.invite_to_business event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgOauthAppAccessApprovedAuditEntry","description":"Audit log entry for a org.oauth_app_access_approved event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationName","description":"The name of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationResourcePath","description":"The HTTP path for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationUrl","description":"The HTTP URL for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OauthApplicationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgOauthAppAccessDeniedAuditEntry","description":"Audit log entry for a org.oauth_app_access_denied event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationName","description":"The name of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationResourcePath","description":"The HTTP path for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationUrl","description":"The HTTP URL for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OauthApplicationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgOauthAppAccessRequestedAuditEntry","description":"Audit log entry for a org.oauth_app_access_requested event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationName","description":"The name of the OAuth Application.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationResourcePath","description":"The HTTP path for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oauthApplicationUrl","description":"The HTTP URL for the OAuth Application","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OauthApplicationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgRemoveBillingManagerAuditEntry","description":"Audit log entry for a org.remove_billing_manager event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reason","description":"The reason for the billing manager being removed.","args":[],"type":{"kind":"ENUM","name":"OrgRemoveBillingManagerAuditEntryReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgRemoveBillingManagerAuditEntryReason","description":"The reason a billing manager was removed from an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE","description":"The organization required 2FA of its billing managers and this user did not have 2FA enabled.","isDeprecated":false,"deprecationReason":null},{"name":"SAML_EXTERNAL_IDENTITY_MISSING","description":"SAML external identity missing","isDeprecated":false,"deprecationReason":null},{"name":"SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY","description":"SAML SSO enforcement requires an external identity","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgRemoveMemberAuditEntry","description":"Audit log entry for a org.remove_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membershipTypes","description":"The types of membership the member has with the organization.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrgRemoveMemberAuditEntryMembershipType","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reason","description":"The reason for the member being removed.","args":[],"type":{"kind":"ENUM","name":"OrgRemoveMemberAuditEntryReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgRemoveMemberAuditEntryMembershipType","description":"The type of membership a user has with an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SUSPENDED","description":"A suspended member.","isDeprecated":false,"deprecationReason":null},{"name":"DIRECT_MEMBER","description":"A direct member is a user that is a member of the Organization.","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"Organization administrators have full access and can change several settings, including the names of repositories that belong to the Organization and Owners team membership. In addition, organization admins can delete the organization and all of its repositories.","isDeprecated":false,"deprecationReason":null},{"name":"BILLING_MANAGER","description":"A billing manager is a user who manages the billing settings for the Organization, such as updating payment information.","isDeprecated":false,"deprecationReason":null},{"name":"UNAFFILIATED","description":"An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the Organization.","isDeprecated":false,"deprecationReason":null},{"name":"OUTSIDE_COLLABORATOR","description":"An outside collaborator is a person who isn\'t explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OrgRemoveMemberAuditEntryReason","description":"The reason a member was removed from an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE","description":"The organization required 2FA of its billing managers and this user did not have 2FA enabled.","isDeprecated":false,"deprecationReason":null},{"name":"SAML_EXTERNAL_IDENTITY_MISSING","description":"SAML external identity missing","isDeprecated":false,"deprecationReason":null},{"name":"SAML_SSO_ENFORCEMENT_REQUIRES_EXTERNAL_IDENTITY","description":"SAML SSO enforcement requires an external identity","isDeprecated":false,"deprecationReason":null},{"name":"USER_ACCOUNT_DELETED","description":"User account has been deleted","isDeprecated":false,"deprecationReason":null},{"name":"TWO_FACTOR_ACCOUNT_RECOVERY","description":"User was removed from organization during account recovery","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgRemoveOutsideCollaboratorAuditEntry","description":"Audit log entry for a org.remove_outside_collaborator event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membershipTypes","description":"The types of membership the outside collaborator has with the organization.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrgRemoveOutsideCollaboratorAuditEntryMembershipType","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reason","description":"The reason for the outside collaborator being removed from the Organization.","args":[],"type":{"kind":"ENUM","name":"OrgRemoveOutsideCollaboratorAuditEntryReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgRemoveOutsideCollaboratorAuditEntryMembershipType","description":"The type of membership a user has with an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OUTSIDE_COLLABORATOR","description":"An outside collaborator is a person who isn\'t explicitly a member of the Organization, but who has Read, Write, or Admin permissions to one or more repositories in the organization.","isDeprecated":false,"deprecationReason":null},{"name":"UNAFFILIATED","description":"An unaffiliated collaborator is a person who is not a member of the Organization and does not have access to any repositories in the organization.","isDeprecated":false,"deprecationReason":null},{"name":"BILLING_MANAGER","description":"A billing manager is a user who manages the billing settings for the Organization, such as updating payment information.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OrgRemoveOutsideCollaboratorAuditEntryReason","description":"The reason an outside collaborator was removed from an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TWO_FACTOR_REQUIREMENT_NON_COMPLIANCE","description":"The organization required 2FA of its billing managers and this user did not have 2FA enabled.","isDeprecated":false,"deprecationReason":null},{"name":"SAML_EXTERNAL_IDENTITY_MISSING","description":"SAML external identity missing","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgRestoreMemberAuditEntry","description":"Audit log entry for a org.restore_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"restoredCustomEmailRoutingsCount","description":"The number of custom email routings for the restored member.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"restoredIssueAssignmentsCount","description":"The number of issue assignments for the restored member.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"restoredMemberships","description":"Restored organization membership objects.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"OrgRestoreMemberAuditEntryMembership","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"restoredMembershipsCount","description":"The number of restored memberships.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"restoredRepositoriesCount","description":"The number of repositories of the restored member.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"restoredRepositoryStarsCount","description":"The number of starred repositories for the restored member.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"restoredRepositoryWatchesCount","description":"The number of watched repositories for the restored member.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"OrgRestoreMemberAuditEntryMembership","description":"Types of memberships that can be restored for an Organization member.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"OrgRestoreMemberMembershipOrganizationAuditEntryData","ofType":null},{"kind":"OBJECT","name":"OrgRestoreMemberMembershipRepositoryAuditEntryData","ofType":null},{"kind":"OBJECT","name":"OrgRestoreMemberMembershipTeamAuditEntryData","ofType":null}]},{"kind":"OBJECT","name":"OrgRestoreMemberMembershipOrganizationAuditEntryData","description":"Metadata for an organization membership for org.restore_member actions","fields":[{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgRestoreMemberMembershipRepositoryAuditEntryData","description":"Metadata for a repository membership for org.restore_member actions","fields":[{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgRestoreMemberMembershipTeamAuditEntryData","description":"Metadata for a team membership for org.restore_member actions","fields":[{"name":"team","description":"The team associated with the action","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamName","description":"The name of the team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamResourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamUrl","description":"The HTTP URL for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"TeamAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgUnblockUserAuditEntry","description":"Audit log entry for a org.unblock_user","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUser","description":"The user being unblocked by the organization.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUserName","description":"The username of the blocked user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUserResourcePath","description":"The HTTP path for the blocked user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockedUserUrl","description":"The HTTP URL for the blocked user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrgUpdateDefaultRepositoryPermissionAuditEntry","description":"Audit log entry for a org.update_default_repository_permission","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permission","description":"The new base repository permission level for the organization.","args":[],"type":{"kind":"ENUM","name":"OrgUpdateDefaultRepositoryPermissionAuditEntryPermission","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permissionWas","description":"The former base repository permission level for the organization.","args":[],"type":{"kind":"ENUM","name":"OrgUpdateDefaultRepositoryPermissionAuditEntryPermission","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgUpdateDefaultRepositoryPermissionAuditEntryPermission","description":"The default permission a repository can have in an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"READ","description":"Can read and clone repositories.","isDeprecated":false,"deprecationReason":null},{"name":"WRITE","description":"Can read, clone and push to repositories.","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"Can read, clone, push, and add collaborators to repositories.","isDeprecated":false,"deprecationReason":null},{"name":"NONE","description":"No default permission value.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgUpdateMemberAuditEntry","description":"Audit log entry for a org.update_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permission","description":"The new member permission level for the organization.","args":[],"type":{"kind":"ENUM","name":"OrgUpdateMemberAuditEntryPermission","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permissionWas","description":"The former member permission level for the organization.","args":[],"type":{"kind":"ENUM","name":"OrgUpdateMemberAuditEntryPermission","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgUpdateMemberAuditEntryPermission","description":"The permissions available to members on an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"READ","description":"Can read and clone repositories.","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"Can read, clone, push, and add collaborators to repositories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryCreationPermissionAuditEntry","description":"Audit log entry for a org.update_member_repository_creation_permission event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"canCreateRepositories","description":"Can members create repositories in the organization.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"The permission for visibility level of repositories for this organization.","args":[],"type":{"kind":"ENUM","name":"OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrgUpdateMemberRepositoryCreationPermissionAuditEntryVisibility","description":"The permissions available for repository creation on an Organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ALL","description":"All organization members are restricted from creating any repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"All organization members are restricted from creating public repositories.","isDeprecated":false,"deprecationReason":null},{"name":"NONE","description":"All organization members are allowed to create any repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"All organization members are restricted from creating private repositories.","isDeprecated":false,"deprecationReason":null},{"name":"INTERNAL","description":"All organization members are restricted from creating internal repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC_INTERNAL","description":"All organization members are restricted from creating public or internal repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE_INTERNAL","description":"All organization members are restricted from creating private or internal repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC_PRIVATE","description":"All organization members are restricted from creating public or private repositories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry","description":"Audit log entry for a org.update_member_repository_invitation_permission event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"canInviteOutsideCollaboratorsToRepositories","description":"Can outside collaborators be invited to repositories in the organization.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Organization","description":"An account on GitHub, with one or more owners, that has repositories, members and teams.","fields":[{"name":"announcement","description":"The text of the announcement","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"announcementExpiresAt","description":"The expiration date of the announcement, if any","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"announcementUserDismissible","description":"Whether the announcement can be dismissed by the user","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"anyPinnableItems","description":"Determine if this repository owner has any items that can be pinned to their profile.","args":[{"name":"type","description":"Filter to only a particular kind of pinnable item.","type":{"kind":"ENUM","name":"PinnableItemType","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"auditLog","description":"Audit log entries of the organization","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"query","description":"The query string to filter audit entries","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the returned audit log entries.","type":{"kind":"INPUT_OBJECT","name":"AuditLogOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationAuditEntryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"avatarUrl","description":"A URL pointing to the organization\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The organization\'s public profile description.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"descriptionHTML","description":"The organization\'s public profile description rendered to HTML.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"domains","description":"A list of domains owned by the organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"isVerified","description":"Filter by if the domain is verified.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"},{"name":"isApproved","description":"Filter by if the domain is approved.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"},{"name":"orderBy","description":"Ordering options for verifiable domains returned.","type":{"kind":"INPUT_OBJECT","name":"VerifiableDomainOrder","ofType":null},"defaultValue":"{field: DOMAIN, direction: ASC}"}],"type":{"kind":"OBJECT","name":"VerifiableDomainConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The organization\'s public email.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseOwners","description":"A list of owners of the organization\'s enterprise account.","args":[{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"organizationRole","description":"The organization role to filter by.","type":{"kind":"ENUM","name":"RoleInOrganization","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for enterprise owners returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"OrgEnterpriseOwnerOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationEnterpriseOwnerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"estimatedNextSponsorsPayoutInCents","description":"The estimated next GitHub Sponsors payout for this user/organization in cents (USD).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasSponsorsListing","description":"True if this user/organization has a GitHub Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"interactionAbility","description":"The interaction ability settings for this organization.","args":[],"type":{"kind":"OBJECT","name":"RepositoryInteractionAbility","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEnabledSetting","description":"The setting value for whether the organization has an IP allow list enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IpAllowListEnabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEntries","description":"The IP addresses that are allowed to access resources owned by the organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for IP allow list entries returned.","type":{"kind":"INPUT_OBJECT","name":"IpAllowListEntryOrder","ofType":null},"defaultValue":"{field: ALLOW_LIST_VALUE, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IpAllowListEntryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListForInstalledAppsEnabledSetting","description":"The setting value for whether the organization has IP allow list configuration for installed GitHub Apps enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IpAllowListForInstalledAppsEnabledSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSponsoredBy","description":"Whether the given account is sponsoring this user/organization.","args":[{"name":"accountLogin","description":"The target account\'s login.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSponsoringViewer","description":"True if the viewer is sponsored by this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isVerified","description":"Whether the organization has verified its profile email and website.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"itemShowcase","description":"Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProfileItemShowcase","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"location","description":"The organization\'s public profile location.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The organization\'s login name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mannequins","description":"A list of all mannequins for this organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for mannequins returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"MannequinOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"MannequinConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"memberStatuses","description":"Get the status messages members of this entity have set that are either public or visible only to the organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for user statuses returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"UserStatusOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserStatusConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersCanForkPrivateRepositories","description":"Members can fork private repositories in this organization","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersWithRole","description":"A list of users who are members of this organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationMemberConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"monthlyEstimatedSponsorsIncomeInCents","description":"The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The organization\'s public profile name.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"newTeamResourcePath","description":"The HTTP path creating a new team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"newTeamUrl","description":"The HTTP URL creating a new team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"notificationDeliveryRestrictionEnabledSetting","description":"Indicates if email notification delivery for this organization is restricted to verified or approved domains.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"NotificationRestrictionSettingValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"organizationBillingEmail","description":"The billing email for the organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"packages","description":"A list of packages under the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"names","description":"Find packages by their names.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"Find packages in a repository by ID.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"packageType","description":"Filter registry package by type.","type":{"kind":"ENUM","name":"PackageType","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering of the returned packages.","type":{"kind":"INPUT_OBJECT","name":"PackageOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PackageConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pendingMembers","description":"A list of users who have been invited to join this organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnableItems","description":"A list of repositories and gists this profile owner can pin to their profile.","args":[{"name":"types","description":"Filter the types of pinnable items that are returned.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PinnableItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedItems","description":"A list of repositories and gists this profile owner has pinned to their profile","args":[{"name":"types","description":"Filter the types of pinned items that are returned.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PinnableItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedItemsRemaining","description":"Returns how many more items this profile owner can pin to their profile.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"Find project by number.","args":[{"name":"number","description":"The project number to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"Find a project by number.","args":[{"name":"number","description":"The project number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projects","description":"A list of projects under the owner.","args":[{"name":"orderBy","description":"Ordering options for projects returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectOrder","ofType":null},"defaultValue":null},{"name":"search","description":"Query to search projects by, currently only searching by name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"states","description":"A list of states to filter the projects by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectState","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsResourcePath","description":"The HTTP path listing organization\'s projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsUrl","description":"The HTTP URL listing organization\'s projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"A list of projects under the owner.","args":[{"name":"query","description":"A project to search for under the the owner.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the returned projects.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Order","ofType":null},"defaultValue":"{field: NUMBER, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"recentProjects","description":"Recent projects that this user has modified in the context of the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositories","description":"A list of repositories that the user owns.","args":[{"name":"privacy","description":"If non-null, filters repositories according to privacy","type":{"kind":"ENUM","name":"RepositoryPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":null},{"name":"affiliations","description":"Array of viewer\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":null},{"name":"ownerAffiliations","description":"Array of owner\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":"[OWNER, COLLABORATOR]"},{"name":"isLocked","description":"If non-null, filters repositories according to whether they have been locked","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"isFork","description":"If non-null, filters repositories according to whether they are forks of another repository","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"Find Repository.","args":[{"name":"name","description":"Name of Repository to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"followRenames","description":"Follow repository renames. If disabled, a repository referenced by its old name will return an error.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryDiscussionComments","description":"Discussion comments this user has authored.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"repositoryId","description":"Filter discussion comments to only those in a specific repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"onlyAnswers","description":"Filter discussion comments to only those that were marked as the answer","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryDiscussions","description":"Discussions this user has started.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for discussions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"DiscussionOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"},{"name":"repositoryId","description":"Filter discussions to only those in a specific repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"answered","description":"Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryMigrations","description":"A list of all repository migrations for this organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"state","description":"Filter repository migrations by state.","type":{"kind":"ENUM","name":"MigrationState","ofType":null},"defaultValue":null},{"name":"repositoryName","description":"Filter repository migrations by repository name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repository migrations returned.","type":{"kind":"INPUT_OBJECT","name":"RepositoryMigrationOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryMigrationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresTwoFactorAuthentication","description":"When true the organization requires all members, billing managers, and outside collaborators to enable two-factor authentication.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"samlIdentityProvider","description":"The Organization\'s SAML identity providers","args":[],"type":{"kind":"OBJECT","name":"OrganizationIdentityProvider","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsoring","description":"List of users and organizations this entity is sponsoring.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the users and organizations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorOrder","ofType":null},"defaultValue":"{field: RELEVANCE, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsors","description":"List of sponsors for this user or organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"tierId","description":"If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsors returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorOrder","ofType":null},"defaultValue":"{field: RELEVANCE, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsActivities","description":"Events involving this sponsorable, such as new sponsorships.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"period","description":"Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.","type":{"kind":"ENUM","name":"SponsorsActivityPeriod","ofType":null},"defaultValue":"MONTH"},{"name":"since","description":"Filter activities to those that occurred on or after this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"until","description":"Filter activities to those that occurred before this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for activity returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorsActivityOrder","ofType":null},"defaultValue":"{field: TIMESTAMP, direction: DESC}"},{"name":"actions","description":"Filter activities to only the specified actions.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsActivityAction","ofType":null}}},"defaultValue":"[]"},{"name":"includeAsSponsor","description":"Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsActivityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsListing","description":"The GitHub Sponsors listing for this user or organization.","args":[],"type":{"kind":"OBJECT","name":"SponsorsListing","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipForViewerAsSponsor","description":"The sponsorship from the viewer to this user/organization; that is, the sponsorship where you\'re the sponsor.","args":[{"name":"activeOnly","description":"Whether to return the sponsorship only if it\'s still active. Pass false to get the viewer\'s sponsorship back even if it has been cancelled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipForViewerAsSponsorable","description":"The sponsorship from this user/organization to the viewer; that is, the sponsorship you\'re receiving.","args":[{"name":"activeOnly","description":"Whether to return the sponsorship only if it\'s still active. Pass false to get the sponsorship back even if it has been cancelled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipNewsletters","description":"List of sponsorship updates sent from this sponsorable to sponsors.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsorship updates returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipNewsletterOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipNewsletterConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipsAsMaintainer","description":"The sponsorships where this user or organization is the maintainer receiving the funds.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"includePrivate","description":"Whether or not to include private sponsorships in the result set","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","ofType":null},"defaultValue":null},{"name":"activeOnly","description":"Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipsAsSponsor","description":"The sponsorships where this user or organization is the funder.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","ofType":null},"defaultValue":null},{"name":"maintainerLogins","description":"Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"activeOnly","description":"Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"Find an organization\'s team by its slug.","args":[{"name":"slug","description":"The name or slug of the team to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teams","description":"A list of teams in this organization.","args":[{"name":"privacy","description":"If non-null, filters teams according to privacy","type":{"kind":"ENUM","name":"TeamPrivacy","ofType":null},"defaultValue":null},{"name":"role","description":"If non-null, filters teams according to whether the viewer is an admin or member on team","type":{"kind":"ENUM","name":"TeamRole","ofType":null},"defaultValue":null},{"name":"query","description":"If non-null, filters teams with query on team name and team slug","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"userLogins","description":"User logins to filter by","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for teams returned from the connection","type":{"kind":"INPUT_OBJECT","name":"TeamOrder","ofType":null},"defaultValue":null},{"name":"ldapMapped","description":"If true, filters teams that are mapped to an LDAP Group (Enterprise only)","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"rootTeamsOnly","description":"If true, restrict to only root teams","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamsResourcePath","description":"The HTTP path listing organization\'s teams","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamsUrl","description":"The HTTP URL listing organization\'s teams","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalSponsorshipAmountAsSponsorInCents","description":"The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.","args":[{"name":"since","description":"Filter payments to those that occurred on or after this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"until","description":"Filter payments to those that occurred before this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"sponsorableLogins","description":"Filter payments to those made to the users or organizations with the specified usernames.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":"[]"}],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"twitterUsername","description":"The organization\'s Twitter username.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanAdminister","description":"Organization is adminable by the viewer.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanChangePinnedItems","description":"Can the viewer pin repositories and gists to the profile?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanCreateProjects","description":"Can the current viewer create new projects on this owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanCreateRepositories","description":"Viewer can create repositories on this organization","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanCreateTeams","description":"Viewer can create teams on this organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSponsor","description":"Whether or not the viewer is able to sponsor this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsAMember","description":"Viewer is an active member of this organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsFollowing","description":"Whether or not this Organization is followed by the viewer.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsSponsoring","description":"True if the viewer is sponsoring this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"webCommitSignoffRequired","description":"Whether contributors are required to sign off on web-based commits for repositories in this organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"websiteUrl","description":"The organization\'s public profile URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Actor","ofType":null},{"kind":"INTERFACE","name":"PackageOwner","ofType":null},{"kind":"INTERFACE","name":"ProjectOwner","ofType":null},{"kind":"INTERFACE","name":"ProjectV2Owner","ofType":null},{"kind":"INTERFACE","name":"ProjectV2Recent","ofType":null},{"kind":"INTERFACE","name":"RepositoryDiscussionAuthor","ofType":null},{"kind":"INTERFACE","name":"RepositoryDiscussionCommentAuthor","ofType":null},{"kind":"INTERFACE","name":"RepositoryOwner","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"MemberStatusable","ofType":null},{"kind":"INTERFACE","name":"ProfileOwner","ofType":null},{"kind":"INTERFACE","name":"Sponsorable","ofType":null},{"kind":"INTERFACE","name":"AnnouncementBanner","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"OrganizationAuditEntry","description":"An audit entry in an organization audit log.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"MembersCanDeleteReposClearAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"OauthApplicationCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgBlockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteToBusinessAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessApprovedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessDeniedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessRequestedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveOutsideCollaboratorAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRestoreMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUnblockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateDefaultRepositoryPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryCreationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoArchivedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoChangeMergeSettingAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigLockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigUnlockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoDestroyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddRepositoryAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamChangeParentTeamAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveRepositoryAuditEntry","ofType":null}]},{"kind":"OBJECT","name":"OrganizationAuditEntryConnection","description":"The connection type for OrganizationAuditEntry.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationAuditEntryEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"OrganizationAuditEntry","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","description":"Metadata for an audit entry with action org.*","fields":[{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"MembersCanDeleteReposClearAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"MembersCanDeleteReposEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"OauthApplicationCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgBlockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgDisableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableOauthAppRestrictionsAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableSamlAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgEnableTwoFactorRequirementAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgInviteToBusinessAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessApprovedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessDeniedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgOauthAppAccessRequestedAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveBillingManagerAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRemoveOutsideCollaboratorAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRestoreMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgRestoreMemberMembershipOrganizationAuditEntryData","ofType":null},{"kind":"OBJECT","name":"OrgUnblockUserAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateDefaultRepositoryPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryCreationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"OrgUpdateMemberRepositoryInvitationPermissionAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoArchivedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoChangeMergeSettingAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigLockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigUnlockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoDestroyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddRepositoryAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamChangeParentTeamAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveRepositoryAuditEntry","ofType":null}]},{"kind":"OBJECT","name":"OrganizationAuditEntryEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"OrganizationAuditEntry","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationConnection","description":"A list of organizations managed by an enterprise.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Organization","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationEnterpriseOwnerConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationEnterpriseOwnerEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationEnterpriseOwnerEdge","description":"An enterprise owner in the context of an organization that is part of the enterprise.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationRole","description":"The role of the owner with respect to the organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RoleInOrganization","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationIdentityProvider","description":"An Identity Provider configured to provision SAML and SCIM identities for Organizations","fields":[{"name":"digestMethod","description":"The digest algorithm used to sign SAML requests for the Identity Provider.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"externalIdentities","description":"External Identities provisioned by this Identity Provider","args":[{"name":"membersOnly","description":"Filter to external identities with valid org membership only","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"login","description":"Filter to external identities with the users login","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"userName","description":"Filter to external identities with the users userName/NameID attribute","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ExternalIdentityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"idpCertificate","description":"The x509 certificate used by the Identity Provider to sign assertions and responses.","args":[],"type":{"kind":"SCALAR","name":"X509Certificate","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issuer","description":"The Issuer Entity ID for the SAML Identity Provider","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"Organization this Identity Provider belongs to","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"signatureMethod","description":"The signature algorithm used to sign SAML requests for the Identity Provider.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ssoUrl","description":"The URL endpoint for the Identity Provider\'s SAML SSO.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationInvitation","description":"An Invitation for a user to an organization.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The email address of the user invited to the organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"invitationSource","description":"The source of the invitation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrganizationInvitationSource","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"invitationType","description":"The type of invitation that was sent (e.g. email, user).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrganizationInvitationType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"invitee","description":"The user who was invited to the organization.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"inviter","description":"The user who created the invitation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization the invite is for","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Organization","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"role","description":"The user\'s pending role in the organization (e.g. member, owner).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrganizationInvitationRole","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationInvitationConnection","description":"The connection type for OrganizationInvitation.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationInvitationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationInvitationEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"OrganizationInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrganizationInvitationRole","description":"The possible organization invitation roles.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DIRECT_MEMBER","description":"The user is invited to be a direct member of the organization.","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"The user is invited to be an admin of the organization.","isDeprecated":false,"deprecationReason":null},{"name":"BILLING_MANAGER","description":"The user is invited to be a billing manager of the organization.","isDeprecated":false,"deprecationReason":null},{"name":"REINSTATE","description":"The user\'s previous role will be reinstated.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OrganizationInvitationSource","description":"The possible organization invitation sources.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"UNKNOWN","description":"The invitation was sent before this feature was added","isDeprecated":false,"deprecationReason":null},{"name":"MEMBER","description":"The invitation was created from the web interface or from API","isDeprecated":false,"deprecationReason":null},{"name":"SCIM","description":"The invitation was created from SCIM","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OrganizationInvitationType","description":"The possible organization invitation types.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"USER","description":"The invitation was to an existing user.","isDeprecated":false,"deprecationReason":null},{"name":"EMAIL","description":"The invitation was to an email address.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationMemberConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationMemberEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationMemberEdge","description":"Represents a user within an organization.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasTwoFactorEnabled","description":"Whether the organization member has two factor enabled or not. Returns null if information is not available to viewer.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"role","description":"The role this user has in the organization.","args":[],"type":{"kind":"ENUM","name":"OrganizationMemberRole","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrganizationMemberRole","description":"The possible roles within an organization for its members.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MEMBER","description":"The user is a member of the organization.","isDeprecated":false,"deprecationReason":null},{"name":"ADMIN","description":"The user is an administrator of the organization.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"OrganizationMembersCanCreateRepositoriesSettingValue","description":"The possible values for the members can create repositories setting on an organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ALL","description":"Members will be able to create public and private repositories.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"Members will be able to create only private repositories.","isDeprecated":false,"deprecationReason":null},{"name":"INTERNAL","description":"Members will be able to create only internal repositories.","isDeprecated":false,"deprecationReason":null},{"name":"DISABLED","description":"Members will not be able to create public or private repositories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationMigration","description":"A GitHub Enterprise Importer (GEI) organization migration.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"failureReason","description":"The reason the organization migration failed.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"remainingRepositoriesCount","description":"The remaining amount of repos to be migrated.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sourceOrgName","description":"The name of the source organization to be migrated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sourceOrgUrl","description":"The URL of the source organization to migrate.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The migration state.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrganizationMigrationState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"targetOrgName","description":"The name of the target organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRepositoriesCount","description":"The total amount of repositories to be migrated.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrganizationMigrationState","description":"The Octoshift Organization migration state.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NOT_STARTED","description":"The Octoshift migration has not started.","isDeprecated":false,"deprecationReason":null},{"name":"QUEUED","description":"The Octoshift migration has been queued.","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The Octoshift migration is in progress.","isDeprecated":false,"deprecationReason":null},{"name":"PRE_REPO_MIGRATION","description":"The Octoshift migration is performing pre repository migrations.","isDeprecated":false,"deprecationReason":null},{"name":"REPO_MIGRATION","description":"The Octoshift org migration is performing repository migrations.","isDeprecated":false,"deprecationReason":null},{"name":"POST_REPO_MIGRATION","description":"The Octoshift migration is performing post repository migrations.","isDeprecated":false,"deprecationReason":null},{"name":"SUCCEEDED","description":"The Octoshift migration has succeeded.","isDeprecated":false,"deprecationReason":null},{"name":"FAILED","description":"The Octoshift migration has failed.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"OrganizationOrUser","description":"Used for argument of CreateProjectV2 mutation.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"INPUT_OBJECT","name":"OrganizationOrder","description":"Ordering options for organization connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order organizations by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrganizationOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"OrganizationOrderField","description":"Properties by which organization connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order organizations by creation time","isDeprecated":false,"deprecationReason":null},{"name":"LOGIN","description":"Order organizations by login","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationTeamsHovercardContext","description":"An organization teams hovercard context","fields":[{"name":"message","description":"A string describing this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"octicon","description":"An octicon to accompany this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"relevantTeams","description":"Teams in this organization the user is a member of that are relevant","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamsResourcePath","description":"The path for the full team list for this user","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamsUrl","description":"The URL for the full team list for this user","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalTeamCount","description":"The total number of teams the user is on in the organization","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"HovercardContext","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"OrganizationsHovercardContext","description":"An organization list hovercard context","fields":[{"name":"message","description":"A string describing this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"octicon","description":"An octicon to accompany this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"relevantOrganizations","description":"Organizations this user is a member of that are relevant","args":[{"name":"orderBy","description":"Ordering options for the User\'s organizations.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"null"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalOrganizationCount","description":"The total number of organizations this user is in","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"HovercardContext","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Package","description":"Information for an uploaded package.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"latestVersion","description":"Find the latest version for the package.","args":[],"type":{"kind":"OBJECT","name":"PackageVersion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Identifies the name of the package.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"packageType","description":"Identifies the type of the package.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PackageType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository this package belongs to.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"statistics","description":"Statistics about package activity.","args":[],"type":{"kind":"OBJECT","name":"PackageStatistics","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"version","description":"Find package version by version string.","args":[{"name":"version","description":"The package version.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PackageVersion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"versions","description":"list of versions for this package","args":[{"name":"orderBy","description":"Ordering of the returned packages.","type":{"kind":"INPUT_OBJECT","name":"PackageVersionOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PackageVersionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageConnection","description":"The connection type for Package.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PackageEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Package","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Package","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageFile","description":"A file in a package version.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"md5","description":"MD5 hash of the file.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Name of the file.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"packageVersion","description":"The package version this file belongs to.","args":[],"type":{"kind":"OBJECT","name":"PackageVersion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sha1","description":"SHA1 hash of the file.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sha256","description":"SHA256 hash of the file.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"size","description":"Size of the file in bytes.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"URL to download the asset.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageFileConnection","description":"The connection type for PackageFile.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PackageFileEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PackageFile","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageFileEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PackageFile","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PackageFileOrder","description":"Ways in which lists of package files can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order package files by.","type":{"kind":"ENUM","name":"PackageFileOrderField","ofType":null},"defaultValue":null},{"name":"direction","description":"The direction in which to order package files by the specified field.","type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PackageFileOrderField","description":"Properties by which package file connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order package files by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PackageOrder","description":"Ways in which lists of packages can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order packages by.","type":{"kind":"ENUM","name":"PackageOrderField","ofType":null},"defaultValue":null},{"name":"direction","description":"The direction in which to order packages by the specified field.","type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PackageOrderField","description":"Properties by which package connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order packages by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"PackageOwner","description":"Represents an owner of a package.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"packages","description":"A list of packages under the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"names","description":"Find packages by their names.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"Find packages in a repository by ID.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"packageType","description":"Filter registry package by type.","type":{"kind":"ENUM","name":"PackageType","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering of the returned packages.","type":{"kind":"INPUT_OBJECT","name":"PackageOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PackageConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"PackageStatistics","description":"Represents a object that contains package activity statistics such as downloads.","fields":[{"name":"downloadsTotalCount","description":"Number of times the package was downloaded since it was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageTag","description":"A version tag contains the mapping between a tag name and a version.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Identifies the tag name of the version.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"version","description":"Version that the tag is associated with.","args":[],"type":{"kind":"OBJECT","name":"PackageVersion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PackageType","description":"The possible types of a package.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NPM","description":"An npm package.","isDeprecated":true,"deprecationReason":"NPM will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-11-21 UTC."},{"name":"RUBYGEMS","description":"A rubygems package.","isDeprecated":true,"deprecationReason":"RUBYGEMS will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-12-28 UTC."},{"name":"MAVEN","description":"A maven package.","isDeprecated":true,"deprecationReason":"MAVEN will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2023-02-10 UTC."},{"name":"DOCKER","description":"A docker image.","isDeprecated":true,"deprecationReason":"DOCKER will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2021-06-21 UTC."},{"name":"DEBIAN","description":"A debian package.","isDeprecated":false,"deprecationReason":null},{"name":"NUGET","description":"A nuget package.","isDeprecated":true,"deprecationReason":"NUGET will be removed from this enum as this type will be migrated to only be used by the Packages REST API. Removal on 2022-11-21 UTC."},{"name":"PYPI","description":"A python package.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PackageVersion","description":"Information about a specific package version.","fields":[{"name":"files","description":"List of files associated with this package version","args":[{"name":"orderBy","description":"Ordering of the returned package files.","type":{"kind":"INPUT_OBJECT","name":"PackageFileOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PackageFileConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"package","description":"The package associated with this version.","args":[],"type":{"kind":"OBJECT","name":"Package","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"platform","description":"The platform this version was built for.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"preRelease","description":"Whether or not this version is a pre-release.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"readme","description":"The README of this package version.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"release","description":"The release associated with this package version.","args":[],"type":{"kind":"OBJECT","name":"Release","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"statistics","description":"Statistics about package activity.","args":[],"type":{"kind":"OBJECT","name":"PackageVersionStatistics","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"summary","description":"The package version summary.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"version","description":"The version string.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageVersionConnection","description":"The connection type for PackageVersion.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PackageVersionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PackageVersion","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PackageVersionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PackageVersion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PackageVersionOrder","description":"Ways in which lists of package versions can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order package versions by.","type":{"kind":"ENUM","name":"PackageVersionOrderField","ofType":null},"defaultValue":null},{"name":"direction","description":"The direction in which to order package versions by the specified field.","type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PackageVersionOrderField","description":"Properties by which package version connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order package versions by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PackageVersionStatistics","description":"Represents a object that contains package version activity statistics such as downloads.","fields":[{"name":"downloadsTotalCount","description":"Number of times the package was downloaded since it was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PageInfo","description":"Information about pagination in a connection.","fields":[{"name":"endCursor","description":"When paginating forwards, the cursor to continue.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"hasNextPage","description":"When paginating forwards, are there more items?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasPreviousPage","description":"When paginating backwards, are there more items?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startCursor","description":"When paginating backwards, the cursor to continue.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PatchStatus","description":"The possible types of patch statuses.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ADDED","description":"The file was added. Git status \'A\'.","isDeprecated":false,"deprecationReason":null},{"name":"DELETED","description":"The file was deleted. Git status \'D\'.","isDeprecated":false,"deprecationReason":null},{"name":"RENAMED","description":"The file was renamed. Git status \'R\'.","isDeprecated":false,"deprecationReason":null},{"name":"COPIED","description":"The file was copied. Git status \'C\'.","isDeprecated":false,"deprecationReason":null},{"name":"MODIFIED","description":"The file\'s contents were changed. Git status \'M\'.","isDeprecated":false,"deprecationReason":null},{"name":"CHANGED","description":"The file\'s type was changed. Git status \'T\'.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"PermissionGranter","description":"Types that can grant permissions on a repository to a user","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null}]},{"kind":"OBJECT","name":"PermissionSource","description":"A level of permission and source for a user\'s access to a repository.","fields":[{"name":"organization","description":"The organization the repository belongs to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Organization","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permission","description":"The level of access this source has granted to the user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DefaultRepositoryPermissionField","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"source","description":"The source of this permission.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"PermissionGranter","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PinIssueInput","description":"Autogenerated input type of PinIssue","fields":null,"inputFields":[{"name":"issueId","description":"The ID of the issue to be pinned","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PinIssuePayload","description":"Autogenerated return type of PinIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue that was pinned","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"PinnableItem","description":"Types that can be pinned to a profile page.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Gist","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null}]},{"kind":"OBJECT","name":"PinnableItemConnection","description":"The connection type for PinnableItem.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"PinnableItem","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PinnableItemEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"PinnableItem","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PinnableItemType","description":"Represents items that can be pinned to a profile page or dashboard.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"REPOSITORY","description":"A repository.","isDeprecated":false,"deprecationReason":null},{"name":"GIST","description":"A gist.","isDeprecated":false,"deprecationReason":null},{"name":"ISSUE","description":"An issue.","isDeprecated":false,"deprecationReason":null},{"name":"PROJECT","description":"A project.","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST","description":"A pull request.","isDeprecated":false,"deprecationReason":null},{"name":"USER","description":"A user.","isDeprecated":false,"deprecationReason":null},{"name":"ORGANIZATION","description":"An organization.","isDeprecated":false,"deprecationReason":null},{"name":"TEAM","description":"A team.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PinnedDiscussion","description":"A Pinned Discussion is a discussion pinned to a repository\'s index page.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion that was pinned.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Discussion","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"gradientStopColors","description":"Color stops of the chosen gradient","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pattern","description":"Background texture pattern","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PinnedDiscussionPattern","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedBy","description":"The actor that pinned this discussion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Actor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"preconfiguredGradient","description":"Preconfigured background gradient option","args":[],"type":{"kind":"ENUM","name":"PinnedDiscussionGradient","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PinnedDiscussionConnection","description":"The connection type for PinnedDiscussion.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PinnedDiscussionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PinnedDiscussion","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PinnedDiscussionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PinnedDiscussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PinnedDiscussionGradient","description":"Preconfigured gradients that may be used to style discussions pinned within a repository.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"RED_ORANGE","description":"A gradient of red to orange","isDeprecated":false,"deprecationReason":null},{"name":"BLUE_MINT","description":"A gradient of blue to mint","isDeprecated":false,"deprecationReason":null},{"name":"BLUE_PURPLE","description":"A gradient of blue to purple","isDeprecated":false,"deprecationReason":null},{"name":"PINK_BLUE","description":"A gradient of pink to blue","isDeprecated":false,"deprecationReason":null},{"name":"PURPLE_CORAL","description":"A gradient of purple to coral","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"PinnedDiscussionPattern","description":"Preconfigured background patterns that may be used to style discussions pinned within a repository.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DOT_FILL","description":"A solid dot pattern","isDeprecated":false,"deprecationReason":null},{"name":"PLUS","description":"A plus sign pattern","isDeprecated":false,"deprecationReason":null},{"name":"ZAP","description":"A lightning bolt pattern","isDeprecated":false,"deprecationReason":null},{"name":"CHEVRON_UP","description":"An upward-facing chevron pattern","isDeprecated":false,"deprecationReason":null},{"name":"DOT","description":"A hollow dot pattern","isDeprecated":false,"deprecationReason":null},{"name":"HEART_FILL","description":"A heart pattern","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PinnedEvent","description":"Represents a \'pinned\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"Identifies the issue associated with the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Issue","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PinnedIssue","description":"A Pinned Issue is a issue pinned to a repository\'s index page.","fields":[{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue that was pinned.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Issue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedBy","description":"The actor that pinned this issue.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Actor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that this issue was pinned to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PinnedIssueConnection","description":"The connection type for PinnedIssue.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PinnedIssueEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PinnedIssue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PinnedIssueEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PinnedIssue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"PreciseDateTime","description":"An ISO-8601 encoded UTC date string with millisecond precision.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingDisableAuditEntry","description":"Audit log entry for a private_repository_forking.disable event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingEnableAuditEntry","description":"Audit log entry for a private_repository_forking.enable event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProfileItemShowcase","description":"A curatable list of repositories relating to a repository owner, which defaults to showing the most popular repositories they own.","fields":[{"name":"hasPinnedItems","description":"Whether or not the owner has pinned any repositories or gists.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"items","description":"The repositories and gists in the showcase. If the profile owner has any pinned items, those will be returned. Otherwise, the profile owner\'s popular repositories will be returned.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"ProfileOwner","description":"Represents any entity on GitHub that has a profile page.","fields":[{"name":"anyPinnableItems","description":"Determine if this repository owner has any items that can be pinned to their profile.","args":[{"name":"type","description":"Filter to only a particular kind of pinnable item.","type":{"kind":"ENUM","name":"PinnableItemType","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The public profile email.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"itemShowcase","description":"Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProfileItemShowcase","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"location","description":"The public profile location.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The username used to login.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The public profile name.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pinnableItems","description":"A list of repositories and gists this profile owner can pin to their profile.","args":[{"name":"types","description":"Filter the types of pinnable items that are returned.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PinnableItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedItems","description":"A list of repositories and gists this profile owner has pinned to their profile","args":[{"name":"types","description":"Filter the types of pinned items that are returned.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PinnableItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedItemsRemaining","description":"Returns how many more items this profile owner can pin to their profile.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanChangePinnedItems","description":"Can the viewer pin repositories and gists to the profile?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"websiteUrl","description":"The public profile website URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"Project","description":"Projects manage issues, pull requests and notes within a project owner.","fields":[{"name":"body","description":"The project\'s description body.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The projects description body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closed","description":"Indicates if the object is closed (definition of closed may depend on type)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closedAt","description":"Identifies the date and time when the object was closed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"columns","description":"List of columns in the project","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectColumnConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who originally created the project.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The project\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"The project\'s number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The project\'s owner. Currently limited to repositories, organizations, and users.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"ProjectOwner","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pendingCards","description":"List of pending cards in this project","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"archivedStates","description":"A list of archived states to filter the cards by","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"ProjectCardArchivedState","ofType":null}},"defaultValue":"[ARCHIVED, NOT_ARCHIVED]"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectCardConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"progress","description":"Project progress details.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectProgress","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this project","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Whether the project is open or closed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this project","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Closable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectCard","description":"A card in a project.","fields":[{"name":"column","description":"The project column this card is associated under. A card may only belong to one\\nproject column at a time. The column field will be null if the card is created\\nin a pending state and has yet to be associated with a column. Once cards are\\nassociated with a column, they will not become pending in the future.\\n","args":[],"type":{"kind":"OBJECT","name":"ProjectColumn","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"content","description":"The card content item","args":[],"type":{"kind":"UNION","name":"ProjectCardItem","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created this card","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isArchived","description":"Whether the card is archived","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"note","description":"The card note","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this card.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Project","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this card","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of ProjectCard","args":[],"type":{"kind":"ENUM","name":"ProjectCardState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this card","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectCardArchivedState","description":"The possible archived states of a project card.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ARCHIVED","description":"A project card that is archived","isDeprecated":false,"deprecationReason":null},{"name":"NOT_ARCHIVED","description":"A project card that is not archived","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectCardConnection","description":"The connection type for ProjectCard.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectCardEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectCard","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectCardEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectCard","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"ProjectCardItem","description":"Types that can be inside Project Cards.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"ENUM","name":"ProjectCardState","description":"Various content states of a ProjectCard","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CONTENT_ONLY","description":"The card has content only.","isDeprecated":false,"deprecationReason":null},{"name":"NOTE_ONLY","description":"The card has a note only.","isDeprecated":false,"deprecationReason":null},{"name":"REDACTED","description":"The card is redacted.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectColumn","description":"A column inside a project.","fields":[{"name":"cards","description":"List of cards in the column","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"archivedStates","description":"A list of archived states to filter the cards by","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"ProjectCardArchivedState","ofType":null}},"defaultValue":"[ARCHIVED, NOT_ARCHIVED]"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectCardConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The project column\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this column.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Project","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"purpose","description":"The semantic purpose of the column","args":[],"type":{"kind":"ENUM","name":"ProjectColumnPurpose","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this project column","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this project column","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectColumnConnection","description":"The connection type for ProjectColumn.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectColumnEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectColumn","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectColumnEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectColumn","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectColumnPurpose","description":"The semantic purpose of the column - todo, in progress, or done.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TODO","description":"The column contains cards still to be worked on","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The column contains cards which are currently being worked on","isDeprecated":false,"deprecationReason":null},{"name":"DONE","description":"The column contains cards which are complete","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectConnection","description":"A list of projects associated with the owner.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Project","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectOrder","description":"Ways in which lists of projects can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order projects by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order projects by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectOrderField","description":"Properties by which project connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order projects by creation time","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order projects by update time","isDeprecated":false,"deprecationReason":null},{"name":"NAME","description":"Order projects by name","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"ProjectOwner","description":"Represents an owner of a Project.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"Find project by number.","args":[{"name":"number","description":"The project number to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projects","description":"A list of projects under the owner.","args":[{"name":"orderBy","description":"Ordering options for projects returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectOrder","ofType":null},"defaultValue":null},{"name":"search","description":"Query to search projects by, currently only searching by name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"states","description":"A list of states to filter the projects by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectState","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsResourcePath","description":"The HTTP path listing owners projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsUrl","description":"The HTTP URL listing owners projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanCreateProjects","description":"Can the current viewer create new projects on this owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"ProjectProgress","description":"Project progress stats.","fields":[{"name":"doneCount","description":"The number of done cards.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"donePercentage","description":"The percentage of done cards.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enabled","description":"Whether progress tracking is enabled and cards with purpose exist for this project","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"inProgressCount","description":"The number of in-progress cards.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"inProgressPercentage","description":"The percentage of in-progress cards.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"todoCount","description":"The number of to do cards.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"todoPercentage","description":"The percentage of to do cards.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Float","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectState","description":"State of the project; either \'open\' or \'closed\'","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"The project is open.","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED","description":"The project is closed.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"ProjectTemplate","description":"GitHub-provided templates for Projects","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BASIC_KANBAN","description":"Create a board with columns for To do, In progress and Done.","isDeprecated":false,"deprecationReason":null},{"name":"AUTOMATED_KANBAN_V2","description":"Create a board with v2 triggers to automatically move cards across To do, In progress and Done columns.","isDeprecated":false,"deprecationReason":null},{"name":"AUTOMATED_REVIEWS_KANBAN","description":"Create a board with triggers to automatically move cards across columns with review automation.","isDeprecated":false,"deprecationReason":null},{"name":"BUG_TRIAGE","description":"Create a board to triage and prioritize bugs with To do, priority, and Done columns.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2","description":"New projects that manage issues, pull requests and drafts using tables and boards.","fields":[{"name":"closed","description":"Returns true if the project is closed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closedAt","description":"Identifies the date and time when the object was closed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who originally created the project.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"A field of the project","args":[{"name":"name","description":"The name of the field","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":"List of fields and their constraints in the project","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for project v2 fields returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2FieldConfigurationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"items","description":"List of items in the project","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for project v2 items returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectV2ItemOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"The project\'s number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The project\'s owner. Currently limited to organizations and users.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"ProjectV2Owner","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"public","description":"Returns true if the project is public.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"readme","description":"The project\'s readme.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositories","description":"The repositories the project is linked to.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this project","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"shortDescription","description":"The project\'s short description.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teams","description":"The teams the project is linked to.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for teams returned from this connection.","type":{"kind":"INPUT_OBJECT","name":"TeamOrder","ofType":null},"defaultValue":"{field: NAME, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"template","description":"Returns true if this project is a template.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The project\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this project","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"view","description":"A view of the project","args":[{"name":"number","description":"The number of a view belonging to the project","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2View","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"views","description":"List of views in the project","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for project v2 views returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectV2ViewOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ViewConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"workflow","description":"A workflow of the project","args":[{"name":"number","description":"The number of a workflow belonging to the project","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2Workflow","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"workflows","description":"List of the workflows in the project","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for project v2 workflows returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectV2WorkflowOrder","ofType":null},"defaultValue":"{field: NAME, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2WorkflowConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Closable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2Connection","description":"The connection type for ProjectV2.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Edge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2CustomFieldType","description":"The type of a project field.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TEXT","description":"Text","isDeprecated":false,"deprecationReason":null},{"name":"SINGLE_SELECT","description":"Single Select","isDeprecated":false,"deprecationReason":null},{"name":"NUMBER","description":"Number","isDeprecated":false,"deprecationReason":null},{"name":"DATE","description":"Date","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2Edge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2Field","description":"A field inside a project.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"dataType","description":"The field\'s type.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2FieldType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The project field\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this field.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2FieldCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"ProjectV2FieldCommon","description":"Common fields across different project field types","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"dataType","description":"The field\'s type.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2FieldType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The project field\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this field.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"ProjectV2Field","ofType":null},{"kind":"OBJECT","name":"ProjectV2IterationField","ofType":null},{"kind":"OBJECT","name":"ProjectV2SingleSelectField","ofType":null}]},{"kind":"UNION","name":"ProjectV2FieldConfiguration","description":"Configurations for project fields.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"ProjectV2Field","ofType":null},{"kind":"OBJECT","name":"ProjectV2IterationField","ofType":null},{"kind":"OBJECT","name":"ProjectV2SingleSelectField","ofType":null}]},{"kind":"OBJECT","name":"ProjectV2FieldConfigurationConnection","description":"The connection type for ProjectV2FieldConfiguration.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2FieldConfigurationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2FieldConfigurationEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2FieldConnection","description":"The connection type for ProjectV2Field.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2FieldEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Field","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2FieldEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Field","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","description":"Ordering options for project v2 field connections","fields":null,"inputFields":[{"name":"field","description":"The field to order the project v2 fields by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2FieldOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2FieldOrderField","description":"Properties by which project v2 field connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"POSITION","description":"Order project v2 fields by position","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order project v2 fields by creation time","isDeprecated":false,"deprecationReason":null},{"name":"NAME","description":"Order project v2 fields by name","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2FieldType","description":"The type of a project field.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ASSIGNEES","description":"Assignees","isDeprecated":false,"deprecationReason":null},{"name":"LINKED_PULL_REQUESTS","description":"Linked Pull Requests","isDeprecated":false,"deprecationReason":null},{"name":"REVIEWERS","description":"Reviewers","isDeprecated":false,"deprecationReason":null},{"name":"LABELS","description":"Labels","isDeprecated":false,"deprecationReason":null},{"name":"MILESTONE","description":"Milestone","isDeprecated":false,"deprecationReason":null},{"name":"REPOSITORY","description":"Repository","isDeprecated":false,"deprecationReason":null},{"name":"TITLE","description":"Title","isDeprecated":false,"deprecationReason":null},{"name":"TEXT","description":"Text","isDeprecated":false,"deprecationReason":null},{"name":"SINGLE_SELECT","description":"Single Select","isDeprecated":false,"deprecationReason":null},{"name":"NUMBER","description":"Number","isDeprecated":false,"deprecationReason":null},{"name":"DATE","description":"Date","isDeprecated":false,"deprecationReason":null},{"name":"ITERATION","description":"Iteration","isDeprecated":false,"deprecationReason":null},{"name":"TRACKS","description":"Tracks","isDeprecated":false,"deprecationReason":null},{"name":"TRACKED_BY","description":"Tracked by","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2FieldValue","description":"The values that can be used to update a field of an item inside a Project. Only 1 value can be updated at a time.","fields":null,"inputFields":[{"name":"text","description":"The text to set on the field.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"number","description":"The number to set on the field.","type":{"kind":"SCALAR","name":"Float","ofType":null},"defaultValue":null},{"name":"date","description":"The ISO 8601 date to set on the field.","type":{"kind":"SCALAR","name":"Date","ofType":null},"defaultValue":null},{"name":"singleSelectOptionId","description":"The id of the single select option to set on the field.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"iterationId","description":"The id of the iteration to set on the field.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2Filters","description":"Ways in which to filter lists of projects.","fields":null,"inputFields":[{"name":"state","description":"List project v2 filtered by the state given.","type":{"kind":"ENUM","name":"ProjectV2State","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2Item","description":"An item within a Project.","fields":[{"name":"content","description":"The content of the referenced draft issue, issue, or pull request","args":[],"type":{"kind":"UNION","name":"ProjectV2ItemContent","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created the item.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fieldValueByName","description":"A specific field value given a field name","args":[{"name":"name","description":"The name of the field to return the field value of","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"UNION","name":"ProjectV2ItemFieldValue","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fieldValues","description":"List of field values","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for project v2 item field values returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectV2ItemFieldValueOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ItemFieldValueConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isArchived","description":"Whether the item is archived.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this item.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":"The type of the item.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2ItemType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemConnection","description":"The connection type for ProjectV2Item.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ItemEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"ProjectV2ItemContent","description":"Types that can be inside Project Items.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"DraftIssue","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"OBJECT","name":"ProjectV2ItemEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldDateValue","description":"The value of a date field in a Project item.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created the item.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"date","description":"Date value for the field","args":[],"type":{"kind":"SCALAR","name":"Date","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The project field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The project item that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2ItemFieldValueCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldIterationValue","description":"The value of an iteration field in a Project item.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created the item.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"duration","description":"The duration of the iteration in days.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The project field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The project item that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"iterationId","description":"The ID of the iteration.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startDate","description":"The start date of the iteration.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Date","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The title of the iteration.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"titleHTML","description":"The title of the iteration, with HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2ItemFieldValueCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldLabelValue","description":"The value of the labels field in a Project item.","fields":[{"name":"field","description":"The field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"labels","description":"Labels value of a field","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LabelConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldMilestoneValue","description":"The value of a milestone field in a Project item.","fields":[{"name":"field","description":"The field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"milestone","description":"Milestone value of a field","args":[],"type":{"kind":"OBJECT","name":"Milestone","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldNumberValue","description":"The value of a number field in a Project item.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created the item.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The project field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The project item that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"Number as a float(8)","args":[],"type":{"kind":"SCALAR","name":"Float","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2ItemFieldValueCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldPullRequestValue","description":"The value of a pull request field in a Project item.","fields":[{"name":"field","description":"The field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequests","description":"The pull requests for this field","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests.","type":{"kind":"INPUT_OBJECT","name":"PullRequestOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"}],"type":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldRepositoryValue","description":"The value of a repository field in a Project item.","fields":[{"name":"field","description":"The field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository for this field.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldReviewerValue","description":"The value of a reviewers field in a Project item.","fields":[{"name":"field","description":"The field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reviewers","description":"The reviewers for this field.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RequestedReviewerConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldSingleSelectValue","description":"The value of a single select field in a Project item.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created the item.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The project field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The project item that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the selected single select option.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"nameHTML","description":"The html name of the selected single select option.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"optionId","description":"The id of the selected single select option.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2ItemFieldValueCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldTextValue","description":"The value of a text field in a Project item.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created the item.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The project field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The project item that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"text","description":"Text value of a field","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2ItemFieldValueCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldUserValue","description":"The value of a user field in a Project item.","fields":[{"name":"field","description":"The field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"users","description":"The users for this field","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"ProjectV2ItemFieldValue","description":"Project field values","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"ProjectV2ItemFieldDateValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldIterationValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldLabelValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldMilestoneValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldNumberValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldPullRequestValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldRepositoryValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldReviewerValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldSingleSelectValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldTextValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldUserValue","ofType":null}]},{"kind":"INTERFACE","name":"ProjectV2ItemFieldValueCommon","description":"Common fields across different project field value types","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created the item.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The project field that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The project item that contains this value.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"ProjectV2ItemFieldDateValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldIterationValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldNumberValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldSingleSelectValue","ofType":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldTextValue","ofType":null}]},{"kind":"OBJECT","name":"ProjectV2ItemFieldValueConnection","description":"The connection type for ProjectV2ItemFieldValue.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ItemFieldValueEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"ProjectV2ItemFieldValue","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ItemFieldValueEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"ProjectV2ItemFieldValue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2ItemFieldValueOrder","description":"Ordering options for project v2 item field value connections","fields":null,"inputFields":[{"name":"field","description":"The field to order the project v2 item field values by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2ItemFieldValueOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2ItemFieldValueOrderField","description":"Properties by which project v2 item field value connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"POSITION","description":"Order project v2 item field values by the their position in the project","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2ItemOrder","description":"Ordering options for project v2 item connections","fields":null,"inputFields":[{"name":"field","description":"The field to order the project v2 items by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2ItemOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2ItemOrderField","description":"Properties by which project v2 item connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"POSITION","description":"Order project v2 items by the their position in the project","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2ItemType","description":"The type of a project item.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ISSUE","description":"Issue","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST","description":"Pull Request","isDeprecated":false,"deprecationReason":null},{"name":"DRAFT_ISSUE","description":"Draft Issue","isDeprecated":false,"deprecationReason":null},{"name":"REDACTED","description":"Redacted Item","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2IterationField","description":"An iteration field inside a project.","fields":[{"name":"configuration","description":"Iteration configuration settings","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2IterationFieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"dataType","description":"The field\'s type.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2FieldType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The project field\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this field.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2FieldCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2IterationFieldConfiguration","description":"Iteration field configuration for a project.","fields":[{"name":"completedIterations","description":"The iteration\'s completed iterations","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2IterationFieldIteration","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"duration","description":"The iteration\'s duration in days","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"iterations","description":"The iteration\'s iterations","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2IterationFieldIteration","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"startDay","description":"The iteration\'s start day of the week","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2IterationFieldIteration","description":"Iteration field iteration settings for a project.","fields":[{"name":"duration","description":"The iteration\'s duration in days","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":"The iteration\'s ID.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"startDate","description":"The iteration\'s start date","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Date","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The iteration\'s title.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"titleHTML","description":"The iteration\'s html title.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2Order","description":"Ways in which lists of projects can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order projects by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2OrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order projects by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2OrderField","description":"Properties by which projects can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TITLE","description":"The project\'s title","isDeprecated":false,"deprecationReason":null},{"name":"NUMBER","description":"The project\'s number","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"The project\'s date and time of update","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"The project\'s date and time of creation","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"ProjectV2Owner","description":"Represents an owner of a project (beta).","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"Find a project by number.","args":[{"name":"number","description":"The project number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"A list of projects under the owner.","args":[{"name":"query","description":"A project to search for under the the owner.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the returned projects.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Order","ofType":null},"defaultValue":"{field: NUMBER, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"INTERFACE","name":"ProjectV2Recent","description":"Recent projects for the owner.","fields":[{"name":"recentProjects","description":"Recent projects that this user has modified in the context of the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"ProjectV2SingleSelectField","description":"A single select field inside a project.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"dataType","description":"The field\'s type.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2FieldType","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The project field\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"options","description":"Options for the single select field","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2SingleSelectFieldOption","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this field.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"ProjectV2FieldCommon","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2SingleSelectFieldOption","description":"Single select field option for a configuration for a project.","fields":[{"name":"id","description":"The option\'s ID.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The option\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nameHTML","description":"The option\'s html name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2SingleSelectFieldOptionColor","description":"The display color of a single-select field option.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"GRAY","description":"GRAY","isDeprecated":false,"deprecationReason":null},{"name":"BLUE","description":"BLUE","isDeprecated":false,"deprecationReason":null},{"name":"GREEN","description":"GREEN","isDeprecated":false,"deprecationReason":null},{"name":"YELLOW","description":"YELLOW","isDeprecated":false,"deprecationReason":null},{"name":"ORANGE","description":"ORANGE","isDeprecated":false,"deprecationReason":null},{"name":"RED","description":"RED","isDeprecated":false,"deprecationReason":null},{"name":"PINK","description":"PINK","isDeprecated":false,"deprecationReason":null},{"name":"PURPLE","description":"PURPLE","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2SingleSelectFieldOptionInput","description":"Represents a single select field option","fields":null,"inputFields":[{"name":"name","description":"The name of the option","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"color","description":"The display color of the option","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2SingleSelectFieldOptionColor","ofType":null}},"defaultValue":null},{"name":"description","description":"The description text of the option","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2SortBy","description":"Represents a sort by field and direction.","fields":[{"name":"direction","description":"The direction of the sorting. Possible values are ASC and DESC.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The field by which items are sorted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Field","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2SortByConnection","description":"The connection type for ProjectV2SortBy.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2SortByEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2SortBy","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2SortByEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2SortBy","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2SortByField","description":"Represents a sort by field and direction.","fields":[{"name":"direction","description":"The direction of the sorting. Possible values are ASC and DESC.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"field","description":"The field by which items are sorted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ProjectV2FieldConfiguration","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2SortByFieldConnection","description":"The connection type for ProjectV2SortByField.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2SortByFieldEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2SortByField","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2SortByFieldEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2SortByField","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2State","description":"The possible states of a project v2.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"A project v2 that is still open","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED","description":"A project v2 that has been closed","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2View","description":"A view within a ProjectV2.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":"The view\'s visible fields.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the project v2 fields returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"OBJECT","name":"ProjectV2FieldConfigurationConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"filter","description":"The project view\'s filter.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"groupBy","description":"The view\'s group-by field.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the project v2 fields returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"OBJECT","name":"ProjectV2FieldConnection","ofType":null},"isDeprecated":true,"deprecationReason":"The `ProjectV2View#order_by` API is deprecated in favour of the more capable `ProjectV2View#group_by_field` API. Check out the `ProjectV2View#group_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC."},{"name":"groupByFields","description":"The view\'s group-by field.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the project v2 fields returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"OBJECT","name":"ProjectV2FieldConfigurationConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"layout","description":"The project view\'s layout.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2ViewLayout","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The project view\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"The project view\'s number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this view.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sortBy","description":"The view\'s sort-by config.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2SortByConnection","ofType":null},"isDeprecated":true,"deprecationReason":"The `ProjectV2View#sort_by` API is deprecated in favour of the more capable `ProjectV2View#sort_by_fields` API. Check out the `ProjectV2View#sort_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC."},{"name":"sortByFields","description":"The view\'s sort-by config.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2SortByFieldConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"verticalGroupBy","description":"The view\'s vertical-group-by field.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the project v2 fields returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"OBJECT","name":"ProjectV2FieldConnection","ofType":null},"isDeprecated":true,"deprecationReason":"The `ProjectV2View#vertical_group_by` API is deprecated in favour of the more capable `ProjectV2View#vertical_group_by_fields` API. Check out the `ProjectV2View#vertical_group_by_fields` API as an example for the more capable alternative. Removal on 2023-04-01 UTC."},{"name":"verticalGroupByFields","description":"The view\'s vertical-group-by field.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the project v2 fields returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"OBJECT","name":"ProjectV2FieldConfigurationConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibleFields","description":"The view\'s visible fields.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the project v2 fields returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldOrder","ofType":null},"defaultValue":"{field: POSITION, direction: ASC}"}],"type":{"kind":"OBJECT","name":"ProjectV2FieldConnection","ofType":null},"isDeprecated":true,"deprecationReason":"The `ProjectV2View#visibleFields` API is deprecated in favour of the more capable `ProjectV2View#fields` API. Check out the `ProjectV2View#fields` API as an example for the more capable alternative. Removal on 2023-01-01 UTC."}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ViewConnection","description":"The connection type for ProjectV2View.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ViewEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2View","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2ViewEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2View","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2ViewLayout","description":"The layout of a project v2 view.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"BOARD_LAYOUT","description":"Board layout","isDeprecated":false,"deprecationReason":null},{"name":"TABLE_LAYOUT","description":"Table layout","isDeprecated":false,"deprecationReason":null},{"name":"ROADMAP_LAYOUT","description":"Roadmap layout","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2ViewOrder","description":"Ordering options for project v2 view connections","fields":null,"inputFields":[{"name":"field","description":"The field to order the project v2 views by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2ViewOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2ViewOrderField","description":"Properties by which project v2 view connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"POSITION","description":"Order project v2 views by position","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order project v2 views by creation time","isDeprecated":false,"deprecationReason":null},{"name":"NAME","description":"Order project v2 views by name","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2Workflow","description":"A workflow inside a project.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enabled","description":"The workflows\' enabled state.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The workflows\' name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"The workflows\' number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The project that contains this workflow.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2WorkflowConnection","description":"The connection type for ProjectV2Workflow.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2WorkflowEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Workflow","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ProjectV2WorkflowEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Workflow","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ProjectV2WorkflowOrder","description":"Ordering options for project v2 workflows connections","fields":null,"inputFields":[{"name":"field","description":"The field to order the project v2 workflows by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectV2WorkflowsOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ProjectV2WorkflowsOrderField","description":"Properties by which project workflows can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NAME","description":"The workflows\' name","isDeprecated":false,"deprecationReason":null},{"name":"NUMBER","description":"The workflows\' number","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"The workflows\' date and time of update","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"The workflows\' date and time of creation","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PublicKey","description":"A user\'s public key.","fields":[{"name":"accessedAt","description":"The last time this authorization was used to perform an action. Values will be null for keys not owned by the user.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the key was created. Keys created before March 5th, 2014 have inaccurate values. Values will be null for keys not owned by the user.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fingerprint","description":"The fingerprint for this PublicKey.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isReadOnly","description":"Whether this PublicKey is read-only or not. Values will be null for keys not owned by the user.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"key","description":"The public key string.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the key was updated. Keys created before March 5th, 2014 may have inaccurate values. Values will be null for keys not owned by the user.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PublicKeyConnection","description":"The connection type for PublicKey.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PublicKeyEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PublicKey","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PublicKeyEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PublicKey","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PublishSponsorsTierInput","description":"Autogenerated input type of PublishSponsorsTier","fields":null,"inputFields":[{"name":"tierId","description":"The ID of the draft tier to publish.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PublishSponsorsTierPayload","description":"Autogenerated return type of PublishSponsorsTier","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsTier","description":"The tier that was published.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequest","description":"A repository pull request.","fields":[{"name":"activeLockReason","description":"Reason that the conversation was locked.","args":[],"type":{"kind":"ENUM","name":"LockReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"additions","description":"The number of additions in this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"assignees","description":"A list of Users assigned to this object.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"autoMergeRequest","description":"Returns the auto-merge request object if one exists for this pull request.","args":[],"type":{"kind":"OBJECT","name":"AutoMergeRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"baseRef","description":"Identifies the base Ref associated with the pull request.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"baseRefName","description":"Identifies the name of the base Ref associated with the pull request, even if the ref has been deleted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"baseRefOid","description":"Identifies the oid of the base ref associated with the pull request, even if the ref has been deleted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"baseRepository","description":"The repository associated with this pull request\'s base Ref.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The body as Markdown.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"changedFiles","description":"The number of changed files in this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"checksResourcePath","description":"The HTTP path for the checks of this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"checksUrl","description":"The HTTP URL for the checks of this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closed","description":"`true` if the pull request is closed","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"closedAt","description":"Identifies the date and time when the object was closed.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"closingIssuesReferences","description":"List of issues that were may be closed by this pull request","args":[{"name":"userLinkedOnly","description":"Return only manually linked Issues","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for issues returned from the connection","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"IssueConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comments","description":"A list of comments associated with the pull request.","args":[{"name":"orderBy","description":"Ordering options for issue comments returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueCommentOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commits","description":"A list of commits present in this pull request\'s head branch not present in the base branch.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestCommitConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletions","description":"The number of deletions in this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited this pull request\'s body.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"files","description":"Lists the files changed within this pull request.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PullRequestChangedFileConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"headRef","description":"Identifies the head Ref associated with the pull request.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"headRefName","description":"Identifies the name of the head Ref associated with the pull request, even if the ref has been deleted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"headRefOid","description":"Identifies the oid of the head ref associated with the pull request, even if the ref has been deleted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"headRepository","description":"The repository associated with this pull request\'s head Ref.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"headRepositoryOwner","description":"The owner of the repository associated with this pull request\'s head Ref.","args":[],"type":{"kind":"INTERFACE","name":"RepositoryOwner","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"hovercard","description":"The hovercard information for this issue","args":[{"name":"includeNotificationContexts","description":"Whether or not to include notification contexts","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Hovercard","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCrossRepository","description":"The head and base repositories are different.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDraft","description":"Identifies if the pull request is a draft.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isReadByViewer","description":"Is this pull request read by the viewer","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"labels","description":"A list of labels associated with the object.","args":[{"name":"orderBy","description":"Ordering options for labels returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"LabelOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LabelConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"latestOpinionatedReviews","description":"A list of latest reviews per user associated with the pull request.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"writersOnly","description":"Only return reviews from user who have write access to the repository","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"OBJECT","name":"PullRequestReviewConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"latestReviews","description":"A list of latest reviews per user associated with the pull request that are not also pending review.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PullRequestReviewConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"locked","description":"`true` if the pull request is locked","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"maintainerCanModify","description":"Indicates whether maintainers can modify the pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mergeCommit","description":"The commit that was created when this pull request was merged.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergeable","description":"Whether or not the pull request can be merged based on the existence of merge conflicts.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MergeableState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"merged","description":"Whether or not the pull request was merged.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mergedAt","description":"The date and time that the pull request was merged.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergedBy","description":"The actor who merged the pull request.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"milestone","description":"Identifies the milestone associated with the pull request.","args":[],"type":{"kind":"OBJECT","name":"Milestone","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"Identifies the pull request number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"participants","description":"A list of Users that are participating in the Pull Request conversation.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permalink","description":"The permalink to the pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"potentialMergeCommit","description":"The commit that GitHub automatically generated to test if this pull request could be merged. This field will not return a value if the pull request is merged, or if the test merge commit is still being generated. See the `mergeable` field for more details on the mergeability of the pull request.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectCards","description":"List of project cards associated with this pull request.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"archivedStates","description":"A list of archived states to filter the cards by","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"ProjectCardArchivedState","ofType":null}},"defaultValue":"[ARCHIVED, NOT_ARCHIVED]"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectCardConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectItems","description":"List of project items associated with this pull request.","args":[{"name":"includeArchived","description":"Include archived items.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2ItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"Find a project by number.","args":[{"name":"number","description":"The project number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"A list of projects under the owner.","args":[{"name":"query","description":"A project to search for under the the owner.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the returned projects.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Order","ofType":null},"defaultValue":"{field: NUMBER, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"revertResourcePath","description":"The HTTP path for reverting this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"revertUrl","description":"The HTTP URL for reverting this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reviewDecision","description":"The current status of this pull request with respect to code review.","args":[],"type":{"kind":"ENUM","name":"PullRequestReviewDecision","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reviewRequests","description":"A list of review requests associated with the pull request.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ReviewRequestConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reviewThreads","description":"The list of all review threads for this pull request.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewThreadConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reviews","description":"A list of reviews associated with the pull request.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"states","description":"A list of states to filter the reviews.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestReviewState","ofType":null}}},"defaultValue":null},{"name":"author","description":"Filter by author of the review.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PullRequestReviewConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Identifies the state of the pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"suggestedReviewers","description":"A list of reviewer suggestions based on commit history and past review comments.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SuggestedReviewer","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"timeline","description":"A list of events, comments, commits, etc. associated with the pull request.","args":[{"name":"since","description":"Allows filtering timeline events by a `since` timestamp.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestTimelineConnection","ofType":null}},"isDeprecated":true,"deprecationReason":"`timeline` will be removed Use PullRequest.timelineItems instead. Removal on 2020-10-01 UTC."},{"name":"timelineItems","description":"A list of events, comments, commits, etc. associated with the pull request.","args":[{"name":"since","description":"Filter timeline items by a `since` timestamp.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"skip","description":"Skips the first _n_ elements in the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"itemTypes","description":"Filter timeline items by type.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestTimelineItemsItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestTimelineItemsConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"Identifies the pull request title.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"titleHTML","description":"Identifies the pull request title rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCommentsCount","description":"Returns a count of how many comments this pull request has received.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanApplySuggestion","description":"Whether or not the viewer can apply suggestion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDeleteHeadRef","description":"Check if the viewer can restore the deleted head ref.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDisableAutoMerge","description":"Whether or not the viewer can disable auto-merge","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanEditFiles","description":"Can the viewer edit files within this pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanEnableAutoMerge","description":"Whether or not the viewer can enable auto-merge","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMergeAsAdmin","description":"Indicates whether the viewer can bypass branch protections and merge the pull request immediately","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerLatestReview","description":"The latest review given from the viewer.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerLatestReviewRequest","description":"The person who has requested the viewer for review on this pull request.","args":[],"type":{"kind":"OBJECT","name":"ReviewRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerMergeBodyText","description":"The merge body text for the viewer and method.","args":[{"name":"mergeType","description":"The merge method for the message.","type":{"kind":"ENUM","name":"PullRequestMergeMethod","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerMergeHeadlineText","description":"The merge headline text for the viewer and method.","args":[{"name":"mergeType","description":"The merge method for the message.","type":{"kind":"ENUM","name":"PullRequestMergeMethod","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Assignable","ofType":null},{"kind":"INTERFACE","name":"Closable","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null},{"kind":"INTERFACE","name":"Labelable","ofType":null},{"kind":"INTERFACE","name":"Lockable","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null},{"kind":"INTERFACE","name":"Subscribable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"ProjectV2Owner","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestChangedFile","description":"A file changed in a pull request.","fields":[{"name":"additions","description":"The number of additions to the file.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"changeType","description":"How the file was changed in this PullRequest","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PatchStatus","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deletions","description":"The number of deletions to the file.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The path of the file.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerViewedState","description":"The state of the file for the viewer.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"FileViewedState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestChangedFileConnection","description":"The connection type for PullRequestChangedFile.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestChangedFileEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestChangedFile","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestChangedFileEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PullRequestChangedFile","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestCommit","description":"Represents a Git commit part of a pull request.","fields":[{"name":"commit","description":"The Git commit object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request this commit belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this pull request commit","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this pull request commit","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestCommitCommentThread","description":"Represents a commit comment thread part of a pull request.","fields":[{"name":"comments","description":"The comments that exist in this thread.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"The commit the comments were made on.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The file the comments were made on.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"position","description":"The position in the diff for the commit that the comment was made on.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request this commit comment thread belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"RepositoryNode","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestCommitConnection","description":"The connection type for PullRequestCommit.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestCommitEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestCommit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestCommitEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PullRequestCommit","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestConnection","description":"The connection type for PullRequest.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestContributionsByRepository","description":"This aggregates pull requests opened by a user within one repository.","fields":[{"name":"contributions","description":"The pull request contributions.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ContributionOrder","ofType":null},"defaultValue":"{direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository in which the pull requests were opened.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PullRequestMergeMethod","description":"Represents available types of methods to use when merging a pull request.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MERGE","description":"Add all commits from the head branch to the base branch with a merge commit.","isDeprecated":false,"deprecationReason":null},{"name":"SQUASH","description":"Combine all commits from the head branch into a single commit in the base branch.","isDeprecated":false,"deprecationReason":null},{"name":"REBASE","description":"Add all commits from the head branch onto the base branch individually.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"PullRequestOrder","description":"Ways in which lists of issues can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order pull requests by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order pull requests by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PullRequestOrderField","description":"Properties by which pull_requests connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order pull_requests by creation time","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order pull_requests by update time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReview","description":"A review object for a given pull request.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"authorCanPushToRepository","description":"Indicates whether the author of this review has push access to the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"Identifies the pull request review body.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body of this review rendered as plain text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"comments","description":"A list of review comments for the current pull request review.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"Identifies the commit associated with this pull request review.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"onBehalfOf","description":"A list of teams that this review was made on behalf of.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"Identifies the pull request associated with this pull request review.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path permalink for this PullRequestReview.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Identifies the current state of the pull request review.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestReviewState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"submittedAt","description":"Identifies when the Pull Request Review was submitted","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL permalink for this PullRequestReview.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewComment","description":"A review comment associated with a given repository pull request.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the subject of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The comment body of this review comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The comment body of this review comment rendered as plain text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"Identifies the commit associated with the comment.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies when the comment was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"diffHunk","description":"The diff hunk to which the comment applies.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"draftedAt","description":"Identifies when the comment was created in a draft state.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isMinimized","description":"Returns whether or not a comment has been minimized.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"minimizedReason","description":"Returns why the comment was minimized. One of `abuse`, `off-topic`, `outdated`, `resolved`, `duplicate` and `spam`. Note that the case and formatting of these values differs from the inputs to the `MinimizeComment` mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"originalCommit","description":"Identifies the original commit associated with the comment.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"originalPosition","description":"The original line index in the diff to which the comment applies.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"outdated","description":"Identifies when the comment body is outdated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The path to which the comment applies.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"position","description":"The line index in the diff to which the comment applies.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request associated with this review comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The pull request review associated with this review comment.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"replyTo","description":"The comment this is a reply to.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path permalink for this review comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Identifies the state of the comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestReviewCommentState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies when the comment was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL permalink for this review comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanMinimize","description":"Check if the current viewer can minimize this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Minimizable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewCommentConnection","description":"The connection type for PullRequestReviewComment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewCommentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewCommentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PullRequestReviewCommentState","description":"The possible states of a pull request review comment.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PENDING","description":"A comment that is part of a pending review","isDeprecated":false,"deprecationReason":null},{"name":"SUBMITTED","description":"A comment that is part of a submitted review","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewConnection","description":"The connection type for PullRequestReview.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReview","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewContributionsByRepository","description":"This aggregates pull request reviews made by a user within one repository.","fields":[{"name":"contributions","description":"The pull request review contributions.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for contributions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"ContributionOrder","ofType":null},"defaultValue":"{direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CreatedPullRequestReviewContributionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository in which the pull request reviews were made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PullRequestReviewDecision","description":"The review status of a pull request.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CHANGES_REQUESTED","description":"Changes have been requested on the pull request.","isDeprecated":false,"deprecationReason":null},{"name":"APPROVED","description":"The pull request has received an approving review.","isDeprecated":false,"deprecationReason":null},{"name":"REVIEW_REQUIRED","description":"A review is required before the pull request can be merged.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PullRequestReviewEvent","description":"The possible events to perform on a pull request review.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"COMMENT","description":"Submit general feedback without explicit approval.","isDeprecated":false,"deprecationReason":null},{"name":"APPROVE","description":"Submit feedback and approve merging these changes.","isDeprecated":false,"deprecationReason":null},{"name":"REQUEST_CHANGES","description":"Submit feedback that must be addressed before merging.","isDeprecated":false,"deprecationReason":null},{"name":"DISMISS","description":"Dismiss review so it now longer effects merging.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"PullRequestReviewState","description":"The possible states of a pull request review.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PENDING","description":"A review that has not yet been submitted.","isDeprecated":false,"deprecationReason":null},{"name":"COMMENTED","description":"An informational review.","isDeprecated":false,"deprecationReason":null},{"name":"APPROVED","description":"A review allowing the pull request to merge.","isDeprecated":false,"deprecationReason":null},{"name":"CHANGES_REQUESTED","description":"A review blocking the pull request from merging.","isDeprecated":false,"deprecationReason":null},{"name":"DISMISSED","description":"A review that has been dismissed.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewThread","description":"A threaded list of comments for a given pull request.","fields":[{"name":"comments","description":"A list of pull request comments associated with the thread.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"skip","description":"Skips the first _n_ elements in the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"diffSide","description":"The side of the diff on which this thread was placed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DiffSide","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCollapsed","description":"Whether or not the thread has been collapsed (resolved)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isOutdated","description":"Indicates whether this thread was outdated by newer changes.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isResolved","description":"Whether this thread has been resolved","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"line","description":"The line in the file to which this thread refers","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"originalLine","description":"The original line in the file to which this thread refers.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"originalStartLine","description":"The original start line in the file to which this thread refers (multi-line only).","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"Identifies the file path of this thread.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"Identifies the pull request associated with this thread.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"Identifies the repository associated with this thread.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resolvedBy","description":"The user who resolved this thread","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startDiffSide","description":"The side of the diff that the first line of the thread starts on (multi-line only)","args":[],"type":{"kind":"ENUM","name":"DiffSide","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startLine","description":"The start line in the file to which this thread refers (multi-line only)","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReply","description":"Indicates whether the current viewer can reply to this thread.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanResolve","description":"Whether or not the viewer can resolve this thread","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUnresolve","description":"Whether or not the viewer can unresolve this thread","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewThreadConnection","description":"Review comment threads for a pull request review.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewThreadEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestReviewThreadEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestRevisionMarker","description":"Represents the latest point in the pull request timeline for which the viewer has seen the pull request\'s commits.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastSeenCommit","description":"The last commit the viewer has seen.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Commit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request to which the marker belongs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PullRequestState","description":"The possible states of a pull request.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"A pull request that is still open.","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED","description":"A pull request that has been closed without being merged.","isDeprecated":false,"deprecationReason":null},{"name":"MERGED","description":"A pull request that has been closed by being merged.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestTemplate","description":"A repository pull request template.","fields":[{"name":"body","description":"The body of the template","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"filename","description":"The filename of the template","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository the template belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestThread","description":"A threaded list of comments for a given pull request.","fields":[{"name":"comments","description":"A list of pull request comments associated with the thread.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"skip","description":"Skips the first _n_ elements in the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestReviewCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"diffSide","description":"The side of the diff on which this thread was placed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"DiffSide","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCollapsed","description":"Whether or not the thread has been collapsed (resolved)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isOutdated","description":"Indicates whether this thread was outdated by newer changes.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isResolved","description":"Whether this thread has been resolved","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"line","description":"The line in the file to which this thread refers","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"Identifies the pull request associated with this thread.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"Identifies the repository associated with this thread.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resolvedBy","description":"The user who resolved this thread","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startDiffSide","description":"The side of the diff that the first line of the thread starts on (multi-line only)","args":[],"type":{"kind":"ENUM","name":"DiffSide","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"startLine","description":"The line of the first file diff in the thread.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReply","description":"Indicates whether the current viewer can reply to this thread.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanResolve","description":"Whether or not the viewer can resolve this thread","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUnresolve","description":"Whether or not the viewer can unresolve this thread","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestTimelineConnection","description":"The connection type for PullRequestTimelineItem.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestTimelineItemEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"PullRequestTimelineItem","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"PullRequestTimelineItem","description":"An item in a pull request timeline","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"AssignedEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefDeletedEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefForcePushedEvent","ofType":null},{"kind":"OBJECT","name":"ClosedEvent","ofType":null},{"kind":"OBJECT","name":"Commit","ofType":null},{"kind":"OBJECT","name":"CommitCommentThread","ofType":null},{"kind":"OBJECT","name":"CrossReferencedEvent","ofType":null},{"kind":"OBJECT","name":"DemilestonedEvent","ofType":null},{"kind":"OBJECT","name":"DeployedEvent","ofType":null},{"kind":"OBJECT","name":"DeploymentEnvironmentChangedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefDeletedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefForcePushedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefRestoredEvent","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"LabeledEvent","ofType":null},{"kind":"OBJECT","name":"LockedEvent","ofType":null},{"kind":"OBJECT","name":"MergedEvent","ofType":null},{"kind":"OBJECT","name":"MilestonedEvent","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null},{"kind":"OBJECT","name":"ReferencedEvent","ofType":null},{"kind":"OBJECT","name":"RenamedTitleEvent","ofType":null},{"kind":"OBJECT","name":"ReopenedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewDismissedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewRequestRemovedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewRequestedEvent","ofType":null},{"kind":"OBJECT","name":"SubscribedEvent","ofType":null},{"kind":"OBJECT","name":"UnassignedEvent","ofType":null},{"kind":"OBJECT","name":"UnlabeledEvent","ofType":null},{"kind":"OBJECT","name":"UnlockedEvent","ofType":null},{"kind":"OBJECT","name":"UnsubscribedEvent","ofType":null},{"kind":"OBJECT","name":"UserBlockedEvent","ofType":null}]},{"kind":"OBJECT","name":"PullRequestTimelineItemEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"PullRequestTimelineItem","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"PullRequestTimelineItems","description":"An item in a pull request timeline","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"AddedToProjectEvent","ofType":null},{"kind":"OBJECT","name":"AssignedEvent","ofType":null},{"kind":"OBJECT","name":"AutoMergeDisabledEvent","ofType":null},{"kind":"OBJECT","name":"AutoMergeEnabledEvent","ofType":null},{"kind":"OBJECT","name":"AutoRebaseEnabledEvent","ofType":null},{"kind":"OBJECT","name":"AutoSquashEnabledEvent","ofType":null},{"kind":"OBJECT","name":"AutomaticBaseChangeFailedEvent","ofType":null},{"kind":"OBJECT","name":"AutomaticBaseChangeSucceededEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefChangedEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefDeletedEvent","ofType":null},{"kind":"OBJECT","name":"BaseRefForcePushedEvent","ofType":null},{"kind":"OBJECT","name":"ClosedEvent","ofType":null},{"kind":"OBJECT","name":"CommentDeletedEvent","ofType":null},{"kind":"OBJECT","name":"ConnectedEvent","ofType":null},{"kind":"OBJECT","name":"ConvertToDraftEvent","ofType":null},{"kind":"OBJECT","name":"ConvertedNoteToIssueEvent","ofType":null},{"kind":"OBJECT","name":"ConvertedToDiscussionEvent","ofType":null},{"kind":"OBJECT","name":"CrossReferencedEvent","ofType":null},{"kind":"OBJECT","name":"DemilestonedEvent","ofType":null},{"kind":"OBJECT","name":"DeployedEvent","ofType":null},{"kind":"OBJECT","name":"DeploymentEnvironmentChangedEvent","ofType":null},{"kind":"OBJECT","name":"DisconnectedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefDeletedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefForcePushedEvent","ofType":null},{"kind":"OBJECT","name":"HeadRefRestoredEvent","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"LabeledEvent","ofType":null},{"kind":"OBJECT","name":"LockedEvent","ofType":null},{"kind":"OBJECT","name":"MarkedAsDuplicateEvent","ofType":null},{"kind":"OBJECT","name":"MentionedEvent","ofType":null},{"kind":"OBJECT","name":"MergedEvent","ofType":null},{"kind":"OBJECT","name":"MilestonedEvent","ofType":null},{"kind":"OBJECT","name":"MovedColumnsInProjectEvent","ofType":null},{"kind":"OBJECT","name":"PinnedEvent","ofType":null},{"kind":"OBJECT","name":"PullRequestCommit","ofType":null},{"kind":"OBJECT","name":"PullRequestCommitCommentThread","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null},{"kind":"OBJECT","name":"PullRequestRevisionMarker","ofType":null},{"kind":"OBJECT","name":"ReadyForReviewEvent","ofType":null},{"kind":"OBJECT","name":"ReferencedEvent","ofType":null},{"kind":"OBJECT","name":"RemovedFromProjectEvent","ofType":null},{"kind":"OBJECT","name":"RenamedTitleEvent","ofType":null},{"kind":"OBJECT","name":"ReopenedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewDismissedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewRequestRemovedEvent","ofType":null},{"kind":"OBJECT","name":"ReviewRequestedEvent","ofType":null},{"kind":"OBJECT","name":"SubscribedEvent","ofType":null},{"kind":"OBJECT","name":"TransferredEvent","ofType":null},{"kind":"OBJECT","name":"UnassignedEvent","ofType":null},{"kind":"OBJECT","name":"UnlabeledEvent","ofType":null},{"kind":"OBJECT","name":"UnlockedEvent","ofType":null},{"kind":"OBJECT","name":"UnmarkedAsDuplicateEvent","ofType":null},{"kind":"OBJECT","name":"UnpinnedEvent","ofType":null},{"kind":"OBJECT","name":"UnsubscribedEvent","ofType":null},{"kind":"OBJECT","name":"UserBlockedEvent","ofType":null}]},{"kind":"OBJECT","name":"PullRequestTimelineItemsConnection","description":"The connection type for PullRequestTimelineItems.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestTimelineItemsEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"filteredCount","description":"Identifies the count of items after applying `before` and `after` filters.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"PullRequestTimelineItems","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageCount","description":"Identifies the count of items after applying `before`/`after` filters and `first`/`last`/`skip` slicing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the timeline was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PullRequestTimelineItemsEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"PullRequestTimelineItems","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"PullRequestTimelineItemsItemType","description":"The possible item types found in a timeline.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PULL_REQUEST_COMMIT","description":"Represents a Git commit part of a pull request.","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST_COMMIT_COMMENT_THREAD","description":"Represents a commit comment thread part of a pull request.","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST_REVIEW","description":"A review object for a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST_REVIEW_THREAD","description":"A threaded list of comments for a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST_REVISION_MARKER","description":"Represents the latest point in the pull request timeline for which the viewer has seen the pull request\'s commits.","isDeprecated":false,"deprecationReason":null},{"name":"AUTOMATIC_BASE_CHANGE_FAILED_EVENT","description":"Represents a \'automatic_base_change_failed\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"AUTOMATIC_BASE_CHANGE_SUCCEEDED_EVENT","description":"Represents a \'automatic_base_change_succeeded\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"AUTO_MERGE_DISABLED_EVENT","description":"Represents a \'auto_merge_disabled\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"AUTO_MERGE_ENABLED_EVENT","description":"Represents a \'auto_merge_enabled\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"AUTO_REBASE_ENABLED_EVENT","description":"Represents a \'auto_rebase_enabled\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"AUTO_SQUASH_ENABLED_EVENT","description":"Represents a \'auto_squash_enabled\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"BASE_REF_CHANGED_EVENT","description":"Represents a \'base_ref_changed\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"BASE_REF_FORCE_PUSHED_EVENT","description":"Represents a \'base_ref_force_pushed\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"BASE_REF_DELETED_EVENT","description":"Represents a \'base_ref_deleted\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"DEPLOYED_EVENT","description":"Represents a \'deployed\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"DEPLOYMENT_ENVIRONMENT_CHANGED_EVENT","description":"Represents a \'deployment_environment_changed\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"HEAD_REF_DELETED_EVENT","description":"Represents a \'head_ref_deleted\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"HEAD_REF_FORCE_PUSHED_EVENT","description":"Represents a \'head_ref_force_pushed\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"HEAD_REF_RESTORED_EVENT","description":"Represents a \'head_ref_restored\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MERGED_EVENT","description":"Represents a \'merged\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"REVIEW_DISMISSED_EVENT","description":"Represents a \'review_dismissed\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"REVIEW_REQUESTED_EVENT","description":"Represents an \'review_requested\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"REVIEW_REQUEST_REMOVED_EVENT","description":"Represents an \'review_request_removed\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"READY_FOR_REVIEW_EVENT","description":"Represents a \'ready_for_review\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"CONVERT_TO_DRAFT_EVENT","description":"Represents a \'convert_to_draft\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"ADDED_TO_MERGE_QUEUE_EVENT","description":"Represents an \'added_to_merge_queue\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"REMOVED_FROM_MERGE_QUEUE_EVENT","description":"Represents a \'removed_from_merge_queue\' event on a given pull request.","isDeprecated":false,"deprecationReason":null},{"name":"ISSUE_COMMENT","description":"Represents a comment on an Issue.","isDeprecated":false,"deprecationReason":null},{"name":"CROSS_REFERENCED_EVENT","description":"Represents a mention made by one issue or pull request to another.","isDeprecated":false,"deprecationReason":null},{"name":"ADDED_TO_PROJECT_EVENT","description":"Represents a \'added_to_project\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"ASSIGNED_EVENT","description":"Represents an \'assigned\' event on any assignable object.","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED_EVENT","description":"Represents a \'closed\' event on any `Closable`.","isDeprecated":false,"deprecationReason":null},{"name":"COMMENT_DELETED_EVENT","description":"Represents a \'comment_deleted\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"CONNECTED_EVENT","description":"Represents a \'connected\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"CONVERTED_NOTE_TO_ISSUE_EVENT","description":"Represents a \'converted_note_to_issue\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"CONVERTED_TO_DISCUSSION_EVENT","description":"Represents a \'converted_to_discussion\' event on a given issue.","isDeprecated":false,"deprecationReason":null},{"name":"DEMILESTONED_EVENT","description":"Represents a \'demilestoned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"DISCONNECTED_EVENT","description":"Represents a \'disconnected\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"LABELED_EVENT","description":"Represents a \'labeled\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"LOCKED_EVENT","description":"Represents a \'locked\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MARKED_AS_DUPLICATE_EVENT","description":"Represents a \'marked_as_duplicate\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MENTIONED_EVENT","description":"Represents a \'mentioned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MILESTONED_EVENT","description":"Represents a \'milestoned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"MOVED_COLUMNS_IN_PROJECT_EVENT","description":"Represents a \'moved_columns_in_project\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"PINNED_EVENT","description":"Represents a \'pinned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"REFERENCED_EVENT","description":"Represents a \'referenced\' event on a given `ReferencedSubject`.","isDeprecated":false,"deprecationReason":null},{"name":"REMOVED_FROM_PROJECT_EVENT","description":"Represents a \'removed_from_project\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"RENAMED_TITLE_EVENT","description":"Represents a \'renamed\' event on a given issue or pull request","isDeprecated":false,"deprecationReason":null},{"name":"REOPENED_EVENT","description":"Represents a \'reopened\' event on any `Closable`.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIBED_EVENT","description":"Represents a \'subscribed\' event on a given `Subscribable`.","isDeprecated":false,"deprecationReason":null},{"name":"TRANSFERRED_EVENT","description":"Represents a \'transferred\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNASSIGNED_EVENT","description":"Represents an \'unassigned\' event on any assignable object.","isDeprecated":false,"deprecationReason":null},{"name":"UNLABELED_EVENT","description":"Represents an \'unlabeled\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNLOCKED_EVENT","description":"Represents an \'unlocked\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"USER_BLOCKED_EVENT","description":"Represents a \'user_blocked\' event on a given user.","isDeprecated":false,"deprecationReason":null},{"name":"UNMARKED_AS_DUPLICATE_EVENT","description":"Represents an \'unmarked_as_duplicate\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNPINNED_EVENT","description":"Represents an \'unpinned\' event on a given issue or pull request.","isDeprecated":false,"deprecationReason":null},{"name":"UNSUBSCRIBED_EVENT","description":"Represents an \'unsubscribed\' event on a given `Subscribable`.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"PullRequestUpdateState","description":"The possible target states when updating a pull request.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"A pull request that is still open.","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED","description":"A pull request that has been closed without being merged.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Push","description":"A Git push.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nextSha","description":"The SHA after the push","args":[],"type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"permalink","description":"The permalink for this push.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"previousSha","description":"The SHA before the push","args":[],"type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pusher","description":"The actor who pushed","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Actor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that was pushed to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PushAllowance","description":"A team, user, or app who has the ability to push to a protected branch.","fields":[{"name":"actor","description":"The actor that can push.","args":[],"type":{"kind":"UNION","name":"PushAllowanceActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"branchProtectionRule","description":"Identifies the branch protection rule associated with the allowed user, team, or app.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"PushAllowanceActor","description":"Types that can be an actor.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"App","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"PushAllowanceConnection","description":"The connection type for PushAllowance.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PushAllowanceEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"PushAllowance","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"PushAllowanceEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"PushAllowance","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Query","description":"The query root of GitHub\'s GraphQL interface.","fields":[{"name":"codeOfConduct","description":"Look up a code of conduct by its key","args":[{"name":"key","description":"The code of conduct\'s key","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"CodeOfConduct","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"codesOfConduct","description":"Look up a code of conduct by its key","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"CodeOfConduct","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"Look up an enterprise by URL slug.","args":[{"name":"slug","description":"The enterprise URL slug.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"invitationToken","description":"The enterprise invitation token.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseAdministratorInvitation","description":"Look up a pending enterprise administrator invitation by invitee, enterprise and role.","args":[{"name":"userLogin","description":"The login of the user invited to join the business.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"enterpriseSlug","description":"The slug of the enterprise the user was invited to join.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"role","description":"The role for the business member invitation.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseAdministratorRole","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseAdministratorInvitationByToken","description":"Look up a pending enterprise administrator invitation by invitation token.","args":[{"name":"invitationToken","description":"The invitation token sent with the invitation email.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"EnterpriseAdministratorInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"license","description":"Look up an open source license by its key","args":[{"name":"key","description":"The license\'s downcased SPDX ID","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"License","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"licenses","description":"Return a list of known open source licenses","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"License","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"marketplaceCategories","description":"Get alphabetically sorted list of Marketplace categories","args":[{"name":"includeCategories","description":"Return only the specified categories.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"excludeEmpty","description":"Exclude categories with no listings.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"excludeSubcategories","description":"Returns top level categories only, excluding any subcategories.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"MarketplaceCategory","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"marketplaceCategory","description":"Look up a Marketplace category by its slug.","args":[{"name":"slug","description":"The URL slug of the category.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"useTopicAliases","description":"Also check topic aliases for the category slug","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MarketplaceCategory","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"marketplaceListing","description":"Look up a single Marketplace listing","args":[{"name":"slug","description":"Select the listing that matches this slug. It\'s the short name of the listing used in its URL.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MarketplaceListing","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"marketplaceListings","description":"Look up Marketplace listings","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"categorySlug","description":"Select only listings with the given category.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"useTopicAliases","description":"Also check topic aliases for the category slug","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"viewerCanAdmin","description":"Select listings to which user has admin access. If omitted, listings visible to the\\nviewer are returned.\\n","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"adminId","description":"Select listings that can be administered by the specified user.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"organizationId","description":"Select listings for products owned by the specified organization.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"allStates","description":"Select listings visible to the viewer even if they are not approved. If omitted or\\nfalse, only approved listings will be returned.\\n","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"slugs","description":"Select the listings with these slugs, if they are visible to the viewer.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"primaryCategoryOnly","description":"Select only listings where the primary category matches the given category slug.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"withFreeTrialsOnly","description":"Select only listings that offer a free trial.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"MarketplaceListingConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"meta","description":"Return information about the GitHub instance","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"GitHubMetadata","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"Fetches an object given its ID.","args":[{"name":"id","description":"ID of the object.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null}],"type":{"kind":"INTERFACE","name":"Node","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"Lookup nodes by a list of IDs.","args":[{"name":"ids","description":"The list of node IDs.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"INTERFACE","name":"Node","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"Lookup a organization by login.","args":[{"name":"login","description":"The organization\'s login.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rateLimit","description":"The client\'s rate limit information.","args":[{"name":"dryRun","description":"If true, calculate the cost for the query without evaluating it","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"OBJECT","name":"RateLimit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"relay","description":"Hack to workaround https://github.com/facebook/relay/issues/112 re-exposing the root query object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Query","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"Lookup a given repository by the owner and repository name.","args":[{"name":"owner","description":"The login field of a user or organization","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the repository","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"followRenames","description":"Follow repository renames. If disabled, a repository referenced by its old name will return an error.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryOwner","description":"Lookup a repository owner (ie. either a User or an Organization) by login.","args":[{"name":"login","description":"The username to lookup the owner by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"INTERFACE","name":"RepositoryOwner","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resource","description":"Lookup resource by a URL.","args":[{"name":"url","description":"The URL.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"defaultValue":null}],"type":{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"search","description":"Perform a search across resources, returning a maximum of 1,000 results.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"query","description":"The search string to look for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"type","description":"The types of search items to search within.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SearchType","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SearchResultItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"securityAdvisories","description":"GitHub Security Advisories","args":[{"name":"orderBy","description":"Ordering options for the returned topics.","type":{"kind":"INPUT_OBJECT","name":"SecurityAdvisoryOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"},{"name":"identifier","description":"Filter advisories by identifier, e.g. GHSA or CVE.","type":{"kind":"INPUT_OBJECT","name":"SecurityAdvisoryIdentifierFilter","ofType":null},"defaultValue":null},{"name":"publishedSince","description":"Filter advisories to those published since a time in the past.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"updatedSince","description":"Filter advisories to those updated since a time in the past.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"classifications","description":"A list of classifications to filter advisories by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisoryClassification","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SecurityAdvisoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"securityAdvisory","description":"Fetch a Security Advisory by its GHSA ID","args":[{"name":"ghsaId","description":"GitHub Security Advisory ID.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"SecurityAdvisory","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"securityVulnerabilities","description":"Software Vulnerabilities documented by GitHub Security Advisories","args":[{"name":"orderBy","description":"Ordering options for the returned topics.","type":{"kind":"INPUT_OBJECT","name":"SecurityVulnerabilityOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"},{"name":"ecosystem","description":"An ecosystem to filter vulnerabilities by.","type":{"kind":"ENUM","name":"SecurityAdvisoryEcosystem","ofType":null},"defaultValue":null},{"name":"package","description":"A package name to filter vulnerabilities by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"severities","description":"A list of severities to filter vulnerabilities by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisorySeverity","ofType":null}}},"defaultValue":null},{"name":"classifications","description":"A list of advisory classifications to filter vulnerabilities by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisoryClassification","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SecurityVulnerabilityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorables","description":"Users and organizations who can be sponsored via GitHub Sponsors.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for users and organizations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorableOrder","ofType":null},"defaultValue":"{field: LOGIN, direction: ASC}"},{"name":"onlyDependencies","description":"Whether only sponsorables who own the viewer\'s dependencies will be returned. Must be authenticated to use. Can check an organization instead for their dependencies owned by sponsorables by passing orgLoginForDependencies.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orgLoginForDependencies","description":"Optional organization username for whose dependencies should be checked. Used when onlyDependencies = true. Omit to check your own dependencies. If you are not an administrator of the organization, only dependencies from its public repositories will be considered.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"dependencyEcosystem","description":"Optional filter for which dependencies should be checked for sponsorable owners. Only sponsorable owners of dependencies in this ecosystem will be included. Used when onlyDependencies = true.\\n\\n**Upcoming Change on 2022-07-01 UTC**\\n**Description:** `dependencyEcosystem` will be removed. Use the ecosystem argument instead.\\n**Reason:** The type is switching from SecurityAdvisoryEcosystem to DependencyGraphEcosystem.\\n","type":{"kind":"ENUM","name":"SecurityAdvisoryEcosystem","ofType":null},"defaultValue":null},{"name":"ecosystem","description":"Optional filter for which dependencies should be checked for sponsorable owners. Only sponsorable owners of dependencies in this ecosystem will be included. Used when onlyDependencies = true.","type":{"kind":"ENUM","name":"DependencyGraphEcosystem","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"topic","description":"Look up a topic by name.","args":[{"name":"name","description":"The topic\'s name.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Topic","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"Lookup a user by login.","args":[{"name":"login","description":"The user\'s login.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewer","description":"The currently authenticated user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RateLimit","description":"Represents the client\'s rate limit.","fields":[{"name":"cost","description":"The point cost for the current query counting against the rate limit.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"limit","description":"The maximum number of points the client is permitted to consume in a 60 minute window.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodeCount","description":"The maximum number of nodes this query may return","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"remaining","description":"The number of points remaining in the current rate limit window.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resetAt","description":"The time at which the current rate limit window resets in UTC epoch seconds.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"used","description":"The number of points used in the current rate limit window.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Reactable","description":"Represents a subject that can be reacted on.","fields":[{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"Release","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null}]},{"kind":"OBJECT","name":"ReactingUserConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReactingUserEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReactingUserEdge","description":"Represents a user that\'s made a reaction.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reactedAt","description":"The moment when the user made the reaction.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Reaction","description":"An emoji reaction to a particular piece of content.","fields":[{"name":"content","description":"Identifies the emoji reaction.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ReactionContent","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reactable","description":"The reactable piece of content","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Reactable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"Identifies the user who created this reaction.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReactionConnection","description":"A list of reactions that have been left on the subject.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReactionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Reaction","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasReacted","description":"Whether or not the authenticated user has left a reaction on the subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ReactionContent","description":"Emojis that can be attached to Issues, Pull Requests and Comments.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"THUMBS_UP","description":"Represents the `:+1:` emoji.","isDeprecated":false,"deprecationReason":null},{"name":"THUMBS_DOWN","description":"Represents the `:-1:` emoji.","isDeprecated":false,"deprecationReason":null},{"name":"LAUGH","description":"Represents the `:laugh:` emoji.","isDeprecated":false,"deprecationReason":null},{"name":"HOORAY","description":"Represents the `:hooray:` emoji.","isDeprecated":false,"deprecationReason":null},{"name":"CONFUSED","description":"Represents the `:confused:` emoji.","isDeprecated":false,"deprecationReason":null},{"name":"HEART","description":"Represents the `:heart:` emoji.","isDeprecated":false,"deprecationReason":null},{"name":"ROCKET","description":"Represents the `:rocket:` emoji.","isDeprecated":false,"deprecationReason":null},{"name":"EYES","description":"Represents the `:eyes:` emoji.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"ReactionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Reaction","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReactionGroup","description":"A group of emoji reactions to a particular piece of content.","fields":[{"name":"content","description":"Identifies the emoji reaction.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ReactionContent","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies when the reaction was created.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactors","description":"Reactors to the reaction subject with the emotion represented by this reaction group.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The subject that was reacted to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Reactable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"users","description":"Users who have reacted to the reaction subject with the emotion represented by this reaction group","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactingUserConnection","ofType":null}},"isDeprecated":true,"deprecationReason":"Reactors can now be mannequins, bots, and organizations. Use the `reactors` field instead. Removal on 2021-10-01 UTC."},{"name":"viewerHasReacted","description":"Whether or not the authenticated user has left a reaction on the subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ReactionOrder","description":"Ways in which lists of reactions can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order reactions by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ReactionOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order reactions by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ReactionOrderField","description":"A list of fields that reactions can be ordered by.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Allows ordering a list of reactions by when they were created.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"Reactor","description":"Types that can be assigned to reactions.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Bot","ofType":null},{"kind":"OBJECT","name":"Mannequin","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"ReactorConnection","description":"The connection type for Reactor.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReactorEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"Reactor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReactorEdge","description":"Represents an author of a reaction.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The author of the reaction.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"Reactor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reactedAt","description":"The moment when the user made the reaction.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReadyForReviewEvent","description":"Represents a \'ready_for_review\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this ready for review event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this ready for review event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Ref","description":"Represents a Git reference.","fields":[{"name":"associatedPullRequests","description":"A list of pull requests with this ref as the head ref.","args":[{"name":"states","description":"A list of states to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestState","ofType":null}}},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"headRefName","description":"The head ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"baseRefName","description":"The base ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"branchProtectionRule","description":"Branch protection rules for this ref","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"compare","description":"Compares the current ref as a base ref to another head ref, if the comparison can be made.","args":[{"name":"headRef","description":"The head ref to compare against.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Comparison","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The ref name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"prefix","description":"The ref\'s prefix, such as `refs/heads/` or `refs/tags/`.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"refUpdateRule","description":"Branch protection rules that are viewable by non-admins","args":[],"type":{"kind":"OBJECT","name":"RefUpdateRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository the ref belongs to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"target","description":"The object the ref points to. Returns null when object does not exist.","args":[],"type":{"kind":"INTERFACE","name":"GitObject","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RefConnection","description":"The connection type for Ref.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RefEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Ref","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RefEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RefOrder","description":"Ways in which lists of git refs can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order refs by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RefOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order refs by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RefOrderField","description":"Properties by which ref connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TAG_COMMIT_DATE","description":"Order refs by underlying commit date if the ref prefix is refs/tags/","isDeprecated":false,"deprecationReason":null},{"name":"ALPHABETICAL","description":"Order refs by their alphanumeric name","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RefUpdateRule","description":"A ref update rules for a viewer.","fields":[{"name":"allowsDeletions","description":"Can this branch be deleted.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"allowsForcePushes","description":"Are force pushes allowed on this branch.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"blocksCreations","description":"Can matching branches be created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pattern","description":"Identifies the protection rule pattern.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiredApprovingReviewCount","description":"Number of approving reviews required to update matching branches.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"requiredStatusCheckContexts","description":"List of required status check contexts that must pass for commits to be accepted to matching branches.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresCodeOwnerReviews","description":"Are reviews from code owners required to update matching branches.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresConversationResolution","description":"Are conversations required to be resolved before merging.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresLinearHistory","description":"Are merge commits prohibited from being pushed to this branch.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requiresSignatures","description":"Are commits required to be signed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerAllowedToDismissReviews","description":"Is the viewer allowed to dismiss reviews.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanPush","description":"Can the viewer push to the branch","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReferencedEvent","description":"Represents a \'referenced\' event on a given `ReferencedSubject`.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"Identifies the commit associated with the \'referenced\' event.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commitRepository","description":"Identifies the repository associated with the \'referenced\' event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCrossRepository","description":"Reference originated in a different repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDirectReference","description":"Checks if the commit message itself references the subject. Can be false in the case of a commit comment reference.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"Object referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"ReferencedSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"ReferencedSubject","description":"Any referencable object","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"INPUT_OBJECT","name":"RegenerateEnterpriseIdentityProviderRecoveryCodesInput","description":"Autogenerated input type of RegenerateEnterpriseIdentityProviderRecoveryCodes","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set an identity provider.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RegenerateEnterpriseIdentityProviderRecoveryCodesPayload","description":"Autogenerated return type of RegenerateEnterpriseIdentityProviderRecoveryCodes","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"identityProvider","description":"The identity provider for the enterprise.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseIdentityProvider","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RegenerateVerifiableDomainTokenInput","description":"Autogenerated input type of RegenerateVerifiableDomainToken","fields":null,"inputFields":[{"name":"id","description":"The ID of the verifiable domain to regenerate the verification token of.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RegenerateVerifiableDomainTokenPayload","description":"Autogenerated return type of RegenerateVerifiableDomainToken","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"verificationToken","description":"The verification token that was generated.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RejectDeploymentsInput","description":"Autogenerated input type of RejectDeployments","fields":null,"inputFields":[{"name":"workflowRunId","description":"The node ID of the workflow run containing the pending deployments.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"environmentIds","description":"The ids of environments to reject deployments","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"comment","description":"Optional comment for rejecting deployments","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\\"\\""},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RejectDeploymentsPayload","description":"Autogenerated return type of RejectDeployments","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deployments","description":"The affected deployments.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Deployment","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Release","description":"A release contains the content for a release.","fields":[{"name":"author","description":"The author of the release","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description of the release.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"descriptionHTML","description":"The description of this release rendered to HTML.","args":[],"type":{"kind":"SCALAR","name":"HTML","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDraft","description":"Whether or not the release is a draft","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLatest","description":"Whether or not the release is the latest releast","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPrerelease","description":"Whether or not the release is a prerelease","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mentions","description":"A list of users mentioned in the release description","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The title of the release.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies the date and time when the release was created.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"releaseAssets","description":"List of releases assets which are dependent on this release.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"name","description":"A list of names to filter the assets by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReleaseAssetConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that the release belongs to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this issue","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"shortDescriptionHTML","description":"A description of the release, rendered to HTML without any links in it.","args":[{"name":"limit","description":"How many characters to return.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"200"}],"type":{"kind":"SCALAR","name":"HTML","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tag","description":"The Git tag the release points to","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tagCommit","description":"The tag commit for this release.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tagName","description":"The name of the release\'s Git tag","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this issue","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReleaseAsset","description":"A release asset contains the content for a release asset.","fields":[{"name":"contentType","description":"The asset\'s content-type","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"downloadCount","description":"The number of times this asset was downloaded","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"downloadUrl","description":"Identifies the URL where you can download the release asset via the browser.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Identifies the title of the release asset.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"release","description":"Release that the asset is associated with","args":[],"type":{"kind":"OBJECT","name":"Release","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"size","description":"The size (in bytes) of the asset","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"uploadedBy","description":"The user that performed the upload","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"Identifies the URL of the release asset.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReleaseAssetConnection","description":"The connection type for ReleaseAsset.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReleaseAssetEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReleaseAsset","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReleaseAssetEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ReleaseAsset","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReleaseConnection","description":"The connection type for Release.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReleaseEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Release","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReleaseEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Release","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ReleaseOrder","description":"Ways in which lists of releases can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order releases by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ReleaseOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order releases by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ReleaseOrderField","description":"Properties by which release connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order releases by creation time","isDeprecated":false,"deprecationReason":null},{"name":"NAME","description":"Order releases alphabetically by name","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveAssigneesFromAssignableInput","description":"Autogenerated input type of RemoveAssigneesFromAssignable","fields":null,"inputFields":[{"name":"assignableId","description":"The id of the assignable object to remove assignees from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"assigneeIds","description":"The id of users to remove as assignees.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveAssigneesFromAssignablePayload","description":"Autogenerated return type of RemoveAssigneesFromAssignable","fields":[{"name":"assignable","description":"The item that was unassigned.","args":[],"type":{"kind":"INTERFACE","name":"Assignable","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseAdminInput","description":"Autogenerated input type of RemoveEnterpriseAdmin","fields":null,"inputFields":[{"name":"enterpriseId","description":"The Enterprise ID from which to remove the administrator.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"login","description":"The login of the user to remove as an administrator.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveEnterpriseAdminPayload","description":"Autogenerated return type of RemoveEnterpriseAdmin","fields":[{"name":"admin","description":"The user who was removed as an administrator.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The updated enterprise.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of removing an administrator.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewer","description":"The viewer performing the mutation.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseIdentityProviderInput","description":"Autogenerated input type of RemoveEnterpriseIdentityProvider","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise from which to remove the identity provider.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveEnterpriseIdentityProviderPayload","description":"Autogenerated return type of RemoveEnterpriseIdentityProvider","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"identityProvider","description":"The identity provider that was removed from the enterprise.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseIdentityProvider","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseMemberInput","description":"Autogenerated input type of RemoveEnterpriseMember","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise from which the user should be removed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"userId","description":"The ID of the user to remove from the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveEnterpriseMemberPayload","description":"Autogenerated return type of RemoveEnterpriseMember","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The updated enterprise.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user that was removed from the enterprise.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewer","description":"The viewer performing the mutation.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseOrganizationInput","description":"Autogenerated input type of RemoveEnterpriseOrganization","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise from which the organization should be removed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"organizationId","description":"The ID of the organization to remove from the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveEnterpriseOrganizationPayload","description":"Autogenerated return type of RemoveEnterpriseOrganization","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The updated enterprise.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization that was removed from the enterprise.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewer","description":"The viewer performing the mutation.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveEnterpriseSupportEntitlementInput","description":"Autogenerated input type of RemoveEnterpriseSupportEntitlement","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the Enterprise which the admin belongs to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"login","description":"The login of a member who will lose the support entitlement.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveEnterpriseSupportEntitlementPayload","description":"Autogenerated return type of RemoveEnterpriseSupportEntitlement","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of removing the support entitlement.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveLabelsFromLabelableInput","description":"Autogenerated input type of RemoveLabelsFromLabelable","fields":null,"inputFields":[{"name":"labelableId","description":"The id of the Labelable to remove labels from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"labelIds","description":"The ids of labels to remove.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveLabelsFromLabelablePayload","description":"Autogenerated return type of RemoveLabelsFromLabelable","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"labelable","description":"The Labelable the labels were removed from.","args":[],"type":{"kind":"INTERFACE","name":"Labelable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveOutsideCollaboratorInput","description":"Autogenerated input type of RemoveOutsideCollaborator","fields":null,"inputFields":[{"name":"userId","description":"The ID of the outside collaborator to remove.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"organizationId","description":"The ID of the organization to remove the outside collaborator from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveOutsideCollaboratorPayload","description":"Autogenerated return type of RemoveOutsideCollaborator","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"removedUser","description":"The user that was removed as an outside collaborator.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveReactionInput","description":"Autogenerated input type of RemoveReaction","fields":null,"inputFields":[{"name":"subjectId","description":"The Node ID of the subject to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"content","description":"The name of the emoji reaction to remove.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ReactionContent","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveReactionPayload","description":"Autogenerated return type of RemoveReaction","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reaction","description":"The reaction object.","args":[],"type":{"kind":"OBJECT","name":"Reaction","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"The reaction groups for the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The reactable subject.","args":[],"type":{"kind":"INTERFACE","name":"Reactable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveStarInput","description":"Autogenerated input type of RemoveStar","fields":null,"inputFields":[{"name":"starrableId","description":"The Starrable ID to unstar.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveStarPayload","description":"Autogenerated return type of RemoveStar","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"starrable","description":"The starrable.","args":[],"type":{"kind":"INTERFACE","name":"Starrable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RemoveUpvoteInput","description":"Autogenerated input type of RemoveUpvote","fields":null,"inputFields":[{"name":"subjectId","description":"The Node ID of the discussion or comment to remove upvote.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemoveUpvotePayload","description":"Autogenerated return type of RemoveUpvote","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The votable subject.","args":[],"type":{"kind":"INTERFACE","name":"Votable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RemovedFromProjectEvent","description":"Represents a \'removed_from_project\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RenamedTitleEvent","description":"Represents a \'renamed\' event on a given issue or pull request","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"currentTitle","description":"Identifies the current title of the issue or pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"previousTitle","description":"Identifies the previous title of the issue or pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"Subject that was renamed.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"RenamedTitleSubject","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"RenamedTitleSubject","description":"An object which has a renamable title","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null}]},{"kind":"INPUT_OBJECT","name":"ReopenIssueInput","description":"Autogenerated input type of ReopenIssue","fields":null,"inputFields":[{"name":"issueId","description":"ID of the issue to be opened.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReopenIssuePayload","description":"Autogenerated return type of ReopenIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue that was opened.","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ReopenPullRequestInput","description":"Autogenerated input type of ReopenPullRequest","fields":null,"inputFields":[{"name":"pullRequestId","description":"ID of the pull request to be reopened.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReopenPullRequestPayload","description":"Autogenerated return type of ReopenPullRequest","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that was reopened.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReopenedEvent","description":"Represents a \'reopened\' event on any `Closable`.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"closable","description":"Object that was reopened.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Closable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stateReason","description":"The reason the issue state was changed to open.","args":[],"type":{"kind":"ENUM","name":"IssueStateReason","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoAccessAuditEntry","description":"Audit log entry for a repo.access event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"The visibility of the repository","args":[],"type":{"kind":"ENUM","name":"RepoAccessAuditEntryVisibility","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepoAccessAuditEntryVisibility","description":"The privacy of a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INTERNAL","description":"The repository is visible only to users in the same business.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"The repository is visible only to those with explicit access.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"The repository is visible to everyone.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepoAddMemberAuditEntry","description":"Audit log entry for a repo.add_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"The visibility of the repository","args":[],"type":{"kind":"ENUM","name":"RepoAddMemberAuditEntryVisibility","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepoAddMemberAuditEntryVisibility","description":"The privacy of a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INTERNAL","description":"The repository is visible only to users in the same business.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"The repository is visible only to those with explicit access.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"The repository is visible to everyone.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepoAddTopicAuditEntry","description":"Audit log entry for a repo.add_topic event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topic","description":"The name of the topic added to the repository","args":[],"type":{"kind":"OBJECT","name":"Topic","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topicName","description":"The name of the topic added to the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"TopicAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoArchivedAuditEntry","description":"Audit log entry for a repo.archived event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"The visibility of the repository","args":[],"type":{"kind":"ENUM","name":"RepoArchivedAuditEntryVisibility","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepoArchivedAuditEntryVisibility","description":"The privacy of a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INTERNAL","description":"The repository is visible only to users in the same business.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"The repository is visible only to those with explicit access.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"The repository is visible to everyone.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepoChangeMergeSettingAuditEntry","description":"Audit log entry for a repo.change_merge_setting event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isEnabled","description":"Whether the change was to enable (true) or disable (false) the merge type","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mergeType","description":"The merge method affected by the change","args":[],"type":{"kind":"ENUM","name":"RepoChangeMergeSettingAuditEntryMergeType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepoChangeMergeSettingAuditEntryMergeType","description":"The merge options available for pull requests to this repository.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MERGE","description":"The pull request is added to the base branch in a merge commit.","isDeprecated":false,"deprecationReason":null},{"name":"REBASE","description":"Commits from the pull request are added onto the base branch individually without a merge commit.","isDeprecated":false,"deprecationReason":null},{"name":"SQUASH","description":"The pull request\'s commits are squashed into a single commit before they are merged to the base branch.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigDisableAnonymousGitAccessAuditEntry","description":"Audit log entry for a repo.config.disable_anonymous_git_access event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigDisableCollaboratorsOnlyAuditEntry","description":"Audit log entry for a repo.config.disable_collaborators_only event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigDisableContributorsOnlyAuditEntry","description":"Audit log entry for a repo.config.disable_contributors_only event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigDisableSockpuppetDisallowedAuditEntry","description":"Audit log entry for a repo.config.disable_sockpuppet_disallowed event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigEnableAnonymousGitAccessAuditEntry","description":"Audit log entry for a repo.config.enable_anonymous_git_access event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigEnableCollaboratorsOnlyAuditEntry","description":"Audit log entry for a repo.config.enable_collaborators_only event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigEnableContributorsOnlyAuditEntry","description":"Audit log entry for a repo.config.enable_contributors_only event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigEnableSockpuppetDisallowedAuditEntry","description":"Audit log entry for a repo.config.enable_sockpuppet_disallowed event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigLockAnonymousGitAccessAuditEntry","description":"Audit log entry for a repo.config.lock_anonymous_git_access event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoConfigUnlockAnonymousGitAccessAuditEntry","description":"Audit log entry for a repo.config.unlock_anonymous_git_access event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepoCreateAuditEntry","description":"Audit log entry for a repo.create event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"forkParentName","description":"The name of the parent repository for this forked repository.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"forkSourceName","description":"The name of the root repository for this network.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"The visibility of the repository","args":[],"type":{"kind":"ENUM","name":"RepoCreateAuditEntryVisibility","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepoCreateAuditEntryVisibility","description":"The privacy of a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INTERNAL","description":"The repository is visible only to users in the same business.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"The repository is visible only to those with explicit access.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"The repository is visible to everyone.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepoDestroyAuditEntry","description":"Audit log entry for a repo.destroy event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"The visibility of the repository","args":[],"type":{"kind":"ENUM","name":"RepoDestroyAuditEntryVisibility","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepoDestroyAuditEntryVisibility","description":"The privacy of a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INTERNAL","description":"The repository is visible only to users in the same business.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"The repository is visible only to those with explicit access.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"The repository is visible to everyone.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepoRemoveMemberAuditEntry","description":"Audit log entry for a repo.remove_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"The visibility of the repository","args":[],"type":{"kind":"ENUM","name":"RepoRemoveMemberAuditEntryVisibility","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepoRemoveMemberAuditEntryVisibility","description":"The privacy of a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"INTERNAL","description":"The repository is visible only to users in the same business.","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"The repository is visible only to those with explicit access.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"The repository is visible to everyone.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepoRemoveTopicAuditEntry","description":"Audit log entry for a repo.remove_topic event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topic","description":"The name of the topic added to the repository","args":[],"type":{"kind":"OBJECT","name":"Topic","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topicName","description":"The name of the topic added to the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"TopicAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"ReportedContentClassifiers","description":"The reasons a piece of content can be reported or minimized.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SPAM","description":"A spammy piece of content","isDeprecated":false,"deprecationReason":null},{"name":"ABUSE","description":"An abusive or harassing piece of content","isDeprecated":false,"deprecationReason":null},{"name":"OFF_TOPIC","description":"An irrelevant piece of content","isDeprecated":false,"deprecationReason":null},{"name":"OUTDATED","description":"An outdated piece of content","isDeprecated":false,"deprecationReason":null},{"name":"DUPLICATE","description":"A duplicated piece of content","isDeprecated":false,"deprecationReason":null},{"name":"RESOLVED","description":"The content has been resolved","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Repository","description":"A repository contains the content for a project.","fields":[{"name":"allowUpdateBranch","description":"Whether or not a pull request head branch that is behind its base branch can always be updated even if it is not required to be up to date before merging.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"assignableUsers","description":"A list of users that can be assigned to issues in this repository.","args":[{"name":"query","description":"Filters users with query on user name and login","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"autoMergeAllowed","description":"Whether or not Auto-merge can be enabled on pull requests in this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"branchProtectionRules","description":"A list of branch protection rules for this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"BranchProtectionRuleConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"codeOfConduct","description":"Returns the code of conduct for this repository","args":[],"type":{"kind":"OBJECT","name":"CodeOfConduct","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"codeowners","description":"Information extracted from the repository\'s `CODEOWNERS` file.","args":[{"name":"refName","description":"The ref name used to return the associated `CODEOWNERS` file.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RepositoryCodeowners","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"collaborators","description":"A list of collaborators associated with the repository.","args":[{"name":"affiliation","description":"Collaborators affiliation level with a repository.","type":{"kind":"ENUM","name":"CollaboratorAffiliation","ofType":null},"defaultValue":null},{"name":"query","description":"Filters users with query on user name and login","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RepositoryCollaboratorConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commitComments","description":"A list of commit comments associated with the repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"contactLinks","description":"Returns a list of contact links associated to the repository","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryContactLink","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"defaultBranchRef","description":"The Ref associated with the repository\'s default branch.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deleteBranchOnMerge","description":"Whether or not branches are automatically deleted when merged in this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deployKeys","description":"A list of deploy keys that are on this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeployKeyConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deployments","description":"Deployments associated with the repository","args":[{"name":"environments","description":"Environments to list deployments for","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for deployments returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"DeploymentOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description of the repository.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"descriptionHTML","description":"The description of the repository rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"Returns a single discussion from the current repository by number.","args":[{"name":"number","description":"The number for the discussion to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussionCategories","description":"A list of discussion categories that are available in the repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"filterByAssignable","description":"Filter by categories that are assignable by the viewer.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCategoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"discussionCategory","description":"A discussion category by slug.","args":[{"name":"slug","description":"The slug of the discussion category to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"DiscussionCategory","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussions","description":"A list of discussions that have been opened in the repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"categoryId","description":"Only include discussions that belong to the category with this ID.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":"null"},{"name":"orderBy","description":"Ordering options for discussions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"DiscussionOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"diskUsage","description":"The number of kilobytes this repository occupies on disk.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"environment","description":"Returns a single active environment from the current repository by name.","args":[{"name":"name","description":"The name of the environment to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Environment","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"environments","description":"A list of environments that are in this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"EnvironmentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"forkCount","description":"Returns how many forks there are of this repository in the whole network.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"forkingAllowed","description":"Whether this repository allows forks.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"forks","description":"A list of direct forked repositories.","args":[{"name":"privacy","description":"If non-null, filters repositories according to privacy","type":{"kind":"ENUM","name":"RepositoryPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":null},{"name":"affiliations","description":"Array of viewer\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":null},{"name":"ownerAffiliations","description":"Array of owner\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":"[OWNER, COLLABORATOR]"},{"name":"isLocked","description":"If non-null, filters repositories according to whether they have been locked","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"fundingLinks","description":"The funding links for this repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"FundingLink","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"hasDiscussionsEnabled","description":"Indicates if the repository has the Discussions feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasIssuesEnabled","description":"Indicates if the repository has issues feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasProjectsEnabled","description":"Indicates if the repository has the Projects feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasVulnerabilityAlertsEnabled","description":"Whether vulnerability alerts are enabled for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasWikiEnabled","description":"Indicates if the repository has wiki feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"homepageUrl","description":"The repository\'s URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"interactionAbility","description":"The interaction ability settings for this repository.","args":[],"type":{"kind":"OBJECT","name":"RepositoryInteractionAbility","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isArchived","description":"Indicates if the repository is unmaintained.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isBlankIssuesEnabled","description":"Returns true if blank issue creation is allowed","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDisabled","description":"Returns whether or not this repository disabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isEmpty","description":"Returns whether or not this repository is empty.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isFork","description":"Identifies if the repository is a fork.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isInOrganization","description":"Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLocked","description":"Indicates if the repository has been locked or not.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isMirror","description":"Identifies if the repository is a mirror.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPrivate","description":"Identifies if the repository is private or internal.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSecurityPolicyEnabled","description":"Returns true if this repository has a security policy","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isTemplate","description":"Identifies if the repository is a template that can be used to generate new repositories.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isUserConfigurationRepository","description":"Is this repository a user configuration repository?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"Returns a single issue from the current repository by number.","args":[{"name":"number","description":"The number for the issue to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issueOrPullRequest","description":"Returns a single issue-like object from the current repository by number.","args":[{"name":"number","description":"The number for the issue to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"UNION","name":"IssueOrPullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issueTemplates","description":"Returns a list of issue templates associated to the repository","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueTemplate","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"issues","description":"A list of issues that have been opened in the repository.","args":[{"name":"orderBy","description":"Ordering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"states","description":"A list of states to filter the issues by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueState","ofType":null}}},"defaultValue":null},{"name":"filterBy","description":"Filtering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueFilters","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"label","description":"Returns a single label by name","args":[{"name":"name","description":"Label name","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Label","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"labels","description":"A list of labels associated with the repository.","args":[{"name":"orderBy","description":"Ordering options for labels returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"LabelOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: ASC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"query","description":"If provided, searches labels by name and description.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LabelConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"languages","description":"A list containing a breakdown of the language composition of the repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"LanguageOrder","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"LanguageConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"latestRelease","description":"Get the latest release for the repository if one exists.","args":[],"type":{"kind":"OBJECT","name":"Release","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"licenseInfo","description":"The license associated with the repository","args":[],"type":{"kind":"OBJECT","name":"License","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lockReason","description":"The reason the repository has been locked.","args":[],"type":{"kind":"ENUM","name":"RepositoryLockReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mentionableUsers","description":"A list of Users that can be mentioned in the context of the repository.","args":[{"name":"query","description":"Filters users with query on user name and login","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mergeCommitAllowed","description":"Whether or not PRs are merged with a merge commit on this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mergeCommitMessage","description":"How the default commit message will be generated when merging a pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MergeCommitMessage","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"mergeCommitTitle","description":"How the default commit title will be generated when merging a pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MergeCommitTitle","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"milestone","description":"Returns a single milestone from the current repository by number.","args":[{"name":"number","description":"The number for the milestone to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Milestone","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"milestones","description":"A list of milestones associated with the repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"states","description":"Filter by the state of the milestones.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MilestoneState","ofType":null}}},"defaultValue":null},{"name":"orderBy","description":"Ordering options for milestones.","type":{"kind":"INPUT_OBJECT","name":"MilestoneOrder","ofType":null},"defaultValue":null},{"name":"query","description":"Filters milestones with a query on the title","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"MilestoneConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mirrorUrl","description":"The repository\'s original mirror URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nameWithOwner","description":"The repository\'s name with owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"object","description":"A Git object in the repository","args":[{"name":"oid","description":"The Git object ID","type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"defaultValue":null},{"name":"expression","description":"A Git revision expression suitable for rev-parse","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"type":{"kind":"INTERFACE","name":"GitObject","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"openGraphImageUrl","description":"The image used to represent this repository in Open Graph data.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The User owner of the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"RepositoryOwner","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"packages","description":"A list of packages under the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"names","description":"Find packages by their names.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"Find packages in a repository by ID.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"packageType","description":"Filter registry package by type.","type":{"kind":"ENUM","name":"PackageType","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering of the returned packages.","type":{"kind":"INPUT_OBJECT","name":"PackageOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PackageConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"parent","description":"The repository parent, if this is a fork.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedDiscussions","description":"A list of discussions that have been pinned in this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnedDiscussionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedIssues","description":"A list of pinned issues for this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PinnedIssueConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"primaryLanguage","description":"The primary language of the repository\'s code.","args":[],"type":{"kind":"OBJECT","name":"Language","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"Find project by number.","args":[{"name":"number","description":"The project number to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"Finds and returns the Project according to the provided Project number.","args":[{"name":"number","description":"The Project number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projects","description":"A list of projects under the owner.","args":[{"name":"orderBy","description":"Ordering options for projects returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectOrder","ofType":null},"defaultValue":null},{"name":"search","description":"Query to search projects by, currently only searching by name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"states","description":"A list of states to filter the projects by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectState","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsResourcePath","description":"The HTTP path listing the repository\'s projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsUrl","description":"The HTTP URL listing the repository\'s projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"List of projects linked to this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"query","description":"A project to search for linked to the repo.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the returned projects.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Order","ofType":null},"defaultValue":"{field: NUMBER, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"Returns a single pull request from the current repository by number.","args":[{"name":"number","description":"The number for the pull request to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestTemplates","description":"Returns a list of pull request templates associated to the repository","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestTemplate","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequests","description":"A list of pull requests that have been opened in the repository.","args":[{"name":"states","description":"A list of states to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestState","ofType":null}}},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"headRefName","description":"The head ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"baseRefName","description":"The base ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pushedAt","description":"Identifies when the repository was last pushed to.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"rebaseMergeAllowed","description":"Whether or not rebase-merging is enabled on this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"recentProjects","description":"Recent projects that this user has modified in the context of the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"Fetch a given ref from the repository","args":[{"name":"qualifiedName","description":"The ref to retrieve. Fully qualified matches are checked in order (`refs/heads/master`) before falling back onto checks for short name matches (`master`).","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"refs","description":"Fetch a list of refs from the repository","args":[{"name":"query","description":"Filters refs with query on name","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"refPrefix","description":"A ref name prefix like `refs/heads/`, `refs/tags/`, etc.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"direction","description":"DEPRECATED: use orderBy. The ordering direction.","type":{"kind":"ENUM","name":"OrderDirection","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for refs returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"RefOrder","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RefConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"release","description":"Lookup a single release given various criteria.","args":[{"name":"tagName","description":"The name of the Tag the Release was created from","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Release","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"releases","description":"List of releases which are dependent on this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"ReleaseOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReleaseConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryTopics","description":"A list of applied repository-topic associations for this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryTopicConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"securityPolicyUrl","description":"The security policy URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"shortDescriptionHTML","description":"A description of the repository, rendered to HTML without any links in it.","args":[{"name":"limit","description":"How many characters to return.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"200"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"squashMergeAllowed","description":"Whether or not squash-merging is enabled on this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"squashMergeCommitMessage","description":"How the default commit message will be generated when squash merging a pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SquashMergeCommitMessage","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"squashMergeCommitTitle","description":"How the default commit title will be generated when squash merging a pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SquashMergeCommitTitle","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"squashPrTitleUsedAsDefault","description":"Whether a squash merge commit can use the pull request title as default.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":true,"deprecationReason":"`squashPrTitleUsedAsDefault` will be removed. Use `Repository.squashMergeCommitTitle` instead. Removal on 2023-04-01 UTC."},{"name":"sshUrl","description":"The SSH URL to clone this repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitSSHRemote","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazerCount","description":"Returns a count of how many stargazers there are on this object\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazers","description":"A list of users who have starred this starrable.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"StarOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StargazerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"submodules","description":"Returns a list of all submodules in this repository parsed from the .gitmodules file as of the default branch\'s HEAD commit.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SubmoduleConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tempCloneToken","description":"Temporary authentication token for cloning this repository.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"templateRepository","description":"The repository from which this repository was generated, if any.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"usesCustomOpenGraphImage","description":"Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner\'s avatar.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanAdminister","description":"Indicates whether the viewer has admin permissions on this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanCreateProjects","description":"Can the current viewer create new projects on this owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdateTopics","description":"Indicates whether the viewer can update the topics of this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDefaultCommitEmail","description":"The last commit email for the viewer.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDefaultMergeMethod","description":"The last used merge method by the viewer or the default for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestMergeMethod","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasStarred","description":"Returns a boolean indicating whether the viewing user has starred this starrable.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerPermission","description":"The users permission level on the repository. Will return null if authenticated as an GitHub App.","args":[],"type":{"kind":"ENUM","name":"RepositoryPermission","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerPossibleCommitEmails","description":"A list of emails this viewer can commit with.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"Indicates the repository\'s visibility level.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryVisibility","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vulnerabilityAlert","description":"Returns a single vulnerability alert from the current repository by number.","args":[{"name":"number","description":"The number for the vulnerability alert to be returned.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RepositoryVulnerabilityAlert","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"vulnerabilityAlerts","description":"A list of vulnerability alerts that are on this repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"states","description":"Filter by the state of the alert","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryVulnerabilityAlertState","ofType":null}}},"defaultValue":null},{"name":"dependencyScopes","description":"Filter by the scope of the alert\'s dependency","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryVulnerabilityAlertDependencyScope","ofType":null}}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"RepositoryVulnerabilityAlertConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"watchers","description":"A list of users watching the repository.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"webCommitSignoffRequired","description":"Whether contributors are required to sign off on web-based commits in this repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"ProjectV2Recent","ofType":null},{"kind":"INTERFACE","name":"ProjectOwner","ofType":null},{"kind":"INTERFACE","name":"PackageOwner","ofType":null},{"kind":"INTERFACE","name":"Subscribable","ofType":null},{"kind":"INTERFACE","name":"Starrable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"RepositoryInfo","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryAffiliation","description":"The affiliation of a user to a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OWNER","description":"Repositories that are owned by the authenticated user.","isDeprecated":false,"deprecationReason":null},{"name":"COLLABORATOR","description":"Repositories that the user has been added to as a collaborator.","isDeprecated":false,"deprecationReason":null},{"name":"ORGANIZATION_MEMBER","description":"Repositories that the user has access to through being a member of an organization. This includes every repository on every team that the user is on.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","description":"Metadata for an audit entry with action repo.*","fields":[{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"OrgRestoreMemberMembershipRepositoryAuditEntryData","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingDisableAuditEntry","ofType":null},{"kind":"OBJECT","name":"PrivateRepositoryForkingEnableAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoAddTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoArchivedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoChangeMergeSettingAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigDisableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableCollaboratorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableContributorsOnlyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigEnableSockpuppetDisallowedAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigLockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoConfigUnlockAnonymousGitAccessAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoCreateAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoDestroyAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddRepositoryAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveRepositoryAuditEntry","ofType":null}]},{"kind":"OBJECT","name":"RepositoryCodeowners","description":"Information extracted from a repository\'s `CODEOWNERS` file.","fields":[{"name":"errors","description":"Any problems that were encountered while parsing the `CODEOWNERS` file.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryCodeownersError","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryCodeownersError","description":"An error in a `CODEOWNERS` file.","fields":[{"name":"column","description":"The column number where the error occurs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"kind","description":"A short string describing the type of error.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"line","description":"The line number where the error occurs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A complete description of the error, combining information from other fields.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The path to the file when the error occurs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"source","description":"The content of the line where the error occurs.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"suggestion","description":"A suggestion of how to fix the error.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryCollaboratorConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryCollaboratorEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryCollaboratorEdge","description":"Represents a user who is a collaborator of a repository.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permission","description":"The permission the user has on the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryPermission","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permissionSources","description":"A list of sources for the user\'s access to the repository.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PermissionSource","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryConnection","description":"A list of repositories owned by the subject.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalDiskUsage","description":"The total size in kilobytes of all repositories in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryContactLink","description":"A repository contact link.","fields":[{"name":"about","description":"The contact link purpose.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The contact link name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The contact link URL.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryContributionType","description":"The reason a repository is listed as \'contributed\'.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"COMMIT","description":"Created a commit","isDeprecated":false,"deprecationReason":null},{"name":"ISSUE","description":"Created an issue","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST","description":"Created a pull request","isDeprecated":false,"deprecationReason":null},{"name":"REPOSITORY","description":"Created the repository","isDeprecated":false,"deprecationReason":null},{"name":"PULL_REQUEST_REVIEW","description":"Reviewed a pull request","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"RepositoryDiscussionAuthor","description":"Represents an author of discussions in repositories.","fields":[{"name":"repositoryDiscussions","description":"Discussions this user has started.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for discussions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"DiscussionOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"},{"name":"repositoryId","description":"Filter discussions to only those in a specific repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"answered","description":"Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"INTERFACE","name":"RepositoryDiscussionCommentAuthor","description":"Represents an author of discussion comments in repositories.","fields":[{"name":"repositoryDiscussionComments","description":"Discussion comments this user has authored.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"repositoryId","description":"Filter discussion comments to only those in a specific repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"onlyAnswers","description":"Filter discussion comments to only those that were marked as the answer","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"RepositoryEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"RepositoryInfo","description":"A subset of repository info.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description of the repository.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"descriptionHTML","description":"The description of the repository rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"forkCount","description":"Returns how many forks there are of this repository in the whole network.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasDiscussionsEnabled","description":"Indicates if the repository has the Discussions feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasIssuesEnabled","description":"Indicates if the repository has issues feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasProjectsEnabled","description":"Indicates if the repository has the Projects feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasWikiEnabled","description":"Indicates if the repository has wiki feature enabled.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"homepageUrl","description":"The repository\'s URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isArchived","description":"Indicates if the repository is unmaintained.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isFork","description":"Identifies if the repository is a fork.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isInOrganization","description":"Indicates if a repository is either owned by an organization, or is a private fork of an organization repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLocked","description":"Indicates if the repository has been locked or not.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isMirror","description":"Identifies if the repository is a mirror.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPrivate","description":"Identifies if the repository is private or internal.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isTemplate","description":"Identifies if the repository is a template that can be used to generate new repositories.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"licenseInfo","description":"The license associated with the repository","args":[],"type":{"kind":"OBJECT","name":"License","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lockReason","description":"The reason the repository has been locked.","args":[],"type":{"kind":"ENUM","name":"RepositoryLockReason","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mirrorUrl","description":"The repository\'s original mirror URL.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nameWithOwner","description":"The repository\'s name with owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"openGraphImageUrl","description":"The image used to represent this repository in Open Graph data.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The User owner of the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"RepositoryOwner","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pushedAt","description":"Identifies when the repository was last pushed to.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"shortDescriptionHTML","description":"A description of the repository, rendered to HTML without any links in it.","args":[{"name":"limit","description":"How many characters to return.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"200"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"usesCustomOpenGraphImage","description":"Whether this repository has a custom image to use with Open Graph as opposed to being represented by the owner\'s avatar.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"visibility","description":"Indicates the repository\'s visibility level.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryVisibility","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Repository","ofType":null}]},{"kind":"OBJECT","name":"RepositoryInteractionAbility","description":"Repository interaction limit that applies to this object.","fields":[{"name":"expiresAt","description":"The time the currently active limit expires.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"limit","description":"The current limit that is enabled on this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryInteractionLimit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"origin","description":"The origin of the currently active interaction limit.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryInteractionLimitOrigin","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryInteractionLimit","description":"A repository interaction limit.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"EXISTING_USERS","description":"Users that have recently created their account will be unable to interact with the repository.","isDeprecated":false,"deprecationReason":null},{"name":"CONTRIBUTORS_ONLY","description":"Users that have not previously committed to a repository’s default branch will be unable to interact with the repository.","isDeprecated":false,"deprecationReason":null},{"name":"COLLABORATORS_ONLY","description":"Users that are not collaborators will not be able to interact with the repository.","isDeprecated":false,"deprecationReason":null},{"name":"NO_LIMIT","description":"No interaction limits are enabled.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"RepositoryInteractionLimitExpiry","description":"The length for a repository interaction limit to be enabled for.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ONE_DAY","description":"The interaction limit will expire after 1 day.","isDeprecated":false,"deprecationReason":null},{"name":"THREE_DAYS","description":"The interaction limit will expire after 3 days.","isDeprecated":false,"deprecationReason":null},{"name":"ONE_WEEK","description":"The interaction limit will expire after 1 week.","isDeprecated":false,"deprecationReason":null},{"name":"ONE_MONTH","description":"The interaction limit will expire after 1 month.","isDeprecated":false,"deprecationReason":null},{"name":"SIX_MONTHS","description":"The interaction limit will expire after 6 months.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"RepositoryInteractionLimitOrigin","description":"Indicates where an interaction limit is configured.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"REPOSITORY","description":"A limit that is configured at the repository level.","isDeprecated":false,"deprecationReason":null},{"name":"ORGANIZATION","description":"A limit that is configured at the organization level.","isDeprecated":false,"deprecationReason":null},{"name":"USER","description":"A limit that is configured at the user-wide level.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryInvitation","description":"An invitation for a user to be added to a repository.","fields":[{"name":"email","description":"The email address that received the invitation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"invitee","description":"The user who received the invitation.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"inviter","description":"The user who created the invitation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permalink","description":"The permalink for this repository invitation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permission","description":"The permission granted on this repository by this invitation.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryPermission","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The Repository the user is invited to.","args":[],"type":{"kind":"INTERFACE","name":"RepositoryInfo","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryInvitationConnection","description":"A list of repository invitations.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryInvitationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryInvitation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryInvitationEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"RepositoryInvitation","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RepositoryInvitationOrder","description":"Ordering options for repository invitation connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order repository invitations by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryInvitationOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryInvitationOrderField","description":"Properties by which repository invitation connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order repository invitations by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"RepositoryLockReason","description":"The possible reasons a given repository could be in a locked state.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MOVING","description":"The repository is locked due to a move.","isDeprecated":false,"deprecationReason":null},{"name":"BILLING","description":"The repository is locked due to a billing related reason.","isDeprecated":false,"deprecationReason":null},{"name":"RENAME","description":"The repository is locked due to a rename.","isDeprecated":false,"deprecationReason":null},{"name":"MIGRATING","description":"The repository is locked due to a migration.","isDeprecated":false,"deprecationReason":null},{"name":"TRADE_RESTRICTION","description":"The repository is locked due to a trade controls related reason.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryMigration","description":"A GitHub Enterprise Importer (GEI) repository migration.","fields":[{"name":"continueOnError","description":"The migration flag to continue on error.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"failureReason","description":"The reason the migration failed.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"migrationLogUrl","description":"The URL for the migration log (expires 1 day after migration completes).","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"migrationSource","description":"The migration source.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"MigrationSource","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The target repository name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sourceUrl","description":"The migration source URL, for example `https://github.com` or `https://monalisa.ghe.com`.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The migration state.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"MigrationState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Migration","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryMigrationConnection","description":"The connection type for RepositoryMigration.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryMigrationEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryMigration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryMigrationEdge","description":"Represents a repository migration.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"RepositoryMigration","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RepositoryMigrationOrder","description":"Ordering options for repository migrations.","fields":null,"inputFields":[{"name":"field","description":"The field to order repository migrations by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryMigrationOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryMigrationOrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryMigrationOrderDirection","description":"Possible directions in which to order a list of repository migrations when provided an `orderBy` argument.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ASC","description":"Specifies an ascending order for a given `orderBy` argument.","isDeprecated":false,"deprecationReason":null},{"name":"DESC","description":"Specifies a descending order for a given `orderBy` argument.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"RepositoryMigrationOrderField","description":"Properties by which repository migrations can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order mannequins why when they were created.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"RepositoryNode","description":"Represents a object that belongs to a repository.","fields":[{"name":"repository","description":"The repository associated with this node.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"CommitCommentThread","ofType":null},{"kind":"OBJECT","name":"DependabotUpdate","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"DiscussionCategory","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"PinnedDiscussion","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"PullRequestCommitCommentThread","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"RepositoryVulnerabilityAlert","ofType":null}]},{"kind":"INPUT_OBJECT","name":"RepositoryOrder","description":"Ordering options for repository connections","fields":null,"inputFields":[{"name":"field","description":"The field to order repositories by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryOrderField","description":"Properties by which repository connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order repositories by creation time","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order repositories by update time","isDeprecated":false,"deprecationReason":null},{"name":"PUSHED_AT","description":"Order repositories by push time","isDeprecated":false,"deprecationReason":null},{"name":"NAME","description":"Order repositories by name","isDeprecated":false,"deprecationReason":null},{"name":"STARGAZERS","description":"Order repositories by number of stargazers","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"RepositoryOwner","description":"Represents an owner of a Repository.","fields":[{"name":"avatarUrl","description":"A URL pointing to the owner\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The username used to login.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositories","description":"A list of repositories that the user owns.","args":[{"name":"privacy","description":"If non-null, filters repositories according to privacy","type":{"kind":"ENUM","name":"RepositoryPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":null},{"name":"affiliations","description":"Array of viewer\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":null},{"name":"ownerAffiliations","description":"Array of owner\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":"[OWNER, COLLABORATOR]"},{"name":"isLocked","description":"If non-null, filters repositories according to whether they have been locked","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"isFork","description":"If non-null, filters repositories according to whether they are forks of another repository","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"Find Repository.","args":[{"name":"name","description":"Name of Repository to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"followRenames","description":"Follow repository renames. If disabled, a repository referenced by its old name will return an error.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP URL for the owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for the owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"ENUM","name":"RepositoryPermission","description":"The access level to a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ADMIN","description":"Can read, clone, and push to this repository. Can also manage issues, pull requests, and repository settings, including adding collaborators","isDeprecated":false,"deprecationReason":null},{"name":"MAINTAIN","description":"Can read, clone, and push to this repository. They can also manage issues, pull requests, and some repository settings","isDeprecated":false,"deprecationReason":null},{"name":"WRITE","description":"Can read, clone, and push to this repository. Can also manage issues and pull requests","isDeprecated":false,"deprecationReason":null},{"name":"TRIAGE","description":"Can read and clone this repository. Can also manage issues and pull requests","isDeprecated":false,"deprecationReason":null},{"name":"READ","description":"Can read and clone this repository. Can also open and comment on issues and pull requests","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"RepositoryPrivacy","description":"The privacy of a repository","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PUBLIC","description":"Public","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"Private","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryTopic","description":"A repository-topic connects a repository to a topic.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this repository-topic.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"topic","description":"The topic.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Topic","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this repository-topic.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryTopicConnection","description":"The connection type for RepositoryTopic.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryTopicEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryTopic","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryTopicEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"RepositoryTopic","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryVisibility","description":"The repository\'s visibility level.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PRIVATE","description":"The repository is visible only to those with explicit access.","isDeprecated":false,"deprecationReason":null},{"name":"PUBLIC","description":"The repository is visible to everyone.","isDeprecated":false,"deprecationReason":null},{"name":"INTERNAL","description":"The repository is visible only to users in the same business.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeDisableAuditEntry","description":"Audit log entry for a repository_visibility_change.disable event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryVisibilityChangeEnableAuditEntry","description":"Audit log entry for a repository_visibility_change.enable event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseResourcePath","description":"The HTTP path for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseSlug","description":"The slug of the enterprise.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterpriseUrl","description":"The HTTP URL for this enterprise.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"EnterpriseAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryVulnerabilityAlert","description":"A Dependabot alert for a repository with a dependency affected by a security vulnerability.","fields":[{"name":"createdAt","description":"When was the alert created?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"dependabotUpdate","description":"The associated Dependabot update","args":[],"type":{"kind":"OBJECT","name":"DependabotUpdate","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dependencyScope","description":"The scope of an alert\'s dependency","args":[],"type":{"kind":"ENUM","name":"RepositoryVulnerabilityAlertDependencyScope","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissComment","description":"Comment explaining the reason the alert was dismissed","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissReason","description":"The reason the alert was dismissed","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissedAt","description":"When was the alert dismissed?","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismisser","description":"The user who dismissed the alert","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fixReason","description":"The reason the alert was marked as fixed.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":true,"deprecationReason":"The `fixReason` field is being removed. You can still use `fixedAt` and `dismissReason`. Removal on 2023-04-01 UTC."},{"name":"fixedAt","description":"When was the alert fixed?","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"Identifies the alert number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The associated repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"securityAdvisory","description":"The associated security advisory","args":[],"type":{"kind":"OBJECT","name":"SecurityAdvisory","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"securityVulnerability","description":"The associated security vulnerability","args":[],"type":{"kind":"OBJECT","name":"SecurityVulnerability","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"Identifies the state of the alert.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryVulnerabilityAlertState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vulnerableManifestFilename","description":"The vulnerable manifest filename","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vulnerableManifestPath","description":"The vulnerable manifest path","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vulnerableRequirements","description":"The vulnerable requirements","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"RepositoryNode","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryVulnerabilityAlertConnection","description":"The connection type for RepositoryVulnerabilityAlert.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryVulnerabilityAlertEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryVulnerabilityAlert","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryVulnerabilityAlertDependencyScope","description":"The possible scopes of an alert\'s dependency.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"RUNTIME","description":"A dependency that is leveraged during application runtime","isDeprecated":false,"deprecationReason":null},{"name":"DEVELOPMENT","description":"A dependency that is only used in development","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"RepositoryVulnerabilityAlertEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"RepositoryVulnerabilityAlert","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RepositoryVulnerabilityAlertState","description":"The possible states of an alert","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"An alert that is still open.","isDeprecated":false,"deprecationReason":null},{"name":"FIXED","description":"An alert that has been resolved by a code change.","isDeprecated":false,"deprecationReason":null},{"name":"DISMISSED","description":"An alert that has been manually closed by a user.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RequestReviewsInput","description":"Autogenerated input type of RequestReviews","fields":null,"inputFields":[{"name":"pullRequestId","description":"The Node ID of the pull request to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"userIds","description":"The Node IDs of the user to request.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"teamIds","description":"The Node IDs of the team to request.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"union","description":"Add users to the set rather than replace.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RequestReviewsPayload","description":"Autogenerated return type of RequestReviews","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that is getting requests.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"requestedReviewersEdge","description":"The edge from the pull request to the requested reviewers.","args":[],"type":{"kind":"OBJECT","name":"UserEdge","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RequestableCheckStatusState","description":"The possible states that can be requested when creating a check run.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUEUED","description":"The check suite or run has been queued.","isDeprecated":false,"deprecationReason":null},{"name":"IN_PROGRESS","description":"The check suite or run is in progress.","isDeprecated":false,"deprecationReason":null},{"name":"COMPLETED","description":"The check suite or run has been completed.","isDeprecated":false,"deprecationReason":null},{"name":"WAITING","description":"The check suite or run is in waiting state.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING","description":"The check suite or run is in pending state.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"RequestedReviewer","description":"Types that can be requested reviewers.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Mannequin","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"RequestedReviewerConnection","description":"The connection type for RequestedReviewer.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"RequestedReviewerEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"RequestedReviewer","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RequestedReviewerEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"RequestedReviewer","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"RequirableByPullRequest","description":"Represents a type that can be required by a pull request for merging.","fields":[{"name":"isRequired","description":"Whether this is required to pass before merging for a specific pull request.","args":[{"name":"pullRequestId","description":"The id of the pull request this is required for","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"pullRequestNumber","description":"The number of the pull request this is required for","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CheckRun","ofType":null},{"kind":"OBJECT","name":"StatusContext","ofType":null}]},{"kind":"OBJECT","name":"RequiredStatusCheckDescription","description":"Represents a required status check for a protected branch, but not any specific run of that check.","fields":[{"name":"app","description":"The App that must provide this status in order for it to be accepted.","args":[],"type":{"kind":"OBJECT","name":"App","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"context","description":"The name of this status.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RequiredStatusCheckInput","description":"Specifies the attributes for a new or updated required status check.","fields":null,"inputFields":[{"name":"context","description":"Status check context that must pass for commits to be accepted to the matching branch.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"appId","description":"The ID of the App that must set the status in order for it to be accepted. Omit this value to use whichever app has recently been setting this status, or use \\"any\\" to allow any app to set the status.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RerequestCheckSuiteInput","description":"Autogenerated input type of RerequestCheckSuite","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"checkSuiteId","description":"The Node ID of the check suite.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RerequestCheckSuitePayload","description":"Autogenerated return type of RerequestCheckSuite","fields":[{"name":"checkSuite","description":"The requested check suite.","args":[],"type":{"kind":"OBJECT","name":"CheckSuite","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"ResolveReviewThreadInput","description":"Autogenerated input type of ResolveReviewThread","fields":null,"inputFields":[{"name":"threadId","description":"The ID of the thread to resolve","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ResolveReviewThreadPayload","description":"Autogenerated return type of ResolveReviewThread","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"thread","description":"The thread to resolve.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RestrictedContribution","description":"Represents a private contribution a user made on GitHub.","fields":[{"name":"isRestricted","description":"Whether this contribution is associated with a record you do not have access to. For\\nexample, your own \'first issue\' contribution may have been made on a repository you can no\\nlonger access.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"occurredAt","description":"When this contribution was made.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this contribution.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who made this contribution.\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Contribution","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RetireSponsorsTierInput","description":"Autogenerated input type of RetireSponsorsTier","fields":null,"inputFields":[{"name":"tierId","description":"The ID of the published tier to retire.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RetireSponsorsTierPayload","description":"Autogenerated return type of RetireSponsorsTier","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsTier","description":"The tier that was retired.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RevertPullRequestInput","description":"Autogenerated input type of RevertPullRequest","fields":null,"inputFields":[{"name":"pullRequestId","description":"The ID of the pull request to revert.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the revert pull request.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The description of the revert pull request.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"draft","description":"Indicates whether the revert pull request should be a draft.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RevertPullRequestPayload","description":"Autogenerated return type of RevertPullRequest","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The pull request that was reverted.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"revertPullRequest","description":"The new pull request that reverts the input pull request.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewDismissalAllowance","description":"A user, team, or app who has the ability to dismiss a review on a protected branch.","fields":[{"name":"actor","description":"The actor that can dismiss.","args":[],"type":{"kind":"UNION","name":"ReviewDismissalAllowanceActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"branchProtectionRule","description":"Identifies the branch protection rule associated with the allowed user, team, or app.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"ReviewDismissalAllowanceActor","description":"Types that can be an actor.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"App","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"ReviewDismissalAllowanceConnection","description":"The connection type for ReviewDismissalAllowance.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReviewDismissalAllowanceEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReviewDismissalAllowance","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewDismissalAllowanceEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ReviewDismissalAllowance","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewDismissedEvent","description":"Represents a \'review_dismissed\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissalMessage","description":"Identifies the optional message associated with the \'review_dismissed\' event.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dismissalMessageHTML","description":"Identifies the optional message associated with the event, rendered to HTML.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"previousReviewState","description":"Identifies the previous state of the review with the \'review_dismissed\' event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestReviewState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestCommit","description":"Identifies the commit which caused the review to become stale.","args":[],"type":{"kind":"OBJECT","name":"PullRequestCommit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this review dismissed event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"review","description":"Identifies the review associated with the \'review_dismissed\' event.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this review dismissed event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewRequest","description":"A request for a user to review a pull request.","fields":[{"name":"asCodeOwner","description":"Whether this request was created for a code owner","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"Identifies the pull request associated with this review request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requestedReviewer","description":"The reviewer that is requested.","args":[],"type":{"kind":"UNION","name":"RequestedReviewer","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewRequestConnection","description":"The connection type for ReviewRequest.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReviewRequestEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"ReviewRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewRequestEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"ReviewRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewRequestRemovedEvent","description":"Represents an \'review_request_removed\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requestedReviewer","description":"Identifies the reviewer whose review request was removed.","args":[],"type":{"kind":"UNION","name":"RequestedReviewer","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewRequestedEvent","description":"Represents an \'review_requested\' event on a given pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"PullRequest referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequest","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"requestedReviewer","description":"Identifies the reviewer whose review was requested.","args":[],"type":{"kind":"UNION","name":"RequestedReviewer","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ReviewStatusHovercardContext","description":"A hovercard context with a message describing the current code review state of the pull\\nrequest.\\n","fields":[{"name":"message","description":"A string describing this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"octicon","description":"An octicon to accompany this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reviewDecision","description":"The current status of the pull request with respect to code review.","args":[],"type":{"kind":"ENUM","name":"PullRequestReviewDecision","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"HovercardContext","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RevokeEnterpriseOrganizationsMigratorRoleInput","description":"Autogenerated input type of RevokeEnterpriseOrganizationsMigratorRole","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise to which all organizations managed by it will be granted the migrator role.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"login","description":"The login of the user to revoke the migrator role","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RevokeEnterpriseOrganizationsMigratorRolePayload","description":"Autogenerated return type of RevokeEnterpriseOrganizationsMigratorRole","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizations","description":"The organizations that had the migrator role revoked for the given user.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"RevokeMigratorRoleInput","description":"Autogenerated input type of RevokeMigratorRole","fields":null,"inputFields":[{"name":"organizationId","description":"The ID of the organization that the user/team belongs to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"actor","description":"The user login or Team slug to revoke the migrator role from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"actorType","description":"Specifies the type of the actor, can be either USER or TEAM.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ActorType","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"RevokeMigratorRolePayload","description":"Autogenerated return type of RevokeMigratorRole","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"success","description":"Did the operation succeed?","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"RoleInOrganization","description":"Possible roles a user may have in relation to an organization.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OWNER","description":"A user with full administrative access to the organization.","isDeprecated":false,"deprecationReason":null},{"name":"DIRECT_MEMBER","description":"A user who is a direct member of the organization.","isDeprecated":false,"deprecationReason":null},{"name":"UNAFFILIATED","description":"A user who is unaffiliated with the organization.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"SamlDigestAlgorithm","description":"The possible digest algorithms used to sign SAML requests for an identity provider.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SHA1","description":"SHA1","isDeprecated":false,"deprecationReason":null},{"name":"SHA256","description":"SHA256","isDeprecated":false,"deprecationReason":null},{"name":"SHA384","description":"SHA384","isDeprecated":false,"deprecationReason":null},{"name":"SHA512","description":"SHA512","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"SamlSignatureAlgorithm","description":"The possible signature algorithms used to sign SAML requests for a Identity Provider.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"RSA_SHA1","description":"RSA-SHA1","isDeprecated":false,"deprecationReason":null},{"name":"RSA_SHA256","description":"RSA-SHA256","isDeprecated":false,"deprecationReason":null},{"name":"RSA_SHA384","description":"RSA-SHA384","isDeprecated":false,"deprecationReason":null},{"name":"RSA_SHA512","description":"RSA-SHA512","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SavedReply","description":"A Saved Reply is text a user can use to reply quickly.","fields":[{"name":"body","description":"The body of the saved reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The saved reply body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The title of the saved reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user that saved this reply.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SavedReplyConnection","description":"The connection type for SavedReply.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SavedReplyEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SavedReply","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SavedReplyEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"SavedReply","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SavedReplyOrder","description":"Ordering options for saved reply connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order saved replies by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SavedReplyOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SavedReplyOrderField","description":"Properties by which saved reply connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"UPDATED_AT","description":"Order saved reply by when they were updated.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"SearchResultItem","description":"The results of a search.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"App","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"MarketplaceListing","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"SearchResultItemConnection","description":"A list of results that matched against a search query. Regardless of the number of matches, a maximum of 1,000 results will be available across all types, potentially split across many pages.","fields":[{"name":"codeCount","description":"The total number of pieces of code that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"discussionCount","description":"The total number of discussions that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SearchResultItemEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issueCount","description":"The total number of issues that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"SearchResultItem","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryCount","description":"The total number of repositories that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userCount","description":"The total number of users that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"wikiCount","description":"The total number of wiki pages that matched the search query. Regardless of the total number of matches, a maximum of 1,000 results will be available across all types.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SearchResultItemEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"SearchResultItem","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"textMatches","description":"Text matches on the result found.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TextMatch","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SearchType","description":"Represents the individual results of a search.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ISSUE","description":"Returns results matching issues in repositories.","isDeprecated":false,"deprecationReason":null},{"name":"REPOSITORY","description":"Returns results matching repositories.","isDeprecated":false,"deprecationReason":null},{"name":"USER","description":"Returns results matching users and organizations on GitHub.","isDeprecated":false,"deprecationReason":null},{"name":"DISCUSSION","description":"Returns matching discussions in repositories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SecurityAdvisory","description":"A GitHub Security Advisory","fields":[{"name":"classification","description":"The classification of the advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisoryClassification","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"cvss","description":"The CVSS associated with this advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CVSS","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"cwes","description":"CWEs associated with this Advisory","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CWEConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"This is a long plaintext description of the advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"ghsaId","description":"The GitHub Security Advisory ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"identifiers","description":"A list of identifiers for this advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SecurityAdvisoryIdentifier","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"notificationsPermalink","description":"The permalink for the advisory\'s dependabot alerts page","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"origin","description":"The organization that originated the advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permalink","description":"The permalink for the advisory","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"When the advisory was published","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"references","description":"A list of references for this advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SecurityAdvisoryReference","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"severity","description":"The severity of the advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisorySeverity","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"summary","description":"A short plaintext summary of the advisory","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"When the advisory was last updated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vulnerabilities","description":"Vulnerabilities associated with this Advisory","args":[{"name":"orderBy","description":"Ordering options for the returned topics.","type":{"kind":"INPUT_OBJECT","name":"SecurityVulnerabilityOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"},{"name":"ecosystem","description":"An ecosystem to filter vulnerabilities by.","type":{"kind":"ENUM","name":"SecurityAdvisoryEcosystem","ofType":null},"defaultValue":null},{"name":"package","description":"A package name to filter vulnerabilities by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"severities","description":"A list of severities to filter vulnerabilities by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisorySeverity","ofType":null}}},"defaultValue":null},{"name":"classifications","description":"A list of advisory classifications to filter vulnerabilities by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisoryClassification","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SecurityVulnerabilityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"withdrawnAt","description":"When the advisory was withdrawn, if it has been withdrawn","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SecurityAdvisoryClassification","description":"Classification of the advisory.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"GENERAL","description":"Classification of general advisories.","isDeprecated":false,"deprecationReason":null},{"name":"MALWARE","description":"Classification of malware advisories.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SecurityAdvisoryConnection","description":"The connection type for SecurityAdvisory.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SecurityAdvisoryEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SecurityAdvisory","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SecurityAdvisoryEcosystem","description":"The possible ecosystems of a security vulnerability\'s package.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"COMPOSER","description":"PHP packages hosted at packagist.org","isDeprecated":false,"deprecationReason":null},{"name":"ERLANG","description":"Erlang/Elixir packages hosted at hex.pm","isDeprecated":false,"deprecationReason":null},{"name":"ACTIONS","description":"GitHub Actions","isDeprecated":false,"deprecationReason":null},{"name":"GO","description":"Go modules","isDeprecated":false,"deprecationReason":null},{"name":"MAVEN","description":"Java artifacts hosted at the Maven central repository","isDeprecated":false,"deprecationReason":null},{"name":"NPM","description":"JavaScript packages hosted at npmjs.com","isDeprecated":false,"deprecationReason":null},{"name":"NUGET","description":".NET packages hosted at the NuGet Gallery","isDeprecated":false,"deprecationReason":null},{"name":"PIP","description":"Python packages hosted at PyPI.org","isDeprecated":false,"deprecationReason":null},{"name":"PUB","description":"Dart packages hosted at pub.dev","isDeprecated":false,"deprecationReason":null},{"name":"RUBYGEMS","description":"Ruby gems hosted at RubyGems.org","isDeprecated":false,"deprecationReason":null},{"name":"RUST","description":"Rust crates","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SecurityAdvisoryEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"SecurityAdvisory","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SecurityAdvisoryIdentifier","description":"A GitHub Security Advisory Identifier","fields":[{"name":"type","description":"The identifier type, e.g. GHSA, CVE","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"value","description":"The identifier","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SecurityAdvisoryIdentifierFilter","description":"An advisory identifier to filter results on.","fields":null,"inputFields":[{"name":"type","description":"The identifier type.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisoryIdentifierType","ofType":null}},"defaultValue":null},{"name":"value","description":"The identifier string. Supports exact or partial matching.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SecurityAdvisoryIdentifierType","description":"Identifier formats available for advisories.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CVE","description":"Common Vulnerabilities and Exposures Identifier.","isDeprecated":false,"deprecationReason":null},{"name":"GHSA","description":"GitHub Security Advisory ID.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SecurityAdvisoryOrder","description":"Ordering options for security advisory connections","fields":null,"inputFields":[{"name":"field","description":"The field to order security advisories by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisoryOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SecurityAdvisoryOrderField","description":"Properties by which security advisory connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PUBLISHED_AT","description":"Order advisories by publication time","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order advisories by update time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SecurityAdvisoryPackage","description":"An individual package","fields":[{"name":"ecosystem","description":"The ecosystem the package belongs to, e.g. RUBYGEMS, NPM","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisoryEcosystem","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The package name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SecurityAdvisoryPackageVersion","description":"An individual package version","fields":[{"name":"identifier","description":"The package name or version","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SecurityAdvisoryReference","description":"A GitHub Security Advisory Reference","fields":[{"name":"url","description":"A publicly accessible reference","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SecurityAdvisorySeverity","description":"Severity of the vulnerability.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOW","description":"Low.","isDeprecated":false,"deprecationReason":null},{"name":"MODERATE","description":"Moderate.","isDeprecated":false,"deprecationReason":null},{"name":"HIGH","description":"High.","isDeprecated":false,"deprecationReason":null},{"name":"CRITICAL","description":"Critical.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SecurityVulnerability","description":"An individual vulnerability within an Advisory","fields":[{"name":"advisory","description":"The Advisory associated with this Vulnerability","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SecurityAdvisory","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"firstPatchedVersion","description":"The first version containing a fix for the vulnerability","args":[],"type":{"kind":"OBJECT","name":"SecurityAdvisoryPackageVersion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"package","description":"A description of the vulnerable package","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SecurityAdvisoryPackage","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"severity","description":"The severity of the vulnerability within this package","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityAdvisorySeverity","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"When the vulnerability was last updated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"vulnerableVersionRange","description":"A string that describes the vulnerable package versions.\\nThis string follows a basic syntax with a few forms.\\n+ `= 0.2.0` denotes a single vulnerable version.\\n+ `<= 1.0.8` denotes a version range up to and including the specified version\\n+ `< 0.1.11` denotes a version range up to, but excluding, the specified version\\n+ `>= 4.3.0, < 4.3.5` denotes a version range with a known minimum and maximum version.\\n+ `>= 0.0.1` denotes a version range with a known minimum, but no known maximum\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SecurityVulnerabilityConnection","description":"The connection type for SecurityVulnerability.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SecurityVulnerabilityEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SecurityVulnerability","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SecurityVulnerabilityEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"SecurityVulnerability","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SecurityVulnerabilityOrder","description":"Ordering options for security vulnerability connections","fields":null,"inputFields":[{"name":"field","description":"The field to order security vulnerabilities by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SecurityVulnerabilityOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SecurityVulnerabilityOrderField","description":"Properties by which security vulnerability connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"UPDATED_AT","description":"Order vulnerability by update time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SetEnterpriseIdentityProviderInput","description":"Autogenerated input type of SetEnterpriseIdentityProvider","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set an identity provider.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"ssoUrl","description":"The URL endpoint for the identity provider\'s SAML SSO.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"defaultValue":null},{"name":"issuer","description":"The Issuer Entity ID for the SAML identity provider","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"idpCertificate","description":"The x509 certificate used by the identity provider to sign assertions and responses.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"signatureMethod","description":"The signature algorithm used to sign SAML requests for the identity provider.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SamlSignatureAlgorithm","ofType":null}},"defaultValue":null},{"name":"digestMethod","description":"The digest algorithm used to sign SAML requests for the identity provider.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SamlDigestAlgorithm","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SetEnterpriseIdentityProviderPayload","description":"Autogenerated return type of SetEnterpriseIdentityProvider","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"identityProvider","description":"The identity provider for the enterprise.","args":[],"type":{"kind":"OBJECT","name":"EnterpriseIdentityProvider","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SetOrganizationInteractionLimitInput","description":"Autogenerated input type of SetOrganizationInteractionLimit","fields":null,"inputFields":[{"name":"organizationId","description":"The ID of the organization to set a limit for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"limit","description":"The limit to set.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryInteractionLimit","ofType":null}},"defaultValue":null},{"name":"expiry","description":"When this limit should expire.","type":{"kind":"ENUM","name":"RepositoryInteractionLimitExpiry","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SetOrganizationInteractionLimitPayload","description":"Autogenerated return type of SetOrganizationInteractionLimit","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization that the interaction limit was set for.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SetRepositoryInteractionLimitInput","description":"Autogenerated input type of SetRepositoryInteractionLimit","fields":null,"inputFields":[{"name":"repositoryId","description":"The ID of the repository to set a limit for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"limit","description":"The limit to set.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryInteractionLimit","ofType":null}},"defaultValue":null},{"name":"expiry","description":"When this limit should expire.","type":{"kind":"ENUM","name":"RepositoryInteractionLimitExpiry","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SetRepositoryInteractionLimitPayload","description":"Autogenerated return type of SetRepositoryInteractionLimit","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that the interaction limit was set for.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SetUserInteractionLimitInput","description":"Autogenerated input type of SetUserInteractionLimit","fields":null,"inputFields":[{"name":"userId","description":"The ID of the user to set a limit for.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"limit","description":"The limit to set.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryInteractionLimit","ofType":null}},"defaultValue":null},{"name":"expiry","description":"When this limit should expire.","type":{"kind":"ENUM","name":"RepositoryInteractionLimitExpiry","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SetUserInteractionLimitPayload","description":"Autogenerated return type of SetUserInteractionLimit","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user that the interaction limit was set for.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SmimeSignature","description":"Represents an S/MIME signature on a Commit or Tag.","fields":[{"name":"email","description":"Email used to sign this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isValid","description":"True if the signature is valid and verified by GitHub.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"payload","description":"Payload for GPG signing object. Raw ODB object without the signature header.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signature","description":"ASCII-armored signature header from object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signer","description":"GitHub user corresponding to the email signing this commit.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"GitSignatureState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"wasSignedByGitHub","description":"True if the signature was made with GitHub\'s signing key.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"GitSignature","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SocialAccount","description":"Social media profile associated with a user.","fields":[{"name":"displayName","description":"Name of the social media account as it appears on the profile.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"provider","description":"Software or company that hosts the social media account.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SocialAccountProvider","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"URL of the social media account.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SocialAccountConnection","description":"The connection type for SocialAccount.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SocialAccountEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SocialAccount","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SocialAccountEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"SocialAccount","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SocialAccountProvider","description":"Software or company that hosts social media accounts.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"GENERIC","description":"Catch-all for social media providers that do not yet have specific handling.","isDeprecated":false,"deprecationReason":null},{"name":"FACEBOOK","description":"Social media and networking website.","isDeprecated":false,"deprecationReason":null},{"name":"HOMETOWN","description":"Fork of Mastodon with a greater focus on local posting.","isDeprecated":false,"deprecationReason":null},{"name":"INSTAGRAM","description":"Social media website with a focus on photo and video sharing.","isDeprecated":false,"deprecationReason":null},{"name":"LINKEDIN","description":"Professional networking website.","isDeprecated":false,"deprecationReason":null},{"name":"MASTODON","description":"Open-source federated microblogging service.","isDeprecated":false,"deprecationReason":null},{"name":"REDDIT","description":"Social news aggregation and discussion website.","isDeprecated":false,"deprecationReason":null},{"name":"TWITCH","description":"Live-streaming service.","isDeprecated":false,"deprecationReason":null},{"name":"TWITTER","description":"Microblogging website.","isDeprecated":false,"deprecationReason":null},{"name":"YOUTUBE","description":"Online video platform.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"Sponsor","description":"Entities that can sponsor others via GitHub Sponsors","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"SponsorConnection","description":"The connection type for Sponsor.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"Sponsor","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorEdge","description":"Represents a user or organization who is sponsoring someone in GitHub Sponsors.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"Sponsor","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SponsorOrder","description":"Ordering options for connections to get sponsor entities for GitHub Sponsors.","fields":null,"inputFields":[{"name":"field","description":"The field to order sponsor entities by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorOrderField","description":"Properties by which sponsor connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOGIN","description":"Order sponsorable entities by login (username).","isDeprecated":false,"deprecationReason":null},{"name":"RELEVANCE","description":"Order sponsors by their relevance to the viewer.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INTERFACE","name":"Sponsorable","description":"Entities that can sponsor or be sponsored through GitHub Sponsors.","fields":[{"name":"estimatedNextSponsorsPayoutInCents","description":"The estimated next GitHub Sponsors payout for this user/organization in cents (USD).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasSponsorsListing","description":"True if this user/organization has a GitHub Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSponsoredBy","description":"Whether the given account is sponsoring this user/organization.","args":[{"name":"accountLogin","description":"The target account\'s login.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSponsoringViewer","description":"True if the viewer is sponsored by this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"monthlyEstimatedSponsorsIncomeInCents","description":"The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsoring","description":"List of users and organizations this entity is sponsoring.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the users and organizations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorOrder","ofType":null},"defaultValue":"{field: RELEVANCE, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsors","description":"List of sponsors for this user or organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"tierId","description":"If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsors returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorOrder","ofType":null},"defaultValue":"{field: RELEVANCE, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsActivities","description":"Events involving this sponsorable, such as new sponsorships.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"period","description":"Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.","type":{"kind":"ENUM","name":"SponsorsActivityPeriod","ofType":null},"defaultValue":"MONTH"},{"name":"since","description":"Filter activities to those that occurred on or after this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"until","description":"Filter activities to those that occurred before this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for activity returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorsActivityOrder","ofType":null},"defaultValue":"{field: TIMESTAMP, direction: DESC}"},{"name":"actions","description":"Filter activities to only the specified actions.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsActivityAction","ofType":null}}},"defaultValue":"[]"},{"name":"includeAsSponsor","description":"Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsActivityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsListing","description":"The GitHub Sponsors listing for this user or organization.","args":[],"type":{"kind":"OBJECT","name":"SponsorsListing","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipForViewerAsSponsor","description":"The sponsorship from the viewer to this user/organization; that is, the sponsorship where you\'re the sponsor.","args":[{"name":"activeOnly","description":"Whether to return the sponsorship only if it\'s still active. Pass false to get the viewer\'s sponsorship back even if it has been cancelled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipForViewerAsSponsorable","description":"The sponsorship from this user/organization to the viewer; that is, the sponsorship you\'re receiving.","args":[{"name":"activeOnly","description":"Whether to return the sponsorship only if it\'s still active. Pass false to get the sponsorship back even if it has been cancelled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipNewsletters","description":"List of sponsorship updates sent from this sponsorable to sponsors.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsorship updates returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipNewsletterOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipNewsletterConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipsAsMaintainer","description":"The sponsorships where this user or organization is the maintainer receiving the funds.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"includePrivate","description":"Whether or not to include private sponsorships in the result set","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","ofType":null},"defaultValue":null},{"name":"activeOnly","description":"Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipsAsSponsor","description":"The sponsorships where this user or organization is the funder.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","ofType":null},"defaultValue":null},{"name":"maintainerLogins","description":"Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"activeOnly","description":"Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalSponsorshipAmountAsSponsorInCents","description":"The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.","args":[{"name":"since","description":"Filter payments to those that occurred on or after this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"until","description":"Filter payments to those that occurred before this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"sponsorableLogins","description":"Filter payments to those made to the users or organizations with the specified usernames.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":"[]"}],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSponsor","description":"Whether or not the viewer is able to sponsor this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsSponsoring","description":"True if the viewer is sponsoring this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"UNION","name":"SponsorableItem","description":"Entities that can be sponsored via GitHub Sponsors","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"SponsorableItemConnection","description":"The connection type for SponsorableItem.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorableItemEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"SponsorableItem","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorableItemEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"SponsorableItem","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SponsorableOrder","description":"Ordering options for connections to get sponsorable entities for GitHub Sponsors.","fields":null,"inputFields":[{"name":"field","description":"The field to order sponsorable entities by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorableOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorableOrderField","description":"Properties by which sponsorable connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOGIN","description":"Order sponsorable entities by login (username).","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsActivity","description":"An event related to sponsorship activity.","fields":[{"name":"action","description":"What action this activity indicates took place.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsActivityAction","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"previousSponsorsTier","description":"The tier that the sponsorship used to use, for tier change events.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsor","description":"The user or organization who triggered this activity and was/is sponsoring the sponsorable.","args":[],"type":{"kind":"UNION","name":"Sponsor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorable","description":"The user or organization that is being sponsored, the maintainer.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Sponsorable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsTier","description":"The associated sponsorship tier.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"timestamp","description":"The timestamp of this event.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorsActivityAction","description":"The possible actions that GitHub Sponsors activities can represent.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NEW_SPONSORSHIP","description":"The activity was starting a sponsorship.","isDeprecated":false,"deprecationReason":null},{"name":"CANCELLED_SPONSORSHIP","description":"The activity was cancelling a sponsorship.","isDeprecated":false,"deprecationReason":null},{"name":"TIER_CHANGE","description":"The activity was changing the sponsorship tier, either directly by the sponsor or by a scheduled/pending change.","isDeprecated":false,"deprecationReason":null},{"name":"REFUND","description":"The activity was funds being refunded to the sponsor or GitHub.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING_CHANGE","description":"The activity was scheduling a downgrade or cancellation.","isDeprecated":false,"deprecationReason":null},{"name":"SPONSOR_MATCH_DISABLED","description":"The activity was disabling matching for a previously matched sponsorship.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsActivityConnection","description":"The connection type for SponsorsActivity.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsActivityEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsActivity","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsActivityEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"SponsorsActivity","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SponsorsActivityOrder","description":"Ordering options for GitHub Sponsors activity connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order activity by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsActivityOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorsActivityOrderField","description":"Properties by which GitHub Sponsors activity connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TIMESTAMP","description":"Order activities by when they happened.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"SponsorsActivityPeriod","description":"The possible time periods for which Sponsors activities can be requested.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DAY","description":"The previous calendar day.","isDeprecated":false,"deprecationReason":null},{"name":"WEEK","description":"The previous seven days.","isDeprecated":false,"deprecationReason":null},{"name":"MONTH","description":"The previous thirty days.","isDeprecated":false,"deprecationReason":null},{"name":"ALL","description":"Don\'t restrict the activity to any date range, include all activity.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"SponsorsCountryOrRegionCode","description":"Represents countries or regions for billing and residence for a GitHub Sponsors profile.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"AF","description":"Afghanistan","isDeprecated":false,"deprecationReason":null},{"name":"AX","description":"Åland","isDeprecated":false,"deprecationReason":null},{"name":"AL","description":"Albania","isDeprecated":false,"deprecationReason":null},{"name":"DZ","description":"Algeria","isDeprecated":false,"deprecationReason":null},{"name":"AS","description":"American Samoa","isDeprecated":false,"deprecationReason":null},{"name":"AD","description":"Andorra","isDeprecated":false,"deprecationReason":null},{"name":"AO","description":"Angola","isDeprecated":false,"deprecationReason":null},{"name":"AI","description":"Anguilla","isDeprecated":false,"deprecationReason":null},{"name":"AQ","description":"Antarctica","isDeprecated":false,"deprecationReason":null},{"name":"AG","description":"Antigua and Barbuda","isDeprecated":false,"deprecationReason":null},{"name":"AR","description":"Argentina","isDeprecated":false,"deprecationReason":null},{"name":"AM","description":"Armenia","isDeprecated":false,"deprecationReason":null},{"name":"AW","description":"Aruba","isDeprecated":false,"deprecationReason":null},{"name":"AU","description":"Australia","isDeprecated":false,"deprecationReason":null},{"name":"AT","description":"Austria","isDeprecated":false,"deprecationReason":null},{"name":"AZ","description":"Azerbaijan","isDeprecated":false,"deprecationReason":null},{"name":"BS","description":"Bahamas","isDeprecated":false,"deprecationReason":null},{"name":"BH","description":"Bahrain","isDeprecated":false,"deprecationReason":null},{"name":"BD","description":"Bangladesh","isDeprecated":false,"deprecationReason":null},{"name":"BB","description":"Barbados","isDeprecated":false,"deprecationReason":null},{"name":"BY","description":"Belarus","isDeprecated":false,"deprecationReason":null},{"name":"BE","description":"Belgium","isDeprecated":false,"deprecationReason":null},{"name":"BZ","description":"Belize","isDeprecated":false,"deprecationReason":null},{"name":"BJ","description":"Benin","isDeprecated":false,"deprecationReason":null},{"name":"BM","description":"Bermuda","isDeprecated":false,"deprecationReason":null},{"name":"BT","description":"Bhutan","isDeprecated":false,"deprecationReason":null},{"name":"BO","description":"Bolivia","isDeprecated":false,"deprecationReason":null},{"name":"BQ","description":"Bonaire, Sint Eustatius and Saba","isDeprecated":false,"deprecationReason":null},{"name":"BA","description":"Bosnia and Herzegovina","isDeprecated":false,"deprecationReason":null},{"name":"BW","description":"Botswana","isDeprecated":false,"deprecationReason":null},{"name":"BV","description":"Bouvet Island","isDeprecated":false,"deprecationReason":null},{"name":"BR","description":"Brazil","isDeprecated":false,"deprecationReason":null},{"name":"IO","description":"British Indian Ocean Territory","isDeprecated":false,"deprecationReason":null},{"name":"BN","description":"Brunei Darussalam","isDeprecated":false,"deprecationReason":null},{"name":"BG","description":"Bulgaria","isDeprecated":false,"deprecationReason":null},{"name":"BF","description":"Burkina Faso","isDeprecated":false,"deprecationReason":null},{"name":"BI","description":"Burundi","isDeprecated":false,"deprecationReason":null},{"name":"KH","description":"Cambodia","isDeprecated":false,"deprecationReason":null},{"name":"CM","description":"Cameroon","isDeprecated":false,"deprecationReason":null},{"name":"CA","description":"Canada","isDeprecated":false,"deprecationReason":null},{"name":"CV","description":"Cape Verde","isDeprecated":false,"deprecationReason":null},{"name":"KY","description":"Cayman Islands","isDeprecated":false,"deprecationReason":null},{"name":"CF","description":"Central African Republic","isDeprecated":false,"deprecationReason":null},{"name":"TD","description":"Chad","isDeprecated":false,"deprecationReason":null},{"name":"CL","description":"Chile","isDeprecated":false,"deprecationReason":null},{"name":"CN","description":"China","isDeprecated":false,"deprecationReason":null},{"name":"CX","description":"Christmas Island","isDeprecated":false,"deprecationReason":null},{"name":"CC","description":"Cocos (Keeling) Islands","isDeprecated":false,"deprecationReason":null},{"name":"CO","description":"Colombia","isDeprecated":false,"deprecationReason":null},{"name":"KM","description":"Comoros","isDeprecated":false,"deprecationReason":null},{"name":"CG","description":"Congo (Brazzaville)","isDeprecated":false,"deprecationReason":null},{"name":"CD","description":"Congo (Kinshasa)","isDeprecated":false,"deprecationReason":null},{"name":"CK","description":"Cook Islands","isDeprecated":false,"deprecationReason":null},{"name":"CR","description":"Costa Rica","isDeprecated":false,"deprecationReason":null},{"name":"CI","description":"Côte d\'Ivoire","isDeprecated":false,"deprecationReason":null},{"name":"HR","description":"Croatia","isDeprecated":false,"deprecationReason":null},{"name":"CW","description":"Curaçao","isDeprecated":false,"deprecationReason":null},{"name":"CY","description":"Cyprus","isDeprecated":false,"deprecationReason":null},{"name":"CZ","description":"Czech Republic","isDeprecated":false,"deprecationReason":null},{"name":"DK","description":"Denmark","isDeprecated":false,"deprecationReason":null},{"name":"DJ","description":"Djibouti","isDeprecated":false,"deprecationReason":null},{"name":"DM","description":"Dominica","isDeprecated":false,"deprecationReason":null},{"name":"DO","description":"Dominican Republic","isDeprecated":false,"deprecationReason":null},{"name":"EC","description":"Ecuador","isDeprecated":false,"deprecationReason":null},{"name":"EG","description":"Egypt","isDeprecated":false,"deprecationReason":null},{"name":"SV","description":"El Salvador","isDeprecated":false,"deprecationReason":null},{"name":"GQ","description":"Equatorial Guinea","isDeprecated":false,"deprecationReason":null},{"name":"ER","description":"Eritrea","isDeprecated":false,"deprecationReason":null},{"name":"EE","description":"Estonia","isDeprecated":false,"deprecationReason":null},{"name":"ET","description":"Ethiopia","isDeprecated":false,"deprecationReason":null},{"name":"FK","description":"Falkland Islands","isDeprecated":false,"deprecationReason":null},{"name":"FO","description":"Faroe Islands","isDeprecated":false,"deprecationReason":null},{"name":"FJ","description":"Fiji","isDeprecated":false,"deprecationReason":null},{"name":"FI","description":"Finland","isDeprecated":false,"deprecationReason":null},{"name":"FR","description":"France","isDeprecated":false,"deprecationReason":null},{"name":"GF","description":"French Guiana","isDeprecated":false,"deprecationReason":null},{"name":"PF","description":"French Polynesia","isDeprecated":false,"deprecationReason":null},{"name":"TF","description":"French Southern Lands","isDeprecated":false,"deprecationReason":null},{"name":"GA","description":"Gabon","isDeprecated":false,"deprecationReason":null},{"name":"GM","description":"Gambia","isDeprecated":false,"deprecationReason":null},{"name":"GE","description":"Georgia","isDeprecated":false,"deprecationReason":null},{"name":"DE","description":"Germany","isDeprecated":false,"deprecationReason":null},{"name":"GH","description":"Ghana","isDeprecated":false,"deprecationReason":null},{"name":"GI","description":"Gibraltar","isDeprecated":false,"deprecationReason":null},{"name":"GR","description":"Greece","isDeprecated":false,"deprecationReason":null},{"name":"GL","description":"Greenland","isDeprecated":false,"deprecationReason":null},{"name":"GD","description":"Grenada","isDeprecated":false,"deprecationReason":null},{"name":"GP","description":"Guadeloupe","isDeprecated":false,"deprecationReason":null},{"name":"GU","description":"Guam","isDeprecated":false,"deprecationReason":null},{"name":"GT","description":"Guatemala","isDeprecated":false,"deprecationReason":null},{"name":"GG","description":"Guernsey","isDeprecated":false,"deprecationReason":null},{"name":"GN","description":"Guinea","isDeprecated":false,"deprecationReason":null},{"name":"GW","description":"Guinea-Bissau","isDeprecated":false,"deprecationReason":null},{"name":"GY","description":"Guyana","isDeprecated":false,"deprecationReason":null},{"name":"HT","description":"Haiti","isDeprecated":false,"deprecationReason":null},{"name":"HM","description":"Heard and McDonald Islands","isDeprecated":false,"deprecationReason":null},{"name":"HN","description":"Honduras","isDeprecated":false,"deprecationReason":null},{"name":"HK","description":"Hong Kong","isDeprecated":false,"deprecationReason":null},{"name":"HU","description":"Hungary","isDeprecated":false,"deprecationReason":null},{"name":"IS","description":"Iceland","isDeprecated":false,"deprecationReason":null},{"name":"IN","description":"India","isDeprecated":false,"deprecationReason":null},{"name":"ID","description":"Indonesia","isDeprecated":false,"deprecationReason":null},{"name":"IR","description":"Iran","isDeprecated":false,"deprecationReason":null},{"name":"IQ","description":"Iraq","isDeprecated":false,"deprecationReason":null},{"name":"IE","description":"Ireland","isDeprecated":false,"deprecationReason":null},{"name":"IM","description":"Isle of Man","isDeprecated":false,"deprecationReason":null},{"name":"IL","description":"Israel","isDeprecated":false,"deprecationReason":null},{"name":"IT","description":"Italy","isDeprecated":false,"deprecationReason":null},{"name":"JM","description":"Jamaica","isDeprecated":false,"deprecationReason":null},{"name":"JP","description":"Japan","isDeprecated":false,"deprecationReason":null},{"name":"JE","description":"Jersey","isDeprecated":false,"deprecationReason":null},{"name":"JO","description":"Jordan","isDeprecated":false,"deprecationReason":null},{"name":"KZ","description":"Kazakhstan","isDeprecated":false,"deprecationReason":null},{"name":"KE","description":"Kenya","isDeprecated":false,"deprecationReason":null},{"name":"KI","description":"Kiribati","isDeprecated":false,"deprecationReason":null},{"name":"KR","description":"Korea, South","isDeprecated":false,"deprecationReason":null},{"name":"KW","description":"Kuwait","isDeprecated":false,"deprecationReason":null},{"name":"KG","description":"Kyrgyzstan","isDeprecated":false,"deprecationReason":null},{"name":"LA","description":"Laos","isDeprecated":false,"deprecationReason":null},{"name":"LV","description":"Latvia","isDeprecated":false,"deprecationReason":null},{"name":"LB","description":"Lebanon","isDeprecated":false,"deprecationReason":null},{"name":"LS","description":"Lesotho","isDeprecated":false,"deprecationReason":null},{"name":"LR","description":"Liberia","isDeprecated":false,"deprecationReason":null},{"name":"LY","description":"Libya","isDeprecated":false,"deprecationReason":null},{"name":"LI","description":"Liechtenstein","isDeprecated":false,"deprecationReason":null},{"name":"LT","description":"Lithuania","isDeprecated":false,"deprecationReason":null},{"name":"LU","description":"Luxembourg","isDeprecated":false,"deprecationReason":null},{"name":"MO","description":"Macau","isDeprecated":false,"deprecationReason":null},{"name":"MK","description":"Macedonia","isDeprecated":false,"deprecationReason":null},{"name":"MG","description":"Madagascar","isDeprecated":false,"deprecationReason":null},{"name":"MW","description":"Malawi","isDeprecated":false,"deprecationReason":null},{"name":"MY","description":"Malaysia","isDeprecated":false,"deprecationReason":null},{"name":"MV","description":"Maldives","isDeprecated":false,"deprecationReason":null},{"name":"ML","description":"Mali","isDeprecated":false,"deprecationReason":null},{"name":"MT","description":"Malta","isDeprecated":false,"deprecationReason":null},{"name":"MH","description":"Marshall Islands","isDeprecated":false,"deprecationReason":null},{"name":"MQ","description":"Martinique","isDeprecated":false,"deprecationReason":null},{"name":"MR","description":"Mauritania","isDeprecated":false,"deprecationReason":null},{"name":"MU","description":"Mauritius","isDeprecated":false,"deprecationReason":null},{"name":"YT","description":"Mayotte","isDeprecated":false,"deprecationReason":null},{"name":"MX","description":"Mexico","isDeprecated":false,"deprecationReason":null},{"name":"FM","description":"Micronesia","isDeprecated":false,"deprecationReason":null},{"name":"MD","description":"Moldova","isDeprecated":false,"deprecationReason":null},{"name":"MC","description":"Monaco","isDeprecated":false,"deprecationReason":null},{"name":"MN","description":"Mongolia","isDeprecated":false,"deprecationReason":null},{"name":"ME","description":"Montenegro","isDeprecated":false,"deprecationReason":null},{"name":"MS","description":"Montserrat","isDeprecated":false,"deprecationReason":null},{"name":"MA","description":"Morocco","isDeprecated":false,"deprecationReason":null},{"name":"MZ","description":"Mozambique","isDeprecated":false,"deprecationReason":null},{"name":"MM","description":"Myanmar","isDeprecated":false,"deprecationReason":null},{"name":"NA","description":"Namibia","isDeprecated":false,"deprecationReason":null},{"name":"NR","description":"Nauru","isDeprecated":false,"deprecationReason":null},{"name":"NP","description":"Nepal","isDeprecated":false,"deprecationReason":null},{"name":"NL","description":"Netherlands","isDeprecated":false,"deprecationReason":null},{"name":"NC","description":"New Caledonia","isDeprecated":false,"deprecationReason":null},{"name":"NZ","description":"New Zealand","isDeprecated":false,"deprecationReason":null},{"name":"NI","description":"Nicaragua","isDeprecated":false,"deprecationReason":null},{"name":"NE","description":"Niger","isDeprecated":false,"deprecationReason":null},{"name":"NG","description":"Nigeria","isDeprecated":false,"deprecationReason":null},{"name":"NU","description":"Niue","isDeprecated":false,"deprecationReason":null},{"name":"NF","description":"Norfolk Island","isDeprecated":false,"deprecationReason":null},{"name":"MP","description":"Northern Mariana Islands","isDeprecated":false,"deprecationReason":null},{"name":"NO","description":"Norway","isDeprecated":false,"deprecationReason":null},{"name":"OM","description":"Oman","isDeprecated":false,"deprecationReason":null},{"name":"PK","description":"Pakistan","isDeprecated":false,"deprecationReason":null},{"name":"PW","description":"Palau","isDeprecated":false,"deprecationReason":null},{"name":"PS","description":"Palestine","isDeprecated":false,"deprecationReason":null},{"name":"PA","description":"Panama","isDeprecated":false,"deprecationReason":null},{"name":"PG","description":"Papua New Guinea","isDeprecated":false,"deprecationReason":null},{"name":"PY","description":"Paraguay","isDeprecated":false,"deprecationReason":null},{"name":"PE","description":"Peru","isDeprecated":false,"deprecationReason":null},{"name":"PH","description":"Philippines","isDeprecated":false,"deprecationReason":null},{"name":"PN","description":"Pitcairn","isDeprecated":false,"deprecationReason":null},{"name":"PL","description":"Poland","isDeprecated":false,"deprecationReason":null},{"name":"PT","description":"Portugal","isDeprecated":false,"deprecationReason":null},{"name":"PR","description":"Puerto Rico","isDeprecated":false,"deprecationReason":null},{"name":"QA","description":"Qatar","isDeprecated":false,"deprecationReason":null},{"name":"RE","description":"Reunion","isDeprecated":false,"deprecationReason":null},{"name":"RO","description":"Romania","isDeprecated":false,"deprecationReason":null},{"name":"RU","description":"Russian Federation","isDeprecated":false,"deprecationReason":null},{"name":"RW","description":"Rwanda","isDeprecated":false,"deprecationReason":null},{"name":"BL","description":"Saint Barthélemy","isDeprecated":false,"deprecationReason":null},{"name":"SH","description":"Saint Helena","isDeprecated":false,"deprecationReason":null},{"name":"KN","description":"Saint Kitts and Nevis","isDeprecated":false,"deprecationReason":null},{"name":"LC","description":"Saint Lucia","isDeprecated":false,"deprecationReason":null},{"name":"MF","description":"Saint Martin (French part)","isDeprecated":false,"deprecationReason":null},{"name":"PM","description":"Saint Pierre and Miquelon","isDeprecated":false,"deprecationReason":null},{"name":"VC","description":"Saint Vincent and the Grenadines","isDeprecated":false,"deprecationReason":null},{"name":"WS","description":"Samoa","isDeprecated":false,"deprecationReason":null},{"name":"SM","description":"San Marino","isDeprecated":false,"deprecationReason":null},{"name":"ST","description":"Sao Tome and Principe","isDeprecated":false,"deprecationReason":null},{"name":"SA","description":"Saudi Arabia","isDeprecated":false,"deprecationReason":null},{"name":"SN","description":"Senegal","isDeprecated":false,"deprecationReason":null},{"name":"RS","description":"Serbia","isDeprecated":false,"deprecationReason":null},{"name":"SC","description":"Seychelles","isDeprecated":false,"deprecationReason":null},{"name":"SL","description":"Sierra Leone","isDeprecated":false,"deprecationReason":null},{"name":"SG","description":"Singapore","isDeprecated":false,"deprecationReason":null},{"name":"SX","description":"Sint Maarten (Dutch part)","isDeprecated":false,"deprecationReason":null},{"name":"SK","description":"Slovakia","isDeprecated":false,"deprecationReason":null},{"name":"SI","description":"Slovenia","isDeprecated":false,"deprecationReason":null},{"name":"SB","description":"Solomon Islands","isDeprecated":false,"deprecationReason":null},{"name":"SO","description":"Somalia","isDeprecated":false,"deprecationReason":null},{"name":"ZA","description":"South Africa","isDeprecated":false,"deprecationReason":null},{"name":"GS","description":"South Georgia and South Sandwich Islands","isDeprecated":false,"deprecationReason":null},{"name":"SS","description":"South Sudan","isDeprecated":false,"deprecationReason":null},{"name":"ES","description":"Spain","isDeprecated":false,"deprecationReason":null},{"name":"LK","description":"Sri Lanka","isDeprecated":false,"deprecationReason":null},{"name":"SD","description":"Sudan","isDeprecated":false,"deprecationReason":null},{"name":"SR","description":"Suriname","isDeprecated":false,"deprecationReason":null},{"name":"SJ","description":"Svalbard and Jan Mayen Islands","isDeprecated":false,"deprecationReason":null},{"name":"SZ","description":"Swaziland","isDeprecated":false,"deprecationReason":null},{"name":"SE","description":"Sweden","isDeprecated":false,"deprecationReason":null},{"name":"CH","description":"Switzerland","isDeprecated":false,"deprecationReason":null},{"name":"TW","description":"Taiwan","isDeprecated":false,"deprecationReason":null},{"name":"TJ","description":"Tajikistan","isDeprecated":false,"deprecationReason":null},{"name":"TZ","description":"Tanzania","isDeprecated":false,"deprecationReason":null},{"name":"TH","description":"Thailand","isDeprecated":false,"deprecationReason":null},{"name":"TL","description":"Timor-Leste","isDeprecated":false,"deprecationReason":null},{"name":"TG","description":"Togo","isDeprecated":false,"deprecationReason":null},{"name":"TK","description":"Tokelau","isDeprecated":false,"deprecationReason":null},{"name":"TO","description":"Tonga","isDeprecated":false,"deprecationReason":null},{"name":"TT","description":"Trinidad and Tobago","isDeprecated":false,"deprecationReason":null},{"name":"TN","description":"Tunisia","isDeprecated":false,"deprecationReason":null},{"name":"TR","description":"Turkey","isDeprecated":false,"deprecationReason":null},{"name":"TM","description":"Turkmenistan","isDeprecated":false,"deprecationReason":null},{"name":"TC","description":"Turks and Caicos Islands","isDeprecated":false,"deprecationReason":null},{"name":"TV","description":"Tuvalu","isDeprecated":false,"deprecationReason":null},{"name":"UG","description":"Uganda","isDeprecated":false,"deprecationReason":null},{"name":"UA","description":"Ukraine","isDeprecated":false,"deprecationReason":null},{"name":"AE","description":"United Arab Emirates","isDeprecated":false,"deprecationReason":null},{"name":"GB","description":"United Kingdom","isDeprecated":false,"deprecationReason":null},{"name":"UM","description":"United States Minor Outlying Islands","isDeprecated":false,"deprecationReason":null},{"name":"US","description":"United States of America","isDeprecated":false,"deprecationReason":null},{"name":"UY","description":"Uruguay","isDeprecated":false,"deprecationReason":null},{"name":"UZ","description":"Uzbekistan","isDeprecated":false,"deprecationReason":null},{"name":"VU","description":"Vanuatu","isDeprecated":false,"deprecationReason":null},{"name":"VA","description":"Vatican City","isDeprecated":false,"deprecationReason":null},{"name":"VE","description":"Venezuela","isDeprecated":false,"deprecationReason":null},{"name":"VN","description":"Vietnam","isDeprecated":false,"deprecationReason":null},{"name":"VG","description":"Virgin Islands, British","isDeprecated":false,"deprecationReason":null},{"name":"VI","description":"Virgin Islands, U.S.","isDeprecated":false,"deprecationReason":null},{"name":"WF","description":"Wallis and Futuna Islands","isDeprecated":false,"deprecationReason":null},{"name":"EH","description":"Western Sahara","isDeprecated":false,"deprecationReason":null},{"name":"YE","description":"Yemen","isDeprecated":false,"deprecationReason":null},{"name":"ZM","description":"Zambia","isDeprecated":false,"deprecationReason":null},{"name":"ZW","description":"Zimbabwe","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsGoal","description":"A goal associated with a GitHub Sponsors listing, representing a target the sponsored maintainer would like to attain.","fields":[{"name":"description","description":"A description of the goal from the maintainer.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"kind","description":"What the objective of this goal is.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsGoalKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"percentComplete","description":"The percentage representing how complete this goal is, between 0-100.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"targetValue","description":"What the goal amount is. Represents an amount in USD for monthly sponsorship amount goals. Represents a count of unique sponsors for total sponsors count goals.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"A brief summary of the kind and target value of this goal.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorsGoalKind","description":"The different kinds of goals a GitHub Sponsors member can have.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"TOTAL_SPONSORS_COUNT","description":"The goal is about reaching a certain number of sponsors.","isDeprecated":false,"deprecationReason":null},{"name":"MONTHLY_SPONSORSHIP_AMOUNT","description":"The goal is about getting a certain amount in USD from sponsorships each month.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsListing","description":"A GitHub Sponsors listing.","fields":[{"name":"activeGoal","description":"The current goal the maintainer is trying to reach with GitHub Sponsors, if any.","args":[],"type":{"kind":"OBJECT","name":"SponsorsGoal","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"activeStripeConnectAccount","description":"The Stripe Connect account currently in use for payouts for this Sponsors listing, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.","args":[],"type":{"kind":"OBJECT","name":"StripeConnectAccount","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"billingCountryOrRegion","description":"The name of the country or region with the maintainer\'s bank account or fiscal host. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"contactEmailAddress","description":"The email address used by GitHub to contact the sponsorable about their GitHub Sponsors profile. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"dashboardResourcePath","description":"The HTTP path for the Sponsors dashboard for this Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"dashboardUrl","description":"The HTTP URL for the Sponsors dashboard for this Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"featuredItems","description":"The records featured on the GitHub Sponsors profile.","args":[{"name":"featureableTypes","description":"The types of featured items to return.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsListingFeaturedItemFeatureableType","ofType":null}}},"defaultValue":"[REPOSITORY, USER]"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsListingFeaturedItem","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"fiscalHost","description":"The fiscal host used for payments, if any. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"fullDescription","description":"The full description of the listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"fullDescriptionHTML","description":"The full description of the listing rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPublic","description":"Whether this listing is publicly visible.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The listing\'s full name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nextPayoutDate","description":"A future date on which this listing is eligible to receive a payout.","args":[],"type":{"kind":"SCALAR","name":"Date","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"residenceCountryOrRegion","description":"The name of the country or region where the maintainer resides. Will only return a value when queried by the maintainer themselves, or by an admin of the sponsorable organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"shortDescription","description":"The short description of the listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"slug","description":"The short name of the listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorable","description":"The entity this listing represents who can be sponsored on GitHub Sponsors.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Sponsorable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tiers","description":"The tiers for this GitHub Sponsors profile.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for Sponsors tiers returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorsTierOrder","ofType":null},"defaultValue":"{field: MONTHLY_PRICE_IN_CENTS, direction: ASC}"},{"name":"includeUnpublished","description":"Whether to include tiers that aren\'t published. Only admins of the Sponsors listing can see draft tiers. Only admins of the Sponsors listing and viewers who are currently sponsoring on a retired tier can see those retired tiers. Defaults to including only published tiers, which are visible to anyone who can see the GitHub Sponsors profile.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"OBJECT","name":"SponsorsTierConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"SponsorsListingFeatureableItem","description":"A record that can be featured on a GitHub Sponsors profile.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"User","ofType":null}]},{"kind":"OBJECT","name":"SponsorsListingFeaturedItem","description":"A record that is promoted on a GitHub Sponsors profile.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"Will either be a description from the sponsorable maintainer about why they featured this item, or the item\'s description itself, such as a user\'s bio from their GitHub profile page.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"featureable","description":"The record that is featured on the GitHub Sponsors profile.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"SponsorsListingFeatureableItem","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"position","description":"The position of this featured item on the GitHub Sponsors profile with a lower position indicating higher precedence. Starts at 1.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsListing","description":"The GitHub Sponsors profile that features this record.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsListing","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorsListingFeaturedItemFeatureableType","description":"The different kinds of records that can be featured on a GitHub Sponsors profile page.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"REPOSITORY","description":"A repository owned by the user or organization with the GitHub Sponsors profile.","isDeprecated":false,"deprecationReason":null},{"name":"USER","description":"A user who belongs to the organization with the GitHub Sponsors profile.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsTier","description":"A GitHub Sponsors tier associated with a GitHub Sponsors listing.","fields":[{"name":"adminInfo","description":"SponsorsTier information only visible to users that can administer the associated Sponsors listing.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTierAdminInfo","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"closestLesserValueTier","description":"Get a different tier for this tier\'s maintainer that is at the same frequency as this tier but with an equal or lesser cost. Returns the published tier with the monthly price closest to this tier\'s without going over.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description of the tier.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"descriptionHTML","description":"The tier description rendered to HTML","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCustomAmount","description":"Whether this tier was chosen at checkout time by the sponsor rather than defined ahead of time by the maintainer who manages the Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isOneTime","description":"Whether this tier is only for use with one-time sponsorships.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"monthlyPriceInCents","description":"How much this tier costs per month in cents.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"monthlyPriceInDollars","description":"How much this tier costs per month in USD.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the tier.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsListing","description":"The sponsors listing that this tier belongs to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsListing","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsTierAdminInfo","description":"SponsorsTier information only visible to users that can administer the associated Sponsors listing.","fields":[{"name":"isDraft","description":"Indicates whether this tier is still a work in progress by the sponsorable and not yet published to the associated GitHub Sponsors profile. Draft tiers cannot be used for new sponsorships and will not be in use on existing sponsorships. Draft tiers cannot be seen by anyone but the admins of the GitHub Sponsors profile.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPublished","description":"Indicates whether this tier is published to the associated GitHub Sponsors profile. Published tiers are visible to anyone who can see the GitHub Sponsors profile, and are available for use in sponsorships if the GitHub Sponsors profile is publicly visible.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isRetired","description":"Indicates whether this tier has been retired from the associated GitHub Sponsors profile. Retired tiers are no longer shown on the GitHub Sponsors profile and cannot be chosen for new sponsorships. Existing sponsorships may still use retired tiers if the sponsor selected the tier before it was retired.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorships","description":"The sponsorships using this tier.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"includePrivate","description":"Whether or not to return private sponsorships using this tier. Defaults to only returning public sponsorships on this tier.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsTierConnection","description":"The connection type for SponsorsTier.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsTierEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsTier","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorsTierEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SponsorsTierOrder","description":"Ordering options for Sponsors tiers connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order tiers by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsTierOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorsTierOrderField","description":"Properties by which Sponsors tiers connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order tiers by creation time.","isDeprecated":false,"deprecationReason":null},{"name":"MONTHLY_PRICE_IN_CENTS","description":"Order tiers by their monthly price in cents","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"Sponsorship","description":"A sponsorship relationship between a sponsor and a maintainer","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isActive","description":"Whether the sponsorship is active. False implies the sponsor is a past sponsor of the maintainer, while true implies they are a current sponsor.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isOneTimePayment","description":"Whether this sponsorship represents a one-time payment versus a recurring sponsorship.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSponsorOptedIntoEmail","description":"Whether the sponsor has chosen to receive sponsorship update emails sent from the sponsorable. Only returns a non-null value when the viewer has permission to know this.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"maintainer","description":"The entity that is being sponsored","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":true,"deprecationReason":"`Sponsorship.maintainer` will be removed. Use `Sponsorship.sponsorable` instead. Removal on 2020-04-01 UTC."},{"name":"privacyLevel","description":"The privacy level for this sponsorship.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorshipPrivacy","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsor","description":"The user that is sponsoring. Returns null if the sponsorship is private or if sponsor is not a user.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":true,"deprecationReason":"`Sponsorship.sponsor` will be removed. Use `Sponsorship.sponsorEntity` instead. Removal on 2020-10-01 UTC."},{"name":"sponsorEntity","description":"The user or organization that is sponsoring, if you have permission to view them.","args":[],"type":{"kind":"UNION","name":"Sponsor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorable","description":"The entity that is being sponsored","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Sponsorable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tier","description":"The associated sponsorship tier","args":[],"type":{"kind":"OBJECT","name":"SponsorsTier","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"tierSelectedAt","description":"Identifies the date and time when the current tier was chosen for this sponsorship.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorshipConnection","description":"The connection type for Sponsorship.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Sponsorship","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRecurringMonthlyPriceInCents","description":"The total amount in cents of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalRecurringMonthlyPriceInDollars","description":"The total amount in USD of all recurring sponsorships in the connection whose amount you can view. Does not include one-time sponsorships.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorshipEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorshipNewsletter","description":"An update sent to sponsors of a user or organization on GitHub Sponsors.","fields":[{"name":"author","description":"The author of the newsletter.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The contents of the newsletter, the message the sponsorable wanted to give.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPublished","description":"Indicates if the newsletter has been made available to sponsors.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorable","description":"The user or organization this newsletter is from.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Sponsorable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The subject of the newsletter, what it\'s about.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorshipNewsletterConnection","description":"The connection type for SponsorshipNewsletter.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipNewsletterEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipNewsletter","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SponsorshipNewsletterEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"SponsorshipNewsletter","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SponsorshipNewsletterOrder","description":"Ordering options for sponsorship newsletter connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order sponsorship newsletters by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorshipNewsletterOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorshipNewsletterOrderField","description":"Properties by which sponsorship update connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order sponsorship newsletters by when they were created.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","description":"Ordering options for sponsorship connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order sponsorship by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorshipOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SponsorshipOrderField","description":"Properties by which sponsorship connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order sponsorship by creation time.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"SponsorshipPrivacy","description":"The privacy of a sponsorship","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PUBLIC","description":"Public","isDeprecated":false,"deprecationReason":null},{"name":"PRIVATE","description":"Private","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"SquashMergeCommitMessage","description":"The possible default commit messages for squash merges.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PR_BODY","description":"Default to the pull request\'s body.","isDeprecated":false,"deprecationReason":null},{"name":"COMMIT_MESSAGES","description":"Default to the branch\'s commit messages.","isDeprecated":false,"deprecationReason":null},{"name":"BLANK","description":"Default to a blank commit message.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"SquashMergeCommitTitle","description":"The possible default commit titles for squash merges.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"PR_TITLE","description":"Default to the pull request\'s title.","isDeprecated":false,"deprecationReason":null},{"name":"COMMIT_OR_PR_TITLE","description":"Default to the commit\'s title (if only one commit) or the pull request\'s title (when more than one commit).","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SshSignature","description":"Represents an SSH signature on a Commit or Tag.","fields":[{"name":"email","description":"Email used to sign this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isValid","description":"True if the signature is valid and verified by GitHub.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"keyFingerprint","description":"Hex-encoded fingerprint of the key that signed this object.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"payload","description":"Payload for GPG signing object. Raw ODB object without the signature header.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signature","description":"ASCII-armored signature header from object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signer","description":"GitHub user corresponding to the email signing this commit.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"GitSignatureState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"wasSignedByGitHub","description":"True if the signature was made with GitHub\'s signing key.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"GitSignature","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"StarOrder","description":"Ways in which star connections can be ordered.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order nodes by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"StarOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order nodes.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"StarOrderField","description":"Properties by which star connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"STARRED_AT","description":"Allows ordering a list of stars by when they were created.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"StargazerConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"StargazerEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StargazerEdge","description":"Represents a user that\'s starred a repository.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"starredAt","description":"Identifies when the item was starred.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Starrable","description":"Things that can be starred.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazerCount","description":"Returns a count of how many stargazers there are on this object\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazers","description":"A list of users who have starred this starrable.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"StarOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StargazerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasStarred","description":"Returns a boolean indicating whether the viewing user has starred this starrable.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Gist","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"Topic","ofType":null}]},{"kind":"OBJECT","name":"StarredRepositoryConnection","description":"The connection type for Repository.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"StarredRepositoryEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isOverLimit","description":"Is the list of stars for this user truncated? This is true for users that have many stars.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StarredRepositoryEdge","description":"Represents a starred repository.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"starredAt","description":"Identifies when the item was starred.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"StartOrganizationMigrationInput","description":"Autogenerated input type of StartOrganizationMigration","fields":null,"inputFields":[{"name":"sourceOrgUrl","description":"The URL of the organization to migrate.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"defaultValue":null},{"name":"targetOrgName","description":"The name of the target organization.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"targetEnterpriseId","description":"The ID of the enterprise the target organization belongs to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"sourceAccessToken","description":"The migration source access token.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StartOrganizationMigrationPayload","description":"Autogenerated return type of StartOrganizationMigration","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"orgMigration","description":"The new organization migration.","args":[],"type":{"kind":"OBJECT","name":"OrganizationMigration","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"StartRepositoryMigrationInput","description":"Autogenerated input type of StartRepositoryMigration","fields":null,"inputFields":[{"name":"sourceId","description":"The ID of the migration source.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"ownerId","description":"The ID of the organization that will own the imported repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"sourceRepositoryUrl","description":"The URL of the source repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"defaultValue":null},{"name":"repositoryName","description":"The name of the imported repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"continueOnError","description":"Whether to continue the migration on error. Defaults to `false`.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"gitArchiveUrl","description":"The signed URL to access the user-uploaded git archive.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"metadataArchiveUrl","description":"The signed URL to access the user-uploaded metadata archive.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"accessToken","description":"The migration source access token.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"githubPat","description":"The GitHub personal access token of the user importing to the target repository.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"skipReleases","description":"Whether to skip migrating releases for the repository.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"targetRepoVisibility","description":"The visibility of the imported repository.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"lockSource","description":"Whether to lock the source repository.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StartRepositoryMigrationPayload","description":"Autogenerated return type of StartRepositoryMigration","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryMigration","description":"The new repository migration.","args":[],"type":{"kind":"OBJECT","name":"RepositoryMigration","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Status","description":"Represents a commit status.","fields":[{"name":"combinedContexts","description":"A list of status contexts and check runs for this commit.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StatusCheckRollupContextConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"The commit this status is attached to.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"context","description":"Looks up an individual status context by context name.","args":[{"name":"name","description":"The context name.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"StatusContext","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"contexts","description":"The individual status contexts for this commit.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StatusContext","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The combined commit status.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"StatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StatusCheckRollup","description":"Represents the rollup for both the check runs and status for a commit.","fields":[{"name":"commit","description":"The commit the status and check runs are attached to.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"contexts","description":"A list of status contexts and check runs for this commit.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StatusCheckRollupContextConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The combined status for the commit.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"StatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"UNION","name":"StatusCheckRollupContext","description":"Types that can be inside a StatusCheckRollup context.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CheckRun","ofType":null},{"kind":"OBJECT","name":"StatusContext","ofType":null}]},{"kind":"OBJECT","name":"StatusCheckRollupContextConnection","description":"The connection type for StatusCheckRollupContext.","fields":[{"name":"checkRunCount","description":"The number of check runs in this rollup.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"checkRunCountsByState","description":"Counts of check runs by state.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CheckRunStateCount","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"StatusCheckRollupContextEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"UNION","name":"StatusCheckRollupContext","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"statusContextCount","description":"The number of status contexts in this rollup.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"statusContextCountsByState","description":"Counts of status contexts by state.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StatusContextStateCount","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StatusCheckRollupContextEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"UNION","name":"StatusCheckRollupContext","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StatusContext","description":"Represents an individual commit status context","fields":[{"name":"avatarUrl","description":"The avatar of the OAuth application or the user that created the status","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"40"}],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"commit","description":"This commit this status context is attached to.","args":[],"type":{"kind":"OBJECT","name":"Commit","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"context","description":"The name of this status context.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"creator","description":"The actor who created this status context.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description for this status context.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isRequired","description":"Whether this is required to pass before merging for a specific pull request.","args":[{"name":"pullRequestId","description":"The id of the pull request this is required for","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"pullRequestNumber","description":"The number of the pull request this is required for","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of this status context.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"StatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"targetUrl","description":"The URL for this status context.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"RequirableByPullRequest","ofType":null},{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StatusContextStateCount","description":"Represents a count of the state of a status context.","fields":[{"name":"count","description":"The number of statuses with this state.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of a status context.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"StatusState","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"StatusState","description":"The possible commit status states.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"EXPECTED","description":"Status is expected.","isDeprecated":false,"deprecationReason":null},{"name":"ERROR","description":"Status is errored.","isDeprecated":false,"deprecationReason":null},{"name":"FAILURE","description":"Status is failing.","isDeprecated":false,"deprecationReason":null},{"name":"PENDING","description":"Status is pending.","isDeprecated":false,"deprecationReason":null},{"name":"SUCCESS","description":"Status is successful.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"String","description":"Represents textual data as UTF-8 character sequences. This type is most often used by GraphQL to represent free-form human-readable text.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"StripeConnectAccount","description":"A Stripe Connect account for receiving sponsorship funds from GitHub Sponsors.","fields":[{"name":"accountId","description":"The account number used to identify this Stripe Connect account.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"billingCountryOrRegion","description":"The name of the country or region of an external account, such as a bank account, tied to the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"countryOrRegion","description":"The name of the country or region of the Stripe Connect account. Will only return a value when queried by the maintainer of the associated GitHub Sponsors profile themselves, or by an admin of the sponsorable organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isActive","description":"Whether this Stripe Connect account is currently in use for the associated GitHub Sponsors profile.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsListing","description":"The GitHub Sponsors profile associated with this Stripe Connect account.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsListing","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stripeDashboardUrl","description":"The URL to access this Stripe Connect account on Stripe\'s website.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"SubmitPullRequestReviewInput","description":"Autogenerated input type of SubmitPullRequestReview","fields":null,"inputFields":[{"name":"pullRequestId","description":"The Pull Request ID to submit any pending reviews.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"pullRequestReviewId","description":"The Pull Request Review ID to submit.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"event","description":"The event to send to the Pull Request Review.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestReviewEvent","ofType":null}},"defaultValue":null},{"name":"body","description":"The text field to set on the Pull Request Review.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SubmitPullRequestReviewPayload","description":"Autogenerated return type of SubmitPullRequestReview","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The submitted pull request review.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Submodule","description":"A pointer to a repository at a specific revision embedded inside another repository.","fields":[{"name":"branch","description":"The branch of the upstream submodule for tracking updates","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"gitUrl","description":"The git URL of the submodule repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the submodule in .gitmodules","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nameRaw","description":"The name of the submodule in .gitmodules (Base64-encoded)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Base64String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The path in the superproject that this submodule is located in","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pathRaw","description":"The path in the superproject that this submodule is located in (Base64-encoded)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Base64String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subprojectCommitOid","description":"The commit revision of the subproject repository being tracked by the submodule","args":[],"type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SubmoduleConnection","description":"The connection type for Submodule.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"SubmoduleEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Submodule","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"SubmoduleEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Submodule","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Subscribable","description":"Entities that can be subscribed to for web and email notifications.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Commit","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"Team","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null}]},{"kind":"OBJECT","name":"SubscribedEvent","description":"Represents a \'subscribed\' event on a given `Subscribable`.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subscribable","description":"Object referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Subscribable","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"SubscriptionState","description":"The possible states of a subscription.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"UNSUBSCRIBED","description":"The User is only notified when participating or @mentioned.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIBED","description":"The User is notified of all conversations.","isDeprecated":false,"deprecationReason":null},{"name":"IGNORED","description":"The User is never notified.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"SuggestedReviewer","description":"A suggestion to review a pull request based on a user\'s commit history and review comments.","fields":[{"name":"isAuthor","description":"Is this suggestion based on past commits?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCommenter","description":"Is this suggestion based on past review comments?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"reviewer","description":"Identifies the user suggested to review the pull request.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Tag","description":"Represents a Git tag.","fields":[{"name":"abbreviatedOid","description":"An abbreviated version of the Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitResourcePath","description":"The HTTP path for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitUrl","description":"The HTTP URL for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"The Git tag message.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The Git tag name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oid","description":"The Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The Repository the Git object belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tagger","description":"Details about the tag author.","args":[],"type":{"kind":"OBJECT","name":"GitActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"target","description":"The Git object the tag points to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"GitObject","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"GitObject","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Team","description":"A team of users in an organization.","fields":[{"name":"ancestors","description":"A list of teams that are ancestors of this team.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"avatarUrl","description":"A URL pointing to the team\'s avatar.","args":[{"name":"size","description":"The size in pixels of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"400"}],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"childTeams","description":"List of child teams belonging to this team","args":[{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"TeamOrder","ofType":null},"defaultValue":null},{"name":"userLogins","description":"User logins to filter by","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"immediateOnly","description":"Whether to list immediate child teams or all descendant child teams.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"combinedSlug","description":"The slug corresponding to the organization and team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":"The description of the team.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"Find a team discussion by its number.","args":[{"name":"number","description":"The sequence number of the discussion to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussions","description":"A list of team discussions.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"isPinned","description":"If provided, filters discussions according to whether or not they are pinned.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"TeamDiscussionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamDiscussionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"discussionsResourcePath","description":"The HTTP path for team discussions","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"discussionsUrl","description":"The HTTP URL for team discussions","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"editTeamResourcePath","description":"The HTTP path for editing this team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"editTeamUrl","description":"The HTTP URL for editing this team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"invitations","description":"A list of pending invitations for users to this team","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"OrganizationInvitationConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"memberStatuses","description":"Get the status messages members of this entity have set that are either public or visible only to the organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for user statuses returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"UserStatusOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"UserStatusConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"members","description":"A list of users who are members of this team.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"query","description":"The search string to look for.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"membership","description":"Filter by membership type","type":{"kind":"ENUM","name":"TeamMembershipType","ofType":null},"defaultValue":"ALL"},{"name":"role","description":"Filter by team member role","type":{"kind":"ENUM","name":"TeamMemberRole","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for the connection.","type":{"kind":"INPUT_OBJECT","name":"TeamMemberOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamMemberConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersResourcePath","description":"The HTTP path for the team\' members","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"membersUrl","description":"The HTTP URL for the team\' members","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"newTeamResourcePath","description":"The HTTP path creating a new team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"newTeamUrl","description":"The HTTP URL creating a new team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization that owns this team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Organization","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeam","description":"The parent team of the team.","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"privacy","description":"The level of privacy the team has.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TeamPrivacy","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"Finds and returns the project according to the provided project number.","args":[{"name":"number","description":"The Project number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"List of projects this team has collaborator access to.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the returned projects.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Order","ofType":null},"defaultValue":"{field: NUMBER, direction: DESC}"},{"name":"filterBy","description":"Filtering options for projects returned from this connection","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Filters","ofType":null},"defaultValue":"{}"},{"name":"query","description":"The query to search projects by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\\"\\""}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositories","description":"A list of repositories this team has access to.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"query","description":"The search string to look for. Repositories will be returned where the name contains your search string.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for the connection.","type":{"kind":"INPUT_OBJECT","name":"TeamRepositoryOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamRepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoriesResourcePath","description":"The HTTP path for this team\'s repositories","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoriesUrl","description":"The HTTP URL for this team\'s repositories","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"slug","description":"The slug corresponding to the team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamsResourcePath","description":"The HTTP path for this team\'s teams","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"teamsUrl","description":"The HTTP URL for this team\'s teams","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this team","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanAdminister","description":"Team is adminable by the viewer.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Subscribable","ofType":null},{"kind":"INTERFACE","name":"MemberStatusable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamAddMemberAuditEntry","description":"Audit log entry for a team.add_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLdapMapped","description":"Whether the team was mapped to an LDAP Group.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team associated with the action","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamName","description":"The name of the team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamResourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamUrl","description":"The HTTP URL for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"TeamAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamAddRepositoryAuditEntry","description":"Audit log entry for a team.add_repository event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLdapMapped","description":"Whether the team was mapped to an LDAP Group.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team associated with the action","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamName","description":"The name of the team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamResourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamUrl","description":"The HTTP URL for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"TeamAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"TeamAuditEntryData","description":"Metadata for an audit entry with action team.*","fields":[{"name":"team","description":"The team associated with the action","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamName","description":"The name of the team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamResourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamUrl","description":"The HTTP URL for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"OrgRestoreMemberMembershipTeamAuditEntryData","ofType":null},{"kind":"OBJECT","name":"TeamAddMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamAddRepositoryAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamChangeParentTeamAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveMemberAuditEntry","ofType":null},{"kind":"OBJECT","name":"TeamRemoveRepositoryAuditEntry","ofType":null}]},{"kind":"OBJECT","name":"TeamChangeParentTeamAuditEntry","description":"Audit log entry for a team.change_parent_team event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLdapMapped","description":"Whether the team was mapped to an LDAP Group.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeam","description":"The new parent team.","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeamName","description":"The name of the new parent team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeamNameWas","description":"The name of the former parent team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeamResourcePath","description":"The HTTP path for the parent team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeamUrl","description":"The HTTP URL for the parent team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeamWas","description":"The former parent team.","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeamWasResourcePath","description":"The HTTP path for the previous parent team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"parentTeamWasUrl","description":"The HTTP URL for the previous parent team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team associated with the action","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamName","description":"The name of the team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamResourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamUrl","description":"The HTTP URL for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"TeamAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamConnection","description":"The connection type for Team.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TeamEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Team","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamDiscussion","description":"A team discussion.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the discussion\'s team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The body as Markdown.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyVersion","description":"Identifies the discussion body hash.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"comments","description":"A list of comments on this discussion.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"TeamDiscussionCommentOrder","ofType":null},"defaultValue":null},{"name":"fromComment","description":"When provided, filters the connection such that results begin with the comment with this number.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamDiscussionCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commentsResourcePath","description":"The HTTP path for discussion comments","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commentsUrl","description":"The HTTP URL for discussion comments","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPinned","description":"Whether or not the discussion is pinned.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isPrivate","description":"Whether or not the discussion is only visible to team members and org admins.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"Identifies the discussion within its team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this discussion","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team that defines the context of this discussion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Team","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"title","description":"The title of the discussion","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this discussion","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanPin","description":"Whether or not the current viewer can pin this discussion.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSubscribe","description":"Check if the viewer is able to change their subscription status for the repository.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerSubscription","description":"Identifies if the viewer is watching, not watching, or ignoring the subscribable entity.","args":[],"type":{"kind":"ENUM","name":"SubscriptionState","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"Subscribable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamDiscussionComment","description":"A comment on a team discussion.","fields":[{"name":"author","description":"The actor who authored the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"authorAssociation","description":"Author\'s association with the comment\'s team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentAuthorAssociation","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"body","description":"The body as Markdown.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyHTML","description":"The body rendered to HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyText","description":"The body rendered to text.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bodyVersion","description":"The current version of the body content.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdViaEmail","description":"Check if this comment was created via an email reply.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion this comment is about.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TeamDiscussion","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited the comment.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"includesCreatedEdit","description":"Check if this comment was edited and includes an edit with the creation data","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lastEditedAt","description":"The moment the editor made the last edit","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"number","description":"Identifies the comment number.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"publishedAt","description":"Identifies when the comment was published at.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"reactionGroups","description":"A list of reactions grouped by content left on the subject.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionGroup","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"reactions","description":"A list of Reactions left on the Issue.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"content","description":"Allows filtering Reactions by emoji.","type":{"kind":"ENUM","name":"ReactionContent","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Allows specifying the order in which reactions are returned.","type":{"kind":"INPUT_OBJECT","name":"ReactionOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ReactionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this comment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this comment","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"userContentEdits","description":"A list of edits to this content.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"UserContentEditConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanDelete","description":"Check if the current viewer can delete this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanReact","description":"Can user react to this subject","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerDidAuthor","description":"Did the viewer author this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Comment","ofType":null},{"kind":"INTERFACE","name":"Deletable","ofType":null},{"kind":"INTERFACE","name":"Reactable","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"Updatable","ofType":null},{"kind":"INTERFACE","name":"UpdatableComment","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamDiscussionCommentConnection","description":"The connection type for TeamDiscussionComment.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TeamDiscussionCommentEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamDiscussionCommentEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TeamDiscussionCommentOrder","description":"Ways in which team discussion comment connections can be ordered.","fields":null,"inputFields":[{"name":"field","description":"The field by which to order nodes.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TeamDiscussionCommentOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order nodes.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"TeamDiscussionCommentOrderField","description":"Properties by which team discussion comment connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NUMBER","description":"Allows sequential ordering of team discussion comments (which is equivalent to chronological ordering).","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"TeamDiscussionConnection","description":"The connection type for TeamDiscussion.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TeamDiscussionEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TeamDiscussion","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamDiscussionEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TeamDiscussionOrder","description":"Ways in which team discussion connections can be ordered.","fields":null,"inputFields":[{"name":"field","description":"The field by which to order nodes.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TeamDiscussionOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order nodes.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"TeamDiscussionOrderField","description":"Properties by which team discussion connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Allows chronological ordering of team discussions.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"TeamEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamMemberConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TeamMemberEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamMemberEdge","description":"Represents a user who is a member of a team.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"memberAccessResourcePath","description":"The HTTP path to the organization\'s member access page.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"memberAccessUrl","description":"The HTTP URL to the organization\'s member access page.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"role","description":"The role the member has on the team.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TeamMemberRole","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TeamMemberOrder","description":"Ordering options for team member connections","fields":null,"inputFields":[{"name":"field","description":"The field to order team members by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TeamMemberOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"TeamMemberOrderField","description":"Properties by which team member connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"LOGIN","description":"Order team members by login","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order team members by creation time","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"TeamMemberRole","description":"The possible team member roles; either \'maintainer\' or \'member\'.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"MAINTAINER","description":"A team maintainer has permission to add and remove team members.","isDeprecated":false,"deprecationReason":null},{"name":"MEMBER","description":"A team member has no administrative permissions on the team.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"TeamMembershipType","description":"Defines which types of team members are included in the returned list. Can be one of IMMEDIATE, CHILD_TEAM or ALL.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"IMMEDIATE","description":"Includes only immediate members of the team.","isDeprecated":false,"deprecationReason":null},{"name":"CHILD_TEAM","description":"Includes only child team members for the team.","isDeprecated":false,"deprecationReason":null},{"name":"ALL","description":"Includes immediate and child team members for the team.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TeamOrder","description":"Ways in which team connections can be ordered.","fields":null,"inputFields":[{"name":"field","description":"The field in which to order nodes by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TeamOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order nodes.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"TeamOrderField","description":"Properties by which team connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NAME","description":"Allows ordering a list of teams by name.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"TeamPrivacy","description":"The possible team privacy values.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SECRET","description":"A secret team can only be seen by its members.","isDeprecated":false,"deprecationReason":null},{"name":"VISIBLE","description":"A visible team can be seen and @mentioned by every member of the organization.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"TeamRemoveMemberAuditEntry","description":"Audit log entry for a team.remove_member event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLdapMapped","description":"Whether the team was mapped to an LDAP Group.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team associated with the action","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamName","description":"The name of the team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamResourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamUrl","description":"The HTTP URL for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"TeamAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamRemoveRepositoryAuditEntry","description":"Audit log entry for a team.remove_repository event.","fields":[{"name":"action","description":"The action name","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"actor","description":"The user who initiated the action","args":[],"type":{"kind":"UNION","name":"AuditEntryActor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorIp","description":"The IP address of the actor","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLocation","description":"A readable representation of the actor\'s location","args":[],"type":{"kind":"OBJECT","name":"ActorLocation","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorLogin","description":"The username of the user who initiated the action","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorResourcePath","description":"The HTTP path for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"actorUrl","description":"The HTTP URL for the actor.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"The time the action was initiated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"PreciseDateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isLdapMapped","description":"Whether the team was mapped to an LDAP Group.","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"operationType","description":"The corresponding operation type for the action","args":[],"type":{"kind":"ENUM","name":"OperationType","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The Organization associated with the Audit Entry.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationName","description":"The name of the Organization.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationResourcePath","description":"The HTTP path for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationUrl","description":"The HTTP URL for the organization","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository associated with the action","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryName","description":"The name of the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryResourcePath","description":"The HTTP path for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryUrl","description":"The HTTP URL for the repository","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team associated with the action","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamName","description":"The name of the team","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamResourcePath","description":"The HTTP path for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamUrl","description":"The HTTP URL for this team","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user affected by the action","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userLogin","description":"For actions involving two users, the actor is the initiator and the user is the affected user.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userResourcePath","description":"The HTTP path for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"userUrl","description":"The HTTP URL for the user.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"AuditEntry","ofType":null},{"kind":"INTERFACE","name":"OrganizationAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"RepositoryAuditEntryData","ofType":null},{"kind":"INTERFACE","name":"TeamAuditEntryData","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamRepositoryConnection","description":"The connection type for Repository.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"TeamRepositoryEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TeamRepositoryEdge","description":"Represents a team repository.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"permission","description":"The permission level the team has on the repository","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryPermission","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TeamRepositoryOrder","description":"Ordering options for team repository connections","fields":null,"inputFields":[{"name":"field","description":"The field to order repositories by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"TeamRepositoryOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"TeamRepositoryOrderField","description":"Properties by which team repository connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order repositories by creation time","isDeprecated":false,"deprecationReason":null},{"name":"UPDATED_AT","description":"Order repositories by update time","isDeprecated":false,"deprecationReason":null},{"name":"PUSHED_AT","description":"Order repositories by push time","isDeprecated":false,"deprecationReason":null},{"name":"NAME","description":"Order repositories by name","isDeprecated":false,"deprecationReason":null},{"name":"PERMISSION","description":"Order repositories by permission","isDeprecated":false,"deprecationReason":null},{"name":"STARGAZERS","description":"Order repositories by number of stargazers","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"TeamRole","description":"The role of a user on a team.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ADMIN","description":"User has admin rights on the team.","isDeprecated":false,"deprecationReason":null},{"name":"MEMBER","description":"User is a member of the team.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"TextMatch","description":"A text match within a search result.","fields":[{"name":"fragment","description":"The specific text fragment within the property matched on.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"highlights","description":"Highlights within the matched fragment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TextMatchHighlight","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"property","description":"The property matched on.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TextMatchHighlight","description":"Represents a single highlight in a search result match.","fields":[{"name":"beginIndice","description":"The indice in the fragment where the matched text begins.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"endIndice","description":"The indice in the fragment where the matched text ends.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"text","description":"The text matched.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Topic","description":"A topic aggregates entities that are related to a subject.","fields":[{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The topic\'s name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"relatedTopics","description":"A list of related topics, including aliases of this topic, sorted with the most relevant\\nfirst. Returns up to 10 Topics.\\n","args":[{"name":"first","description":"How many topics to return.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":"3"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Topic","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"repositories","description":"A list of repositories.","args":[{"name":"privacy","description":"If non-null, filters repositories according to privacy","type":{"kind":"ENUM","name":"RepositoryPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":null},{"name":"affiliations","description":"Array of viewer\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":null},{"name":"ownerAffiliations","description":"Array of owner\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":"[OWNER, COLLABORATOR]"},{"name":"isLocked","description":"If non-null, filters repositories according to whether they have been locked","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"sponsorableOnly","description":"If true, only repositories whose owner can be sponsored via GitHub Sponsors will be returned.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazerCount","description":"Returns a count of how many stargazers there are on this object\\n","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"stargazers","description":"A list of users who have starred this starrable.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"StarOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StargazerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasStarred","description":"Returns a boolean indicating whether the viewing user has starred this starrable.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Starrable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"TopicAuditEntryData","description":"Metadata for an audit entry with a topic.","fields":[{"name":"topic","description":"The name of the topic added to the repository","args":[],"type":{"kind":"OBJECT","name":"Topic","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topicName","description":"The name of the topic added to the repository","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"RepoAddTopicAuditEntry","ofType":null},{"kind":"OBJECT","name":"RepoRemoveTopicAuditEntry","ofType":null}]},{"kind":"ENUM","name":"TopicSuggestionDeclineReason","description":"Reason that the suggested topic is declined.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"NOT_RELEVANT","description":"The suggested topic is not relevant to the repository.","isDeprecated":false,"deprecationReason":null},{"name":"TOO_SPECIFIC","description":"The suggested topic is too specific for the repository (e.g. #ruby-on-rails-version-4-2-1).","isDeprecated":false,"deprecationReason":null},{"name":"PERSONAL_PREFERENCE","description":"The viewer does not like the suggested topic.","isDeprecated":false,"deprecationReason":null},{"name":"TOO_GENERAL","description":"The suggested topic is too general for the repository.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"ENUM","name":"TrackedIssueStates","description":"The possible states of a tracked issue.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"OPEN","description":"The tracked issue is open","isDeprecated":false,"deprecationReason":null},{"name":"CLOSED","description":"The tracked issue is closed","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TransferEnterpriseOrganizationInput","description":"Autogenerated input type of TransferEnterpriseOrganization","fields":null,"inputFields":[{"name":"organizationId","description":"The ID of the organization to transfer.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"destinationEnterpriseId","description":"The ID of the enterprise where the organization should be transferred.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TransferEnterpriseOrganizationPayload","description":"Autogenerated return type of TransferEnterpriseOrganization","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization for which a transfer was initiated.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"TransferIssueInput","description":"Autogenerated input type of TransferIssue","fields":null,"inputFields":[{"name":"issueId","description":"The Node ID of the issue to be transferred","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"The Node ID of the repository the issue should be transferred to","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"createLabelsIfMissing","description":"Whether to create labels if they don\'t exist in the target repository (matched by name)","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TransferIssuePayload","description":"Autogenerated return type of TransferIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue that was transferred","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TransferredEvent","description":"Represents a \'transferred\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"fromRepository","description":"The repository this came from","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"Identifies the issue associated with the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Issue","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"Tree","description":"Represents a Git tree.","fields":[{"name":"abbreviatedOid","description":"An abbreviated version of the Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitResourcePath","description":"The HTTP path for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitUrl","description":"The HTTP URL for this Git object","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"entries","description":"A list of tree entries.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"TreeEntry","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"oid","description":"The Git object ID","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The Repository the Git object belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"GitObject","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"TreeEntry","description":"Represents a Git tree entry.","fields":[{"name":"extension","description":"The extension of the file","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isGenerated","description":"Whether or not this tree entry is generated","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"language","description":"The programming language this file is written in.","args":[],"type":{"kind":"OBJECT","name":"Language","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"lineCount","description":"Number of lines in the file.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"mode","description":"Entry file mode.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"Entry file name.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nameRaw","description":"Entry file name. (Base64-encoded)","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Base64String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"object","description":"Entry file object.","args":[],"type":{"kind":"INTERFACE","name":"GitObject","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"oid","description":"Entry file Git object ID.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"path","description":"The full path of the file.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pathRaw","description":"The full path of the file. (Base64-encoded)","args":[],"type":{"kind":"SCALAR","name":"Base64String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The Repository the tree entry belongs to","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Repository","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"size","description":"Entry byte size","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"submodule","description":"If the TreeEntry is for a directory occupied by a submodule project, this returns the corresponding submodule","args":[],"type":{"kind":"OBJECT","name":"Submodule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":"Entry file type.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"SCALAR","name":"URI","description":"An RFC 3986, RFC 3987, and RFC 6570 (level 4) compliant URI string.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnarchiveProjectV2ItemInput","description":"Autogenerated input type of UnarchiveProjectV2Item","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to archive the item from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"itemId","description":"The ID of the ProjectV2Item to unarchive.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnarchiveProjectV2ItemPayload","description":"Autogenerated return type of UnarchiveProjectV2Item","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"item","description":"The item unarchived from the project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnarchiveRepositoryInput","description":"Autogenerated input type of UnarchiveRepository","fields":null,"inputFields":[{"name":"repositoryId","description":"The ID of the repository to unarchive.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnarchiveRepositoryPayload","description":"Autogenerated return type of UnarchiveRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that was unarchived.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnassignedEvent","description":"Represents an \'unassigned\' event on any assignable object.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"assignable","description":"Identifies the assignable associated with the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Assignable","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"assignee","description":"Identifies the user or mannequin that was unassigned.","args":[],"type":{"kind":"UNION","name":"Assignee","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"Identifies the subject (user) who was unassigned.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":true,"deprecationReason":"Assignees can now be mannequins. Use the `assignee` field instead. Removal on 2020-01-01 UTC."}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnfollowOrganizationInput","description":"Autogenerated input type of UnfollowOrganization","fields":null,"inputFields":[{"name":"organizationId","description":"ID of the organization to unfollow.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnfollowOrganizationPayload","description":"Autogenerated return type of UnfollowOrganization","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization that was unfollowed.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnfollowUserInput","description":"Autogenerated input type of UnfollowUser","fields":null,"inputFields":[{"name":"userId","description":"ID of the user to unfollow.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnfollowUserPayload","description":"Autogenerated return type of UnfollowUser","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user that was unfollowed.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","description":"Represents a type that can be retrieved by a URL.","fields":[{"name":"resourcePath","description":"The HTML path to this resource.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The URL to this resource.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Bot","ofType":null},{"kind":"OBJECT","name":"CheckRun","ofType":null},{"kind":"OBJECT","name":"ClosedEvent","ofType":null},{"kind":"OBJECT","name":"Commit","ofType":null},{"kind":"OBJECT","name":"ConvertToDraftEvent","ofType":null},{"kind":"OBJECT","name":"CrossReferencedEvent","ofType":null},{"kind":"OBJECT","name":"Gist","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"Mannequin","ofType":null},{"kind":"OBJECT","name":"MergedEvent","ofType":null},{"kind":"OBJECT","name":"Milestone","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"PullRequestCommit","ofType":null},{"kind":"OBJECT","name":"ReadyForReviewEvent","ofType":null},{"kind":"OBJECT","name":"Release","ofType":null},{"kind":"OBJECT","name":"Repository","ofType":null},{"kind":"OBJECT","name":"RepositoryTopic","ofType":null},{"kind":"OBJECT","name":"ReviewDismissedEvent","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null},{"kind":"OBJECT","name":"User","ofType":null},{"kind":"OBJECT","name":"WorkflowRun","ofType":null}]},{"kind":"OBJECT","name":"UnknownSignature","description":"Represents an unknown signature on a Commit or Tag.","fields":[{"name":"email","description":"Email used to sign this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isValid","description":"True if the signature is valid and verified by GitHub.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"payload","description":"Payload for GPG signing object. Raw ODB object without the signature header.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signature","description":"ASCII-armored signature header from object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"signer","description":"GitHub user corresponding to the email signing this commit.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"state","description":"The state of this signature. `VALID` if signature is valid and verified by GitHub, otherwise represents reason why signature is considered invalid.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"GitSignatureState","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"wasSignedByGitHub","description":"True if the signature was made with GitHub\'s signing key.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"GitSignature","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnlabeledEvent","description":"Represents an \'unlabeled\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"label","description":"Identifies the label associated with the \'unlabeled\' event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Label","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"labelable","description":"Identifies the `Labelable` associated with the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Labelable","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnlinkProjectV2FromRepositoryInput","description":"Autogenerated input type of UnlinkProjectV2FromRepository","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the project to unlink from the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"The ID of the repository to unlink from the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnlinkProjectV2FromRepositoryPayload","description":"Autogenerated return type of UnlinkProjectV2FromRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository the project is no longer linked to.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnlinkProjectV2FromTeamInput","description":"Autogenerated input type of UnlinkProjectV2FromTeam","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the project to unlink from the team.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"teamId","description":"The ID of the team to unlink from the project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnlinkProjectV2FromTeamPayload","description":"Autogenerated return type of UnlinkProjectV2FromTeam","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"team","description":"The team the project is unlinked from","args":[],"type":{"kind":"OBJECT","name":"Team","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnlinkRepositoryFromProjectInput","description":"Autogenerated input type of UnlinkRepositoryFromProject","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project linked to the Repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"The ID of the Repository linked to the Project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnlinkRepositoryFromProjectPayload","description":"Autogenerated return type of UnlinkRepositoryFromProject","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The linked Project.","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The linked Repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnlockLockableInput","description":"Autogenerated input type of UnlockLockable","fields":null,"inputFields":[{"name":"lockableId","description":"ID of the item to be unlocked.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnlockLockablePayload","description":"Autogenerated return type of UnlockLockable","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unlockedRecord","description":"The item that was unlocked.","args":[],"type":{"kind":"INTERFACE","name":"Lockable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnlockedEvent","description":"Represents an \'unlocked\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"lockable","description":"Object that was unlocked.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Lockable","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnmarkDiscussionCommentAsAnswerInput","description":"Autogenerated input type of UnmarkDiscussionCommentAsAnswer","fields":null,"inputFields":[{"name":"id","description":"The Node ID of the discussion comment to unmark as an answer.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnmarkDiscussionCommentAsAnswerPayload","description":"Autogenerated return type of UnmarkDiscussionCommentAsAnswer","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The discussion that includes the comment.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnmarkFileAsViewedInput","description":"Autogenerated input type of UnmarkFileAsViewed","fields":null,"inputFields":[{"name":"pullRequestId","description":"The Node ID of the pull request.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"path","description":"The path of the file to mark as unviewed","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnmarkFileAsViewedPayload","description":"Autogenerated return type of UnmarkFileAsViewed","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The updated pull request.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnmarkIssueAsDuplicateInput","description":"Autogenerated input type of UnmarkIssueAsDuplicate","fields":null,"inputFields":[{"name":"duplicateId","description":"ID of the issue or pull request currently marked as a duplicate.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"canonicalId","description":"ID of the issue or pull request currently considered canonical/authoritative/original.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnmarkIssueAsDuplicatePayload","description":"Autogenerated return type of UnmarkIssueAsDuplicate","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"duplicate","description":"The issue or pull request that was marked as a duplicate.","args":[],"type":{"kind":"UNION","name":"IssueOrPullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnmarkedAsDuplicateEvent","description":"Represents an \'unmarked_as_duplicate\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"canonical","description":"The authoritative issue or pull request which has been duplicated by another.","args":[],"type":{"kind":"UNION","name":"IssueOrPullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"duplicate","description":"The issue or pull request which has been marked as a duplicate of another.","args":[],"type":{"kind":"UNION","name":"IssueOrPullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCrossRepository","description":"Canonical and duplicate belong to different repositories.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnminimizeCommentInput","description":"Autogenerated input type of UnminimizeComment","fields":null,"inputFields":[{"name":"subjectId","description":"The Node ID of the subject to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnminimizeCommentPayload","description":"Autogenerated return type of UnminimizeComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"unminimizedComment","description":"The comment that was unminimized.","args":[],"type":{"kind":"INTERFACE","name":"Minimizable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnpinIssueInput","description":"Autogenerated input type of UnpinIssue","fields":null,"inputFields":[{"name":"issueId","description":"The ID of the issue to be unpinned","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnpinIssuePayload","description":"Autogenerated return type of UnpinIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue that was unpinned","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnpinnedEvent","description":"Represents an \'unpinned\' event on a given issue or pull request.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"Identifies the issue associated with the event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Issue","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UnresolveReviewThreadInput","description":"Autogenerated input type of UnresolveReviewThread","fields":null,"inputFields":[{"name":"threadId","description":"The ID of the thread to unresolve","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnresolveReviewThreadPayload","description":"Autogenerated return type of UnresolveReviewThread","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"thread","description":"The thread to resolve.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewThread","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UnsubscribedEvent","description":"Represents an \'unsubscribed\' event on a given `Subscribable`.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subscribable","description":"Object referenced by event.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INTERFACE","name":"Subscribable","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Updatable","description":"Entities that can be updated.","fields":[{"name":"viewerCanUpdate","description":"Check if the current viewer can update this object.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null},{"kind":"OBJECT","name":"GistComment","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"Project","ofType":null},{"kind":"OBJECT","name":"ProjectV2","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null}]},{"kind":"INTERFACE","name":"UpdatableComment","description":"Comments that can be updated.","fields":[{"name":"viewerCannotUpdateReasons","description":"Reasons why the current viewer can not update this comment.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"CommentCannotUpdateReason","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"CommitComment","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null},{"kind":"OBJECT","name":"GistComment","ofType":null},{"kind":"OBJECT","name":"Issue","ofType":null},{"kind":"OBJECT","name":"IssueComment","ofType":null},{"kind":"OBJECT","name":"PullRequest","ofType":null},{"kind":"OBJECT","name":"PullRequestReview","ofType":null},{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null}]},{"kind":"INPUT_OBJECT","name":"UpdateBranchProtectionRuleInput","description":"Autogenerated input type of UpdateBranchProtectionRule","fields":null,"inputFields":[{"name":"branchProtectionRuleId","description":"The global relay id of the branch protection rule to be updated.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"pattern","description":"The glob-like pattern used to determine matching branches.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"requiresApprovingReviews","description":"Are approving reviews required to update matching branches.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiredApprovingReviewCount","description":"Number of approving reviews required to update matching branches.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"requiresCommitSignatures","description":"Are commits required to be signed.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresLinearHistory","description":"Are merge commits prohibited from being pushed to this branch.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"blocksCreations","description":"Is branch creation a protected operation.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"allowsForcePushes","description":"Are force pushes allowed on this branch.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"allowsDeletions","description":"Can this branch be deleted.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"isAdminEnforced","description":"Can admins overwrite branch protection.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresStatusChecks","description":"Are status checks required to update matching branches.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresStrictStatusChecks","description":"Are branches required to be up to date before merging.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiresCodeOwnerReviews","description":"Are reviews from code owners required to update matching branches.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"dismissesStaleReviews","description":"Will new commits pushed to matching branches dismiss pull request review approvals.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"restrictsReviewDismissals","description":"Is dismissal of pull request reviews restricted.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"reviewDismissalActorIds","description":"A list of User, Team, or App IDs allowed to dismiss reviews on pull requests targeting matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"bypassPullRequestActorIds","description":"A list of User, Team, or App IDs allowed to bypass pull requests targeting matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"bypassForcePushActorIds","description":"A list of User, Team, or App IDs allowed to bypass force push targeting matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"restrictsPushes","description":"Is pushing to matching branches restricted.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"pushActorIds","description":"A list of User, Team, or App IDs allowed to push to matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"requiredStatusCheckContexts","description":"List of required status check contexts that must pass for commits to be accepted to matching branches.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"requiredStatusChecks","description":"The list of required status checks","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RequiredStatusCheckInput","ofType":null}}},"defaultValue":null},{"name":"requiresDeployments","description":"Are successful deployments required before merging.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requiredDeploymentEnvironments","description":"The list of required deployment environments","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"requiresConversationResolution","description":"Are conversations required to be resolved before merging.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"requireLastPushApproval","description":"Whether the most recent push must be approved by someone other than the person who pushed it","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"lockBranch","description":"Whether to set the branch as read-only. If this is true, users will not be able to push to the branch.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"lockAllowsFetchAndMerge","description":"Whether users can pull changes from upstream when the branch is locked. Set to `true` to allow fork syncing. Set to `false` to prevent fork syncing.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateBranchProtectionRulePayload","description":"Autogenerated return type of UpdateBranchProtectionRule","fields":[{"name":"branchProtectionRule","description":"The newly created BranchProtectionRule.","args":[],"type":{"kind":"OBJECT","name":"BranchProtectionRule","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateCheckRunInput","description":"Autogenerated input type of UpdateCheckRun","fields":null,"inputFields":[{"name":"repositoryId","description":"The node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"checkRunId","description":"The node of the check.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the check.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"detailsUrl","description":"The URL of the integrator\'s site that has the full details of the check.","type":{"kind":"SCALAR","name":"URI","ofType":null},"defaultValue":null},{"name":"externalId","description":"A reference for the run on the integrator\'s system.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"status","description":"The current status.","type":{"kind":"ENUM","name":"RequestableCheckStatusState","ofType":null},"defaultValue":null},{"name":"startedAt","description":"The time that the check run began.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"conclusion","description":"The final conclusion of the check.","type":{"kind":"ENUM","name":"CheckConclusionState","ofType":null},"defaultValue":null},{"name":"completedAt","description":"The time that the check run finished.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"output","description":"Descriptive details about the run.","type":{"kind":"INPUT_OBJECT","name":"CheckRunOutput","ofType":null},"defaultValue":null},{"name":"actions","description":"Possible further actions the integrator can perform, which a user may trigger.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CheckRunAction","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateCheckRunPayload","description":"Autogenerated return type of UpdateCheckRun","fields":[{"name":"checkRun","description":"The updated check run.","args":[],"type":{"kind":"OBJECT","name":"CheckRun","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateCheckSuitePreferencesInput","description":"Autogenerated input type of UpdateCheckSuitePreferences","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"autoTriggerPreferences","description":"The check suite preferences to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"CheckSuiteAutoTriggerPreference","ofType":null}}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateCheckSuitePreferencesPayload","description":"Autogenerated return type of UpdateCheckSuitePreferences","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The updated repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateDiscussionCommentInput","description":"Autogenerated input type of UpdateDiscussionComment","fields":null,"inputFields":[{"name":"commentId","description":"The Node ID of the discussion comment to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"body","description":"The new contents of the comment body.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateDiscussionCommentPayload","description":"Autogenerated return type of UpdateDiscussionComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"comment","description":"The modified discussion comment.","args":[],"type":{"kind":"OBJECT","name":"DiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateDiscussionInput","description":"Autogenerated input type of UpdateDiscussion","fields":null,"inputFields":[{"name":"discussionId","description":"The Node ID of the discussion to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The new discussion title.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The new contents of the discussion body.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"categoryId","description":"The Node ID of a discussion category within the same repository to change this discussion to.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateDiscussionPayload","description":"Autogenerated return type of UpdateDiscussion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"discussion","description":"The modified discussion.","args":[],"type":{"kind":"OBJECT","name":"Discussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseAdministratorRoleInput","description":"Autogenerated input type of UpdateEnterpriseAdministratorRole","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the Enterprise which the admin belongs to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"login","description":"The login of a administrator whose role is being changed.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"role","description":"The new role for the Enterprise administrator.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseAdministratorRole","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseAdministratorRolePayload","description":"Autogenerated return type of UpdateEnterpriseAdministratorRole","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of changing the administrator\'s role.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseAllowPrivateRepositoryForkingSettingInput","description":"Autogenerated input type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the allow private repository forking setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the allow private repository forking setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"policyValue","description":"The value for the allow private repository forking policy on the enterprise.","type":{"kind":"ENUM","name":"EnterpriseAllowPrivateRepositoryForkingPolicyValue","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseAllowPrivateRepositoryForkingSettingPayload","description":"Autogenerated return type of UpdateEnterpriseAllowPrivateRepositoryForkingSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated allow private repository forking setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the allow private repository forking setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseDefaultRepositoryPermissionSettingInput","description":"Autogenerated input type of UpdateEnterpriseDefaultRepositoryPermissionSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the base repository permission setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the base repository permission setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseDefaultRepositoryPermissionSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseDefaultRepositoryPermissionSettingPayload","description":"Autogenerated return type of UpdateEnterpriseDefaultRepositoryPermissionSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated base repository permission setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the base repository permission setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can change repository visibility setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the members can change repository visibility setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanChangeRepositoryVisibilitySettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanChangeRepositoryVisibilitySetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can change repository visibility setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can change repository visibility setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanCreateRepositoriesSettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanCreateRepositoriesSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can create repositories setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"Value for the members can create repositories setting on the enterprise. This or the granular public/private/internal allowed fields (but not both) must be provided.","type":{"kind":"ENUM","name":"EnterpriseMembersCanCreateRepositoriesSettingValue","ofType":null},"defaultValue":null},{"name":"membersCanCreateRepositoriesPolicyEnabled","description":"When false, allow member organizations to set their own repository creation member privileges.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"membersCanCreatePublicRepositories","description":"Allow members to create public repositories. Defaults to current value.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"membersCanCreatePrivateRepositories","description":"Allow members to create private repositories. Defaults to current value.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"membersCanCreateInternalRepositories","description":"Allow members to create internal repositories. Defaults to current value.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanCreateRepositoriesSettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanCreateRepositoriesSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can create repositories setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can create repositories setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanDeleteIssuesSettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanDeleteIssuesSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can delete issues setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the members can delete issues setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanDeleteIssuesSettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanDeleteIssuesSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can delete issues setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can delete issues setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanDeleteRepositoriesSettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can delete repositories setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the members can delete repositories setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanDeleteRepositoriesSettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanDeleteRepositoriesSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can delete repositories setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can delete repositories setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanInviteCollaboratorsSettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can invite collaborators setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the members can invite collaborators setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanInviteCollaboratorsSettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanInviteCollaboratorsSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can invite collaborators setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can invite collaborators setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanMakePurchasesSettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanMakePurchasesSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can make purchases setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the members can make purchases setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseMembersCanMakePurchasesSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanMakePurchasesSettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanMakePurchasesSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can make purchases setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can make purchases setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can update protected branches setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the members can update protected branches setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanUpdateProtectedBranchesSettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanUpdateProtectedBranchesSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can update protected branches setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can update protected branches setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseMembersCanViewDependencyInsightsSettingInput","description":"Autogenerated input type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the members can view dependency insights setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the members can view dependency insights setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseMembersCanViewDependencyInsightsSettingPayload","description":"Autogenerated return type of UpdateEnterpriseMembersCanViewDependencyInsightsSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated members can view dependency insights setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the members can view dependency insights setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseOrganizationProjectsSettingInput","description":"Autogenerated input type of UpdateEnterpriseOrganizationProjectsSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the organization projects setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the organization projects setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseOrganizationProjectsSettingPayload","description":"Autogenerated return type of UpdateEnterpriseOrganizationProjectsSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated organization projects setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the organization projects setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseOwnerOrganizationRoleInput","description":"Autogenerated input type of UpdateEnterpriseOwnerOrganizationRole","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the Enterprise which the owner belongs to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"organizationId","description":"The ID of the organization for membership change.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"organizationRole","description":"The role to assume in the organization.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RoleInOrganization","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseOwnerOrganizationRolePayload","description":"Autogenerated return type of UpdateEnterpriseOwnerOrganizationRole","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of changing the owner\'s organization role.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseProfileInput","description":"Autogenerated input type of UpdateEnterpriseProfile","fields":null,"inputFields":[{"name":"enterpriseId","description":"The Enterprise ID to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of the enterprise.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"description","description":"The description of the enterprise.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"websiteUrl","description":"The URL of the enterprise\'s website.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"location","description":"The location of the enterprise.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseProfilePayload","description":"Autogenerated return type of UpdateEnterpriseProfile","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The updated enterprise.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseRepositoryProjectsSettingInput","description":"Autogenerated input type of UpdateEnterpriseRepositoryProjectsSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the repository projects setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the repository projects setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseRepositoryProjectsSettingPayload","description":"Autogenerated return type of UpdateEnterpriseRepositoryProjectsSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated repository projects setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the repository projects setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseTeamDiscussionsSettingInput","description":"Autogenerated input type of UpdateEnterpriseTeamDiscussionsSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the team discussions setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the team discussions setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledDisabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseTeamDiscussionsSettingPayload","description":"Autogenerated return type of UpdateEnterpriseTeamDiscussionsSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated team discussions setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the team discussions setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingInput","description":"Autogenerated input type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting","fields":null,"inputFields":[{"name":"enterpriseId","description":"The ID of the enterprise on which to set the two factor authentication required setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the two factor authentication required setting on the enterprise.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"EnterpriseEnabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnterpriseTwoFactorAuthenticationRequiredSettingPayload","description":"Autogenerated return type of UpdateEnterpriseTwoFactorAuthenticationRequiredSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enterprise","description":"The enterprise with the updated two factor authentication required setting.","args":[],"type":{"kind":"OBJECT","name":"Enterprise","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the two factor authentication required setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateEnvironmentInput","description":"Autogenerated input type of UpdateEnvironment","fields":null,"inputFields":[{"name":"environmentId","description":"The node ID of the environment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"waitTimer","description":"The wait timer in minutes.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"reviewers","description":"The ids of users or teams that can approve deployments to this environment","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateEnvironmentPayload","description":"Autogenerated return type of UpdateEnvironment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"environment","description":"The updated environment.","args":[],"type":{"kind":"OBJECT","name":"Environment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateIpAllowListEnabledSettingInput","description":"Autogenerated input type of UpdateIpAllowListEnabledSetting","fields":null,"inputFields":[{"name":"ownerId","description":"The ID of the owner on which to set the IP allow list enabled setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the IP allow list enabled setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IpAllowListEnabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateIpAllowListEnabledSettingPayload","description":"Autogenerated return type of UpdateIpAllowListEnabledSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The IP allow list owner on which the setting was updated.","args":[],"type":{"kind":"UNION","name":"IpAllowListOwner","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateIpAllowListEntryInput","description":"Autogenerated input type of UpdateIpAllowListEntry","fields":null,"inputFields":[{"name":"ipAllowListEntryId","description":"The ID of the IP allow list entry to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"allowListValue","description":"An IP address or range of addresses in CIDR notation.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"name","description":"An optional name for the IP allow list entry.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"isActive","description":"Whether the IP allow list entry is active when an IP allow list is enabled.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateIpAllowListEntryPayload","description":"Autogenerated return type of UpdateIpAllowListEntry","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ipAllowListEntry","description":"The IP allow list entry that was updated.","args":[],"type":{"kind":"OBJECT","name":"IpAllowListEntry","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateIpAllowListForInstalledAppsEnabledSettingInput","description":"Autogenerated input type of UpdateIpAllowListForInstalledAppsEnabledSetting","fields":null,"inputFields":[{"name":"ownerId","description":"The ID of the owner.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the IP allow list configuration for installed GitHub Apps setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IpAllowListForInstalledAppsEnabledSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateIpAllowListForInstalledAppsEnabledSettingPayload","description":"Autogenerated return type of UpdateIpAllowListForInstalledAppsEnabledSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The IP allow list owner on which the setting was updated.","args":[],"type":{"kind":"UNION","name":"IpAllowListOwner","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateIssueCommentInput","description":"Autogenerated input type of UpdateIssueComment","fields":null,"inputFields":[{"name":"id","description":"The ID of the IssueComment to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"body","description":"The updated text of the comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateIssueCommentPayload","description":"Autogenerated return type of UpdateIssueComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issueComment","description":"The updated comment.","args":[],"type":{"kind":"OBJECT","name":"IssueComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateIssueInput","description":"Autogenerated input type of UpdateIssue","fields":null,"inputFields":[{"name":"id","description":"The ID of the Issue to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title for the issue.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The body for the issue description.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"assigneeIds","description":"An array of Node IDs of users for this issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"milestoneId","description":"The Node ID of the milestone for this issue.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"labelIds","description":"An array of Node IDs of labels for this issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"state","description":"The desired issue state.","type":{"kind":"ENUM","name":"IssueState","ofType":null},"defaultValue":null},{"name":"projectIds","description":"An array of Node IDs for projects associated with this issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateIssuePayload","description":"Autogenerated return type of UpdateIssue","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"issue","description":"The issue.","args":[],"type":{"kind":"OBJECT","name":"Issue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateNotificationRestrictionSettingInput","description":"Autogenerated input type of UpdateNotificationRestrictionSetting","fields":null,"inputFields":[{"name":"ownerId","description":"The ID of the owner on which to set the restrict notifications setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"settingValue","description":"The value for the restrict notifications setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"NotificationRestrictionSettingValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateNotificationRestrictionSettingPayload","description":"Autogenerated return type of UpdateNotificationRestrictionSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The owner on which the setting was updated.","args":[],"type":{"kind":"UNION","name":"VerifiableDomainOwner","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateOrganizationAllowPrivateRepositoryForkingSettingInput","description":"Autogenerated input type of UpdateOrganizationAllowPrivateRepositoryForkingSetting","fields":null,"inputFields":[{"name":"organizationId","description":"The ID of the organization on which to set the allow private repository forking setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"forkingEnabled","description":"Enable forking of private repositories in the organization?","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateOrganizationAllowPrivateRepositoryForkingSettingPayload","description":"Autogenerated return type of UpdateOrganizationAllowPrivateRepositoryForkingSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the allow private repository forking setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization with the updated allow private repository forking setting.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateOrganizationWebCommitSignoffSettingInput","description":"Autogenerated input type of UpdateOrganizationWebCommitSignoffSetting","fields":null,"inputFields":[{"name":"organizationId","description":"The ID of the organization on which to set the web commit signoff setting.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"webCommitSignoffRequired","description":"Enable signoff on web-based commits for repositories in the organization?","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateOrganizationWebCommitSignoffSettingPayload","description":"Autogenerated return type of UpdateOrganizationWebCommitSignoffSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the web commit signoff setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization with the updated web commit signoff setting.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateProjectCardInput","description":"Autogenerated input type of UpdateProjectCard","fields":null,"inputFields":[{"name":"projectCardId","description":"The ProjectCard ID to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"isArchived","description":"Whether or not the ProjectCard should be archived","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"note","description":"The note of ProjectCard.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateProjectCardPayload","description":"Autogenerated return type of UpdateProjectCard","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectCard","description":"The updated ProjectCard.","args":[],"type":{"kind":"OBJECT","name":"ProjectCard","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateProjectColumnInput","description":"Autogenerated input type of UpdateProjectColumn","fields":null,"inputFields":[{"name":"projectColumnId","description":"The ProjectColumn ID to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of project column.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateProjectColumnPayload","description":"Autogenerated return type of UpdateProjectColumn","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectColumn","description":"The updated project column.","args":[],"type":{"kind":"OBJECT","name":"ProjectColumn","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateProjectInput","description":"Autogenerated input type of UpdateProject","fields":null,"inputFields":[{"name":"projectId","description":"The Project ID to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The name of project.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The description of project.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"state","description":"Whether the project is open or closed.","type":{"kind":"ENUM","name":"ProjectState","ofType":null},"defaultValue":null},{"name":"public","description":"Whether the project is public or not.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateProjectPayload","description":"Autogenerated return type of UpdateProject","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"The updated project.","args":[],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateProjectV2DraftIssueInput","description":"Autogenerated input type of UpdateProjectV2DraftIssue","fields":null,"inputFields":[{"name":"draftIssueId","description":"The ID of the draft issue to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The title of the draft issue.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The body of the draft issue.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"assigneeIds","description":"The IDs of the assignees of the draft issue.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateProjectV2DraftIssuePayload","description":"Autogenerated return type of UpdateProjectV2DraftIssue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"draftIssue","description":"The draft issue updated in the project.","args":[],"type":{"kind":"OBJECT","name":"DraftIssue","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateProjectV2Input","description":"Autogenerated input type of UpdateProjectV2","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"Set the title of the project.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"shortDescription","description":"Set the short description of the project.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"readme","description":"Set the readme description of the project.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"closed","description":"Set the project to closed or open.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"public","description":"Set the project to public or private.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateProjectV2ItemFieldValueInput","description":"Autogenerated input type of UpdateProjectV2ItemFieldValue","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"itemId","description":"The ID of the item to be updated.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"fieldId","description":"The ID of the field to be updated.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"value","description":"The value which will be set on the field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"ProjectV2FieldValue","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateProjectV2ItemFieldValuePayload","description":"Autogenerated return type of UpdateProjectV2ItemFieldValue","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2Item","description":"The updated item.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2Item","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateProjectV2ItemPositionInput","description":"Autogenerated input type of UpdateProjectV2ItemPosition","fields":null,"inputFields":[{"name":"projectId","description":"The ID of the Project.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"itemId","description":"The ID of the item to be moved.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"afterId","description":"The ID of the item to position this item after. If omitted or set to null the item will be moved to top.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateProjectV2ItemPositionPayload","description":"Autogenerated return type of UpdateProjectV2ItemPosition","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"items","description":"The items in the new order","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2ItemConnection","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateProjectV2Payload","description":"Autogenerated return type of UpdateProjectV2","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"The updated Project.","args":[],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdatePullRequestBranchInput","description":"Autogenerated input type of UpdatePullRequestBranch","fields":null,"inputFields":[{"name":"pullRequestId","description":"The Node ID of the pull request.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"expectedHeadOid","description":"The head ref oid for the upstream branch.","type":{"kind":"SCALAR","name":"GitObjectID","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdatePullRequestBranchPayload","description":"Autogenerated return type of UpdatePullRequestBranch","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The updated pull request.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdatePullRequestInput","description":"Autogenerated input type of UpdatePullRequest","fields":null,"inputFields":[{"name":"pullRequestId","description":"The Node ID of the pull request.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"baseRefName","description":"The name of the branch you want your changes pulled into. This should be an existing branch\\non the current repository.\\n","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"title","description":"The title of the pull request.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The contents of the pull request.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"state","description":"The target state of the pull request.","type":{"kind":"ENUM","name":"PullRequestUpdateState","ofType":null},"defaultValue":null},{"name":"maintainerCanModify","description":"Indicates whether maintainers can modify the pull request.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"assigneeIds","description":"An array of Node IDs of users for this pull request.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"milestoneId","description":"The Node ID of the milestone for this pull request.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"labelIds","description":"An array of Node IDs of labels for this pull request.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"projectIds","description":"An array of Node IDs for projects associated with this pull request.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdatePullRequestPayload","description":"Autogenerated return type of UpdatePullRequest","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequest","description":"The updated pull request.","args":[],"type":{"kind":"OBJECT","name":"PullRequest","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdatePullRequestReviewCommentInput","description":"Autogenerated input type of UpdatePullRequestReviewComment","fields":null,"inputFields":[{"name":"pullRequestReviewCommentId","description":"The Node ID of the comment to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"body","description":"The text of the comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdatePullRequestReviewCommentPayload","description":"Autogenerated return type of UpdatePullRequestReviewComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReviewComment","description":"The updated comment.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReviewComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdatePullRequestReviewInput","description":"Autogenerated input type of UpdatePullRequestReview","fields":null,"inputFields":[{"name":"pullRequestReviewId","description":"The Node ID of the pull request review to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"body","description":"The contents of the pull request review body.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdatePullRequestReviewPayload","description":"Autogenerated return type of UpdatePullRequestReview","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequestReview","description":"The updated pull request review.","args":[],"type":{"kind":"OBJECT","name":"PullRequestReview","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateRefInput","description":"Autogenerated input type of UpdateRef","fields":null,"inputFields":[{"name":"refId","description":"The Node ID of the Ref to be updated.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"oid","description":"The GitObjectID that the Ref shall be updated to target.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"GitObjectID","ofType":null}},"defaultValue":null},{"name":"force","description":"Permit updates of branch Refs that are not fast-forwards?","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateRefPayload","description":"Autogenerated return type of UpdateRef","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ref","description":"The updated Ref.","args":[],"type":{"kind":"OBJECT","name":"Ref","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateRepositoryInput","description":"Autogenerated input type of UpdateRepository","fields":null,"inputFields":[{"name":"repositoryId","description":"The ID of the repository to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"name","description":"The new name of the repository.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"description","description":"A new description for the repository. Pass an empty string to erase the existing description.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"template","description":"Whether this repository should be marked as a template such that anyone who can access it can create new repositories with the same files and directory structure.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"homepageUrl","description":"The URL for a web page about this repository. Pass an empty string to erase the existing URL.","type":{"kind":"SCALAR","name":"URI","ofType":null},"defaultValue":null},{"name":"hasWikiEnabled","description":"Indicates if the repository should have the wiki feature enabled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"hasIssuesEnabled","description":"Indicates if the repository should have the issues feature enabled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"hasProjectsEnabled","description":"Indicates if the repository should have the project boards feature enabled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"hasDiscussionsEnabled","description":"Indicates if the repository should have the discussions feature enabled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateRepositoryPayload","description":"Autogenerated return type of UpdateRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The updated repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateRepositoryWebCommitSignoffSettingInput","description":"Autogenerated input type of UpdateRepositoryWebCommitSignoffSetting","fields":null,"inputFields":[{"name":"repositoryId","description":"The ID of the repository to update.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"webCommitSignoffRequired","description":"Indicates if the repository should require signoff on web-based commits.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateRepositoryWebCommitSignoffSettingPayload","description":"Autogenerated return type of UpdateRepositoryWebCommitSignoffSetting","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A message confirming the result of updating the web commit signoff setting.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The updated repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateSponsorshipPreferencesInput","description":"Autogenerated input type of UpdateSponsorshipPreferences","fields":null,"inputFields":[{"name":"sponsorId","description":"The ID of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorLogin is not given.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"sponsorLogin","description":"The username of the user or organization who is acting as the sponsor, paying for the sponsorship. Required if sponsorId is not given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"sponsorableId","description":"The ID of the user or organization who is receiving the sponsorship. Required if sponsorableLogin is not given.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"sponsorableLogin","description":"The username of the user or organization who is receiving the sponsorship. Required if sponsorableId is not given.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"receiveEmails","description":"Whether the sponsor should receive email updates from the sponsorable.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"},{"name":"privacyLevel","description":"Specify whether others should be able to see that the sponsor is sponsoring the sponsorable. Public visibility still does not reveal which tier is used.","type":{"kind":"ENUM","name":"SponsorshipPrivacy","ofType":null},"defaultValue":"PUBLIC"},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateSponsorshipPreferencesPayload","description":"Autogenerated return type of UpdateSponsorshipPreferences","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorship","description":"The sponsorship that was updated.","args":[],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateSubscriptionInput","description":"Autogenerated input type of UpdateSubscription","fields":null,"inputFields":[{"name":"subscribableId","description":"The Node ID of the subscribable object to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"state","description":"The new state of the subscription.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SubscriptionState","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateSubscriptionPayload","description":"Autogenerated return type of UpdateSubscription","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"subscribable","description":"The input subscribable entity.","args":[],"type":{"kind":"INTERFACE","name":"Subscribable","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateTeamDiscussionCommentInput","description":"Autogenerated input type of UpdateTeamDiscussionComment","fields":null,"inputFields":[{"name":"id","description":"The ID of the comment to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"body","description":"The updated text of the comment.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"bodyVersion","description":"The current version of the body content.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateTeamDiscussionCommentPayload","description":"Autogenerated return type of UpdateTeamDiscussionComment","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamDiscussionComment","description":"The updated comment.","args":[],"type":{"kind":"OBJECT","name":"TeamDiscussionComment","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateTeamDiscussionInput","description":"Autogenerated input type of UpdateTeamDiscussion","fields":null,"inputFields":[{"name":"id","description":"The Node ID of the discussion to modify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"title","description":"The updated title of the discussion.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"body","description":"The updated text of the discussion.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"bodyVersion","description":"The current version of the body content. If provided, this update operation will be rejected if the given version does not match the latest version on the server.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"pinned","description":"If provided, sets the pinned state of the updated discussion.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateTeamDiscussionPayload","description":"Autogenerated return type of UpdateTeamDiscussion","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teamDiscussion","description":"The updated discussion.","args":[],"type":{"kind":"OBJECT","name":"TeamDiscussion","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateTeamsRepositoryInput","description":"Autogenerated input type of UpdateTeamsRepository","fields":null,"inputFields":[{"name":"repositoryId","description":"Repository ID being granted access to.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"teamIds","description":"A list of teams being granted access. Limit: 10","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}}}},"defaultValue":null},{"name":"permission","description":"Permission that should be granted to the teams.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"RepositoryPermission","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateTeamsRepositoryPayload","description":"Autogenerated return type of UpdateTeamsRepository","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The repository that was updated.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"teams","description":"The teams granted permission on the repository.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Team","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UpdateTopicsInput","description":"Autogenerated input type of UpdateTopics","fields":null,"inputFields":[{"name":"repositoryId","description":"The Node ID of the repository.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"topicNames","description":"An array of topic names.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UpdateTopicsPayload","description":"Autogenerated return type of UpdateTopics","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"invalidTopicNames","description":"Names of the provided topics that are not valid.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"The updated repository.","args":[],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"User","description":"A user is an individual\'s account on GitHub that owns repositories and can make new content.","fields":[{"name":"anyPinnableItems","description":"Determine if this repository owner has any items that can be pinned to their profile.","args":[{"name":"type","description":"Filter to only a particular kind of pinnable item.","type":{"kind":"ENUM","name":"PinnableItemType","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"avatarUrl","description":"A URL pointing to the user\'s public avatar.","args":[{"name":"size","description":"The size of the resulting square image.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"bio","description":"The user\'s public profile bio.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"bioHTML","description":"The user\'s public profile bio as HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"canReceiveOrganizationEmailsWhenNotificationsRestricted","description":"Could this user receive email notifications, if the organization had notification restrictions enabled?","args":[{"name":"login","description":"The login of the organization to check.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"commitComments","description":"A list of commit comments made by this user.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CommitCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"company","description":"The user\'s public profile company.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"companyHTML","description":"The user\'s public profile company as HTML.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"HTML","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"contributionsCollection","description":"The collection of contributions this user has made to different repositories.","args":[{"name":"organizationID","description":"The ID of the organization used to filter contributions.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"from","description":"Only contributions made at this time or later will be counted. If omitted, defaults to a year ago.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"to","description":"Only contributions made before and up to (including) this time will be counted. If omitted, defaults to the current time or one year from the provided from argument.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ContributionsCollection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"email","description":"The user\'s publicly visible profile email.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"estimatedNextSponsorsPayoutInCents","description":"The estimated next GitHub Sponsors payout for this user/organization in cents (USD).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"followers","description":"A list of users the given user is followed by.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"FollowerConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"following","description":"A list of users the given user is following.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"FollowingConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"gist","description":"Find gist by repo name.","args":[{"name":"name","description":"The gist name to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Gist","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"gistComments","description":"A list of gist comments made by this user.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"GistCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"gists","description":"A list of the Gists the user has created.","args":[{"name":"privacy","description":"Filters Gists according to privacy.","type":{"kind":"ENUM","name":"GistPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for gists returned from the connection","type":{"kind":"INPUT_OBJECT","name":"GistOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"GistConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasSponsorsListing","description":"True if this user/organization has a GitHub Sponsors listing.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hovercard","description":"The hovercard information for this user in a given context","args":[{"name":"primarySubjectId","description":"The ID of the subject to get the hovercard in the context of","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Hovercard","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"interactionAbility","description":"The interaction ability settings for this user.","args":[],"type":{"kind":"OBJECT","name":"RepositoryInteractionAbility","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isBountyHunter","description":"Whether or not this user is a participant in the GitHub Security Bug Bounty.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isCampusExpert","description":"Whether or not this user is a participant in the GitHub Campus Experts Program.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isDeveloperProgramMember","description":"Whether or not this user is a GitHub Developer Program member.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isEmployee","description":"Whether or not this user is a GitHub employee.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isFollowingViewer","description":"Whether or not this user is following the viewer. Inverse of viewer_is_following","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isGitHubStar","description":"Whether or not this user is a member of the GitHub Stars Program.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isHireable","description":"Whether or not the user has marked themselves as for hire.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSiteAdmin","description":"Whether or not this user is a site administrator.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSponsoredBy","description":"Whether the given account is sponsoring this user/organization.","args":[{"name":"accountLogin","description":"The target account\'s login.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isSponsoringViewer","description":"True if the viewer is sponsored by this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isViewer","description":"Whether or not this user is the viewing user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issueComments","description":"A list of issue comments made by this user.","args":[{"name":"orderBy","description":"Ordering options for issue comments returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueCommentOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"issues","description":"A list of issues associated with this user.","args":[{"name":"orderBy","description":"Ordering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"states","description":"A list of states to filter the issues by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"IssueState","ofType":null}}},"defaultValue":null},{"name":"filterBy","description":"Filtering options for issues returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueFilters","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"IssueConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"itemShowcase","description":"Showcases a selection of repositories and gists that the profile owner has either curated or that have been selected automatically based on popularity.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProfileItemShowcase","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"location","description":"The user\'s public profile location.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"login","description":"The username used to login.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"monthlyEstimatedSponsorsIncomeInCents","description":"The estimated monthly GitHub Sponsors income for this user/organization in cents (USD).","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The user\'s public profile name.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"Find an organization by its login that the user belongs to.","args":[{"name":"login","description":"The login of the organization to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organizationVerifiedDomainEmails","description":"Verified email addresses that match verified domains for a specified organization the user is a member of.","args":[{"name":"login","description":"The login of the organization to match verified domains from.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"organizations","description":"A list of organizations the user belongs to.","args":[{"name":"orderBy","description":"Ordering options for the User\'s organizations.","type":{"kind":"INPUT_OBJECT","name":"OrganizationOrder","ofType":null},"defaultValue":"null"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"OrganizationConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"packages","description":"A list of packages under the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"names","description":"Find packages by their names.","type":{"kind":"LIST","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"repositoryId","description":"Find packages in a repository by ID.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"packageType","description":"Filter registry package by type.","type":{"kind":"ENUM","name":"PackageType","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering of the returned packages.","type":{"kind":"INPUT_OBJECT","name":"PackageOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PackageConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnableItems","description":"A list of repositories and gists this profile owner can pin to their profile.","args":[{"name":"types","description":"Filter the types of pinnable items that are returned.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PinnableItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedItems","description":"A list of repositories and gists this profile owner has pinned to their profile","args":[{"name":"types","description":"Filter the types of pinned items that are returned.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PinnableItemType","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PinnableItemConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pinnedItemsRemaining","description":"Returns how many more items this profile owner can pin to their profile.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"project","description":"Find project by number.","args":[{"name":"number","description":"The project number to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"Project","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projectV2","description":"Find a project by number.","args":[{"name":"number","description":"The project number.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"defaultValue":null}],"type":{"kind":"OBJECT","name":"ProjectV2","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"projects","description":"A list of projects under the owner.","args":[{"name":"orderBy","description":"Ordering options for projects returned from the connection","type":{"kind":"INPUT_OBJECT","name":"ProjectOrder","ofType":null},"defaultValue":null},{"name":"search","description":"Query to search projects by, currently only searching by name.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"states","description":"A list of states to filter the projects by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"ProjectState","ofType":null}}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsResourcePath","description":"The HTTP path listing user\'s projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsUrl","description":"The HTTP URL listing user\'s projects","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"projectsV2","description":"A list of projects under the owner.","args":[{"name":"query","description":"A project to search for under the the owner.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"How to order the returned projects.","type":{"kind":"INPUT_OBJECT","name":"ProjectV2Order","ofType":null},"defaultValue":"{field: NUMBER, direction: DESC}"},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"publicKeys","description":"A list of public keys associated with this user.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PublicKeyConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pullRequests","description":"A list of pull requests associated with this user.","args":[{"name":"states","description":"A list of states to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"PullRequestState","ofType":null}}},"defaultValue":null},{"name":"labels","description":"A list of label names to filter the pull requests by.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"headRefName","description":"The head ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"baseRefName","description":"The base ref name to filter the pull requests by.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for pull requests returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"IssueOrder","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PullRequestConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"recentProjects","description":"Recent projects that this user has modified in the context of the owner.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"ProjectV2Connection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositories","description":"A list of repositories that the user owns.","args":[{"name":"privacy","description":"If non-null, filters repositories according to privacy","type":{"kind":"ENUM","name":"RepositoryPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":null},{"name":"affiliations","description":"Array of viewer\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the current viewer owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":null},{"name":"ownerAffiliations","description":"Array of owner\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":"[OWNER, COLLABORATOR]"},{"name":"isLocked","description":"If non-null, filters repositories according to whether they have been locked","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"isFork","description":"If non-null, filters repositories according to whether they are forks of another repository","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoriesContributedTo","description":"A list of repositories that the user recently contributed to.","args":[{"name":"privacy","description":"If non-null, filters repositories according to privacy","type":{"kind":"ENUM","name":"RepositoryPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":null},{"name":"isLocked","description":"If non-null, filters repositories according to whether they have been locked","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"includeUserRepositories","description":"If true, include user repositories","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"contributionTypes","description":"If non-null, include only the specified types of contributions. The GitHub.com UI uses [COMMIT, ISSUE, PULL_REQUEST, REPOSITORY]","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryContributionType","ofType":null}},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repository","description":"Find Repository.","args":[{"name":"name","description":"Name of Repository to find.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"defaultValue":null},{"name":"followRenames","description":"Follow repository renames. If disabled, a repository referenced by its old name will return an error.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Repository","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryDiscussionComments","description":"Discussion comments this user has authored.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"repositoryId","description":"Filter discussion comments to only those in a specific repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"onlyAnswers","description":"Filter discussion comments to only those that were marked as the answer","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionCommentConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"repositoryDiscussions","description":"Discussions this user has started.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for discussions returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"DiscussionOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"},{"name":"repositoryId","description":"Filter discussions to only those in a specific repository.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"answered","description":"Filter discussions to only those that have been answered or not. Defaults to including both answered and unanswered discussions.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"null"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DiscussionConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this user","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"savedReplies","description":"Replies this user has saved","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"The field to order saved replies by.","type":{"kind":"INPUT_OBJECT","name":"SavedReplyOrder","ofType":null},"defaultValue":"{field: UPDATED_AT, direction: DESC}"}],"type":{"kind":"OBJECT","name":"SavedReplyConnection","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"socialAccounts","description":"The user\'s social media accounts, ordered as they appear on the user\'s profile.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SocialAccountConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsoring","description":"List of users and organizations this entity is sponsoring.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the users and organizations returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorOrder","ofType":null},"defaultValue":"{field: RELEVANCE, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsors","description":"List of sponsors for this user or organization.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"tierId","description":"If given, will filter for sponsors at the given tier. Will only return sponsors whose tier the viewer is permitted to see.","type":{"kind":"SCALAR","name":"ID","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsors returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorOrder","ofType":null},"defaultValue":"{field: RELEVANCE, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsActivities","description":"Events involving this sponsorable, such as new sponsorships.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"period","description":"Filter activities returned to only those that occurred in the most recent specified time period. Set to ALL to avoid filtering by when the activity occurred. Will be ignored if `since` or `until` is given.","type":{"kind":"ENUM","name":"SponsorsActivityPeriod","ofType":null},"defaultValue":"MONTH"},{"name":"since","description":"Filter activities to those that occurred on or after this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"until","description":"Filter activities to those that occurred before this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for activity returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorsActivityOrder","ofType":null},"defaultValue":"{field: TIMESTAMP, direction: DESC}"},{"name":"actions","description":"Filter activities to only the specified actions.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"SponsorsActivityAction","ofType":null}}},"defaultValue":"[]"},{"name":"includeAsSponsor","description":"Whether to include those events where this sponsorable acted as the sponsor. Defaults to only including events where this sponsorable was the recipient of a sponsorship.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorsActivityConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorsListing","description":"The GitHub Sponsors listing for this user or organization.","args":[],"type":{"kind":"OBJECT","name":"SponsorsListing","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipForViewerAsSponsor","description":"The sponsorship from the viewer to this user/organization; that is, the sponsorship where you\'re the sponsor.","args":[{"name":"activeOnly","description":"Whether to return the sponsorship only if it\'s still active. Pass false to get the viewer\'s sponsorship back even if it has been cancelled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipForViewerAsSponsorable","description":"The sponsorship from this user/organization to the viewer; that is, the sponsorship you\'re receiving.","args":[{"name":"activeOnly","description":"Whether to return the sponsorship only if it\'s still active. Pass false to get the sponsorship back even if it has been cancelled.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"OBJECT","name":"Sponsorship","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipNewsletters","description":"List of sponsorship updates sent from this sponsorable to sponsors.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsorship updates returned from the connection.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipNewsletterOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipNewsletterConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipsAsMaintainer","description":"The sponsorships where this user or organization is the maintainer receiving the funds.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"includePrivate","description":"Whether or not to include private sponsorships in the result set","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"},{"name":"orderBy","description":"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","ofType":null},"defaultValue":null},{"name":"activeOnly","description":"Whether to include only sponsorships that are active right now, versus all sponsorships this maintainer has ever received.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"sponsorshipsAsSponsor","description":"The sponsorships where this user or organization is the funder.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for sponsorships returned from this connection. If left blank, the sponsorships will be ordered based on relevancy to the viewer.","type":{"kind":"INPUT_OBJECT","name":"SponsorshipOrder","ofType":null},"defaultValue":null},{"name":"maintainerLogins","description":"Filter sponsorships returned to those for the specified maintainers. That is, the recipient of the sponsorship is a user or organization with one of the given logins.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null},{"name":"activeOnly","description":"Whether to include only sponsorships that are active right now, versus all sponsorships this sponsor has ever made.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"true"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"SponsorshipConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"starredRepositories","description":"Repositories the user has starred.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"ownedByViewer","description":"Filters starred repositories to only return repositories owned by the viewer.","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Order for connection","type":{"kind":"INPUT_OBJECT","name":"StarOrder","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"StarredRepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"status","description":"The user\'s description of what they\'re currently doing.","args":[],"type":{"kind":"OBJECT","name":"UserStatus","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"topRepositories","description":"Repositories the user has contributed to, ordered by contribution rank, plus repositories the user has created\\n","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null}},"defaultValue":null},{"name":"since","description":"How far back in time to fetch contributed repositories","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalSponsorshipAmountAsSponsorInCents","description":"The amount in United States cents (e.g., 500 = $5.00 USD) that this entity has spent on GitHub to fund sponsorships. Only returns a value when viewed by the user themselves or by a user who can manage sponsorships for the requested organization.","args":[{"name":"since","description":"Filter payments to those that occurred on or after this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"until","description":"Filter payments to those that occurred before this time.","type":{"kind":"SCALAR","name":"DateTime","ofType":null},"defaultValue":null},{"name":"sponsorableLogins","description":"Filter payments to those made to the users or organizations with the specified usernames.","type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":"[]"}],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"twitterUsername","description":"The user\'s Twitter username.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this user","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanChangePinnedItems","description":"Can the viewer pin repositories and gists to the profile?","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanCreateProjects","description":"Can the current viewer create new projects on this owner.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanFollow","description":"Whether or not the viewer is able to follow the user.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanSponsor","description":"Whether or not the viewer is able to sponsor this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsFollowing","description":"Whether or not this user is followed by the viewer. Inverse of is_following_viewer.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerIsSponsoring","description":"True if the viewer is sponsoring this user/organization.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"watching","description":"A list of repositories the given user is watching.","args":[{"name":"privacy","description":"If non-null, filters repositories according to privacy","type":{"kind":"ENUM","name":"RepositoryPrivacy","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for repositories returned from the connection","type":{"kind":"INPUT_OBJECT","name":"RepositoryOrder","ofType":null},"defaultValue":null},{"name":"affiliations","description":"Affiliation options for repositories returned from the connection. If none specified, the results will include repositories for which the current viewer is an owner or collaborator, or member.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":null},{"name":"ownerAffiliations","description":"Array of owner\'s affiliation options for repositories returned from the connection. For example, OWNER will include only repositories that the organization or user being viewed owns.","type":{"kind":"LIST","name":null,"ofType":{"kind":"ENUM","name":"RepositoryAffiliation","ofType":null}},"defaultValue":"[OWNER, COLLABORATOR]"},{"name":"isLocked","description":"If non-null, filters repositories according to whether they have been locked","type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":null},{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"RepositoryConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"websiteUrl","description":"A URL pointing to the user\'s public website/blog.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"Actor","ofType":null},{"kind":"INTERFACE","name":"PackageOwner","ofType":null},{"kind":"INTERFACE","name":"ProjectOwner","ofType":null},{"kind":"INTERFACE","name":"ProjectV2Owner","ofType":null},{"kind":"INTERFACE","name":"ProjectV2Recent","ofType":null},{"kind":"INTERFACE","name":"RepositoryDiscussionAuthor","ofType":null},{"kind":"INTERFACE","name":"RepositoryDiscussionCommentAuthor","ofType":null},{"kind":"INTERFACE","name":"RepositoryOwner","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null},{"kind":"INTERFACE","name":"ProfileOwner","ofType":null},{"kind":"INTERFACE","name":"Sponsorable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"UserBlockDuration","description":"The possible durations that a user can be blocked for.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"ONE_DAY","description":"The user was blocked for 1 day","isDeprecated":false,"deprecationReason":null},{"name":"THREE_DAYS","description":"The user was blocked for 3 days","isDeprecated":false,"deprecationReason":null},{"name":"ONE_WEEK","description":"The user was blocked for 7 days","isDeprecated":false,"deprecationReason":null},{"name":"ONE_MONTH","description":"The user was blocked for 30 days","isDeprecated":false,"deprecationReason":null},{"name":"PERMANENT","description":"The user was blocked permanently","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"UserBlockedEvent","description":"Represents a \'user_blocked\' event on a given user.","fields":[{"name":"actor","description":"Identifies the actor who performed the event.","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"blockDuration","description":"Number of days that the user was blocked for.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"UserBlockDuration","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subject","description":"The user who was blocked.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserConnection","description":"The connection type for User.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"UserEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserContentEdit","description":"An edit on user content","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"deletedAt","description":"Identifies the date and time when the object was deleted.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deletedBy","description":"The actor who deleted this content","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"diff","description":"A summary of the changes for this edit","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"editedAt","description":"When this content was edited","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"editor","description":"The actor who edited this content","args":[],"type":{"kind":"INTERFACE","name":"Actor","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserContentEditConnection","description":"A list of edits to content.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"UserContentEditEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"UserContentEdit","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserContentEditEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"UserContentEdit","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserEdge","description":"Represents a user.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"User","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserEmailMetadata","description":"Email attributes from External Identity","fields":[{"name":"primary","description":"Boolean to identify primary emails","args":[],"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":"Type of email","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"value","description":"Email id","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserStatus","description":"The user\'s description of what they\'re currently doing.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"emoji","description":"An emoji summarizing the user\'s status.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"emojiHTML","description":"The status emoji as HTML.","args":[],"type":{"kind":"SCALAR","name":"HTML","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"expiresAt","description":"If set, the status will not be shown after this date.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"indicatesLimitedAvailability","description":"Whether this status indicates the user is not fully available on GitHub.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"message","description":"A brief message describing what the user is doing.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"organization","description":"The organization whose members can see this status. If null, this status is publicly visible.","args":[],"type":{"kind":"OBJECT","name":"Organization","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"user","description":"The user who has this status.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserStatusConnection","description":"The connection type for UserStatus.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"UserStatusEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"UserStatus","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"UserStatusEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"UserStatus","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"UserStatusOrder","description":"Ordering options for user status connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order user statuses by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"UserStatusOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"UserStatusOrderField","description":"Properties by which user status connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"UPDATED_AT","description":"Order user statuses by when they were updated.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"VerifiableDomain","description":"A domain that can be verified or approved for an organization or an enterprise.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"dnsHostName","description":"The DNS host name that should be used for verification.","args":[],"type":{"kind":"SCALAR","name":"URI","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"domain","description":"The unicode encoded domain.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasFoundHostName","description":"Whether a TXT record for verification with the expected host name was found.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"hasFoundVerificationToken","description":"Whether a TXT record for verification with the expected verification token was found.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isApproved","description":"Whether or not the domain is approved.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isRequiredForPolicyEnforcement","description":"Whether this domain is required to exist for an organization or enterprise policy to be enforced.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"isVerified","description":"Whether or not the domain is verified.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"owner","description":"The owner of the domain.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"UNION","name":"VerifiableDomainOwner","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"punycodeEncodedDomain","description":"The punycode encoded domain.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"tokenExpirationTime","description":"The time that the current verification token will expire.","args":[],"type":{"kind":"SCALAR","name":"DateTime","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"verificationToken","description":"The current verification token for the domain.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VerifiableDomainConnection","description":"The connection type for VerifiableDomain.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"VerifiableDomainEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"VerifiableDomain","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VerifiableDomainEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"VerifiableDomain","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"VerifiableDomainOrder","description":"Ordering options for verifiable domain connections.","fields":null,"inputFields":[{"name":"field","description":"The field to order verifiable domains by.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"VerifiableDomainOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The ordering direction.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"VerifiableDomainOrderField","description":"Properties by which verifiable domain connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"DOMAIN","description":"Order verifiable domains by the domain name.","isDeprecated":false,"deprecationReason":null},{"name":"CREATED_AT","description":"Order verifiable domains by their creation date.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"UNION","name":"VerifiableDomainOwner","description":"Types that can own a verifiable domain.","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Enterprise","ofType":null},{"kind":"OBJECT","name":"Organization","ofType":null}]},{"kind":"INPUT_OBJECT","name":"VerifyVerifiableDomainInput","description":"Autogenerated input type of VerifyVerifiableDomain","fields":null,"inputFields":[{"name":"id","description":"The ID of the verifiable domain to verify.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"defaultValue":null},{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"VerifyVerifiableDomainPayload","description":"Autogenerated return type of VerifyVerifiableDomain","fields":[{"name":"clientMutationId","description":"A unique identifier for the client performing the mutation.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"domain","description":"The verifiable domain that was verified.","args":[],"type":{"kind":"OBJECT","name":"VerifiableDomain","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"ViewerHovercardContext","description":"A hovercard context with a message describing how the viewer is related.","fields":[{"name":"message","description":"A string describing this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"octicon","description":"An octicon to accompany this context","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewer","description":"Identifies the user who is related to this context.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"User","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"HovercardContext","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"INTERFACE","name":"Votable","description":"A subject that may be upvoted.","fields":[{"name":"upvoteCount","description":"Number of upvotes that this subject has received.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerCanUpvote","description":"Whether or not the current user can add or remove an upvote on this subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"viewerHasUpvoted","description":"Whether or not the current user has already upvoted this subject.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":[{"kind":"OBJECT","name":"Discussion","ofType":null},{"kind":"OBJECT","name":"DiscussionComment","ofType":null}]},{"kind":"OBJECT","name":"Workflow","description":"A workflow contains meta information about an Actions workflow file.","fields":[{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":"The name of the workflow.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"runs","description":"The runs of the workflow.","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"orderBy","description":"Ordering options for the connection","type":{"kind":"INPUT_OBJECT","name":"WorkflowRunOrder","ofType":null},"defaultValue":"{field: CREATED_AT, direction: DESC}"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"WorkflowRunConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"WorkflowRun","description":"A workflow run.","fields":[{"name":"checkSuite","description":"The check suite this workflow run belongs to.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"CheckSuite","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"createdAt","description":"Identifies the date and time when the object was created.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"databaseId","description":"Identifies the primary key from the database.","args":[],"type":{"kind":"SCALAR","name":"Int","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deploymentReviews","description":"The log of deployment reviews","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentReviewConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"event","description":"The event that triggered the workflow run","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"id","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"ID","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pendingDeploymentRequests","description":"The pending deployment requests of all check runs in this workflow run","args":[{"name":"after","description":"Returns the elements in the list that come after the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"before","description":"Returns the elements in the list that come before the specified cursor.","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":null},{"name":"first","description":"Returns the first _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null},{"name":"last","description":"Returns the last _n_ elements from the list.","type":{"kind":"SCALAR","name":"Int","ofType":null},"defaultValue":null}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"DeploymentRequestConnection","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"resourcePath","description":"The HTTP path for this workflow run","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"runNumber","description":"A number that uniquely identifies this workflow run in its parent workflow.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"updatedAt","description":"Identifies the date and time when the object was last updated.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"DateTime","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"url","description":"The HTTP URL for this workflow run","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"URI","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"workflow","description":"The workflow executed in this workflow run.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"Workflow","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[{"kind":"INTERFACE","name":"Node","ofType":null},{"kind":"INTERFACE","name":"UniformResourceLocatable","ofType":null}],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"WorkflowRunConnection","description":"The connection type for WorkflowRun.","fields":[{"name":"edges","description":"A list of edges.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"WorkflowRunEdge","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"nodes","description":"A list of nodes.","args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"OBJECT","name":"WorkflowRun","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"pageInfo","description":"Information to aid in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"PageInfo","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"totalCount","description":"Identifies the total count of items in the connection.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Int","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"WorkflowRunEdge","description":"An edge in a connection.","fields":[{"name":"cursor","description":"A cursor for use in pagination.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"node","description":"The item at the end of the edge.","args":[],"type":{"kind":"OBJECT","name":"WorkflowRun","ofType":null},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"INPUT_OBJECT","name":"WorkflowRunOrder","description":"Ways in which lists of workflow runs can be ordered upon return.","fields":null,"inputFields":[{"name":"field","description":"The field by which to order workflows.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"WorkflowRunOrderField","ofType":null}},"defaultValue":null},{"name":"direction","description":"The direction in which to order workflow runs by the specified field.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"OrderDirection","ofType":null}},"defaultValue":null}],"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"WorkflowRunOrderField","description":"Properties by which workflow run connections can be ordered.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"CREATED_AT","description":"Order workflow runs by most recently created","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"SCALAR","name":"X509Certificate","description":"A valid x509 certificate string","fields":null,"inputFields":null,"interfaces":null,"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Directive","description":"A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\\n\\nIn some cases, you need to provide options to alter GraphQL\'s execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.","fields":[{"name":"args","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"locations","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__DirectiveLocation","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"onField","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":true,"deprecationReason":"Use `locations`."},{"name":"onFragment","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":true,"deprecationReason":"Use `locations`."},{"name":"onOperation","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":true,"deprecationReason":"Use `locations`."}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__DirectiveLocation","description":"A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"QUERY","description":"Location adjacent to a query operation.","isDeprecated":false,"deprecationReason":null},{"name":"MUTATION","description":"Location adjacent to a mutation operation.","isDeprecated":false,"deprecationReason":null},{"name":"SUBSCRIPTION","description":"Location adjacent to a subscription operation.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD","description":"Location adjacent to a field.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_DEFINITION","description":"Location adjacent to a fragment definition.","isDeprecated":false,"deprecationReason":null},{"name":"FRAGMENT_SPREAD","description":"Location adjacent to a fragment spread.","isDeprecated":false,"deprecationReason":null},{"name":"INLINE_FRAGMENT","description":"Location adjacent to an inline fragment.","isDeprecated":false,"deprecationReason":null},{"name":"SCHEMA","description":"Location adjacent to a schema definition.","isDeprecated":false,"deprecationReason":null},{"name":"SCALAR","description":"Location adjacent to a scalar definition.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Location adjacent to an object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"FIELD_DEFINITION","description":"Location adjacent to a field definition.","isDeprecated":false,"deprecationReason":null},{"name":"ARGUMENT_DEFINITION","description":"Location adjacent to an argument definition.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Location adjacent to an interface definition.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Location adjacent to a union definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Location adjacent to an enum definition.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM_VALUE","description":"Location adjacent to an enum value definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Location adjacent to an input object type definition.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_FIELD_DEFINITION","description":"Location adjacent to an input object field definition.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null},{"kind":"OBJECT","name":"__EnumValue","description":"One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.","fields":[{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Field","description":"Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.","fields":[{"name":"args","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__InputValue","description":"Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.","fields":[{"name":"defaultValue","description":"A GraphQL-formatted string representing the default value for this input value.","args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"deprecationReason","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"isDeprecated","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"type","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Schema","description":"A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.","fields":[{"name":"directives","description":"A list of all directives supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Directive","ofType":null}}}},"isDeprecated":false,"deprecationReason":null},{"name":"mutationType","description":"If this server supports mutation, the type that mutation operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"queryType","description":"The type that query operations will be rooted at.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"subscriptionType","description":"If this server support subscription, the type that subscription operations will be rooted at.","args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"types","description":"A list of all types supported by this server.","args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"OBJECT","name":"__Type","description":"The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\\n\\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name and description, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.","fields":[{"name":"description","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"enumValues","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__EnumValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"fields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Field","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"inputFields","description":null,"args":[{"name":"includeDeprecated","description":null,"type":{"kind":"SCALAR","name":"Boolean","ofType":null},"defaultValue":"false"}],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__InputValue","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"interfaces","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null},{"name":"kind","description":null,"args":[],"type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"ENUM","name":"__TypeKind","ofType":null}},"isDeprecated":false,"deprecationReason":null},{"name":"name","description":null,"args":[],"type":{"kind":"SCALAR","name":"String","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"ofType","description":null,"args":[],"type":{"kind":"OBJECT","name":"__Type","ofType":null},"isDeprecated":false,"deprecationReason":null},{"name":"possibleTypes","description":null,"args":[],"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"OBJECT","name":"__Type","ofType":null}}},"isDeprecated":false,"deprecationReason":null}],"inputFields":null,"interfaces":[],"enumValues":null,"possibleTypes":null},{"kind":"ENUM","name":"__TypeKind","description":"An enum describing what kind of type a given `__Type` is.","fields":null,"inputFields":null,"interfaces":null,"enumValues":[{"name":"SCALAR","description":"Indicates this type is a scalar.","isDeprecated":false,"deprecationReason":null},{"name":"OBJECT","description":"Indicates this type is an object. `fields` and `interfaces` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"INTERFACE","description":"Indicates this type is an interface. `fields` and `possibleTypes` are valid fields.","isDeprecated":false,"deprecationReason":null},{"name":"UNION","description":"Indicates this type is a union. `possibleTypes` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"ENUM","description":"Indicates this type is an enum. `enumValues` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"INPUT_OBJECT","description":"Indicates this type is an input object. `inputFields` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"LIST","description":"Indicates this type is a list. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null},{"name":"NON_NULL","description":"Indicates this type is a non-null. `ofType` is a valid field.","isDeprecated":false,"deprecationReason":null}],"possibleTypes":null}],"directives":[{"name":"include","description":"Directs the executor to include this field or fragment only when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Included when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"skip","description":"Directs the executor to skip this field or fragment when the `if` argument is true.","locations":["FIELD","FRAGMENT_SPREAD","INLINE_FRAGMENT"],"args":[{"name":"if","description":"Skipped when true.","type":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"Boolean","ofType":null}},"defaultValue":null}]},{"name":"deprecated","description":"Marks an element of a GraphQL schema as no longer supported.","locations":["FIELD_DEFINITION","ENUM_VALUE","ARGUMENT_DEFINITION","INPUT_FIELD_DEFINITION"],"args":[{"name":"reason","description":"Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted in [Markdown](https://daringfireball.net/projects/markdown/).","type":{"kind":"SCALAR","name":"String","ofType":null},"defaultValue":"\\"No longer supported\\""}]},{"name":"requiredCapabilities","description":null,"locations":["OBJECT","SCALAR","ARGUMENT_DEFINITION","INTERFACE","INPUT_OBJECT","FIELD_DEFINITION","ENUM","ENUM_VALUE","UNION","INPUT_FIELD_DEFINITION"],"args":[{"name":"requiredCapabilities","description":null,"type":{"kind":"LIST","name":null,"ofType":{"kind":"NON_NULL","name":null,"ofType":{"kind":"SCALAR","name":"String","ofType":null}}},"defaultValue":null}]}]}}');

/***/ }),

/***/ 9674:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('{"name":"@octokit/rest","version":"16.43.2","publishConfig":{"access":"public"},"description":"GitHub REST API client for Node.js","keywords":["octokit","github","rest","api-client"],"author":"Gregor Martynus (https://github.com/gr2m)","contributors":[{"name":"Mike de Boer","email":"info@mikedeboer.nl"},{"name":"Fabian Jakobs","email":"fabian@c9.io"},{"name":"Joe Gallo","email":"joe@brassafrax.com"},{"name":"Gregor Martynus","url":"https://github.com/gr2m"}],"repository":"https://github.com/octokit/rest.js","dependencies":{"@octokit/auth-token":"^2.4.0","@octokit/plugin-paginate-rest":"^1.1.1","@octokit/plugin-request-log":"^1.0.0","@octokit/plugin-rest-endpoint-methods":"2.4.0","@octokit/request":"^5.2.0","@octokit/request-error":"^1.0.2","atob-lite":"^2.0.0","before-after-hook":"^2.0.0","btoa-lite":"^1.0.0","deprecation":"^2.0.0","lodash.get":"^4.4.2","lodash.set":"^4.3.2","lodash.uniq":"^4.5.0","octokit-pagination-methods":"^1.1.0","once":"^1.4.0","universal-user-agent":"^4.0.0"},"devDependencies":{"@gimenete/type-writer":"^0.1.3","@octokit/auth":"^1.1.1","@octokit/fixtures-server":"^5.0.6","@octokit/graphql":"^4.2.0","@types/node":"^13.1.0","bundlesize":"^0.18.0","chai":"^4.1.2","compression-webpack-plugin":"^3.1.0","cypress":"^4.0.0","glob":"^7.1.2","http-proxy-agent":"^4.0.0","lodash.camelcase":"^4.3.0","lodash.merge":"^4.6.1","lodash.upperfirst":"^4.3.1","lolex":"^6.0.0","mkdirp":"^1.0.0","mocha":"^7.0.1","mustache":"^4.0.0","nock":"^11.3.3","npm-run-all":"^4.1.2","nyc":"^15.0.0","prettier":"^1.14.2","proxy":"^1.0.0","semantic-release":"^17.0.0","sinon":"^8.0.0","sinon-chai":"^3.0.0","sort-keys":"^4.0.0","string-to-arraybuffer":"^1.0.0","string-to-jsdoc-comment":"^1.0.0","typescript":"^3.3.1","webpack":"^4.0.0","webpack-bundle-analyzer":"^3.0.0","webpack-cli":"^3.0.0"},"types":"index.d.ts","scripts":{"coverage":"nyc report --reporter=html && open coverage/index.html","lint":"prettier --check \'{lib,plugins,scripts,test}/**/*.{js,json,ts}\' \'docs/*.{js,json}\' \'docs/src/**/*\' index.js README.md package.json","lint:fix":"prettier --write \'{lib,plugins,scripts,test}/**/*.{js,json,ts}\' \'docs/*.{js,json}\' \'docs/src/**/*\' index.js README.md package.json","pretest":"npm run -s lint","test":"nyc mocha test/mocha-node-setup.js \\"test/*/**/*-test.js\\"","test:browser":"cypress run --browser chrome","build":"npm-run-all build:*","build:ts":"npm run -s update-endpoints:typescript","prebuild:browser":"mkdirp dist/","build:browser":"npm-run-all build:browser:*","build:browser:development":"webpack --mode development --entry . --output-library=Octokit --output=./dist/octokit-rest.js --profile --json > dist/bundle-stats.json","build:browser:production":"webpack --mode production --entry . --plugin=compression-webpack-plugin --output-library=Octokit --output-path=./dist --output-filename=octokit-rest.min.js --devtool source-map","generate-bundle-report":"webpack-bundle-analyzer dist/bundle-stats.json --mode=static --no-open --report dist/bundle-report.html","update-endpoints":"npm-run-all update-endpoints:*","update-endpoints:fetch-json":"node scripts/update-endpoints/fetch-json","update-endpoints:typescript":"node scripts/update-endpoints/typescript","prevalidate:ts":"npm run -s build:ts","validate:ts":"tsc --target es6 --noImplicitAny index.d.ts","postvalidate:ts":"tsc --noEmit --target es6 test/typescript-validate.ts","start-fixtures-server":"octokit-fixtures-server"},"license":"MIT","files":["index.js","index.d.ts","lib","plugins"],"nyc":{"ignore":["test"]},"release":{"publish":["@semantic-release/npm",{"path":"@semantic-release/github","assets":["dist/*","!dist/*.map.gz"]}]},"bundlesize":[{"path":"./dist/octokit-rest.min.js.gz","maxSize":"33 kB"}]}');

/***/ }),

/***/ 2932:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const core = __nccwpck_require__(2186);
const github = __nccwpck_require__(5438);
const { graphql } = __nccwpck_require__(8467);
const { Repository } = __nccwpck_require__(459);

debugEnabled = true
const STATUS_FIELD = "Status"

// Toolkit docs: https://github.com/actions/toolkit
async function execQuery(token, title, query) {
  if (debugEnabled) {
    showQuery(title, query);
  }
  const result = await graphql(
    query,
    {
      headers: {
        authorization: `token ` + token,
      },
    }
  );
  showDebug(result);
  return result;
}

async function processWithInputs(inputs) {
  showLog("Starting")
  debugEnabled = inputs.debug == 'true'
  showDebug(inputs);
  // Get Projects From Repo
  let projectsSource = await getRepositoryProjects(inputs.token, inputs.owner_source, inputs.repo_source);
  let projectsTarget = await getRepositoryProjects(inputs.token, inputs.owner_target, inputs.repo_target);
  if (projectsSource?.length===0) {
    console.log("########### Error: No projects found in repo source: ["+inputs.owner_source+"/"+inputs.repo_source+"] ###############")
    process.exit(1)
  }
  if (projectsSource?.length===0) {
    console.log("########### Error: No projects found in repo source ["+inputs.owner_target+"/"+inputs.repo_target+"] ###############")
    process.exit(1)
  }

  const projectSource = projectsSource.filter((p) => p.title === inputs.project_source).pop()
  const projectTarget = projectsTarget.filter((p) => p.title === inputs.project_target).pop()
  if (!projectSource) {
    console.log("########### Error: Source Project was not found with name: ["+inputs.project_source+"] ###############")
    process.exit(1)
  } else {
    console.log("########### Source project found with name: ["+inputs.project_source+"] ###############")
  }
  if (!projectTarget) {
    console.log("########### Error: Target Project was not found with name: ["+inputs.project_target+"] ###############")
    process.exit(1)
  } else {
    console.log("########### Target project found with name: ["+inputs.project_target+"] ###############")
  }

  const name_columns_source = inputs.columns_source.split(',')
  const name_columns_target = inputs.columns_target.split(',')

  if (name_columns_source.length !== name_columns_target.length) {
    console.log("########### Error: The source and target columns must have the same number ###############")
    console.log("########### Error: Target columns length: ["+name_columns_source.length+"] ###############")
    console.log("########### Error: Source columns length: ["+name_columns_target.length+"] ###############")
    process.exit(1)
  } else {
    console.log("########### Target columns found: ["+name_columns_source.toString()+"] ###############")
    console.log("########### Source columns found: ["+name_columns_target.toString()+"] ###############")
  }

  const columns_source = await getProjectColumns(inputs.token, projectSource.id)
  const check_columns_source = name_columns_source.filter((name_column) => ! columns_source.options.some((option) => option.name === name_column))
  if (check_columns_source.length > 0 ) {
    console.log("########### Error: Some columns were not found in the source project: ["+check_columns_source.toString()+"] ###############")
    process.exit(1)
  }

  const columns_target = await getProjectColumns(inputs.token, projectTarget.id)
  const check_columns_target = name_columns_target.filter((name_column) => ! columns_target.options.some((option) => option.name === name_column))
  if (check_columns_target.length > 0 ) {
    console.log("########### Error: Some columns were not found in the target project: ["+check_columns_target.toString()+"] ###############")
    process.exit(1)
  }

  const card_source = await getProjectCards(inputs.token, projectSource.id, name_columns_source);
  const card_target = await getProjectCards(inputs.token, projectTarget.id, name_columns_target);

  const new_cards_target = await addNewCardsToTarget(inputs.token, card_source, card_target, projectTarget.id)
  await moveNewCardsOnTarget(inputs.token, card_source, new_cards_target, projectTarget.id, columns_source, columns_target, name_columns_source, name_columns_target)

  const all_card_target = await getProjectCards(inputs.token, projectTarget.id, name_columns_target);
  await moveAllCardsOnSource(inputs.token, card_source, all_card_target, projectSource.id, columns_source, columns_target, name_columns_source, name_columns_target)

  showLog("Done")
}

async function getRepositoryProjects(token, owner, repo) {
  // Get Projects From Repo
  let queryRepo = `{
    repository(owner: "`+owner+`", name: "`+repo+`") {
      projectsV2(first: 10) {
        nodes {
          id
          title
        }
      }
    }
    }`

  const { repository } = await execQuery(token, 'queryRepo', queryRepo);

  return repository?.projectsV2?.nodes
}

async function addNewCardsToTarget(token, card_source, card_target, projectId) {
  let idCardsTarget = card_target.map((card) => card.content.id)
  let newCards = card_source.filter((card) => !idCardsTarget.includes(card.content.id))

  let mutations = []
  let mudtionsReturn = []
  for (let card of newCards) {
    let mutation = `MyMutation` + card.content.id.replaceAll('-', '').replaceAll('_', '0') + `: addProjectV2ItemById(input: {contentId: "` + card.content.id + `", projectId: "` + projectId + `"}) { item {id, content {... on Issue {id},... on PullRequest {id}}}}`
    if (mutation) mutations.push(mutation)
  }
  if (mutations.length) {
    mudtionsReturn = await runMutations(token, mutations);
  }
  return mudtionsReturn;
}

async function moveNewCardsOnTarget(token, card_source, card_target, projectId, columns_source, columns_target, name_columns_source, name_columns_target) {
  if (card_target.length === 0) {
    console.log('########### No new Cards to be added on target project ###############')
    return
  }

  let mutations = []

  for (let card of card_source) {
    let sourceOptionIdPosition = name_columns_source.indexOf(card.fieldValueByName.name)
    let targetColumn = columns_target.id
    // let targetOptionid = columns_target.options.filter((option) => option.name === name_columns_target[sourceOptionIdPosition] ).pop()
    let targetOptionid = columns_target.options.filter((option) => option.name === name_columns_target[0] ).pop()
    let itemTarget = card_target.filter((cardT) => cardT.item.content.id === card.content.id).pop()
    if (itemTarget) {
      let mutation = `MyMutation` + card.content.id.replaceAll('-', '').replaceAll('_', '0') + `: updateProjectV2ItemFieldValue(input: {projectId: "` + projectId + `", itemId: "` + itemTarget.item.id + `", fieldId: "` + targetColumn + `",  value: { singleSelectOptionId: "` + targetOptionid.id + `" }}) {clientMutationId}`
      if (mutation) mutations.push(mutation)
    }
  }
  if (mutations.length) {
    await runMutations(token, mutations);
  } else {
    console.log('########### No new Cards to be added on target project ###############')
  }
  return
}

async function moveAllCardsOnSource(token, card_source, card_target, projectId, columns_source, columns_target, name_columns_source, name_columns_target) {
  let mutations = []
  for (let card of card_source) {
    let itemTarget = card_target.filter((cardT) => cardT.content.id === card.content.id).pop()
    if (itemTarget) {
      let targetOptionIdPosition = name_columns_target.indexOf(itemTarget.fieldValueByName.name)
      let sourceColumn = columns_source.id
      let sourceOptionid = columns_source.options.filter((option) => option.name === name_columns_source[targetOptionIdPosition] ).pop()
      if (sourceOptionid.id !== card.fieldValueByName.optionId) {
        console.log("############## Moving Card ["+ card.content.title +"] from ["+card.fieldValueByName.name+"] to ["+sourceOptionid.name+"] ##################")
        let mutation = `MyMutation` + card.content.id.replaceAll('-', '').replaceAll('_', '0') + `: updateProjectV2ItemFieldValue(input: {projectId: "` + projectId + `", itemId: "` + card.id + `", fieldId: "` + sourceColumn + `",  value: { singleSelectOptionId: "` + sourceOptionid.id + `" }}) {clientMutationId}`
        if (mutation) mutations.push(mutation)
      } else {
        console.log("############## The Card ["+ card.content.title +"] it's already in the correct column ["+card.fieldValueByName.name+"] ##################")
      }

    }
  }
  if (mutations.length) {
    await runMutations(token, mutations);
  } else {
    console.log('########### No Cards to be synchronized ##############')
  }
  return mutations.length;
}


async function runMutations(token, mutations) {
  let perPage = 10;
  const chunkMutations = sliceIntoChunks(mutations, perPage);
  let clientMutationsId = []
  for (chunk of chunkMutations) {
    const queryMutation = `mutation {` + chunk.join('\n') + `}`;    
    const clientMutationId = await execQuery(token, 'queryMutation', queryMutation);
    for (const [key, value] of Object.entries(clientMutationId)) {
      clientMutationsId.push(value)
    }
  }
  // consolelog('clientMutationsId', clientMutationsId)
  return clientMutationsId
}

async function getProjectCards(token, projectId, name_columns, no_status = false) {
  let perPage = 50;
  let hasNextPage = false
  let endCursor = ''
  let cards = {}
  do {
    let queryEndCursor = endCursor !== '' ? `, after: "` + endCursor + `"` : '';

    const queryGetCards = `{
      node(id: "` + projectId + `") {
        ... on ProjectV2 {
          items(first: ` + perPage + queryEndCursor + `) {
            nodes {
              type
              id
              content {
                  ... on Issue {
                      id
                      url
                      title
                      repository {
                          nameWithOwner
                      }
                  }
                  ... on PullRequest {
                      id
                      url
                      title
                      repository {
                          nameWithOwner
                      }
                  }
              }
              fieldValueByName(name: "Status") {
                  ... on ProjectV2ItemFieldSingleSelectValue {
                      field {
                          ... on ProjectV2SingleSelectField {
                              id
                              name
                          }
                      }
                      name
                      optionId
                      nameHTML
                  }
              }
            }
            pageInfo {
              hasNextPage
              endCursor
            }
          }
        }
      }
    }`

    const {node} = await execQuery(token, 'queryGetCards', queryGetCards);

    cards = node?.items?.nodes.filter((card) =>
        (no_status || card.fieldValueByName !== null) &&
        card.type !== 'DRAFT_ISSUE' &&
        (no_status || name_columns.includes(card.fieldValueByName.name))
    )
    let pageInfo = node.items.pageInfo;
    hasNextPage = pageInfo.hasNextPage;
    endCursor = pageInfo.endCursor;

  } while (hasNextPage)

  return cards
}


async function getProjectColumns(token, projectId) {
  let perPage = 50;
  let hasNextPage = false
  let endCursor = ''
  let columns = {}
  do {
    // Get Card Of Project
    let queryEndCursor = endCursor !== '' ? `, after: "` + endCursor + `"` : '';

    const queryGetColumns = `{
      node(id: "` + projectId + `") {
        ... on ProjectV2 {
          fields(first: ` + perPage + queryEndCursor + `) {
            nodes {
                ... on ProjectV2SingleSelectField {
                    id
                    name
                    options(names: null) {
                        id
                        name
                    }
                }
            }
            pageInfo {
              hasNextPage
              endCursor
            }
          }
        }
      }
    }`
    const {node} = await execQuery(token, 'queryGetColumns', queryGetColumns);

    columns = node?.fields?.nodes.filter((field) => field.name === STATUS_FIELD).pop();
    let pageInfo = node.fields.pageInfo;

    hasNextPage = pageInfo.hasNextPage;
    endCursor = pageInfo.endCursor;
  } while (hasNextPage)

  return columns;
}

async function run() {
  try {
    const inputs = {
      token: core.getInput('github-token', {required: true}),
      allowedRepos: core.getInput('allowed-repos', {required: false}),
      debug: core.getInput('debug', {required: false}),
      owner: github.context.repo.owner,
      repo: github.context.repo.repo,
    };

    await processWithInputs(inputs);

  } catch (error) {
    core.error(error);
    core.setFailed(error.message);
  }
}

function sliceIntoChunks(arr, chunkSize) {
  const res = [];
  for (let i = 0; i < arr.length; i += chunkSize) {
    const chunk = arr.slice(i, i + chunkSize);
    res.push(chunk);
  }
  return res;
}

function showQuery(title, query) {
  if (debugEnabled) {
    console.log('################ ' + title + ' ##################');
    console.log(query);
  }
}

function showDebug(message, ...optionalParams) {
  if (debugEnabled) {
    console.log(message, ...optionalParams)
  }
}

function showLog(message, ...optionalParams) {
  if (optionalParams) {
    console.log('-----------------', message, '-------------------', ...optionalParams)
  } else {
    console.log(message, ...optionalParams)
  }
}

function consolelog(title, message) {
    console.log('-----------------', title, '-------------------')
    console.dir(message, {depth:null})
    console.log('-----------------/', title, '-------------------')
}

if (!process.env.local) {
  console.log('running pipe', process.env.local)
  run()
}

module.exports = { processWithInputs }

/***/ }),

/***/ 7351:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issue = exports.issueCommand = void 0;
const os = __importStar(__nccwpck_require__(2087));
const utils_1 = __nccwpck_require__(5278);
/**
 * Commands
 *
 * Command Format:
 *   ::name key=value,key=value::message
 *
 * Examples:
 *   ::warning::This is the message
 *   ::set-env name=MY_VAR::some value
 */
function issueCommand(command, properties, message) {
    const cmd = new Command(command, properties, message);
    process.stdout.write(cmd.toString() + os.EOL);
}
exports.issueCommand = issueCommand;
function issue(name, message = '') {
    issueCommand(name, {}, message);
}
exports.issue = issue;
const CMD_STRING = '::';
class Command {
    constructor(command, properties, message) {
        if (!command) {
            command = 'missing.command';
        }
        this.command = command;
        this.properties = properties;
        this.message = message;
    }
    toString() {
        let cmdStr = CMD_STRING + this.command;
        if (this.properties && Object.keys(this.properties).length > 0) {
            cmdStr += ' ';
            let first = true;
            for (const key in this.properties) {
                if (this.properties.hasOwnProperty(key)) {
                    const val = this.properties[key];
                    if (val) {
                        if (first) {
                            first = false;
                        }
                        else {
                            cmdStr += ',';
                        }
                        cmdStr += `${key}=${escapeProperty(val)}`;
                    }
                }
            }
        }
        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;
        return cmdStr;
    }
}
function escapeData(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A');
}
function escapeProperty(s) {
    return utils_1.toCommandValue(s)
        .replace(/%/g, '%25')
        .replace(/\r/g, '%0D')
        .replace(/\n/g, '%0A')
        .replace(/:/g, '%3A')
        .replace(/,/g, '%2C');
}
//# sourceMappingURL=command.js.map

/***/ }),

/***/ 2186:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;
const command_1 = __nccwpck_require__(7351);
const file_command_1 = __nccwpck_require__(717);
const utils_1 = __nccwpck_require__(5278);
const os = __importStar(__nccwpck_require__(2087));
const path = __importStar(__nccwpck_require__(5622));
/**
 * The code to exit an action
 */
var ExitCode;
(function (ExitCode) {
    /**
     * A code indicating that the action was successful
     */
    ExitCode[ExitCode["Success"] = 0] = "Success";
    /**
     * A code indicating that the action was a failure
     */
    ExitCode[ExitCode["Failure"] = 1] = "Failure";
})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));
//-----------------------------------------------------------------------
// Variables
//-----------------------------------------------------------------------
/**
 * Sets env variable for this action and future actions in the job
 * @param name the name of the variable to set
 * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function exportVariable(name, val) {
    const convertedVal = utils_1.toCommandValue(val);
    process.env[name] = convertedVal;
    const filePath = process.env['GITHUB_ENV'] || '';
    if (filePath) {
        const delimiter = '_GitHubActionsFileCommandDelimeter_';
        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;
        file_command_1.issueCommand('ENV', commandValue);
    }
    else {
        command_1.issueCommand('set-env', { name }, convertedVal);
    }
}
exports.exportVariable = exportVariable;
/**
 * Registers a secret which will get masked from logs
 * @param secret value of the secret
 */
function setSecret(secret) {
    command_1.issueCommand('add-mask', {}, secret);
}
exports.setSecret = setSecret;
/**
 * Prepends inputPath to the PATH (for this action and future actions)
 * @param inputPath
 */
function addPath(inputPath) {
    const filePath = process.env['GITHUB_PATH'] || '';
    if (filePath) {
        file_command_1.issueCommand('PATH', inputPath);
    }
    else {
        command_1.issueCommand('add-path', {}, inputPath);
    }
    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;
}
exports.addPath = addPath;
/**
 * Gets the value of an input.
 * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.
 * Returns an empty string if the value is not defined.
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   string
 */
function getInput(name, options) {
    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';
    if (options && options.required && !val) {
        throw new Error(`Input required and not supplied: ${name}`);
    }
    if (options && options.trimWhitespace === false) {
        return val;
    }
    return val.trim();
}
exports.getInput = getInput;
/**
 * Gets the input value of the boolean type in the YAML 1.2 "core schema" specification.
 * Support boolean input list: `true | True | TRUE | false | False | FALSE` .
 * The return value is also in boolean type.
 * ref: https://yaml.org/spec/1.2/spec.html#id2804923
 *
 * @param     name     name of the input to get
 * @param     options  optional. See InputOptions.
 * @returns   boolean
 */
function getBooleanInput(name, options) {
    const trueValue = ['true', 'True', 'TRUE'];
    const falseValue = ['false', 'False', 'FALSE'];
    const val = getInput(name, options);
    if (trueValue.includes(val))
        return true;
    if (falseValue.includes(val))
        return false;
    throw new TypeError(`Input does not meet YAML 1.2 "Core Schema" specification: ${name}\n` +
        `Support boolean input list: \`true | True | TRUE | false | False | FALSE\``);
}
exports.getBooleanInput = getBooleanInput;
/**
 * Sets the value of an output.
 *
 * @param     name     name of the output to set
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function setOutput(name, value) {
    process.stdout.write(os.EOL);
    command_1.issueCommand('set-output', { name }, value);
}
exports.setOutput = setOutput;
/**
 * Enables or disables the echoing of commands into stdout for the rest of the step.
 * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.
 *
 */
function setCommandEcho(enabled) {
    command_1.issue('echo', enabled ? 'on' : 'off');
}
exports.setCommandEcho = setCommandEcho;
//-----------------------------------------------------------------------
// Results
//-----------------------------------------------------------------------
/**
 * Sets the action status to failed.
 * When the action exits it will be with an exit code of 1
 * @param message add error issue message
 */
function setFailed(message) {
    process.exitCode = ExitCode.Failure;
    error(message);
}
exports.setFailed = setFailed;
//-----------------------------------------------------------------------
// Logging Commands
//-----------------------------------------------------------------------
/**
 * Gets whether Actions Step Debug is on or not
 */
function isDebug() {
    return process.env['RUNNER_DEBUG'] === '1';
}
exports.isDebug = isDebug;
/**
 * Writes debug message to user log
 * @param message debug message
 */
function debug(message) {
    command_1.issueCommand('debug', {}, message);
}
exports.debug = debug;
/**
 * Adds an error issue
 * @param message error issue message. Errors will be converted to string via toString()
 */
function error(message) {
    command_1.issue('error', message instanceof Error ? message.toString() : message);
}
exports.error = error;
/**
 * Adds an warning issue
 * @param message warning issue message. Errors will be converted to string via toString()
 */
function warning(message) {
    command_1.issue('warning', message instanceof Error ? message.toString() : message);
}
exports.warning = warning;
/**
 * Writes info to log with console.log.
 * @param message info message
 */
function info(message) {
    process.stdout.write(message + os.EOL);
}
exports.info = info;
/**
 * Begin an output group.
 *
 * Output until the next `groupEnd` will be foldable in this group
 *
 * @param name The name of the output group
 */
function startGroup(name) {
    command_1.issue('group', name);
}
exports.startGroup = startGroup;
/**
 * End an output group.
 */
function endGroup() {
    command_1.issue('endgroup');
}
exports.endGroup = endGroup;
/**
 * Wrap an asynchronous function call in a group.
 *
 * Returns the same type as the function itself.
 *
 * @param name The name of the group
 * @param fn The function to wrap in the group
 */
function group(name, fn) {
    return __awaiter(this, void 0, void 0, function* () {
        startGroup(name);
        let result;
        try {
            result = yield fn();
        }
        finally {
            endGroup();
        }
        return result;
    });
}
exports.group = group;
//-----------------------------------------------------------------------
// Wrapper action state
//-----------------------------------------------------------------------
/**
 * Saves state for current action, the state can only be retrieved by this action's post job execution.
 *
 * @param     name     name of the state to store
 * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify
 */
// eslint-disable-next-line @typescript-eslint/no-explicit-any
function saveState(name, value) {
    command_1.issueCommand('save-state', { name }, value);
}
exports.saveState = saveState;
/**
 * Gets the value of an state set by this action's main execution.
 *
 * @param     name     name of the state to get
 * @returns   string
 */
function getState(name) {
    return process.env[`STATE_${name}`] || '';
}
exports.getState = getState;
//# sourceMappingURL=core.js.map

/***/ }),

/***/ 717:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

// For internal use, subject to change.
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.issueCommand = void 0;
// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
const fs = __importStar(__nccwpck_require__(5747));
const os = __importStar(__nccwpck_require__(2087));
const utils_1 = __nccwpck_require__(5278);
function issueCommand(command, message) {
    const filePath = process.env[`GITHUB_${command}`];
    if (!filePath) {
        throw new Error(`Unable to find environment variable for file command ${command}`);
    }
    if (!fs.existsSync(filePath)) {
        throw new Error(`Missing file at path: ${filePath}`);
    }
    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {
        encoding: 'utf8'
    });
}
exports.issueCommand = issueCommand;
//# sourceMappingURL=file-command.js.map

/***/ }),

/***/ 5278:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

// We use any as a valid input type
/* eslint-disable @typescript-eslint/no-explicit-any */
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.toCommandValue = void 0;
/**
 * Sanitizes an input into a string so it can be passed into issueCommand safely
 * @param input input to sanitize into a string
 */
function toCommandValue(input) {
    if (input === null || input === undefined) {
        return '';
    }
    else if (typeof input === 'string' || input instanceof String) {
        return input;
    }
    return JSON.stringify(input);
}
exports.toCommandValue = toCommandValue;
//# sourceMappingURL=utils.js.map

/***/ }),

/***/ 4087:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const fs_1 = __nccwpck_require__(5747);
const os_1 = __nccwpck_require__(2087);
class Context {
    /**
     * Hydrate the context from the environment
     */
    constructor() {
        this.payload = {};
        if (process.env.GITHUB_EVENT_PATH) {
            if (fs_1.existsSync(process.env.GITHUB_EVENT_PATH)) {
                this.payload = JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: 'utf8' }));
            }
            else {
                const path = process.env.GITHUB_EVENT_PATH;
                process.stdout.write(`GITHUB_EVENT_PATH ${path} does not exist${os_1.EOL}`);
            }
        }
        this.eventName = process.env.GITHUB_EVENT_NAME;
        this.sha = process.env.GITHUB_SHA;
        this.ref = process.env.GITHUB_REF;
        this.workflow = process.env.GITHUB_WORKFLOW;
        this.action = process.env.GITHUB_ACTION;
        this.actor = process.env.GITHUB_ACTOR;
    }
    get issue() {
        const payload = this.payload;
        return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pull_request || payload).number });
    }
    get repo() {
        if (process.env.GITHUB_REPOSITORY) {
            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');
            return { owner, repo };
        }
        if (this.payload.repository) {
            return {
                owner: this.payload.repository.owner.login,
                repo: this.payload.repository.name
            };
        }
        throw new Error("context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'");
    }
}
exports.Context = Context;
//# sourceMappingURL=context.js.map

/***/ }),

/***/ 5438:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

"use strict";

var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
Object.defineProperty(exports, "__esModule", ({ value: true }));
// Originally pulled from https://github.com/JasonEtco/actions-toolkit/blob/master/src/github.ts
const graphql_1 = __nccwpck_require__(6422);
const rest_1 = __nccwpck_require__(9351);
const Context = __importStar(__nccwpck_require__(4087));
const httpClient = __importStar(__nccwpck_require__(9925));
// We need this in order to extend Octokit
rest_1.Octokit.prototype = new rest_1.Octokit();
exports.context = new Context.Context();
class GitHub extends rest_1.Octokit {
    constructor(token, opts) {
        super(GitHub.getOctokitOptions(GitHub.disambiguate(token, opts)));
        this.graphql = GitHub.getGraphQL(GitHub.disambiguate(token, opts));
    }
    /**
     * Disambiguates the constructor overload parameters
     */
    static disambiguate(token, opts) {
        return [
            typeof token === 'string' ? token : '',
            typeof token === 'object' ? token : opts || {}
        ];
    }
    static getOctokitOptions(args) {
        const token = args[0];
        const options = Object.assign({}, args[1]); // Shallow clone - don't mutate the object provided by the caller
        // Base URL - GHES or Dotcom
        options.baseUrl = options.baseUrl || this.getApiBaseUrl();
        // Auth
        const auth = GitHub.getAuthString(token, options);
        if (auth) {
            options.auth = auth;
        }
        // Proxy
        const agent = GitHub.getProxyAgent(options.baseUrl, options);
        if (agent) {
            // Shallow clone - don't mutate the object provided by the caller
            options.request = options.request ? Object.assign({}, options.request) : {};
            // Set the agent
            options.request.agent = agent;
        }
        return options;
    }
    static getGraphQL(args) {
        const defaults = {};
        defaults.baseUrl = this.getGraphQLBaseUrl();
        const token = args[0];
        const options = args[1];
        // Authorization
        const auth = this.getAuthString(token, options);
        if (auth) {
            defaults.headers = {
                authorization: auth
            };
        }
        // Proxy
        const agent = GitHub.getProxyAgent(defaults.baseUrl, options);
        if (agent) {
            defaults.request = { agent };
        }
        return graphql_1.graphql.defaults(defaults);
    }
    static getAuthString(token, options) {
        // Validate args
        if (!token && !options.auth) {
            throw new Error('Parameter token or opts.auth is required');
        }
        else if (token && options.auth) {
            throw new Error('Parameters token and opts.auth may not both be specified');
        }
        return typeof options.auth === 'string' ? options.auth : `token ${token}`;
    }
    static getProxyAgent(destinationUrl, options) {
        var _a;
        if (!((_a = options.request) === null || _a === void 0 ? void 0 : _a.agent)) {
            if (httpClient.getProxyUrl(destinationUrl)) {
                const hc = new httpClient.HttpClient();
                return hc.getAgent(destinationUrl);
            }
        }
        return undefined;
    }
    static getApiBaseUrl() {
        return process.env['GITHUB_API_URL'] || 'https://api.github.com';
    }
    static getGraphQLBaseUrl() {
        let url = process.env['GITHUB_GRAPHQL_URL'] || 'https://api.github.com/graphql';
        // Shouldn't be a trailing slash, but remove if so
        if (url.endsWith('/')) {
            url = url.substr(0, url.length - 1);
        }
        // Remove trailing "/graphql"
        if (url.toUpperCase().endsWith('/GRAPHQL')) {
            url = url.substr(0, url.length - '/graphql'.length);
        }
        return url;
    }
}
exports.GitHub = GitHub;
//# sourceMappingURL=github.js.map

/***/ }),

/***/ 6422:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var request = __nccwpck_require__(9353);
var universalUserAgent = __nccwpck_require__(5030);

const VERSION = "4.8.0";

function _buildMessageForResponseErrors(data) {
  return `Request failed due to following response errors:\n` + data.errors.map(e => ` - ${e.message}`).join("\n");
}

class GraphqlResponseError extends Error {
  constructor(request, headers, response) {
    super(_buildMessageForResponseErrors(response));
    this.request = request;
    this.headers = headers;
    this.response = response;
    this.name = "GraphqlResponseError"; // Expose the errors and response data in their shorthand properties.

    this.errors = response.errors;
    this.data = response.data; // Maintains proper stack trace (only available on V8)

    /* istanbul ignore next */

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }

}

const NON_VARIABLE_OPTIONS = ["method", "baseUrl", "url", "headers", "request", "query", "mediaType"];
const FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
const GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
function graphql(request, query, options) {
  if (options) {
    if (typeof query === "string" && "query" in options) {
      return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
    }

    for (const key in options) {
      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;
      return Promise.reject(new Error(`[@octokit/graphql] "${key}" cannot be used as variable name`));
    }
  }

  const parsedOptions = typeof query === "string" ? Object.assign({
    query
  }, options) : query;
  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {
    if (NON_VARIABLE_OPTIONS.includes(key)) {
      result[key] = parsedOptions[key];
      return result;
    }

    if (!result.variables) {
      result.variables = {};
    }

    result.variables[key] = parsedOptions[key];
    return result;
  }, {}); // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix
  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451

  const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;

  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
  }

  return request(requestOptions).then(response => {
    if (response.data.errors) {
      const headers = {};

      for (const key of Object.keys(response.headers)) {
        headers[key] = response.headers[key];
      }

      throw new GraphqlResponseError(requestOptions, headers, response.data);
    }

    return response.data.data;
  });
}

function withDefaults(request$1, newDefaults) {
  const newRequest = request$1.defaults(newDefaults);

  const newApi = (query, options) => {
    return graphql(newRequest, query, options);
  };

  return Object.assign(newApi, {
    defaults: withDefaults.bind(null, newRequest),
    endpoint: request.request.endpoint
  });
}

const graphql$1 = withDefaults(request.request, {
  headers: {
    "user-agent": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`
  },
  method: "POST",
  url: "/graphql"
});
function withCustomRequest(customRequest) {
  return withDefaults(customRequest, {
    method: "POST",
    url: "/graphql"
  });
}

exports.GraphqlResponseError = GraphqlResponseError;
exports.graphql = graphql$1;
exports.withCustomRequest = withCustomRequest;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 7471:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var deprecation = __nccwpck_require__(8932);
var once = _interopDefault(__nccwpck_require__(1223));

const logOnceCode = once(deprecation => console.warn(deprecation));
const logOnceHeaders = once(deprecation => console.warn(deprecation));
/**
 * Error with extra properties to help with debugging
 */

class RequestError extends Error {
  constructor(message, statusCode, options) {
    super(message); // Maintains proper stack trace (only available on V8)

    /* istanbul ignore next */

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }

    this.name = "HttpError";
    this.status = statusCode;
    let headers;

    if ("headers" in options && typeof options.headers !== "undefined") {
      headers = options.headers;
    }

    if ("response" in options) {
      this.response = options.response;
      headers = options.response.headers;
    } // redact request credentials without mutating original request options


    const requestCopy = Object.assign({}, options.request);

    if (options.request.headers.authorization) {
      requestCopy.headers = Object.assign({}, options.request.headers, {
        authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
      });
    }

    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit
    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications
    .replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]") // OAuth tokens can be passed as URL query parameters, although it is not recommended
    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header
    .replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy; // deprecations

    Object.defineProperty(this, "code", {
      get() {
        logOnceCode(new deprecation.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
        return statusCode;
      }

    });
    Object.defineProperty(this, "headers", {
      get() {
        logOnceHeaders(new deprecation.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));
        return headers || {};
      }

    });
  }

}

exports.RequestError = RequestError;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 9353:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var endpoint = __nccwpck_require__(9440);
var universalUserAgent = __nccwpck_require__(5030);
var isPlainObject = __nccwpck_require__(3287);
var nodeFetch = _interopDefault(__nccwpck_require__(4502));
var requestError = __nccwpck_require__(7471);

const VERSION = "5.6.3";

function getBufferResponse(response) {
  return response.arrayBuffer();
}

function fetchWrapper(requestOptions) {
  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;

  if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {
    requestOptions.body = JSON.stringify(requestOptions.body);
  }

  let headers = {};
  let status;
  let url;
  const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;
  return fetch(requestOptions.url, Object.assign({
    method: requestOptions.method,
    body: requestOptions.body,
    headers: requestOptions.headers,
    redirect: requestOptions.redirect
  }, // `requestOptions.request.agent` type is incompatible
  // see https://github.com/octokit/types.ts/pull/264
  requestOptions.request)).then(async response => {
    url = response.url;
    status = response.status;

    for (const keyAndValue of response.headers) {
      headers[keyAndValue[0]] = keyAndValue[1];
    }

    if ("deprecation" in headers) {
      const matches = headers.link && headers.link.match(/<([^>]+)>; rel="deprecation"/);
      const deprecationLink = matches && matches.pop();
      log.warn(`[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`);
    }

    if (status === 204 || status === 205) {
      return;
    } // GitHub API returns 200 for HEAD requests


    if (requestOptions.method === "HEAD") {
      if (status < 400) {
        return;
      }

      throw new requestError.RequestError(response.statusText, status, {
        response: {
          url,
          status,
          headers,
          data: undefined
        },
        request: requestOptions
      });
    }

    if (status === 304) {
      throw new requestError.RequestError("Not modified", status, {
        response: {
          url,
          status,
          headers,
          data: await getResponseData(response)
        },
        request: requestOptions
      });
    }

    if (status >= 400) {
      const data = await getResponseData(response);
      const error = new requestError.RequestError(toErrorMessage(data), status, {
        response: {
          url,
          status,
          headers,
          data
        },
        request: requestOptions
      });
      throw error;
    }

    return getResponseData(response);
  }).then(data => {
    return {
      status,
      url,
      headers,
      data
    };
  }).catch(error => {
    if (error instanceof requestError.RequestError) throw error;
    throw new requestError.RequestError(error.message, 500, {
      request: requestOptions
    });
  });
}

async function getResponseData(response) {
  const contentType = response.headers.get("content-type");

  if (/application\/json/.test(contentType)) {
    return response.json();
  }

  if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
    return response.text();
  }

  return getBufferResponse(response);
}

function toErrorMessage(data) {
  if (typeof data === "string") return data; // istanbul ignore else - just in case

  if ("message" in data) {
    if (Array.isArray(data.errors)) {
      return `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}`;
    }

    return data.message;
  } // istanbul ignore next - just in case


  return `Unknown error: ${JSON.stringify(data)}`;
}

function withDefaults(oldEndpoint, newDefaults) {
  const endpoint = oldEndpoint.defaults(newDefaults);

  const newApi = function (route, parameters) {
    const endpointOptions = endpoint.merge(route, parameters);

    if (!endpointOptions.request || !endpointOptions.request.hook) {
      return fetchWrapper(endpoint.parse(endpointOptions));
    }

    const request = (route, parameters) => {
      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));
    };

    Object.assign(request, {
      endpoint,
      defaults: withDefaults.bind(null, endpoint)
    });
    return endpointOptions.request.hook(request, endpointOptions);
  };

  return Object.assign(newApi, {
    endpoint,
    defaults: withDefaults.bind(null, endpoint)
  });
}

const request = withDefaults(endpoint.endpoint, {
  headers: {
    "user-agent": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`
  }
});

exports.request = request;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 4502:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Stream = _interopDefault(__nccwpck_require__(2413));
var http = _interopDefault(__nccwpck_require__(8605));
var Url = _interopDefault(__nccwpck_require__(8835));
var whatwgUrl = _interopDefault(__nccwpck_require__(8665));
var https = _interopDefault(__nccwpck_require__(7211));
var zlib = _interopDefault(__nccwpck_require__(8761));

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = __nccwpck_require__(2877).convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
		if (!res) {
			res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
			if (res) {
				res.pop(); // drop last quote
			}
		}

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');
const URL = Url.URL || whatwgUrl.URL;

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

/**
 * Wrapper around `new URL` to handle arbitrary URLs
 *
 * @param  {string} urlStr
 * @return {void}
 */
function parseURL(urlStr) {
	/*
 	Check whether the URL is absolute or not
 		Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
 	Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
 */
	if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr)) {
		urlStr = new URL(urlStr).toString();
	}

	// Fallback to old implementation for arbitrary URLs
	return parse_url(urlStr);
}

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parseURL(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parseURL(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parseURL(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

const URL$1 = Url.URL || whatwgUrl.URL;

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;

const isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {
	const orig = new URL$1(original).hostname;
	const dest = new URL$1(destination).hostname;

	return orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);
};

/**
 * isSameProtocol reports whether the two provided URLs use the same protocol.
 *
 * Both domains must already be in canonical form.
 * @param {string|URL} original
 * @param {string|URL} destination
 */
const isSameProtocol = function isSameProtocol(destination, original) {
	const orig = new URL$1(original).protocol;
	const dest = new URL$1(destination).protocol;

	return orig === dest;
};

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				destroyStream(request.body, error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));

			if (response && response.body) {
				destroyStream(response.body, err);
			}

			finalize();
		});

		fixResponseChunkedTransferBadEnding(req, function (err) {
			if (signal && signal.aborted) {
				return;
			}

			if (response && response.body) {
				destroyStream(response.body, err);
			}
		});

		/* c8 ignore next 18 */
		if (parseInt(process.version.substring(1)) < 14) {
			// Before Node.js 14, pipeline() does not fully support async iterators and does not always
			// properly handle when the socket close/end events are out of order.
			req.on('socket', function (s) {
				s.addListener('close', function (hadError) {
					// if a data listener is still present we didn't end cleanly
					const hasDataListener = s.listenerCount('data') > 0;

					// if end happened before close but the socket didn't emit an error, do it now
					if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {
						const err = new Error('Premature close');
						err.code = 'ERR_STREAM_PREMATURE_CLOSE';
						response.body.emit('error', err);
					}
				});
			});
		}

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				let locationURL = null;
				try {
					locationURL = location === null ? null : new URL$1(location, request.url).toString();
				} catch (err) {
					// error here can only be invalid URL in Location: header
					// do not throw when options.redirect == manual
					// let the user extract the errorneous redirect URL
					if (request.redirect !== 'manual') {
						reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));
						finalize();
						return;
					}
				}

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout,
							size: request.size
						};

						if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {
							for (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {
								requestOpts.headers.delete(name);
							}
						}

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				raw.on('end', function () {
					// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.
					if (!response) {
						response = new Response(body, response_options);
						resolve(response);
					}
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
	let socket;

	request.on('socket', function (s) {
		socket = s;
	});

	request.on('response', function (response) {
		const headers = response.headers;

		if (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {
			response.once('close', function (hadError) {
				// if a data listener is still present we didn't end cleanly
				const hasDataListener = socket.listenerCount('data') > 0;

				if (hasDataListener && !hadError) {
					const err = new Error('Premature close');
					err.code = 'ERR_STREAM_PREMATURE_CLOSE';
					errorCallback(err);
				}
			});
		}
	});
}

function destroyStream(stream, err) {
	if (stream.destroy) {
		stream.destroy(err);
	} else {
		// node < 8
		stream.emit('error', err);
		stream.end();
	}
}

/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

module.exports = exports = fetch;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.default = exports;
exports.Headers = Headers;
exports.Request = Request;
exports.Response = Response;
exports.FetchError = FetchError;


/***/ }),

/***/ 9925:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
const http = __nccwpck_require__(8605);
const https = __nccwpck_require__(7211);
const pm = __nccwpck_require__(6443);
let tunnel;
var HttpCodes;
(function (HttpCodes) {
    HttpCodes[HttpCodes["OK"] = 200] = "OK";
    HttpCodes[HttpCodes["MultipleChoices"] = 300] = "MultipleChoices";
    HttpCodes[HttpCodes["MovedPermanently"] = 301] = "MovedPermanently";
    HttpCodes[HttpCodes["ResourceMoved"] = 302] = "ResourceMoved";
    HttpCodes[HttpCodes["SeeOther"] = 303] = "SeeOther";
    HttpCodes[HttpCodes["NotModified"] = 304] = "NotModified";
    HttpCodes[HttpCodes["UseProxy"] = 305] = "UseProxy";
    HttpCodes[HttpCodes["SwitchProxy"] = 306] = "SwitchProxy";
    HttpCodes[HttpCodes["TemporaryRedirect"] = 307] = "TemporaryRedirect";
    HttpCodes[HttpCodes["PermanentRedirect"] = 308] = "PermanentRedirect";
    HttpCodes[HttpCodes["BadRequest"] = 400] = "BadRequest";
    HttpCodes[HttpCodes["Unauthorized"] = 401] = "Unauthorized";
    HttpCodes[HttpCodes["PaymentRequired"] = 402] = "PaymentRequired";
    HttpCodes[HttpCodes["Forbidden"] = 403] = "Forbidden";
    HttpCodes[HttpCodes["NotFound"] = 404] = "NotFound";
    HttpCodes[HttpCodes["MethodNotAllowed"] = 405] = "MethodNotAllowed";
    HttpCodes[HttpCodes["NotAcceptable"] = 406] = "NotAcceptable";
    HttpCodes[HttpCodes["ProxyAuthenticationRequired"] = 407] = "ProxyAuthenticationRequired";
    HttpCodes[HttpCodes["RequestTimeout"] = 408] = "RequestTimeout";
    HttpCodes[HttpCodes["Conflict"] = 409] = "Conflict";
    HttpCodes[HttpCodes["Gone"] = 410] = "Gone";
    HttpCodes[HttpCodes["TooManyRequests"] = 429] = "TooManyRequests";
    HttpCodes[HttpCodes["InternalServerError"] = 500] = "InternalServerError";
    HttpCodes[HttpCodes["NotImplemented"] = 501] = "NotImplemented";
    HttpCodes[HttpCodes["BadGateway"] = 502] = "BadGateway";
    HttpCodes[HttpCodes["ServiceUnavailable"] = 503] = "ServiceUnavailable";
    HttpCodes[HttpCodes["GatewayTimeout"] = 504] = "GatewayTimeout";
})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));
var Headers;
(function (Headers) {
    Headers["Accept"] = "accept";
    Headers["ContentType"] = "content-type";
})(Headers = exports.Headers || (exports.Headers = {}));
var MediaTypes;
(function (MediaTypes) {
    MediaTypes["ApplicationJson"] = "application/json";
})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));
/**
 * Returns the proxy URL, depending upon the supplied url and proxy environment variables.
 * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
 */
function getProxyUrl(serverUrl) {
    let proxyUrl = pm.getProxyUrl(new URL(serverUrl));
    return proxyUrl ? proxyUrl.href : '';
}
exports.getProxyUrl = getProxyUrl;
const HttpRedirectCodes = [
    HttpCodes.MovedPermanently,
    HttpCodes.ResourceMoved,
    HttpCodes.SeeOther,
    HttpCodes.TemporaryRedirect,
    HttpCodes.PermanentRedirect
];
const HttpResponseRetryCodes = [
    HttpCodes.BadGateway,
    HttpCodes.ServiceUnavailable,
    HttpCodes.GatewayTimeout
];
const RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];
const ExponentialBackoffCeiling = 10;
const ExponentialBackoffTimeSlice = 5;
class HttpClientError extends Error {
    constructor(message, statusCode) {
        super(message);
        this.name = 'HttpClientError';
        this.statusCode = statusCode;
        Object.setPrototypeOf(this, HttpClientError.prototype);
    }
}
exports.HttpClientError = HttpClientError;
class HttpClientResponse {
    constructor(message) {
        this.message = message;
    }
    readBody() {
        return new Promise(async (resolve, reject) => {
            let output = Buffer.alloc(0);
            this.message.on('data', (chunk) => {
                output = Buffer.concat([output, chunk]);
            });
            this.message.on('end', () => {
                resolve(output.toString());
            });
        });
    }
}
exports.HttpClientResponse = HttpClientResponse;
function isHttps(requestUrl) {
    let parsedUrl = new URL(requestUrl);
    return parsedUrl.protocol === 'https:';
}
exports.isHttps = isHttps;
class HttpClient {
    constructor(userAgent, handlers, requestOptions) {
        this._ignoreSslError = false;
        this._allowRedirects = true;
        this._allowRedirectDowngrade = false;
        this._maxRedirects = 50;
        this._allowRetries = false;
        this._maxRetries = 1;
        this._keepAlive = false;
        this._disposed = false;
        this.userAgent = userAgent;
        this.handlers = handlers || [];
        this.requestOptions = requestOptions;
        if (requestOptions) {
            if (requestOptions.ignoreSslError != null) {
                this._ignoreSslError = requestOptions.ignoreSslError;
            }
            this._socketTimeout = requestOptions.socketTimeout;
            if (requestOptions.allowRedirects != null) {
                this._allowRedirects = requestOptions.allowRedirects;
            }
            if (requestOptions.allowRedirectDowngrade != null) {
                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;
            }
            if (requestOptions.maxRedirects != null) {
                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);
            }
            if (requestOptions.keepAlive != null) {
                this._keepAlive = requestOptions.keepAlive;
            }
            if (requestOptions.allowRetries != null) {
                this._allowRetries = requestOptions.allowRetries;
            }
            if (requestOptions.maxRetries != null) {
                this._maxRetries = requestOptions.maxRetries;
            }
        }
    }
    options(requestUrl, additionalHeaders) {
        return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});
    }
    get(requestUrl, additionalHeaders) {
        return this.request('GET', requestUrl, null, additionalHeaders || {});
    }
    del(requestUrl, additionalHeaders) {
        return this.request('DELETE', requestUrl, null, additionalHeaders || {});
    }
    post(requestUrl, data, additionalHeaders) {
        return this.request('POST', requestUrl, data, additionalHeaders || {});
    }
    patch(requestUrl, data, additionalHeaders) {
        return this.request('PATCH', requestUrl, data, additionalHeaders || {});
    }
    put(requestUrl, data, additionalHeaders) {
        return this.request('PUT', requestUrl, data, additionalHeaders || {});
    }
    head(requestUrl, additionalHeaders) {
        return this.request('HEAD', requestUrl, null, additionalHeaders || {});
    }
    sendStream(verb, requestUrl, stream, additionalHeaders) {
        return this.request(verb, requestUrl, stream, additionalHeaders);
    }
    /**
     * Gets a typed object from an endpoint
     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise
     */
    async getJson(requestUrl, additionalHeaders = {}) {
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        let res = await this.get(requestUrl, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async postJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.post(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async putJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.put(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    async patchJson(requestUrl, obj, additionalHeaders = {}) {
        let data = JSON.stringify(obj, null, 2);
        additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);
        additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);
        let res = await this.patch(requestUrl, data, additionalHeaders);
        return this._processResponse(res, this.requestOptions);
    }
    /**
     * Makes a raw http request.
     * All other methods such as get, post, patch, and request ultimately call this.
     * Prefer get, del, post and patch
     */
    async request(verb, requestUrl, data, headers) {
        if (this._disposed) {
            throw new Error('Client has already been disposed.');
        }
        let parsedUrl = new URL(requestUrl);
        let info = this._prepareRequest(verb, parsedUrl, headers);
        // Only perform retries on reads since writes may not be idempotent.
        let maxTries = this._allowRetries && RetryableHttpVerbs.indexOf(verb) != -1
            ? this._maxRetries + 1
            : 1;
        let numTries = 0;
        let response;
        while (numTries < maxTries) {
            response = await this.requestRaw(info, data);
            // Check if it's an authentication challenge
            if (response &&
                response.message &&
                response.message.statusCode === HttpCodes.Unauthorized) {
                let authenticationHandler;
                for (let i = 0; i < this.handlers.length; i++) {
                    if (this.handlers[i].canHandleAuthentication(response)) {
                        authenticationHandler = this.handlers[i];
                        break;
                    }
                }
                if (authenticationHandler) {
                    return authenticationHandler.handleAuthentication(this, info, data);
                }
                else {
                    // We have received an unauthorized response but have no handlers to handle it.
                    // Let the response return to the caller.
                    return response;
                }
            }
            let redirectsRemaining = this._maxRedirects;
            while (HttpRedirectCodes.indexOf(response.message.statusCode) != -1 &&
                this._allowRedirects &&
                redirectsRemaining > 0) {
                const redirectUrl = response.message.headers['location'];
                if (!redirectUrl) {
                    // if there's no location to redirect to, we won't
                    break;
                }
                let parsedRedirectUrl = new URL(redirectUrl);
                if (parsedUrl.protocol == 'https:' &&
                    parsedUrl.protocol != parsedRedirectUrl.protocol &&
                    !this._allowRedirectDowngrade) {
                    throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');
                }
                // we need to finish reading the response before reassigning response
                // which will leak the open socket.
                await response.readBody();
                // strip authorization header if redirected to a different hostname
                if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {
                    for (let header in headers) {
                        // header names are case insensitive
                        if (header.toLowerCase() === 'authorization') {
                            delete headers[header];
                        }
                    }
                }
                // let's make the request with the new redirectUrl
                info = this._prepareRequest(verb, parsedRedirectUrl, headers);
                response = await this.requestRaw(info, data);
                redirectsRemaining--;
            }
            if (HttpResponseRetryCodes.indexOf(response.message.statusCode) == -1) {
                // If not a retry code, return immediately instead of retrying
                return response;
            }
            numTries += 1;
            if (numTries < maxTries) {
                await response.readBody();
                await this._performExponentialBackoff(numTries);
            }
        }
        return response;
    }
    /**
     * Needs to be called if keepAlive is set to true in request options.
     */
    dispose() {
        if (this._agent) {
            this._agent.destroy();
        }
        this._disposed = true;
    }
    /**
     * Raw request.
     * @param info
     * @param data
     */
    requestRaw(info, data) {
        return new Promise((resolve, reject) => {
            let callbackForResult = function (err, res) {
                if (err) {
                    reject(err);
                }
                resolve(res);
            };
            this.requestRawWithCallback(info, data, callbackForResult);
        });
    }
    /**
     * Raw request with callback.
     * @param info
     * @param data
     * @param onResult
     */
    requestRawWithCallback(info, data, onResult) {
        let socket;
        if (typeof data === 'string') {
            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');
        }
        let callbackCalled = false;
        let handleResult = (err, res) => {
            if (!callbackCalled) {
                callbackCalled = true;
                onResult(err, res);
            }
        };
        let req = info.httpModule.request(info.options, (msg) => {
            let res = new HttpClientResponse(msg);
            handleResult(null, res);
        });
        req.on('socket', sock => {
            socket = sock;
        });
        // If we ever get disconnected, we want the socket to timeout eventually
        req.setTimeout(this._socketTimeout || 3 * 60000, () => {
            if (socket) {
                socket.end();
            }
            handleResult(new Error('Request timeout: ' + info.options.path), null);
        });
        req.on('error', function (err) {
            // err has statusCode property
            // res should have headers
            handleResult(err, null);
        });
        if (data && typeof data === 'string') {
            req.write(data, 'utf8');
        }
        if (data && typeof data !== 'string') {
            data.on('close', function () {
                req.end();
            });
            data.pipe(req);
        }
        else {
            req.end();
        }
    }
    /**
     * Gets an http agent. This function is useful when you need an http agent that handles
     * routing through a proxy server - depending upon the url and proxy environment variables.
     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com
     */
    getAgent(serverUrl) {
        let parsedUrl = new URL(serverUrl);
        return this._getAgent(parsedUrl);
    }
    _prepareRequest(method, requestUrl, headers) {
        const info = {};
        info.parsedUrl = requestUrl;
        const usingSsl = info.parsedUrl.protocol === 'https:';
        info.httpModule = usingSsl ? https : http;
        const defaultPort = usingSsl ? 443 : 80;
        info.options = {};
        info.options.host = info.parsedUrl.hostname;
        info.options.port = info.parsedUrl.port
            ? parseInt(info.parsedUrl.port)
            : defaultPort;
        info.options.path =
            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');
        info.options.method = method;
        info.options.headers = this._mergeHeaders(headers);
        if (this.userAgent != null) {
            info.options.headers['user-agent'] = this.userAgent;
        }
        info.options.agent = this._getAgent(info.parsedUrl);
        // gives handlers an opportunity to participate
        if (this.handlers) {
            this.handlers.forEach(handler => {
                handler.prepareRequest(info.options);
            });
        }
        return info;
    }
    _mergeHeaders(headers) {
        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
        if (this.requestOptions && this.requestOptions.headers) {
            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers));
        }
        return lowercaseKeys(headers || {});
    }
    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {
        const lowercaseKeys = obj => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});
        let clientHeader;
        if (this.requestOptions && this.requestOptions.headers) {
            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];
        }
        return additionalHeaders[header] || clientHeader || _default;
    }
    _getAgent(parsedUrl) {
        let agent;
        let proxyUrl = pm.getProxyUrl(parsedUrl);
        let useProxy = proxyUrl && proxyUrl.hostname;
        if (this._keepAlive && useProxy) {
            agent = this._proxyAgent;
        }
        if (this._keepAlive && !useProxy) {
            agent = this._agent;
        }
        // if agent is already assigned use that agent.
        if (!!agent) {
            return agent;
        }
        const usingSsl = parsedUrl.protocol === 'https:';
        let maxSockets = 100;
        if (!!this.requestOptions) {
            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;
        }
        if (useProxy) {
            // If using proxy, need tunnel
            if (!tunnel) {
                tunnel = __nccwpck_require__(4294);
            }
            const agentOptions = {
                maxSockets: maxSockets,
                keepAlive: this._keepAlive,
                proxy: {
                    ...((proxyUrl.username || proxyUrl.password) && {
                        proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`
                    }),
                    host: proxyUrl.hostname,
                    port: proxyUrl.port
                }
            };
            let tunnelAgent;
            const overHttps = proxyUrl.protocol === 'https:';
            if (usingSsl) {
                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;
            }
            else {
                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;
            }
            agent = tunnelAgent(agentOptions);
            this._proxyAgent = agent;
        }
        // if reusing agent across request and tunneling agent isn't assigned create a new agent
        if (this._keepAlive && !agent) {
            const options = { keepAlive: this._keepAlive, maxSockets: maxSockets };
            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);
            this._agent = agent;
        }
        // if not using private agent and tunnel agent isn't setup then use global agent
        if (!agent) {
            agent = usingSsl ? https.globalAgent : http.globalAgent;
        }
        if (usingSsl && this._ignoreSslError) {
            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process
            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options
            // we have to cast it to any and change it directly
            agent.options = Object.assign(agent.options || {}, {
                rejectUnauthorized: false
            });
        }
        return agent;
    }
    _performExponentialBackoff(retryNumber) {
        retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);
        const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);
        return new Promise(resolve => setTimeout(() => resolve(), ms));
    }
    static dateTimeDeserializer(key, value) {
        if (typeof value === 'string') {
            let a = new Date(value);
            if (!isNaN(a.valueOf())) {
                return a;
            }
        }
        return value;
    }
    async _processResponse(res, options) {
        return new Promise(async (resolve, reject) => {
            const statusCode = res.message.statusCode;
            const response = {
                statusCode: statusCode,
                result: null,
                headers: {}
            };
            // not found leads to null obj returned
            if (statusCode == HttpCodes.NotFound) {
                resolve(response);
            }
            let obj;
            let contents;
            // get the result from the body
            try {
                contents = await res.readBody();
                if (contents && contents.length > 0) {
                    if (options && options.deserializeDates) {
                        obj = JSON.parse(contents, HttpClient.dateTimeDeserializer);
                    }
                    else {
                        obj = JSON.parse(contents);
                    }
                    response.result = obj;
                }
                response.headers = res.message.headers;
            }
            catch (err) {
                // Invalid resource (contents not json);  leaving result obj null
            }
            // note that 3xx redirects are handled by the http layer.
            if (statusCode > 299) {
                let msg;
                // if exception/error in body, attempt to get better error
                if (obj && obj.message) {
                    msg = obj.message;
                }
                else if (contents && contents.length > 0) {
                    // it may be the case that the exception is in the body message as string
                    msg = contents;
                }
                else {
                    msg = 'Failed request: (' + statusCode + ')';
                }
                let err = new HttpClientError(msg, statusCode);
                err.result = response.result;
                reject(err);
            }
            else {
                resolve(response);
            }
        });
    }
}
exports.HttpClient = HttpClient;


/***/ }),

/***/ 6443:
/***/ ((__unused_webpack_module, exports) => {

"use strict";

Object.defineProperty(exports, "__esModule", ({ value: true }));
function getProxyUrl(reqUrl) {
    let usingSsl = reqUrl.protocol === 'https:';
    let proxyUrl;
    if (checkBypass(reqUrl)) {
        return proxyUrl;
    }
    let proxyVar;
    if (usingSsl) {
        proxyVar = process.env['https_proxy'] || process.env['HTTPS_PROXY'];
    }
    else {
        proxyVar = process.env['http_proxy'] || process.env['HTTP_PROXY'];
    }
    if (proxyVar) {
        proxyUrl = new URL(proxyVar);
    }
    return proxyUrl;
}
exports.getProxyUrl = getProxyUrl;
function checkBypass(reqUrl) {
    if (!reqUrl.hostname) {
        return false;
    }
    let noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';
    if (!noProxy) {
        return false;
    }
    // Determine the request port
    let reqPort;
    if (reqUrl.port) {
        reqPort = Number(reqUrl.port);
    }
    else if (reqUrl.protocol === 'http:') {
        reqPort = 80;
    }
    else if (reqUrl.protocol === 'https:') {
        reqPort = 443;
    }
    // Format the request hostname and hostname with port
    let upperReqHosts = [reqUrl.hostname.toUpperCase()];
    if (typeof reqPort === 'number') {
        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);
    }
    // Compare request host against noproxy
    for (let upperNoProxyItem of noProxy
        .split(',')
        .map(x => x.trim().toUpperCase())
        .filter(x => x)) {
        if (upperReqHosts.some(x => x === upperNoProxyItem)) {
            return true;
        }
    }
    return false;
}
exports.checkBypass = checkBypass;


/***/ }),

/***/ 334:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

async function auth(token) {
  const tokenType = token.split(/\./).length === 3 ? "app" : /^v\d+\./.test(token) ? "installation" : "oauth";
  return {
    type: "token",
    token: token,
    tokenType
  };
}

/**
 * Prefix token for usage in the Authorization header
 *
 * @param token OAuth token or JSON Web Token
 */
function withAuthorizationPrefix(token) {
  if (token.split(/\./).length === 3) {
    return `bearer ${token}`;
  }

  return `token ${token}`;
}

async function hook(token, request, route, parameters) {
  const endpoint = request.endpoint.merge(route, parameters);
  endpoint.headers.authorization = withAuthorizationPrefix(token);
  return request(endpoint);
}

const createTokenAuth = function createTokenAuth(token) {
  if (!token) {
    throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");
  }

  if (typeof token !== "string") {
    throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");
  }

  token = token.replace(/^(token|bearer) +/i, "");
  return Object.assign(auth.bind(null, token), {
    hook: hook.bind(null, token)
  });
};

exports.createTokenAuth = createTokenAuth;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 9440:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var isPlainObject = __nccwpck_require__(3287);
var universalUserAgent = __nccwpck_require__(5030);

function lowercaseKeys(object) {
  if (!object) {
    return {};
  }

  return Object.keys(object).reduce((newObj, key) => {
    newObj[key.toLowerCase()] = object[key];
    return newObj;
  }, {});
}

function mergeDeep(defaults, options) {
  const result = Object.assign({}, defaults);
  Object.keys(options).forEach(key => {
    if (isPlainObject.isPlainObject(options[key])) {
      if (!(key in defaults)) Object.assign(result, {
        [key]: options[key]
      });else result[key] = mergeDeep(defaults[key], options[key]);
    } else {
      Object.assign(result, {
        [key]: options[key]
      });
    }
  });
  return result;
}

function removeUndefinedProperties(obj) {
  for (const key in obj) {
    if (obj[key] === undefined) {
      delete obj[key];
    }
  }

  return obj;
}

function merge(defaults, route, options) {
  if (typeof route === "string") {
    let [method, url] = route.split(" ");
    options = Object.assign(url ? {
      method,
      url
    } : {
      url: method
    }, options);
  } else {
    options = Object.assign({}, route);
  } // lowercase header names before merging with defaults to avoid duplicates


  options.headers = lowercaseKeys(options.headers); // remove properties with undefined values before merging

  removeUndefinedProperties(options);
  removeUndefinedProperties(options.headers);
  const mergedOptions = mergeDeep(defaults || {}, options); // mediaType.previews arrays are merged, instead of overwritten

  if (defaults && defaults.mediaType.previews.length) {
    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(preview => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);
  }

  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map(preview => preview.replace(/-preview/, ""));
  return mergedOptions;
}

function addQueryParameters(url, parameters) {
  const separator = /\?/.test(url) ? "&" : "?";
  const names = Object.keys(parameters);

  if (names.length === 0) {
    return url;
  }

  return url + separator + names.map(name => {
    if (name === "q") {
      return "q=" + parameters.q.split("+").map(encodeURIComponent).join("+");
    }

    return `${name}=${encodeURIComponent(parameters[name])}`;
  }).join("&");
}

const urlVariableRegex = /\{[^}]+\}/g;

function removeNonChars(variableName) {
  return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
}

function extractUrlVariableNames(url) {
  const matches = url.match(urlVariableRegex);

  if (!matches) {
    return [];
  }

  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);
}

function omit(object, keysToOmit) {
  return Object.keys(object).filter(option => !keysToOmit.includes(option)).reduce((obj, key) => {
    obj[key] = object[key];
    return obj;
  }, {});
}

// Based on https://github.com/bramstein/url-template, licensed under BSD
// TODO: create separate package.
//
// Copyright (c) 2012-2014, Bram Stein
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

/* istanbul ignore file */
function encodeReserved(str) {
  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {
    if (!/%[0-9A-Fa-f]/.test(part)) {
      part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
    }

    return part;
  }).join("");
}

function encodeUnreserved(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
    return "%" + c.charCodeAt(0).toString(16).toUpperCase();
  });
}

function encodeValue(operator, value, key) {
  value = operator === "+" || operator === "#" ? encodeReserved(value) : encodeUnreserved(value);

  if (key) {
    return encodeUnreserved(key) + "=" + value;
  } else {
    return value;
  }
}

function isDefined(value) {
  return value !== undefined && value !== null;
}

function isKeyOperator(operator) {
  return operator === ";" || operator === "&" || operator === "?";
}

function getValues(context, operator, key, modifier) {
  var value = context[key],
      result = [];

  if (isDefined(value) && value !== "") {
    if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
      value = value.toString();

      if (modifier && modifier !== "*") {
        value = value.substring(0, parseInt(modifier, 10));
      }

      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
    } else {
      if (modifier === "*") {
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function (value) {
            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
          });
        } else {
          Object.keys(value).forEach(function (k) {
            if (isDefined(value[k])) {
              result.push(encodeValue(operator, value[k], k));
            }
          });
        }
      } else {
        const tmp = [];

        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function (value) {
            tmp.push(encodeValue(operator, value));
          });
        } else {
          Object.keys(value).forEach(function (k) {
            if (isDefined(value[k])) {
              tmp.push(encodeUnreserved(k));
              tmp.push(encodeValue(operator, value[k].toString()));
            }
          });
        }

        if (isKeyOperator(operator)) {
          result.push(encodeUnreserved(key) + "=" + tmp.join(","));
        } else if (tmp.length !== 0) {
          result.push(tmp.join(","));
        }
      }
    }
  } else {
    if (operator === ";") {
      if (isDefined(value)) {
        result.push(encodeUnreserved(key));
      }
    } else if (value === "" && (operator === "&" || operator === "?")) {
      result.push(encodeUnreserved(key) + "=");
    } else if (value === "") {
      result.push("");
    }
  }

  return result;
}

function parseUrl(template) {
  return {
    expand: expand.bind(null, template)
  };
}

function expand(template, context) {
  var operators = ["+", "#", ".", "/", ";", "?", "&"];
  return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (_, expression, literal) {
    if (expression) {
      let operator = "";
      const values = [];

      if (operators.indexOf(expression.charAt(0)) !== -1) {
        operator = expression.charAt(0);
        expression = expression.substr(1);
      }

      expression.split(/,/g).forEach(function (variable) {
        var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
        values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
      });

      if (operator && operator !== "+") {
        var separator = ",";

        if (operator === "?") {
          separator = "&";
        } else if (operator !== "#") {
          separator = operator;
        }

        return (values.length !== 0 ? operator : "") + values.join(separator);
      } else {
        return values.join(",");
      }
    } else {
      return encodeReserved(literal);
    }
  });
}

function parse(options) {
  // https://fetch.spec.whatwg.org/#methods
  let method = options.method.toUpperCase(); // replace :varname with {varname} to make it RFC 6570 compatible

  let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let headers = Object.assign({}, options.headers);
  let body;
  let parameters = omit(options, ["method", "baseUrl", "url", "headers", "request", "mediaType"]); // extract variable names from URL to calculate remaining variables later

  const urlVariableNames = extractUrlVariableNames(url);
  url = parseUrl(url).expand(parameters);

  if (!/^http/.test(url)) {
    url = options.baseUrl + url;
  }

  const omittedParameters = Object.keys(options).filter(option => urlVariableNames.includes(option)).concat("baseUrl");
  const remainingParameters = omit(parameters, omittedParameters);
  const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);

  if (!isBinaryRequest) {
    if (options.mediaType.format) {
      // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw
      headers.accept = headers.accept.split(/,/).map(preview => preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(",");
    }

    if (options.mediaType.previews.length) {
      const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map(preview => {
        const format = options.mediaType.format ? `.${options.mediaType.format}` : "+json";
        return `application/vnd.github.${preview}-preview${format}`;
      }).join(",");
    }
  } // for GET/HEAD requests, set URL query parameters from remaining parameters
  // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters


  if (["GET", "HEAD"].includes(method)) {
    url = addQueryParameters(url, remainingParameters);
  } else {
    if ("data" in remainingParameters) {
      body = remainingParameters.data;
    } else {
      if (Object.keys(remainingParameters).length) {
        body = remainingParameters;
      } else {
        headers["content-length"] = 0;
      }
    }
  } // default content-type for JSON if body is set


  if (!headers["content-type"] && typeof body !== "undefined") {
    headers["content-type"] = "application/json; charset=utf-8";
  } // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.
  // fetch does not allow to set `content-length` header, but we can set body to an empty string


  if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
    body = "";
  } // Only return body/request keys if present


  return Object.assign({
    method,
    url,
    headers
  }, typeof body !== "undefined" ? {
    body
  } : null, options.request ? {
    request: options.request
  } : null);
}

function endpointWithDefaults(defaults, route, options) {
  return parse(merge(defaults, route, options));
}

function withDefaults(oldDefaults, newDefaults) {
  const DEFAULTS = merge(oldDefaults, newDefaults);
  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);
  return Object.assign(endpoint, {
    DEFAULTS,
    defaults: withDefaults.bind(null, DEFAULTS),
    merge: merge.bind(null, DEFAULTS),
    parse
  });
}

const VERSION = "6.0.11";

const userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`; // DEFAULTS has all properties set that EndpointOptions has, except url.
// So we use RequestParameters and add method as additional required property.

const DEFAULTS = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: {
    accept: "application/vnd.github.v3+json",
    "user-agent": userAgent
  },
  mediaType: {
    format: "",
    previews: []
  }
};

const endpoint = withDefaults(null, DEFAULTS);

exports.endpoint = endpoint;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 459:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = {
  validate: __nccwpck_require__(7839),
  schema: {
    get idl () {
      const join = __nccwpck_require__(5622).join
      return __nccwpck_require__(5747).readFileSync(__nccwpck_require__.ab + "schema.graphql", 'utf8')
    },
    json: __nccwpck_require__(9694)
  }
}


/***/ }),

/***/ 7839:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = validateQuery;

const graphql = __nccwpck_require__(6155);
const gql = __nccwpck_require__(8435);

const schema = graphql.buildClientSchema(__nccwpck_require__(9694));

function validateQuery(query) {
  return graphql.validate(schema, gql(query));
}


/***/ }),

/***/ 8467:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var request = __nccwpck_require__(3758);
var universalUserAgent = __nccwpck_require__(5030);

const VERSION = "5.0.5";

function _buildMessageForResponseErrors(data) {
  return `Request failed due to following response errors:\n` + data.errors.map(e => ` - ${e.message}`).join("\n");
}
class GraphqlResponseError extends Error {
  constructor(request, headers, response) {
    super(_buildMessageForResponseErrors(response));
    this.request = request;
    this.headers = headers;
    this.response = response;
    this.name = "GraphqlResponseError";
    // Expose the errors and response data in their shorthand properties.
    this.errors = response.errors;
    this.data = response.data;
    // Maintains proper stack trace (only available on V8)
    /* istanbul ignore next */
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
  }
}

const NON_VARIABLE_OPTIONS = ["method", "baseUrl", "url", "headers", "request", "query", "mediaType"];
const FORBIDDEN_VARIABLE_OPTIONS = ["query", "method", "url"];
const GHES_V3_SUFFIX_REGEX = /\/api\/v3\/?$/;
function graphql(request, query, options) {
  if (options) {
    if (typeof query === "string" && "query" in options) {
      return Promise.reject(new Error(`[@octokit/graphql] "query" cannot be used as variable name`));
    }
    for (const key in options) {
      if (!FORBIDDEN_VARIABLE_OPTIONS.includes(key)) continue;
      return Promise.reject(new Error(`[@octokit/graphql] "${key}" cannot be used as variable name`));
    }
  }
  const parsedOptions = typeof query === "string" ? Object.assign({
    query
  }, options) : query;
  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {
    if (NON_VARIABLE_OPTIONS.includes(key)) {
      result[key] = parsedOptions[key];
      return result;
    }
    if (!result.variables) {
      result.variables = {};
    }
    result.variables[key] = parsedOptions[key];
    return result;
  }, {});
  // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix
  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451
  const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;
  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {
    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, "/api/graphql");
  }
  return request(requestOptions).then(response => {
    if (response.data.errors) {
      const headers = {};
      for (const key of Object.keys(response.headers)) {
        headers[key] = response.headers[key];
      }
      throw new GraphqlResponseError(requestOptions, headers, response.data);
    }
    return response.data.data;
  });
}

function withDefaults(request, newDefaults) {
  const newRequest = request.defaults(newDefaults);
  const newApi = (query, options) => {
    return graphql(newRequest, query, options);
  };
  return Object.assign(newApi, {
    defaults: withDefaults.bind(null, newRequest),
    endpoint: newRequest.endpoint
  });
}

const graphql$1 = withDefaults(request.request, {
  headers: {
    "user-agent": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`
  },
  method: "POST",
  url: "/graphql"
});
function withCustomRequest(customRequest) {
  return withDefaults(customRequest, {
    method: "POST",
    url: "/graphql"
  });
}

exports.GraphqlResponseError = GraphqlResponseError;
exports.graphql = graphql$1;
exports.withCustomRequest = withCustomRequest;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 9723:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var isPlainObject = __nccwpck_require__(3287);
var universalUserAgent = __nccwpck_require__(5030);

function lowercaseKeys(object) {
  if (!object) {
    return {};
  }
  return Object.keys(object).reduce((newObj, key) => {
    newObj[key.toLowerCase()] = object[key];
    return newObj;
  }, {});
}

function mergeDeep(defaults, options) {
  const result = Object.assign({}, defaults);
  Object.keys(options).forEach(key => {
    if (isPlainObject.isPlainObject(options[key])) {
      if (!(key in defaults)) Object.assign(result, {
        [key]: options[key]
      });else result[key] = mergeDeep(defaults[key], options[key]);
    } else {
      Object.assign(result, {
        [key]: options[key]
      });
    }
  });
  return result;
}

function removeUndefinedProperties(obj) {
  for (const key in obj) {
    if (obj[key] === undefined) {
      delete obj[key];
    }
  }
  return obj;
}

function merge(defaults, route, options) {
  if (typeof route === "string") {
    let [method, url] = route.split(" ");
    options = Object.assign(url ? {
      method,
      url
    } : {
      url: method
    }, options);
  } else {
    options = Object.assign({}, route);
  }
  // lowercase header names before merging with defaults to avoid duplicates
  options.headers = lowercaseKeys(options.headers);
  // remove properties with undefined values before merging
  removeUndefinedProperties(options);
  removeUndefinedProperties(options.headers);
  const mergedOptions = mergeDeep(defaults || {}, options);
  // mediaType.previews arrays are merged, instead of overwritten
  if (defaults && defaults.mediaType.previews.length) {
    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(preview => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);
  }
  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map(preview => preview.replace(/-preview/, ""));
  return mergedOptions;
}

function addQueryParameters(url, parameters) {
  const separator = /\?/.test(url) ? "&" : "?";
  const names = Object.keys(parameters);
  if (names.length === 0) {
    return url;
  }
  return url + separator + names.map(name => {
    if (name === "q") {
      return "q=" + parameters.q.split("+").map(encodeURIComponent).join("+");
    }
    return `${name}=${encodeURIComponent(parameters[name])}`;
  }).join("&");
}

const urlVariableRegex = /\{[^}]+\}/g;
function removeNonChars(variableName) {
  return variableName.replace(/^\W+|\W+$/g, "").split(/,/);
}
function extractUrlVariableNames(url) {
  const matches = url.match(urlVariableRegex);
  if (!matches) {
    return [];
  }
  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);
}

function omit(object, keysToOmit) {
  return Object.keys(object).filter(option => !keysToOmit.includes(option)).reduce((obj, key) => {
    obj[key] = object[key];
    return obj;
  }, {});
}

// Based on https://github.com/bramstein/url-template, licensed under BSD
// TODO: create separate package.
//
// Copyright (c) 2012-2014, Bram Stein
// All rights reserved.
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
//  1. Redistributions of source code must retain the above copyright
//     notice, this list of conditions and the following disclaimer.
//  2. Redistributions in binary form must reproduce the above copyright
//     notice, this list of conditions and the following disclaimer in the
//     documentation and/or other materials provided with the distribution.
//  3. The name of the author may not be used to endorse or promote products
//     derived from this software without specific prior written permission.
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR "AS IS" AND ANY EXPRESS OR IMPLIED
// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY
// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
/* istanbul ignore file */
function encodeReserved(str) {
  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {
    if (!/%[0-9A-Fa-f]/.test(part)) {
      part = encodeURI(part).replace(/%5B/g, "[").replace(/%5D/g, "]");
    }
    return part;
  }).join("");
}
function encodeUnreserved(str) {
  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {
    return "%" + c.charCodeAt(0).toString(16).toUpperCase();
  });
}
function encodeValue(operator, value, key) {
  value = operator === "+" || operator === "#" ? encodeReserved(value) : encodeUnreserved(value);
  if (key) {
    return encodeUnreserved(key) + "=" + value;
  } else {
    return value;
  }
}
function isDefined(value) {
  return value !== undefined && value !== null;
}
function isKeyOperator(operator) {
  return operator === ";" || operator === "&" || operator === "?";
}
function getValues(context, operator, key, modifier) {
  var value = context[key],
    result = [];
  if (isDefined(value) && value !== "") {
    if (typeof value === "string" || typeof value === "number" || typeof value === "boolean") {
      value = value.toString();
      if (modifier && modifier !== "*") {
        value = value.substring(0, parseInt(modifier, 10));
      }
      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
    } else {
      if (modifier === "*") {
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function (value) {
            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : ""));
          });
        } else {
          Object.keys(value).forEach(function (k) {
            if (isDefined(value[k])) {
              result.push(encodeValue(operator, value[k], k));
            }
          });
        }
      } else {
        const tmp = [];
        if (Array.isArray(value)) {
          value.filter(isDefined).forEach(function (value) {
            tmp.push(encodeValue(operator, value));
          });
        } else {
          Object.keys(value).forEach(function (k) {
            if (isDefined(value[k])) {
              tmp.push(encodeUnreserved(k));
              tmp.push(encodeValue(operator, value[k].toString()));
            }
          });
        }
        if (isKeyOperator(operator)) {
          result.push(encodeUnreserved(key) + "=" + tmp.join(","));
        } else if (tmp.length !== 0) {
          result.push(tmp.join(","));
        }
      }
    }
  } else {
    if (operator === ";") {
      if (isDefined(value)) {
        result.push(encodeUnreserved(key));
      }
    } else if (value === "" && (operator === "&" || operator === "?")) {
      result.push(encodeUnreserved(key) + "=");
    } else if (value === "") {
      result.push("");
    }
  }
  return result;
}
function parseUrl(template) {
  return {
    expand: expand.bind(null, template)
  };
}
function expand(template, context) {
  var operators = ["+", "#", ".", "/", ";", "?", "&"];
  return template.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g, function (_, expression, literal) {
    if (expression) {
      let operator = "";
      const values = [];
      if (operators.indexOf(expression.charAt(0)) !== -1) {
        operator = expression.charAt(0);
        expression = expression.substr(1);
      }
      expression.split(/,/g).forEach(function (variable) {
        var tmp = /([^:\*]*)(?::(\d+)|(\*))?/.exec(variable);
        values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));
      });
      if (operator && operator !== "+") {
        var separator = ",";
        if (operator === "?") {
          separator = "&";
        } else if (operator !== "#") {
          separator = operator;
        }
        return (values.length !== 0 ? operator : "") + values.join(separator);
      } else {
        return values.join(",");
      }
    } else {
      return encodeReserved(literal);
    }
  });
}

function parse(options) {
  // https://fetch.spec.whatwg.org/#methods
  let method = options.method.toUpperCase();
  // replace :varname with {varname} to make it RFC 6570 compatible
  let url = (options.url || "/").replace(/:([a-z]\w+)/g, "{$1}");
  let headers = Object.assign({}, options.headers);
  let body;
  let parameters = omit(options, ["method", "baseUrl", "url", "headers", "request", "mediaType"]);
  // extract variable names from URL to calculate remaining variables later
  const urlVariableNames = extractUrlVariableNames(url);
  url = parseUrl(url).expand(parameters);
  if (!/^http/.test(url)) {
    url = options.baseUrl + url;
  }
  const omittedParameters = Object.keys(options).filter(option => urlVariableNames.includes(option)).concat("baseUrl");
  const remainingParameters = omit(parameters, omittedParameters);
  const isBinaryRequest = /application\/octet-stream/i.test(headers.accept);
  if (!isBinaryRequest) {
    if (options.mediaType.format) {
      // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw
      headers.accept = headers.accept.split(/,/).map(preview => preview.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(",");
    }
    if (options.mediaType.previews.length) {
      const previewsFromAcceptHeader = headers.accept.match(/[\w-]+(?=-preview)/g) || [];
      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map(preview => {
        const format = options.mediaType.format ? `.${options.mediaType.format}` : "+json";
        return `application/vnd.github.${preview}-preview${format}`;
      }).join(",");
    }
  }
  // for GET/HEAD requests, set URL query parameters from remaining parameters
  // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters
  if (["GET", "HEAD"].includes(method)) {
    url = addQueryParameters(url, remainingParameters);
  } else {
    if ("data" in remainingParameters) {
      body = remainingParameters.data;
    } else {
      if (Object.keys(remainingParameters).length) {
        body = remainingParameters;
      }
    }
  }
  // default content-type for JSON if body is set
  if (!headers["content-type"] && typeof body !== "undefined") {
    headers["content-type"] = "application/json; charset=utf-8";
  }
  // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.
  // fetch does not allow to set `content-length` header, but we can set body to an empty string
  if (["PATCH", "PUT"].includes(method) && typeof body === "undefined") {
    body = "";
  }
  // Only return body/request keys if present
  return Object.assign({
    method,
    url,
    headers
  }, typeof body !== "undefined" ? {
    body
  } : null, options.request ? {
    request: options.request
  } : null);
}

function endpointWithDefaults(defaults, route, options) {
  return parse(merge(defaults, route, options));
}

function withDefaults(oldDefaults, newDefaults) {
  const DEFAULTS = merge(oldDefaults, newDefaults);
  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);
  return Object.assign(endpoint, {
    DEFAULTS,
    defaults: withDefaults.bind(null, DEFAULTS),
    merge: merge.bind(null, DEFAULTS),
    parse
  });
}

const VERSION = "7.0.5";

const userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`;
// DEFAULTS has all properties set that EndpointOptions has, except url.
// So we use RequestParameters and add method as additional required property.
const DEFAULTS = {
  method: "GET",
  baseUrl: "https://api.github.com",
  headers: {
    accept: "application/vnd.github.v3+json",
    "user-agent": userAgent
  },
  mediaType: {
    format: "",
    previews: []
  }
};

const endpoint = withDefaults(null, DEFAULTS);

exports.endpoint = endpoint;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 8238:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var deprecation = __nccwpck_require__(8932);
var once = _interopDefault(__nccwpck_require__(1223));

const logOnceCode = once(deprecation => console.warn(deprecation));
const logOnceHeaders = once(deprecation => console.warn(deprecation));
/**
 * Error with extra properties to help with debugging
 */
class RequestError extends Error {
  constructor(message, statusCode, options) {
    super(message);
    // Maintains proper stack trace (only available on V8)
    /* istanbul ignore next */
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }
    this.name = "HttpError";
    this.status = statusCode;
    let headers;
    if ("headers" in options && typeof options.headers !== "undefined") {
      headers = options.headers;
    }
    if ("response" in options) {
      this.response = options.response;
      headers = options.response.headers;
    }
    // redact request credentials without mutating original request options
    const requestCopy = Object.assign({}, options.request);
    if (options.request.headers.authorization) {
      requestCopy.headers = Object.assign({}, options.request.headers, {
        authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
      });
    }
    requestCopy.url = requestCopy.url
    // client_id & client_secret can be passed as URL query parameters to increase rate limit
    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications
    .replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]")
    // OAuth tokens can be passed as URL query parameters, although it is not recommended
    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header
    .replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy;
    // deprecations
    Object.defineProperty(this, "code", {
      get() {
        logOnceCode(new deprecation.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
        return statusCode;
      }
    });
    Object.defineProperty(this, "headers", {
      get() {
        logOnceHeaders(new deprecation.Deprecation("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`."));
        return headers || {};
      }
    });
  }
}

exports.RequestError = RequestError;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 3758:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var endpoint = __nccwpck_require__(9723);
var universalUserAgent = __nccwpck_require__(5030);
var isPlainObject = __nccwpck_require__(3287);
var nodeFetch = _interopDefault(__nccwpck_require__(5655));
var requestError = __nccwpck_require__(8238);

const VERSION = "6.2.3";

function getBufferResponse(response) {
  return response.arrayBuffer();
}

function fetchWrapper(requestOptions) {
  const log = requestOptions.request && requestOptions.request.log ? requestOptions.request.log : console;
  if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {
    requestOptions.body = JSON.stringify(requestOptions.body);
  }
  let headers = {};
  let status;
  let url;
  const fetch = requestOptions.request && requestOptions.request.fetch || globalThis.fetch || /* istanbul ignore next */nodeFetch;
  return fetch(requestOptions.url, Object.assign({
    method: requestOptions.method,
    body: requestOptions.body,
    headers: requestOptions.headers,
    redirect: requestOptions.redirect
  },
  // `requestOptions.request.agent` type is incompatible
  // see https://github.com/octokit/types.ts/pull/264
  requestOptions.request)).then(async response => {
    url = response.url;
    status = response.status;
    for (const keyAndValue of response.headers) {
      headers[keyAndValue[0]] = keyAndValue[1];
    }
    if ("deprecation" in headers) {
      const matches = headers.link && headers.link.match(/<([^>]+)>; rel="deprecation"/);
      const deprecationLink = matches && matches.pop();
      log.warn(`[@octokit/request] "${requestOptions.method} ${requestOptions.url}" is deprecated. It is scheduled to be removed on ${headers.sunset}${deprecationLink ? `. See ${deprecationLink}` : ""}`);
    }
    if (status === 204 || status === 205) {
      return;
    }
    // GitHub API returns 200 for HEAD requests
    if (requestOptions.method === "HEAD") {
      if (status < 400) {
        return;
      }
      throw new requestError.RequestError(response.statusText, status, {
        response: {
          url,
          status,
          headers,
          data: undefined
        },
        request: requestOptions
      });
    }
    if (status === 304) {
      throw new requestError.RequestError("Not modified", status, {
        response: {
          url,
          status,
          headers,
          data: await getResponseData(response)
        },
        request: requestOptions
      });
    }
    if (status >= 400) {
      const data = await getResponseData(response);
      const error = new requestError.RequestError(toErrorMessage(data), status, {
        response: {
          url,
          status,
          headers,
          data
        },
        request: requestOptions
      });
      throw error;
    }
    return getResponseData(response);
  }).then(data => {
    return {
      status,
      url,
      headers,
      data
    };
  }).catch(error => {
    if (error instanceof requestError.RequestError) throw error;else if (error.name === "AbortError") throw error;
    throw new requestError.RequestError(error.message, 500, {
      request: requestOptions
    });
  });
}
async function getResponseData(response) {
  const contentType = response.headers.get("content-type");
  if (/application\/json/.test(contentType)) {
    return response.json();
  }
  if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
    return response.text();
  }
  return getBufferResponse(response);
}
function toErrorMessage(data) {
  if (typeof data === "string") return data;
  // istanbul ignore else - just in case
  if ("message" in data) {
    if (Array.isArray(data.errors)) {
      return `${data.message}: ${data.errors.map(JSON.stringify).join(", ")}`;
    }
    return data.message;
  }
  // istanbul ignore next - just in case
  return `Unknown error: ${JSON.stringify(data)}`;
}

function withDefaults(oldEndpoint, newDefaults) {
  const endpoint = oldEndpoint.defaults(newDefaults);
  const newApi = function (route, parameters) {
    const endpointOptions = endpoint.merge(route, parameters);
    if (!endpointOptions.request || !endpointOptions.request.hook) {
      return fetchWrapper(endpoint.parse(endpointOptions));
    }
    const request = (route, parameters) => {
      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));
    };
    Object.assign(request, {
      endpoint,
      defaults: withDefaults.bind(null, endpoint)
    });
    return endpointOptions.request.hook(request, endpointOptions);
  };
  return Object.assign(newApi, {
    endpoint,
    defaults: withDefaults.bind(null, endpoint)
  });
}

const request = withDefaults(endpoint.endpoint, {
  headers: {
    "user-agent": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`
  }
});

exports.request = request;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 5655:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Stream = _interopDefault(__nccwpck_require__(2413));
var http = _interopDefault(__nccwpck_require__(8605));
var Url = _interopDefault(__nccwpck_require__(8835));
var whatwgUrl = _interopDefault(__nccwpck_require__(8665));
var https = _interopDefault(__nccwpck_require__(7211));
var zlib = _interopDefault(__nccwpck_require__(8761));

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = __nccwpck_require__(2877).convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
		if (!res) {
			res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
			if (res) {
				res.pop(); // drop last quote
			}
		}

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');
const URL = Url.URL || whatwgUrl.URL;

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

/**
 * Wrapper around `new URL` to handle arbitrary URLs
 *
 * @param  {string} urlStr
 * @return {void}
 */
function parseURL(urlStr) {
	/*
 	Check whether the URL is absolute or not
 		Scheme: https://tools.ietf.org/html/rfc3986#section-3.1
 	Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3
 */
	if (/^[a-zA-Z][a-zA-Z\d+\-.]*:/.exec(urlStr)) {
		urlStr = new URL(urlStr).toString();
	}

	// Fallback to old implementation for arbitrary URLs
	return parse_url(urlStr);
}

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parseURL(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parseURL(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parseURL(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

const URL$1 = Url.URL || whatwgUrl.URL;

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;

const isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {
	const orig = new URL$1(original).hostname;
	const dest = new URL$1(destination).hostname;

	return orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);
};

/**
 * isSameProtocol reports whether the two provided URLs use the same protocol.
 *
 * Both domains must already be in canonical form.
 * @param {string|URL} original
 * @param {string|URL} destination
 */
const isSameProtocol = function isSameProtocol(destination, original) {
	const orig = new URL$1(original).protocol;
	const dest = new URL$1(destination).protocol;

	return orig === dest;
};

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				destroyStream(request.body, error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));

			if (response && response.body) {
				destroyStream(response.body, err);
			}

			finalize();
		});

		fixResponseChunkedTransferBadEnding(req, function (err) {
			if (signal && signal.aborted) {
				return;
			}

			if (response && response.body) {
				destroyStream(response.body, err);
			}
		});

		/* c8 ignore next 18 */
		if (parseInt(process.version.substring(1)) < 14) {
			// Before Node.js 14, pipeline() does not fully support async iterators and does not always
			// properly handle when the socket close/end events are out of order.
			req.on('socket', function (s) {
				s.addListener('close', function (hadError) {
					// if a data listener is still present we didn't end cleanly
					const hasDataListener = s.listenerCount('data') > 0;

					// if end happened before close but the socket didn't emit an error, do it now
					if (response && hasDataListener && !hadError && !(signal && signal.aborted)) {
						const err = new Error('Premature close');
						err.code = 'ERR_STREAM_PREMATURE_CLOSE';
						response.body.emit('error', err);
					}
				});
			});
		}

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				let locationURL = null;
				try {
					locationURL = location === null ? null : new URL$1(location, request.url).toString();
				} catch (err) {
					// error here can only be invalid URL in Location: header
					// do not throw when options.redirect == manual
					// let the user extract the errorneous redirect URL
					if (request.redirect !== 'manual') {
						reject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));
						finalize();
						return;
					}
				}

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout,
							size: request.size
						};

						if (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {
							for (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {
								requestOpts.headers.delete(name);
							}
						}

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				raw.on('end', function () {
					// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.
					if (!response) {
						response = new Response(body, response_options);
						resolve(response);
					}
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
function fixResponseChunkedTransferBadEnding(request, errorCallback) {
	let socket;

	request.on('socket', function (s) {
		socket = s;
	});

	request.on('response', function (response) {
		const headers = response.headers;

		if (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {
			response.once('close', function (hadError) {
				// if a data listener is still present we didn't end cleanly
				const hasDataListener = socket.listenerCount('data') > 0;

				if (hasDataListener && !hadError) {
					const err = new Error('Premature close');
					err.code = 'ERR_STREAM_PREMATURE_CLOSE';
					errorCallback(err);
				}
			});
		}
	});
}

function destroyStream(stream, err) {
	if (stream.destroy) {
		stream.destroy(err);
	} else {
		// node < 8
		stream.emit('error', err);
		stream.end();
	}
}

/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

module.exports = exports = fetch;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.default = exports;
exports.Headers = Headers;
exports.Request = Request;
exports.Response = Response;
exports.FetchError = FetchError;


/***/ }),

/***/ 4193:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const VERSION = "1.1.2";

/**
 * Some “list” response that can be paginated have a different response structure
 *
 * They have a `total_count` key in the response (search also has `incomplete_results`,
 * /installation/repositories also has `repository_selection`), as well as a key with
 * the list of the items which name varies from endpoint to endpoint:
 *
 * - https://developer.github.com/v3/search/#example (key `items`)
 * - https://developer.github.com/v3/checks/runs/#response-3 (key: `check_runs`)
 * - https://developer.github.com/v3/checks/suites/#response-1 (key: `check_suites`)
 * - https://developer.github.com/v3/apps/installations/#list-repositories (key: `repositories`)
 * - https://developer.github.com/v3/apps/installations/#list-installations-for-a-user (key `installations`)
 *
 * Octokit normalizes these responses so that paginated results are always returned following
 * the same structure. One challenge is that if the list response has only one page, no Link
 * header is provided, so this header alone is not sufficient to check wether a response is
 * paginated or not. For the exceptions with the namespace, a fallback check for the route
 * paths has to be added in order to normalize the response. We cannot check for the total_count
 * property because it also exists in the response of Get the combined status for a specific ref.
 */
const REGEX = [/^\/search\//, /^\/repos\/[^/]+\/[^/]+\/commits\/[^/]+\/(check-runs|check-suites)([^/]|$)/, /^\/installation\/repositories([^/]|$)/, /^\/user\/installations([^/]|$)/, /^\/repos\/[^/]+\/[^/]+\/actions\/secrets([^/]|$)/, /^\/repos\/[^/]+\/[^/]+\/actions\/workflows(\/[^/]+\/runs)?([^/]|$)/, /^\/repos\/[^/]+\/[^/]+\/actions\/runs(\/[^/]+\/(artifacts|jobs))?([^/]|$)/];
function normalizePaginatedListResponse(octokit, url, response) {
  const path = url.replace(octokit.request.endpoint.DEFAULTS.baseUrl, "");
  const responseNeedsNormalization = REGEX.find(regex => regex.test(path));
  if (!responseNeedsNormalization) return; // keep the additional properties intact as there is currently no other way
  // to retrieve the same information.

  const incompleteResults = response.data.incomplete_results;
  const repositorySelection = response.data.repository_selection;
  const totalCount = response.data.total_count;
  delete response.data.incomplete_results;
  delete response.data.repository_selection;
  delete response.data.total_count;
  const namespaceKey = Object.keys(response.data)[0];
  const data = response.data[namespaceKey];
  response.data = data;

  if (typeof incompleteResults !== "undefined") {
    response.data.incomplete_results = incompleteResults;
  }

  if (typeof repositorySelection !== "undefined") {
    response.data.repository_selection = repositorySelection;
  }

  response.data.total_count = totalCount;
  Object.defineProperty(response.data, namespaceKey, {
    get() {
      octokit.log.warn(`[@octokit/paginate-rest] "response.data.${namespaceKey}" is deprecated for "GET ${path}". Get the results directly from "response.data"`);
      return Array.from(data);
    }

  });
}

function iterator(octokit, route, parameters) {
  const options = octokit.request.endpoint(route, parameters);
  const method = options.method;
  const headers = options.headers;
  let url = options.url;
  return {
    [Symbol.asyncIterator]: () => ({
      next() {
        if (!url) {
          return Promise.resolve({
            done: true
          });
        }

        return octokit.request({
          method,
          url,
          headers
        }).then(response => {
          normalizePaginatedListResponse(octokit, url, response); // `response.headers.link` format:
          // '<https://api.github.com/users/aseemk/followers?page=2>; rel="next", <https://api.github.com/users/aseemk/followers?page=2>; rel="last"'
          // sets `url` to undefined if "next" URL is not present or `link` header is not set

          url = ((response.headers.link || "").match(/<([^>]+)>;\s*rel="next"/) || [])[1];
          return {
            value: response
          };
        });
      }

    })
  };
}

function paginate(octokit, route, parameters, mapFn) {
  if (typeof parameters === "function") {
    mapFn = parameters;
    parameters = undefined;
  }

  return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);
}

function gather(octokit, results, iterator, mapFn) {
  return iterator.next().then(result => {
    if (result.done) {
      return results;
    }

    let earlyExit = false;

    function done() {
      earlyExit = true;
    }

    results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);

    if (earlyExit) {
      return results;
    }

    return gather(octokit, results, iterator, mapFn);
  });
}

/**
 * @param octokit Octokit instance
 * @param options Options passed to Octokit constructor
 */

function paginateRest(octokit) {
  return {
    paginate: Object.assign(paginate.bind(null, octokit), {
      iterator: iterator.bind(null, octokit)
    })
  };
}
paginateRest.VERSION = VERSION;

exports.paginateRest = paginateRest;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 8883:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

const VERSION = "1.0.3";

/**
 * @param octokit Octokit instance
 * @param options Options passed to Octokit constructor
 */

function requestLog(octokit) {
  octokit.hook.wrap("request", (request, options) => {
    octokit.log.debug("request", options);
    const start = Date.now();
    const requestOptions = octokit.request.endpoint.parse(options);
    const path = requestOptions.url.replace(options.baseUrl, "");
    return request(options).then(response => {
      octokit.log.info(`${requestOptions.method} ${path} - ${response.status} in ${Date.now() - start}ms`);
      return response;
    }).catch(error => {
      octokit.log.info(`${requestOptions.method} ${path} - ${error.status} in ${Date.now() - start}ms`);
      throw error;
    });
  });
}
requestLog.VERSION = VERSION;

exports.requestLog = requestLog;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 3044:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

var deprecation = __nccwpck_require__(8932);

var endpointsByScope = {
  actions: {
    cancelWorkflowRun: {
      method: "POST",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        run_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runs/:run_id/cancel"
    },
    createOrUpdateSecretForRepo: {
      method: "PUT",
      params: {
        encrypted_value: {
          type: "string"
        },
        key_id: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/secrets/:name"
    },
    createRegistrationToken: {
      method: "POST",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/runners/registration-token"
    },
    createRemoveToken: {
      method: "POST",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/runners/remove-token"
    },
    deleteArtifact: {
      method: "DELETE",
      params: {
        artifact_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/artifacts/:artifact_id"
    },
    deleteSecretFromRepo: {
      method: "DELETE",
      params: {
        name: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/secrets/:name"
    },
    downloadArtifact: {
      method: "GET",
      params: {
        archive_format: {
          required: true,
          type: "string"
        },
        artifact_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/artifacts/:artifact_id/:archive_format"
    },
    getArtifact: {
      method: "GET",
      params: {
        artifact_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/artifacts/:artifact_id"
    },
    getPublicKey: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/secrets/public-key"
    },
    getSecret: {
      method: "GET",
      params: {
        name: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/secrets/:name"
    },
    getSelfHostedRunner: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        runner_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runners/:runner_id"
    },
    getWorkflow: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        workflow_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/workflows/:workflow_id"
    },
    getWorkflowJob: {
      method: "GET",
      params: {
        job_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/jobs/:job_id"
    },
    getWorkflowRun: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        run_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runs/:run_id"
    },
    listDownloadsForSelfHostedRunnerApplication: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/runners/downloads"
    },
    listJobsForWorkflowRun: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        run_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runs/:run_id/jobs"
    },
    listRepoWorkflowRuns: {
      method: "GET",
      params: {
        actor: {
          type: "string"
        },
        branch: {
          type: "string"
        },
        event: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        status: {
          enum: ["completed", "status", "conclusion"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/runs"
    },
    listRepoWorkflows: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/workflows"
    },
    listSecretsForRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/secrets"
    },
    listSelfHostedRunnersForRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/runners"
    },
    listWorkflowJobLogs: {
      method: "GET",
      params: {
        job_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/actions/jobs/:job_id/logs"
    },
    listWorkflowRunArtifacts: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        run_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runs/:run_id/artifacts"
    },
    listWorkflowRunLogs: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        run_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runs/:run_id/logs"
    },
    listWorkflowRuns: {
      method: "GET",
      params: {
        actor: {
          type: "string"
        },
        branch: {
          type: "string"
        },
        event: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        status: {
          enum: ["completed", "status", "conclusion"],
          type: "string"
        },
        workflow_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/workflows/:workflow_id/runs"
    },
    reRunWorkflow: {
      method: "POST",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        run_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runs/:run_id/rerun"
    },
    removeSelfHostedRunner: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        runner_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/actions/runners/:runner_id"
    }
  },
  activity: {
    checkStarringRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/user/starred/:owner/:repo"
    },
    deleteRepoSubscription: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/subscription"
    },
    deleteThreadSubscription: {
      method: "DELETE",
      params: {
        thread_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/notifications/threads/:thread_id/subscription"
    },
    getRepoSubscription: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/subscription"
    },
    getThread: {
      method: "GET",
      params: {
        thread_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/notifications/threads/:thread_id"
    },
    getThreadSubscription: {
      method: "GET",
      params: {
        thread_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/notifications/threads/:thread_id/subscription"
    },
    listEventsForOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/events/orgs/:org"
    },
    listEventsForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/events"
    },
    listFeeds: {
      method: "GET",
      params: {},
      url: "/feeds"
    },
    listNotifications: {
      method: "GET",
      params: {
        all: {
          type: "boolean"
        },
        before: {
          type: "string"
        },
        page: {
          type: "integer"
        },
        participating: {
          type: "boolean"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        }
      },
      url: "/notifications"
    },
    listNotificationsForRepo: {
      method: "GET",
      params: {
        all: {
          type: "boolean"
        },
        before: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        participating: {
          type: "boolean"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        since: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/notifications"
    },
    listPublicEvents: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/events"
    },
    listPublicEventsForOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/events"
    },
    listPublicEventsForRepoNetwork: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/networks/:owner/:repo/events"
    },
    listPublicEventsForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/events/public"
    },
    listReceivedEventsForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/received_events"
    },
    listReceivedPublicEventsForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/received_events/public"
    },
    listRepoEvents: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/events"
    },
    listReposStarredByAuthenticatedUser: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        }
      },
      url: "/user/starred"
    },
    listReposStarredByUser: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/starred"
    },
    listReposWatchedByUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/subscriptions"
    },
    listStargazersForRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/stargazers"
    },
    listWatchedReposForAuthenticatedUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/subscriptions"
    },
    listWatchersForRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/subscribers"
    },
    markAsRead: {
      method: "PUT",
      params: {
        last_read_at: {
          type: "string"
        }
      },
      url: "/notifications"
    },
    markNotificationsAsReadForRepo: {
      method: "PUT",
      params: {
        last_read_at: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/notifications"
    },
    markThreadAsRead: {
      method: "PATCH",
      params: {
        thread_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/notifications/threads/:thread_id"
    },
    setRepoSubscription: {
      method: "PUT",
      params: {
        ignored: {
          type: "boolean"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        subscribed: {
          type: "boolean"
        }
      },
      url: "/repos/:owner/:repo/subscription"
    },
    setThreadSubscription: {
      method: "PUT",
      params: {
        ignored: {
          type: "boolean"
        },
        thread_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/notifications/threads/:thread_id/subscription"
    },
    starRepo: {
      method: "PUT",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/user/starred/:owner/:repo"
    },
    unstarRepo: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/user/starred/:owner/:repo"
    }
  },
  apps: {
    addRepoToInstallation: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "PUT",
      params: {
        installation_id: {
          required: true,
          type: "integer"
        },
        repository_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/installations/:installation_id/repositories/:repository_id"
    },
    checkAccountIsAssociatedWithAny: {
      method: "GET",
      params: {
        account_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/marketplace_listing/accounts/:account_id"
    },
    checkAccountIsAssociatedWithAnyStubbed: {
      method: "GET",
      params: {
        account_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/marketplace_listing/stubbed/accounts/:account_id"
    },
    checkAuthorization: {
      deprecated: "octokit.apps.checkAuthorization() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#check-an-authorization",
      method: "GET",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/tokens/:access_token"
    },
    checkToken: {
      headers: {
        accept: "application/vnd.github.doctor-strange-preview+json"
      },
      method: "POST",
      params: {
        access_token: {
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/token"
    },
    createContentAttachment: {
      headers: {
        accept: "application/vnd.github.corsair-preview+json"
      },
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        content_reference_id: {
          required: true,
          type: "integer"
        },
        title: {
          required: true,
          type: "string"
        }
      },
      url: "/content_references/:content_reference_id/attachments"
    },
    createFromManifest: {
      headers: {
        accept: "application/vnd.github.fury-preview+json"
      },
      method: "POST",
      params: {
        code: {
          required: true,
          type: "string"
        }
      },
      url: "/app-manifests/:code/conversions"
    },
    createInstallationToken: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "POST",
      params: {
        installation_id: {
          required: true,
          type: "integer"
        },
        permissions: {
          type: "object"
        },
        repository_ids: {
          type: "integer[]"
        }
      },
      url: "/app/installations/:installation_id/access_tokens"
    },
    deleteAuthorization: {
      headers: {
        accept: "application/vnd.github.doctor-strange-preview+json"
      },
      method: "DELETE",
      params: {
        access_token: {
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/grant"
    },
    deleteInstallation: {
      headers: {
        accept: "application/vnd.github.gambit-preview+json,application/vnd.github.machine-man-preview+json"
      },
      method: "DELETE",
      params: {
        installation_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/app/installations/:installation_id"
    },
    deleteToken: {
      headers: {
        accept: "application/vnd.github.doctor-strange-preview+json"
      },
      method: "DELETE",
      params: {
        access_token: {
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/token"
    },
    findOrgInstallation: {
      deprecated: "octokit.apps.findOrgInstallation() has been renamed to octokit.apps.getOrgInstallation() (2019-04-10)",
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/installation"
    },
    findRepoInstallation: {
      deprecated: "octokit.apps.findRepoInstallation() has been renamed to octokit.apps.getRepoInstallation() (2019-04-10)",
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/installation"
    },
    findUserInstallation: {
      deprecated: "octokit.apps.findUserInstallation() has been renamed to octokit.apps.getUserInstallation() (2019-04-10)",
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/installation"
    },
    getAuthenticated: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {},
      url: "/app"
    },
    getBySlug: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        app_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/apps/:app_slug"
    },
    getInstallation: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        installation_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/app/installations/:installation_id"
    },
    getOrgInstallation: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/installation"
    },
    getRepoInstallation: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/installation"
    },
    getUserInstallation: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/installation"
    },
    listAccountsUserOrOrgOnPlan: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        plan_id: {
          required: true,
          type: "integer"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        }
      },
      url: "/marketplace_listing/plans/:plan_id/accounts"
    },
    listAccountsUserOrOrgOnPlanStubbed: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        plan_id: {
          required: true,
          type: "integer"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        }
      },
      url: "/marketplace_listing/stubbed/plans/:plan_id/accounts"
    },
    listInstallationReposForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        installation_id: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/installations/:installation_id/repositories"
    },
    listInstallations: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/app/installations"
    },
    listInstallationsForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/installations"
    },
    listMarketplacePurchasesForAuthenticatedUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/marketplace_purchases"
    },
    listMarketplacePurchasesForAuthenticatedUserStubbed: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/marketplace_purchases/stubbed"
    },
    listPlans: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/marketplace_listing/plans"
    },
    listPlansStubbed: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/marketplace_listing/stubbed/plans"
    },
    listRepos: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/installation/repositories"
    },
    removeRepoFromInstallation: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "DELETE",
      params: {
        installation_id: {
          required: true,
          type: "integer"
        },
        repository_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/installations/:installation_id/repositories/:repository_id"
    },
    resetAuthorization: {
      deprecated: "octokit.apps.resetAuthorization() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#reset-an-authorization",
      method: "POST",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/tokens/:access_token"
    },
    resetToken: {
      headers: {
        accept: "application/vnd.github.doctor-strange-preview+json"
      },
      method: "PATCH",
      params: {
        access_token: {
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/token"
    },
    revokeAuthorizationForApplication: {
      deprecated: "octokit.apps.revokeAuthorizationForApplication() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#revoke-an-authorization-for-an-application",
      method: "DELETE",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/tokens/:access_token"
    },
    revokeGrantForApplication: {
      deprecated: "octokit.apps.revokeGrantForApplication() is deprecated, see https://developer.github.com/v3/apps/oauth_applications/#revoke-a-grant-for-an-application",
      method: "DELETE",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/grants/:access_token"
    },
    revokeInstallationToken: {
      headers: {
        accept: "application/vnd.github.gambit-preview+json"
      },
      method: "DELETE",
      params: {},
      url: "/installation/token"
    }
  },
  checks: {
    create: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "POST",
      params: {
        actions: {
          type: "object[]"
        },
        "actions[].description": {
          required: true,
          type: "string"
        },
        "actions[].identifier": {
          required: true,
          type: "string"
        },
        "actions[].label": {
          required: true,
          type: "string"
        },
        completed_at: {
          type: "string"
        },
        conclusion: {
          enum: ["success", "failure", "neutral", "cancelled", "timed_out", "action_required"],
          type: "string"
        },
        details_url: {
          type: "string"
        },
        external_id: {
          type: "string"
        },
        head_sha: {
          required: true,
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        output: {
          type: "object"
        },
        "output.annotations": {
          type: "object[]"
        },
        "output.annotations[].annotation_level": {
          enum: ["notice", "warning", "failure"],
          required: true,
          type: "string"
        },
        "output.annotations[].end_column": {
          type: "integer"
        },
        "output.annotations[].end_line": {
          required: true,
          type: "integer"
        },
        "output.annotations[].message": {
          required: true,
          type: "string"
        },
        "output.annotations[].path": {
          required: true,
          type: "string"
        },
        "output.annotations[].raw_details": {
          type: "string"
        },
        "output.annotations[].start_column": {
          type: "integer"
        },
        "output.annotations[].start_line": {
          required: true,
          type: "integer"
        },
        "output.annotations[].title": {
          type: "string"
        },
        "output.images": {
          type: "object[]"
        },
        "output.images[].alt": {
          required: true,
          type: "string"
        },
        "output.images[].caption": {
          type: "string"
        },
        "output.images[].image_url": {
          required: true,
          type: "string"
        },
        "output.summary": {
          required: true,
          type: "string"
        },
        "output.text": {
          type: "string"
        },
        "output.title": {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        started_at: {
          type: "string"
        },
        status: {
          enum: ["queued", "in_progress", "completed"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-runs"
    },
    createSuite: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "POST",
      params: {
        head_sha: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-suites"
    },
    get: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "GET",
      params: {
        check_run_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-runs/:check_run_id"
    },
    getSuite: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "GET",
      params: {
        check_suite_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-suites/:check_suite_id"
    },
    listAnnotations: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "GET",
      params: {
        check_run_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-runs/:check_run_id/annotations"
    },
    listForRef: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "GET",
      params: {
        check_name: {
          type: "string"
        },
        filter: {
          enum: ["latest", "all"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        status: {
          enum: ["queued", "in_progress", "completed"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:ref/check-runs"
    },
    listForSuite: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "GET",
      params: {
        check_name: {
          type: "string"
        },
        check_suite_id: {
          required: true,
          type: "integer"
        },
        filter: {
          enum: ["latest", "all"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        status: {
          enum: ["queued", "in_progress", "completed"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-suites/:check_suite_id/check-runs"
    },
    listSuitesForRef: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "GET",
      params: {
        app_id: {
          type: "integer"
        },
        check_name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:ref/check-suites"
    },
    rerequestSuite: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "POST",
      params: {
        check_suite_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-suites/:check_suite_id/rerequest"
    },
    setSuitesPreferences: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "PATCH",
      params: {
        auto_trigger_checks: {
          type: "object[]"
        },
        "auto_trigger_checks[].app_id": {
          required: true,
          type: "integer"
        },
        "auto_trigger_checks[].setting": {
          required: true,
          type: "boolean"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-suites/preferences"
    },
    update: {
      headers: {
        accept: "application/vnd.github.antiope-preview+json"
      },
      method: "PATCH",
      params: {
        actions: {
          type: "object[]"
        },
        "actions[].description": {
          required: true,
          type: "string"
        },
        "actions[].identifier": {
          required: true,
          type: "string"
        },
        "actions[].label": {
          required: true,
          type: "string"
        },
        check_run_id: {
          required: true,
          type: "integer"
        },
        completed_at: {
          type: "string"
        },
        conclusion: {
          enum: ["success", "failure", "neutral", "cancelled", "timed_out", "action_required"],
          type: "string"
        },
        details_url: {
          type: "string"
        },
        external_id: {
          type: "string"
        },
        name: {
          type: "string"
        },
        output: {
          type: "object"
        },
        "output.annotations": {
          type: "object[]"
        },
        "output.annotations[].annotation_level": {
          enum: ["notice", "warning", "failure"],
          required: true,
          type: "string"
        },
        "output.annotations[].end_column": {
          type: "integer"
        },
        "output.annotations[].end_line": {
          required: true,
          type: "integer"
        },
        "output.annotations[].message": {
          required: true,
          type: "string"
        },
        "output.annotations[].path": {
          required: true,
          type: "string"
        },
        "output.annotations[].raw_details": {
          type: "string"
        },
        "output.annotations[].start_column": {
          type: "integer"
        },
        "output.annotations[].start_line": {
          required: true,
          type: "integer"
        },
        "output.annotations[].title": {
          type: "string"
        },
        "output.images": {
          type: "object[]"
        },
        "output.images[].alt": {
          required: true,
          type: "string"
        },
        "output.images[].caption": {
          type: "string"
        },
        "output.images[].image_url": {
          required: true,
          type: "string"
        },
        "output.summary": {
          required: true,
          type: "string"
        },
        "output.text": {
          type: "string"
        },
        "output.title": {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        started_at: {
          type: "string"
        },
        status: {
          enum: ["queued", "in_progress", "completed"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/check-runs/:check_run_id"
    }
  },
  codesOfConduct: {
    getConductCode: {
      headers: {
        accept: "application/vnd.github.scarlet-witch-preview+json"
      },
      method: "GET",
      params: {
        key: {
          required: true,
          type: "string"
        }
      },
      url: "/codes_of_conduct/:key"
    },
    getForRepo: {
      headers: {
        accept: "application/vnd.github.scarlet-witch-preview+json"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/community/code_of_conduct"
    },
    listConductCodes: {
      headers: {
        accept: "application/vnd.github.scarlet-witch-preview+json"
      },
      method: "GET",
      params: {},
      url: "/codes_of_conduct"
    }
  },
  emojis: {
    get: {
      method: "GET",
      params: {},
      url: "/emojis"
    }
  },
  gists: {
    checkIsStarred: {
      method: "GET",
      params: {
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/star"
    },
    create: {
      method: "POST",
      params: {
        description: {
          type: "string"
        },
        files: {
          required: true,
          type: "object"
        },
        "files.content": {
          type: "string"
        },
        public: {
          type: "boolean"
        }
      },
      url: "/gists"
    },
    createComment: {
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/comments"
    },
    delete: {
      method: "DELETE",
      params: {
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id"
    },
    deleteComment: {
      method: "DELETE",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/comments/:comment_id"
    },
    fork: {
      method: "POST",
      params: {
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/forks"
    },
    get: {
      method: "GET",
      params: {
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id"
    },
    getComment: {
      method: "GET",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/comments/:comment_id"
    },
    getRevision: {
      method: "GET",
      params: {
        gist_id: {
          required: true,
          type: "string"
        },
        sha: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/:sha"
    },
    list: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        }
      },
      url: "/gists"
    },
    listComments: {
      method: "GET",
      params: {
        gist_id: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/gists/:gist_id/comments"
    },
    listCommits: {
      method: "GET",
      params: {
        gist_id: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/gists/:gist_id/commits"
    },
    listForks: {
      method: "GET",
      params: {
        gist_id: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/gists/:gist_id/forks"
    },
    listPublic: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        }
      },
      url: "/gists/public"
    },
    listPublicForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/gists"
    },
    listStarred: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        }
      },
      url: "/gists/starred"
    },
    star: {
      method: "PUT",
      params: {
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/star"
    },
    unstar: {
      method: "DELETE",
      params: {
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/star"
    },
    update: {
      method: "PATCH",
      params: {
        description: {
          type: "string"
        },
        files: {
          type: "object"
        },
        "files.content": {
          type: "string"
        },
        "files.filename": {
          type: "string"
        },
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id"
    },
    updateComment: {
      method: "PATCH",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_id: {
          required: true,
          type: "integer"
        },
        gist_id: {
          required: true,
          type: "string"
        }
      },
      url: "/gists/:gist_id/comments/:comment_id"
    }
  },
  git: {
    createBlob: {
      method: "POST",
      params: {
        content: {
          required: true,
          type: "string"
        },
        encoding: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/blobs"
    },
    createCommit: {
      method: "POST",
      params: {
        author: {
          type: "object"
        },
        "author.date": {
          type: "string"
        },
        "author.email": {
          type: "string"
        },
        "author.name": {
          type: "string"
        },
        committer: {
          type: "object"
        },
        "committer.date": {
          type: "string"
        },
        "committer.email": {
          type: "string"
        },
        "committer.name": {
          type: "string"
        },
        message: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        parents: {
          required: true,
          type: "string[]"
        },
        repo: {
          required: true,
          type: "string"
        },
        signature: {
          type: "string"
        },
        tree: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/commits"
    },
    createRef: {
      method: "POST",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/refs"
    },
    createTag: {
      method: "POST",
      params: {
        message: {
          required: true,
          type: "string"
        },
        object: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        tag: {
          required: true,
          type: "string"
        },
        tagger: {
          type: "object"
        },
        "tagger.date": {
          type: "string"
        },
        "tagger.email": {
          type: "string"
        },
        "tagger.name": {
          type: "string"
        },
        type: {
          enum: ["commit", "tree", "blob"],
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/tags"
    },
    createTree: {
      method: "POST",
      params: {
        base_tree: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        tree: {
          required: true,
          type: "object[]"
        },
        "tree[].content": {
          type: "string"
        },
        "tree[].mode": {
          enum: ["100644", "100755", "040000", "160000", "120000"],
          type: "string"
        },
        "tree[].path": {
          type: "string"
        },
        "tree[].sha": {
          allowNull: true,
          type: "string"
        },
        "tree[].type": {
          enum: ["blob", "tree", "commit"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/trees"
    },
    deleteRef: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/refs/:ref"
    },
    getBlob: {
      method: "GET",
      params: {
        file_sha: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/blobs/:file_sha"
    },
    getCommit: {
      method: "GET",
      params: {
        commit_sha: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/commits/:commit_sha"
    },
    getRef: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/ref/:ref"
    },
    getTag: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        tag_sha: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/tags/:tag_sha"
    },
    getTree: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        recursive: {
          enum: ["1"],
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        tree_sha: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/trees/:tree_sha"
    },
    listMatchingRefs: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/matching-refs/:ref"
    },
    listRefs: {
      method: "GET",
      params: {
        namespace: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/refs/:namespace"
    },
    updateRef: {
      method: "PATCH",
      params: {
        force: {
          type: "boolean"
        },
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/git/refs/:ref"
    }
  },
  gitignore: {
    getTemplate: {
      method: "GET",
      params: {
        name: {
          required: true,
          type: "string"
        }
      },
      url: "/gitignore/templates/:name"
    },
    listTemplates: {
      method: "GET",
      params: {},
      url: "/gitignore/templates"
    }
  },
  interactions: {
    addOrUpdateRestrictionsForOrg: {
      headers: {
        accept: "application/vnd.github.sombra-preview+json"
      },
      method: "PUT",
      params: {
        limit: {
          enum: ["existing_users", "contributors_only", "collaborators_only"],
          required: true,
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/interaction-limits"
    },
    addOrUpdateRestrictionsForRepo: {
      headers: {
        accept: "application/vnd.github.sombra-preview+json"
      },
      method: "PUT",
      params: {
        limit: {
          enum: ["existing_users", "contributors_only", "collaborators_only"],
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/interaction-limits"
    },
    getRestrictionsForOrg: {
      headers: {
        accept: "application/vnd.github.sombra-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/interaction-limits"
    },
    getRestrictionsForRepo: {
      headers: {
        accept: "application/vnd.github.sombra-preview+json"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/interaction-limits"
    },
    removeRestrictionsForOrg: {
      headers: {
        accept: "application/vnd.github.sombra-preview+json"
      },
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/interaction-limits"
    },
    removeRestrictionsForRepo: {
      headers: {
        accept: "application/vnd.github.sombra-preview+json"
      },
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/interaction-limits"
    }
  },
  issues: {
    addAssignees: {
      method: "POST",
      params: {
        assignees: {
          type: "string[]"
        },
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/assignees"
    },
    addLabels: {
      method: "POST",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        labels: {
          required: true,
          type: "string[]"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/labels"
    },
    checkAssignee: {
      method: "GET",
      params: {
        assignee: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/assignees/:assignee"
    },
    create: {
      method: "POST",
      params: {
        assignee: {
          type: "string"
        },
        assignees: {
          type: "string[]"
        },
        body: {
          type: "string"
        },
        labels: {
          type: "string[]"
        },
        milestone: {
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        title: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues"
    },
    createComment: {
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/comments"
    },
    createLabel: {
      method: "POST",
      params: {
        color: {
          required: true,
          type: "string"
        },
        description: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/labels"
    },
    createMilestone: {
      method: "POST",
      params: {
        description: {
          type: "string"
        },
        due_on: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["open", "closed"],
          type: "string"
        },
        title: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/milestones"
    },
    deleteComment: {
      method: "DELETE",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    deleteLabel: {
      method: "DELETE",
      params: {
        name: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/labels/:name"
    },
    deleteMilestone: {
      method: "DELETE",
      params: {
        milestone_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "milestone_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/milestones/:milestone_number"
    },
    get: {
      method: "GET",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number"
    },
    getComment: {
      method: "GET",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    getEvent: {
      method: "GET",
      params: {
        event_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/events/:event_id"
    },
    getLabel: {
      method: "GET",
      params: {
        name: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/labels/:name"
    },
    getMilestone: {
      method: "GET",
      params: {
        milestone_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "milestone_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/milestones/:milestone_number"
    },
    list: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        filter: {
          enum: ["assigned", "created", "mentioned", "subscribed", "all"],
          type: "string"
        },
        labels: {
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        },
        sort: {
          enum: ["created", "updated", "comments"],
          type: "string"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/issues"
    },
    listAssignees: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/assignees"
    },
    listComments: {
      method: "GET",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        since: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/comments"
    },
    listCommentsForRepo: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        since: {
          type: "string"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/comments"
    },
    listEvents: {
      method: "GET",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/events"
    },
    listEventsForRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/events"
    },
    listEventsForTimeline: {
      headers: {
        accept: "application/vnd.github.mockingbird-preview+json"
      },
      method: "GET",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/timeline"
    },
    listForAuthenticatedUser: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        filter: {
          enum: ["assigned", "created", "mentioned", "subscribed", "all"],
          type: "string"
        },
        labels: {
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        },
        sort: {
          enum: ["created", "updated", "comments"],
          type: "string"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/user/issues"
    },
    listForOrg: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        filter: {
          enum: ["assigned", "created", "mentioned", "subscribed", "all"],
          type: "string"
        },
        labels: {
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        },
        sort: {
          enum: ["created", "updated", "comments"],
          type: "string"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/orgs/:org/issues"
    },
    listForRepo: {
      method: "GET",
      params: {
        assignee: {
          type: "string"
        },
        creator: {
          type: "string"
        },
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        labels: {
          type: "string"
        },
        mentioned: {
          type: "string"
        },
        milestone: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        since: {
          type: "string"
        },
        sort: {
          enum: ["created", "updated", "comments"],
          type: "string"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues"
    },
    listLabelsForMilestone: {
      method: "GET",
      params: {
        milestone_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "milestone_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/milestones/:milestone_number/labels"
    },
    listLabelsForRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/labels"
    },
    listLabelsOnIssue: {
      method: "GET",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/labels"
    },
    listMilestonesForRepo: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["due_on", "completeness"],
          type: "string"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/milestones"
    },
    lock: {
      method: "PUT",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        lock_reason: {
          enum: ["off-topic", "too heated", "resolved", "spam"],
          type: "string"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/lock"
    },
    removeAssignees: {
      method: "DELETE",
      params: {
        assignees: {
          type: "string[]"
        },
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/assignees"
    },
    removeLabel: {
      method: "DELETE",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        name: {
          required: true,
          type: "string"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/labels/:name"
    },
    removeLabels: {
      method: "DELETE",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/labels"
    },
    replaceLabels: {
      method: "PUT",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        labels: {
          type: "string[]"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/labels"
    },
    unlock: {
      method: "DELETE",
      params: {
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/lock"
    },
    update: {
      method: "PATCH",
      params: {
        assignee: {
          type: "string"
        },
        assignees: {
          type: "string[]"
        },
        body: {
          type: "string"
        },
        issue_number: {
          required: true,
          type: "integer"
        },
        labels: {
          type: "string[]"
        },
        milestone: {
          allowNull: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["open", "closed"],
          type: "string"
        },
        title: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number"
    },
    updateComment: {
      method: "PATCH",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/comments/:comment_id"
    },
    updateLabel: {
      method: "PATCH",
      params: {
        color: {
          type: "string"
        },
        current_name: {
          required: true,
          type: "string"
        },
        description: {
          type: "string"
        },
        name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/labels/:current_name"
    },
    updateMilestone: {
      method: "PATCH",
      params: {
        description: {
          type: "string"
        },
        due_on: {
          type: "string"
        },
        milestone_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "milestone_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["open", "closed"],
          type: "string"
        },
        title: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/milestones/:milestone_number"
    }
  },
  licenses: {
    get: {
      method: "GET",
      params: {
        license: {
          required: true,
          type: "string"
        }
      },
      url: "/licenses/:license"
    },
    getForRepo: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/license"
    },
    list: {
      deprecated: "octokit.licenses.list() has been renamed to octokit.licenses.listCommonlyUsed() (2019-03-05)",
      method: "GET",
      params: {},
      url: "/licenses"
    },
    listCommonlyUsed: {
      method: "GET",
      params: {},
      url: "/licenses"
    }
  },
  markdown: {
    render: {
      method: "POST",
      params: {
        context: {
          type: "string"
        },
        mode: {
          enum: ["markdown", "gfm"],
          type: "string"
        },
        text: {
          required: true,
          type: "string"
        }
      },
      url: "/markdown"
    },
    renderRaw: {
      headers: {
        "content-type": "text/plain; charset=utf-8"
      },
      method: "POST",
      params: {
        data: {
          mapTo: "data",
          required: true,
          type: "string"
        }
      },
      url: "/markdown/raw"
    }
  },
  meta: {
    get: {
      method: "GET",
      params: {},
      url: "/meta"
    }
  },
  migrations: {
    cancelImport: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import"
    },
    deleteArchiveForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "DELETE",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/migrations/:migration_id/archive"
    },
    deleteArchiveForOrg: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "DELETE",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/migrations/:migration_id/archive"
    },
    downloadArchiveForOrg: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/migrations/:migration_id/archive"
    },
    getArchiveForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/migrations/:migration_id/archive"
    },
    getArchiveForOrg: {
      deprecated: "octokit.migrations.getArchiveForOrg() has been renamed to octokit.migrations.downloadArchiveForOrg() (2020-01-27)",
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/migrations/:migration_id/archive"
    },
    getCommitAuthors: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        since: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import/authors"
    },
    getImportProgress: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import"
    },
    getLargeFiles: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import/large_files"
    },
    getStatusForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/migrations/:migration_id"
    },
    getStatusForOrg: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/migrations/:migration_id"
    },
    listForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/migrations"
    },
    listForOrg: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/migrations"
    },
    listReposForOrg: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/migrations/:migration_id/repositories"
    },
    listReposForUser: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "GET",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/:migration_id/repositories"
    },
    mapCommitAuthor: {
      method: "PATCH",
      params: {
        author_id: {
          required: true,
          type: "integer"
        },
        email: {
          type: "string"
        },
        name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import/authors/:author_id"
    },
    setLfsPreference: {
      method: "PATCH",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        use_lfs: {
          enum: ["opt_in", "opt_out"],
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import/lfs"
    },
    startForAuthenticatedUser: {
      method: "POST",
      params: {
        exclude_attachments: {
          type: "boolean"
        },
        lock_repositories: {
          type: "boolean"
        },
        repositories: {
          required: true,
          type: "string[]"
        }
      },
      url: "/user/migrations"
    },
    startForOrg: {
      method: "POST",
      params: {
        exclude_attachments: {
          type: "boolean"
        },
        lock_repositories: {
          type: "boolean"
        },
        org: {
          required: true,
          type: "string"
        },
        repositories: {
          required: true,
          type: "string[]"
        }
      },
      url: "/orgs/:org/migrations"
    },
    startImport: {
      method: "PUT",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        tfvc_project: {
          type: "string"
        },
        vcs: {
          enum: ["subversion", "git", "mercurial", "tfvc"],
          type: "string"
        },
        vcs_password: {
          type: "string"
        },
        vcs_url: {
          required: true,
          type: "string"
        },
        vcs_username: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import"
    },
    unlockRepoForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "DELETE",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        repo_name: {
          required: true,
          type: "string"
        }
      },
      url: "/user/migrations/:migration_id/repos/:repo_name/lock"
    },
    unlockRepoForOrg: {
      headers: {
        accept: "application/vnd.github.wyandotte-preview+json"
      },
      method: "DELETE",
      params: {
        migration_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        repo_name: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/migrations/:migration_id/repos/:repo_name/lock"
    },
    updateImport: {
      method: "PATCH",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        vcs_password: {
          type: "string"
        },
        vcs_username: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/import"
    }
  },
  oauthAuthorizations: {
    checkAuthorization: {
      deprecated: "octokit.oauthAuthorizations.checkAuthorization() has been renamed to octokit.apps.checkAuthorization() (2019-11-05)",
      method: "GET",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/tokens/:access_token"
    },
    createAuthorization: {
      deprecated: "octokit.oauthAuthorizations.createAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#create-a-new-authorization",
      method: "POST",
      params: {
        client_id: {
          type: "string"
        },
        client_secret: {
          type: "string"
        },
        fingerprint: {
          type: "string"
        },
        note: {
          required: true,
          type: "string"
        },
        note_url: {
          type: "string"
        },
        scopes: {
          type: "string[]"
        }
      },
      url: "/authorizations"
    },
    deleteAuthorization: {
      deprecated: "octokit.oauthAuthorizations.deleteAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#delete-an-authorization",
      method: "DELETE",
      params: {
        authorization_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/authorizations/:authorization_id"
    },
    deleteGrant: {
      deprecated: "octokit.oauthAuthorizations.deleteGrant() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#delete-a-grant",
      method: "DELETE",
      params: {
        grant_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/applications/grants/:grant_id"
    },
    getAuthorization: {
      deprecated: "octokit.oauthAuthorizations.getAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-a-single-authorization",
      method: "GET",
      params: {
        authorization_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/authorizations/:authorization_id"
    },
    getGrant: {
      deprecated: "octokit.oauthAuthorizations.getGrant() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-a-single-grant",
      method: "GET",
      params: {
        grant_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/applications/grants/:grant_id"
    },
    getOrCreateAuthorizationForApp: {
      deprecated: "octokit.oauthAuthorizations.getOrCreateAuthorizationForApp() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app",
      method: "PUT",
      params: {
        client_id: {
          required: true,
          type: "string"
        },
        client_secret: {
          required: true,
          type: "string"
        },
        fingerprint: {
          type: "string"
        },
        note: {
          type: "string"
        },
        note_url: {
          type: "string"
        },
        scopes: {
          type: "string[]"
        }
      },
      url: "/authorizations/clients/:client_id"
    },
    getOrCreateAuthorizationForAppAndFingerprint: {
      deprecated: "octokit.oauthAuthorizations.getOrCreateAuthorizationForAppAndFingerprint() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#get-or-create-an-authorization-for-a-specific-app-and-fingerprint",
      method: "PUT",
      params: {
        client_id: {
          required: true,
          type: "string"
        },
        client_secret: {
          required: true,
          type: "string"
        },
        fingerprint: {
          required: true,
          type: "string"
        },
        note: {
          type: "string"
        },
        note_url: {
          type: "string"
        },
        scopes: {
          type: "string[]"
        }
      },
      url: "/authorizations/clients/:client_id/:fingerprint"
    },
    getOrCreateAuthorizationForAppFingerprint: {
      deprecated: "octokit.oauthAuthorizations.getOrCreateAuthorizationForAppFingerprint() has been renamed to octokit.oauthAuthorizations.getOrCreateAuthorizationForAppAndFingerprint() (2018-12-27)",
      method: "PUT",
      params: {
        client_id: {
          required: true,
          type: "string"
        },
        client_secret: {
          required: true,
          type: "string"
        },
        fingerprint: {
          required: true,
          type: "string"
        },
        note: {
          type: "string"
        },
        note_url: {
          type: "string"
        },
        scopes: {
          type: "string[]"
        }
      },
      url: "/authorizations/clients/:client_id/:fingerprint"
    },
    listAuthorizations: {
      deprecated: "octokit.oauthAuthorizations.listAuthorizations() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#list-your-authorizations",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/authorizations"
    },
    listGrants: {
      deprecated: "octokit.oauthAuthorizations.listGrants() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#list-your-grants",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/applications/grants"
    },
    resetAuthorization: {
      deprecated: "octokit.oauthAuthorizations.resetAuthorization() has been renamed to octokit.apps.resetAuthorization() (2019-11-05)",
      method: "POST",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/tokens/:access_token"
    },
    revokeAuthorizationForApplication: {
      deprecated: "octokit.oauthAuthorizations.revokeAuthorizationForApplication() has been renamed to octokit.apps.revokeAuthorizationForApplication() (2019-11-05)",
      method: "DELETE",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/tokens/:access_token"
    },
    revokeGrantForApplication: {
      deprecated: "octokit.oauthAuthorizations.revokeGrantForApplication() has been renamed to octokit.apps.revokeGrantForApplication() (2019-11-05)",
      method: "DELETE",
      params: {
        access_token: {
          required: true,
          type: "string"
        },
        client_id: {
          required: true,
          type: "string"
        }
      },
      url: "/applications/:client_id/grants/:access_token"
    },
    updateAuthorization: {
      deprecated: "octokit.oauthAuthorizations.updateAuthorization() is deprecated, see https://developer.github.com/v3/oauth_authorizations/#update-an-existing-authorization",
      method: "PATCH",
      params: {
        add_scopes: {
          type: "string[]"
        },
        authorization_id: {
          required: true,
          type: "integer"
        },
        fingerprint: {
          type: "string"
        },
        note: {
          type: "string"
        },
        note_url: {
          type: "string"
        },
        remove_scopes: {
          type: "string[]"
        },
        scopes: {
          type: "string[]"
        }
      },
      url: "/authorizations/:authorization_id"
    }
  },
  orgs: {
    addOrUpdateMembership: {
      method: "PUT",
      params: {
        org: {
          required: true,
          type: "string"
        },
        role: {
          enum: ["admin", "member"],
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/memberships/:username"
    },
    blockUser: {
      method: "PUT",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/blocks/:username"
    },
    checkBlockedUser: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/blocks/:username"
    },
    checkMembership: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/members/:username"
    },
    checkPublicMembership: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/public_members/:username"
    },
    concealMembership: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/public_members/:username"
    },
    convertMemberToOutsideCollaborator: {
      method: "PUT",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/outside_collaborators/:username"
    },
    createHook: {
      method: "POST",
      params: {
        active: {
          type: "boolean"
        },
        config: {
          required: true,
          type: "object"
        },
        "config.content_type": {
          type: "string"
        },
        "config.insecure_ssl": {
          type: "string"
        },
        "config.secret": {
          type: "string"
        },
        "config.url": {
          required: true,
          type: "string"
        },
        events: {
          type: "string[]"
        },
        name: {
          required: true,
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/hooks"
    },
    createInvitation: {
      method: "POST",
      params: {
        email: {
          type: "string"
        },
        invitee_id: {
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        role: {
          enum: ["admin", "direct_member", "billing_manager"],
          type: "string"
        },
        team_ids: {
          type: "integer[]"
        }
      },
      url: "/orgs/:org/invitations"
    },
    deleteHook: {
      method: "DELETE",
      params: {
        hook_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/hooks/:hook_id"
    },
    get: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org"
    },
    getHook: {
      method: "GET",
      params: {
        hook_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/hooks/:hook_id"
    },
    getMembership: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/memberships/:username"
    },
    getMembershipForAuthenticatedUser: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/user/memberships/orgs/:org"
    },
    list: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "integer"
        }
      },
      url: "/organizations"
    },
    listBlockedUsers: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/blocks"
    },
    listForAuthenticatedUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/orgs"
    },
    listForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/orgs"
    },
    listHooks: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/hooks"
    },
    listInstallations: {
      headers: {
        accept: "application/vnd.github.machine-man-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/installations"
    },
    listInvitationTeams: {
      method: "GET",
      params: {
        invitation_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/invitations/:invitation_id/teams"
    },
    listMembers: {
      method: "GET",
      params: {
        filter: {
          enum: ["2fa_disabled", "all"],
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        role: {
          enum: ["all", "admin", "member"],
          type: "string"
        }
      },
      url: "/orgs/:org/members"
    },
    listMemberships: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        state: {
          enum: ["active", "pending"],
          type: "string"
        }
      },
      url: "/user/memberships/orgs"
    },
    listOutsideCollaborators: {
      method: "GET",
      params: {
        filter: {
          enum: ["2fa_disabled", "all"],
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/outside_collaborators"
    },
    listPendingInvitations: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/invitations"
    },
    listPublicMembers: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/public_members"
    },
    pingHook: {
      method: "POST",
      params: {
        hook_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/hooks/:hook_id/pings"
    },
    publicizeMembership: {
      method: "PUT",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/public_members/:username"
    },
    removeMember: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/members/:username"
    },
    removeMembership: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/memberships/:username"
    },
    removeOutsideCollaborator: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/outside_collaborators/:username"
    },
    unblockUser: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/blocks/:username"
    },
    update: {
      method: "PATCH",
      params: {
        billing_email: {
          type: "string"
        },
        company: {
          type: "string"
        },
        default_repository_permission: {
          enum: ["read", "write", "admin", "none"],
          type: "string"
        },
        description: {
          type: "string"
        },
        email: {
          type: "string"
        },
        has_organization_projects: {
          type: "boolean"
        },
        has_repository_projects: {
          type: "boolean"
        },
        location: {
          type: "string"
        },
        members_allowed_repository_creation_type: {
          enum: ["all", "private", "none"],
          type: "string"
        },
        members_can_create_internal_repositories: {
          type: "boolean"
        },
        members_can_create_private_repositories: {
          type: "boolean"
        },
        members_can_create_public_repositories: {
          type: "boolean"
        },
        members_can_create_repositories: {
          type: "boolean"
        },
        name: {
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org"
    },
    updateHook: {
      method: "PATCH",
      params: {
        active: {
          type: "boolean"
        },
        config: {
          type: "object"
        },
        "config.content_type": {
          type: "string"
        },
        "config.insecure_ssl": {
          type: "string"
        },
        "config.secret": {
          type: "string"
        },
        "config.url": {
          required: true,
          type: "string"
        },
        events: {
          type: "string[]"
        },
        hook_id: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/hooks/:hook_id"
    },
    updateMembership: {
      method: "PATCH",
      params: {
        org: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["active"],
          required: true,
          type: "string"
        }
      },
      url: "/user/memberships/orgs/:org"
    }
  },
  projects: {
    addCollaborator: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "PUT",
      params: {
        permission: {
          enum: ["read", "write", "admin"],
          type: "string"
        },
        project_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/projects/:project_id/collaborators/:username"
    },
    createCard: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "POST",
      params: {
        column_id: {
          required: true,
          type: "integer"
        },
        content_id: {
          type: "integer"
        },
        content_type: {
          type: "string"
        },
        note: {
          type: "string"
        }
      },
      url: "/projects/columns/:column_id/cards"
    },
    createColumn: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "POST",
      params: {
        name: {
          required: true,
          type: "string"
        },
        project_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/:project_id/columns"
    },
    createForAuthenticatedUser: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "POST",
      params: {
        body: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        }
      },
      url: "/user/projects"
    },
    createForOrg: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "POST",
      params: {
        body: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/projects"
    },
    createForRepo: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "POST",
      params: {
        body: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/projects"
    },
    delete: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "DELETE",
      params: {
        project_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/:project_id"
    },
    deleteCard: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "DELETE",
      params: {
        card_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/columns/cards/:card_id"
    },
    deleteColumn: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "DELETE",
      params: {
        column_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/columns/:column_id"
    },
    get: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        project_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/:project_id"
    },
    getCard: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        card_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/columns/cards/:card_id"
    },
    getColumn: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        column_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/columns/:column_id"
    },
    listCards: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        archived_state: {
          enum: ["all", "archived", "not_archived"],
          type: "string"
        },
        column_id: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/projects/columns/:column_id/cards"
    },
    listCollaborators: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        affiliation: {
          enum: ["outside", "direct", "all"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        project_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/:project_id/collaborators"
    },
    listColumns: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        project_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/projects/:project_id/columns"
    },
    listForOrg: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/orgs/:org/projects"
    },
    listForRepo: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/projects"
    },
    listForUser: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/projects"
    },
    moveCard: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "POST",
      params: {
        card_id: {
          required: true,
          type: "integer"
        },
        column_id: {
          type: "integer"
        },
        position: {
          required: true,
          type: "string",
          validation: "^(top|bottom|after:\\d+)$"
        }
      },
      url: "/projects/columns/cards/:card_id/moves"
    },
    moveColumn: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "POST",
      params: {
        column_id: {
          required: true,
          type: "integer"
        },
        position: {
          required: true,
          type: "string",
          validation: "^(first|last|after:\\d+)$"
        }
      },
      url: "/projects/columns/:column_id/moves"
    },
    removeCollaborator: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "DELETE",
      params: {
        project_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/projects/:project_id/collaborators/:username"
    },
    reviewUserPermissionLevel: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        project_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/projects/:project_id/collaborators/:username/permission"
    },
    update: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "PATCH",
      params: {
        body: {
          type: "string"
        },
        name: {
          type: "string"
        },
        organization_permission: {
          type: "string"
        },
        private: {
          type: "boolean"
        },
        project_id: {
          required: true,
          type: "integer"
        },
        state: {
          enum: ["open", "closed"],
          type: "string"
        }
      },
      url: "/projects/:project_id"
    },
    updateCard: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "PATCH",
      params: {
        archived: {
          type: "boolean"
        },
        card_id: {
          required: true,
          type: "integer"
        },
        note: {
          type: "string"
        }
      },
      url: "/projects/columns/cards/:card_id"
    },
    updateColumn: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "PATCH",
      params: {
        column_id: {
          required: true,
          type: "integer"
        },
        name: {
          required: true,
          type: "string"
        }
      },
      url: "/projects/columns/:column_id"
    }
  },
  pulls: {
    checkIfMerged: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/merge"
    },
    create: {
      method: "POST",
      params: {
        base: {
          required: true,
          type: "string"
        },
        body: {
          type: "string"
        },
        draft: {
          type: "boolean"
        },
        head: {
          required: true,
          type: "string"
        },
        maintainer_can_modify: {
          type: "boolean"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        title: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls"
    },
    createComment: {
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        commit_id: {
          required: true,
          type: "string"
        },
        in_reply_to: {
          deprecated: true,
          description: "The comment ID to reply to. **Note**: This must be the ID of a top-level comment, not a reply to that comment. Replies to replies are not supported.",
          type: "integer"
        },
        line: {
          type: "integer"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        path: {
          required: true,
          type: "string"
        },
        position: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        side: {
          enum: ["LEFT", "RIGHT"],
          type: "string"
        },
        start_line: {
          type: "integer"
        },
        start_side: {
          enum: ["LEFT", "RIGHT", "side"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/comments"
    },
    createCommentReply: {
      deprecated: "octokit.pulls.createCommentReply() has been renamed to octokit.pulls.createComment() (2019-09-09)",
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        commit_id: {
          required: true,
          type: "string"
        },
        in_reply_to: {
          deprecated: true,
          description: "The comment ID to reply to. **Note**: This must be the ID of a top-level comment, not a reply to that comment. Replies to replies are not supported.",
          type: "integer"
        },
        line: {
          type: "integer"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        path: {
          required: true,
          type: "string"
        },
        position: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        side: {
          enum: ["LEFT", "RIGHT"],
          type: "string"
        },
        start_line: {
          type: "integer"
        },
        start_side: {
          enum: ["LEFT", "RIGHT", "side"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/comments"
    },
    createFromIssue: {
      deprecated: "octokit.pulls.createFromIssue() is deprecated, see https://developer.github.com/v3/pulls/#create-a-pull-request",
      method: "POST",
      params: {
        base: {
          required: true,
          type: "string"
        },
        draft: {
          type: "boolean"
        },
        head: {
          required: true,
          type: "string"
        },
        issue: {
          required: true,
          type: "integer"
        },
        maintainer_can_modify: {
          type: "boolean"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls"
    },
    createReview: {
      method: "POST",
      params: {
        body: {
          type: "string"
        },
        comments: {
          type: "object[]"
        },
        "comments[].body": {
          required: true,
          type: "string"
        },
        "comments[].path": {
          required: true,
          type: "string"
        },
        "comments[].position": {
          required: true,
          type: "integer"
        },
        commit_id: {
          type: "string"
        },
        event: {
          enum: ["APPROVE", "REQUEST_CHANGES", "COMMENT"],
          type: "string"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews"
    },
    createReviewCommentReply: {
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/comments/:comment_id/replies"
    },
    createReviewRequest: {
      method: "POST",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        reviewers: {
          type: "string[]"
        },
        team_reviewers: {
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"
    },
    deleteComment: {
      method: "DELETE",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/comments/:comment_id"
    },
    deletePendingReview: {
      method: "DELETE",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        review_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"
    },
    deleteReviewRequest: {
      method: "DELETE",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        reviewers: {
          type: "string[]"
        },
        team_reviewers: {
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"
    },
    dismissReview: {
      method: "PUT",
      params: {
        message: {
          required: true,
          type: "string"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        review_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/dismissals"
    },
    get: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number"
    },
    getComment: {
      method: "GET",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/comments/:comment_id"
    },
    getCommentsForReview: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        review_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/comments"
    },
    getReview: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        review_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"
    },
    list: {
      method: "GET",
      params: {
        base: {
          type: "string"
        },
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        head: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["created", "updated", "popularity", "long-running"],
          type: "string"
        },
        state: {
          enum: ["open", "closed", "all"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls"
    },
    listComments: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        since: {
          type: "string"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/comments"
    },
    listCommentsForRepo: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        since: {
          type: "string"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/comments"
    },
    listCommits: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/commits"
    },
    listFiles: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/files"
    },
    listReviewRequests: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/requested_reviewers"
    },
    listReviews: {
      method: "GET",
      params: {
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews"
    },
    merge: {
      method: "PUT",
      params: {
        commit_message: {
          type: "string"
        },
        commit_title: {
          type: "string"
        },
        merge_method: {
          enum: ["merge", "squash", "rebase"],
          type: "string"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/merge"
    },
    submitReview: {
      method: "POST",
      params: {
        body: {
          type: "string"
        },
        event: {
          enum: ["APPROVE", "REQUEST_CHANGES", "COMMENT"],
          required: true,
          type: "string"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        review_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id/events"
    },
    update: {
      method: "PATCH",
      params: {
        base: {
          type: "string"
        },
        body: {
          type: "string"
        },
        maintainer_can_modify: {
          type: "boolean"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["open", "closed"],
          type: "string"
        },
        title: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number"
    },
    updateBranch: {
      headers: {
        accept: "application/vnd.github.lydian-preview+json"
      },
      method: "PUT",
      params: {
        expected_head_sha: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/update-branch"
    },
    updateComment: {
      method: "PATCH",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/comments/:comment_id"
    },
    updateReview: {
      method: "PUT",
      params: {
        body: {
          required: true,
          type: "string"
        },
        number: {
          alias: "pull_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        pull_number: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        review_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/pulls/:pull_number/reviews/:review_id"
    }
  },
  rateLimit: {
    get: {
      method: "GET",
      params: {},
      url: "/rate_limit"
    }
  },
  reactions: {
    createForCommitComment: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/comments/:comment_id/reactions"
    },
    createForIssue: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/reactions"
    },
    createForIssueComment: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
    },
    createForPullRequestReviewComment: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
    },
    createForTeamDiscussion: {
      deprecated: "octokit.reactions.createForTeamDiscussion() has been renamed to octokit.reactions.createForTeamDiscussionLegacy() (2020-01-16)",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/reactions"
    },
    createForTeamDiscussionComment: {
      deprecated: "octokit.reactions.createForTeamDiscussionComment() has been renamed to octokit.reactions.createForTeamDiscussionCommentLegacy() (2020-01-16)",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    createForTeamDiscussionCommentInOrg: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    createForTeamDiscussionCommentLegacy: {
      deprecated: "octokit.reactions.createForTeamDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-comment-legacy",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    createForTeamDiscussionInOrg: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions"
    },
    createForTeamDiscussionLegacy: {
      deprecated: "octokit.reactions.createForTeamDiscussionLegacy() is deprecated, see https://developer.github.com/v3/reactions/#create-reaction-for-a-team-discussion-legacy",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "POST",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/reactions"
    },
    delete: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "DELETE",
      params: {
        reaction_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/reactions/:reaction_id"
    },
    listForCommitComment: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/comments/:comment_id/reactions"
    },
    listForIssue: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        issue_number: {
          required: true,
          type: "integer"
        },
        number: {
          alias: "issue_number",
          deprecated: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/:issue_number/reactions"
    },
    listForIssueComment: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/issues/comments/:comment_id/reactions"
    },
    listForPullRequestReviewComment: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pulls/comments/:comment_id/reactions"
    },
    listForTeamDiscussion: {
      deprecated: "octokit.reactions.listForTeamDiscussion() has been renamed to octokit.reactions.listForTeamDiscussionLegacy() (2020-01-16)",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/reactions"
    },
    listForTeamDiscussionComment: {
      deprecated: "octokit.reactions.listForTeamDiscussionComment() has been renamed to octokit.reactions.listForTeamDiscussionCommentLegacy() (2020-01-16)",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    listForTeamDiscussionCommentInOrg: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    listForTeamDiscussionCommentLegacy: {
      deprecated: "octokit.reactions.listForTeamDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-comment-legacy",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number/reactions"
    },
    listForTeamDiscussionInOrg: {
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/reactions"
    },
    listForTeamDiscussionLegacy: {
      deprecated: "octokit.reactions.listForTeamDiscussionLegacy() is deprecated, see https://developer.github.com/v3/reactions/#list-reactions-for-a-team-discussion-legacy",
      headers: {
        accept: "application/vnd.github.squirrel-girl-preview+json"
      },
      method: "GET",
      params: {
        content: {
          enum: ["+1", "-1", "laugh", "confused", "heart", "hooray", "rocket", "eyes"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/reactions"
    }
  },
  repos: {
    acceptInvitation: {
      method: "PATCH",
      params: {
        invitation_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/repository_invitations/:invitation_id"
    },
    addCollaborator: {
      method: "PUT",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/collaborators/:username"
    },
    addDeployKey: {
      method: "POST",
      params: {
        key: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        read_only: {
          type: "boolean"
        },
        repo: {
          required: true,
          type: "string"
        },
        title: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/keys"
    },
    addProtectedBranchAdminEnforcement: {
      method: "POST",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    addProtectedBranchAppRestrictions: {
      method: "POST",
      params: {
        apps: {
          mapTo: "data",
          required: true,
          type: "string[]"
        },
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
    },
    addProtectedBranchRequiredSignatures: {
      headers: {
        accept: "application/vnd.github.zzzax-preview+json"
      },
      method: "POST",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    addProtectedBranchRequiredStatusChecksContexts: {
      method: "POST",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        contexts: {
          mapTo: "data",
          required: true,
          type: "string[]"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    addProtectedBranchTeamRestrictions: {
      method: "POST",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        teams: {
          mapTo: "data",
          required: true,
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    addProtectedBranchUserRestrictions: {
      method: "POST",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        users: {
          mapTo: "data",
          required: true,
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    checkCollaborator: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/collaborators/:username"
    },
    checkVulnerabilityAlerts: {
      headers: {
        accept: "application/vnd.github.dorian-preview+json"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/vulnerability-alerts"
    },
    compareCommits: {
      method: "GET",
      params: {
        base: {
          required: true,
          type: "string"
        },
        head: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/compare/:base...:head"
    },
    createCommitComment: {
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        commit_sha: {
          required: true,
          type: "string"
        },
        line: {
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        path: {
          type: "string"
        },
        position: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          alias: "commit_sha",
          deprecated: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:commit_sha/comments"
    },
    createDeployment: {
      method: "POST",
      params: {
        auto_merge: {
          type: "boolean"
        },
        description: {
          type: "string"
        },
        environment: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        payload: {
          type: "string"
        },
        production_environment: {
          type: "boolean"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        required_contexts: {
          type: "string[]"
        },
        task: {
          type: "string"
        },
        transient_environment: {
          type: "boolean"
        }
      },
      url: "/repos/:owner/:repo/deployments"
    },
    createDeploymentStatus: {
      method: "POST",
      params: {
        auto_inactive: {
          type: "boolean"
        },
        deployment_id: {
          required: true,
          type: "integer"
        },
        description: {
          type: "string"
        },
        environment: {
          enum: ["production", "staging", "qa"],
          type: "string"
        },
        environment_url: {
          type: "string"
        },
        log_url: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["error", "failure", "inactive", "in_progress", "queued", "pending", "success"],
          required: true,
          type: "string"
        },
        target_url: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/deployments/:deployment_id/statuses"
    },
    createDispatchEvent: {
      method: "POST",
      params: {
        client_payload: {
          type: "object"
        },
        event_type: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/dispatches"
    },
    createFile: {
      deprecated: "octokit.repos.createFile() has been renamed to octokit.repos.createOrUpdateFile() (2019-06-07)",
      method: "PUT",
      params: {
        author: {
          type: "object"
        },
        "author.email": {
          required: true,
          type: "string"
        },
        "author.name": {
          required: true,
          type: "string"
        },
        branch: {
          type: "string"
        },
        committer: {
          type: "object"
        },
        "committer.email": {
          required: true,
          type: "string"
        },
        "committer.name": {
          required: true,
          type: "string"
        },
        content: {
          required: true,
          type: "string"
        },
        message: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        path: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/contents/:path"
    },
    createForAuthenticatedUser: {
      method: "POST",
      params: {
        allow_merge_commit: {
          type: "boolean"
        },
        allow_rebase_merge: {
          type: "boolean"
        },
        allow_squash_merge: {
          type: "boolean"
        },
        auto_init: {
          type: "boolean"
        },
        delete_branch_on_merge: {
          type: "boolean"
        },
        description: {
          type: "string"
        },
        gitignore_template: {
          type: "string"
        },
        has_issues: {
          type: "boolean"
        },
        has_projects: {
          type: "boolean"
        },
        has_wiki: {
          type: "boolean"
        },
        homepage: {
          type: "string"
        },
        is_template: {
          type: "boolean"
        },
        license_template: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        private: {
          type: "boolean"
        },
        team_id: {
          type: "integer"
        },
        visibility: {
          enum: ["public", "private", "visibility", "internal"],
          type: "string"
        }
      },
      url: "/user/repos"
    },
    createFork: {
      method: "POST",
      params: {
        organization: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/forks"
    },
    createHook: {
      method: "POST",
      params: {
        active: {
          type: "boolean"
        },
        config: {
          required: true,
          type: "object"
        },
        "config.content_type": {
          type: "string"
        },
        "config.insecure_ssl": {
          type: "string"
        },
        "config.secret": {
          type: "string"
        },
        "config.url": {
          required: true,
          type: "string"
        },
        events: {
          type: "string[]"
        },
        name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/hooks"
    },
    createInOrg: {
      method: "POST",
      params: {
        allow_merge_commit: {
          type: "boolean"
        },
        allow_rebase_merge: {
          type: "boolean"
        },
        allow_squash_merge: {
          type: "boolean"
        },
        auto_init: {
          type: "boolean"
        },
        delete_branch_on_merge: {
          type: "boolean"
        },
        description: {
          type: "string"
        },
        gitignore_template: {
          type: "string"
        },
        has_issues: {
          type: "boolean"
        },
        has_projects: {
          type: "boolean"
        },
        has_wiki: {
          type: "boolean"
        },
        homepage: {
          type: "string"
        },
        is_template: {
          type: "boolean"
        },
        license_template: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        private: {
          type: "boolean"
        },
        team_id: {
          type: "integer"
        },
        visibility: {
          enum: ["public", "private", "visibility", "internal"],
          type: "string"
        }
      },
      url: "/orgs/:org/repos"
    },
    createOrUpdateFile: {
      method: "PUT",
      params: {
        author: {
          type: "object"
        },
        "author.email": {
          required: true,
          type: "string"
        },
        "author.name": {
          required: true,
          type: "string"
        },
        branch: {
          type: "string"
        },
        committer: {
          type: "object"
        },
        "committer.email": {
          required: true,
          type: "string"
        },
        "committer.name": {
          required: true,
          type: "string"
        },
        content: {
          required: true,
          type: "string"
        },
        message: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        path: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/contents/:path"
    },
    createRelease: {
      method: "POST",
      params: {
        body: {
          type: "string"
        },
        draft: {
          type: "boolean"
        },
        name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        prerelease: {
          type: "boolean"
        },
        repo: {
          required: true,
          type: "string"
        },
        tag_name: {
          required: true,
          type: "string"
        },
        target_commitish: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases"
    },
    createStatus: {
      method: "POST",
      params: {
        context: {
          type: "string"
        },
        description: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          required: true,
          type: "string"
        },
        state: {
          enum: ["error", "failure", "pending", "success"],
          required: true,
          type: "string"
        },
        target_url: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/statuses/:sha"
    },
    createUsingTemplate: {
      headers: {
        accept: "application/vnd.github.baptiste-preview+json"
      },
      method: "POST",
      params: {
        description: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        owner: {
          type: "string"
        },
        private: {
          type: "boolean"
        },
        template_owner: {
          required: true,
          type: "string"
        },
        template_repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:template_owner/:template_repo/generate"
    },
    declineInvitation: {
      method: "DELETE",
      params: {
        invitation_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/repository_invitations/:invitation_id"
    },
    delete: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo"
    },
    deleteCommitComment: {
      method: "DELETE",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/comments/:comment_id"
    },
    deleteDownload: {
      method: "DELETE",
      params: {
        download_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/downloads/:download_id"
    },
    deleteFile: {
      method: "DELETE",
      params: {
        author: {
          type: "object"
        },
        "author.email": {
          type: "string"
        },
        "author.name": {
          type: "string"
        },
        branch: {
          type: "string"
        },
        committer: {
          type: "object"
        },
        "committer.email": {
          type: "string"
        },
        "committer.name": {
          type: "string"
        },
        message: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        path: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/contents/:path"
    },
    deleteHook: {
      method: "DELETE",
      params: {
        hook_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/hooks/:hook_id"
    },
    deleteInvitation: {
      method: "DELETE",
      params: {
        invitation_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/invitations/:invitation_id"
    },
    deleteRelease: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        release_id: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/:release_id"
    },
    deleteReleaseAsset: {
      method: "DELETE",
      params: {
        asset_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    disableAutomatedSecurityFixes: {
      headers: {
        accept: "application/vnd.github.london-preview+json"
      },
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/automated-security-fixes"
    },
    disablePagesSite: {
      headers: {
        accept: "application/vnd.github.switcheroo-preview+json"
      },
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages"
    },
    disableVulnerabilityAlerts: {
      headers: {
        accept: "application/vnd.github.dorian-preview+json"
      },
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/vulnerability-alerts"
    },
    enableAutomatedSecurityFixes: {
      headers: {
        accept: "application/vnd.github.london-preview+json"
      },
      method: "PUT",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/automated-security-fixes"
    },
    enablePagesSite: {
      headers: {
        accept: "application/vnd.github.switcheroo-preview+json"
      },
      method: "POST",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        source: {
          type: "object"
        },
        "source.branch": {
          enum: ["master", "gh-pages"],
          type: "string"
        },
        "source.path": {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages"
    },
    enableVulnerabilityAlerts: {
      headers: {
        accept: "application/vnd.github.dorian-preview+json"
      },
      method: "PUT",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/vulnerability-alerts"
    },
    get: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo"
    },
    getAppsWithAccessToProtectedBranch: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
    },
    getArchiveLink: {
      method: "GET",
      params: {
        archive_format: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/:archive_format/:ref"
    },
    getBranch: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch"
    },
    getBranchProtection: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection"
    },
    getClones: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        per: {
          enum: ["day", "week"],
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/traffic/clones"
    },
    getCodeFrequencyStats: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/stats/code_frequency"
    },
    getCollaboratorPermissionLevel: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/collaborators/:username/permission"
    },
    getCombinedStatusForRef: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:ref/status"
    },
    getCommit: {
      method: "GET",
      params: {
        commit_sha: {
          alias: "ref",
          deprecated: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          alias: "ref",
          deprecated: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:ref"
    },
    getCommitActivityStats: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/stats/commit_activity"
    },
    getCommitComment: {
      method: "GET",
      params: {
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/comments/:comment_id"
    },
    getCommitRefSha: {
      deprecated: "octokit.repos.getCommitRefSha() is deprecated, see https://developer.github.com/v3/repos/commits/#get-a-single-commit",
      headers: {
        accept: "application/vnd.github.v3.sha"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:ref"
    },
    getContents: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        path: {
          required: true,
          type: "string"
        },
        ref: {
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/contents/:path"
    },
    getContributorsStats: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/stats/contributors"
    },
    getDeployKey: {
      method: "GET",
      params: {
        key_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/keys/:key_id"
    },
    getDeployment: {
      method: "GET",
      params: {
        deployment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/deployments/:deployment_id"
    },
    getDeploymentStatus: {
      method: "GET",
      params: {
        deployment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        status_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/deployments/:deployment_id/statuses/:status_id"
    },
    getDownload: {
      method: "GET",
      params: {
        download_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/downloads/:download_id"
    },
    getHook: {
      method: "GET",
      params: {
        hook_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/hooks/:hook_id"
    },
    getLatestPagesBuild: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages/builds/latest"
    },
    getLatestRelease: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/latest"
    },
    getPages: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages"
    },
    getPagesBuild: {
      method: "GET",
      params: {
        build_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages/builds/:build_id"
    },
    getParticipationStats: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/stats/participation"
    },
    getProtectedBranchAdminEnforcement: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    getProtectedBranchPullRequestReviewEnforcement: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    getProtectedBranchRequiredSignatures: {
      headers: {
        accept: "application/vnd.github.zzzax-preview+json"
      },
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    getProtectedBranchRequiredStatusChecks: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    getProtectedBranchRestrictions: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions"
    },
    getPunchCardStats: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/stats/punch_card"
    },
    getReadme: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        ref: {
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/readme"
    },
    getRelease: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        release_id: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/:release_id"
    },
    getReleaseAsset: {
      method: "GET",
      params: {
        asset_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    getReleaseByTag: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        tag: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/tags/:tag"
    },
    getTeamsWithAccessToProtectedBranch: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    getTopPaths: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/traffic/popular/paths"
    },
    getTopReferrers: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/traffic/popular/referrers"
    },
    getUsersWithAccessToProtectedBranch: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    getViews: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        per: {
          enum: ["day", "week"],
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/traffic/views"
    },
    list: {
      method: "GET",
      params: {
        affiliation: {
          type: "string"
        },
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        sort: {
          enum: ["created", "updated", "pushed", "full_name"],
          type: "string"
        },
        type: {
          enum: ["all", "owner", "public", "private", "member"],
          type: "string"
        },
        visibility: {
          enum: ["all", "public", "private"],
          type: "string"
        }
      },
      url: "/user/repos"
    },
    listAppsWithAccessToProtectedBranch: {
      deprecated: "octokit.repos.listAppsWithAccessToProtectedBranch() has been renamed to octokit.repos.getAppsWithAccessToProtectedBranch() (2019-09-13)",
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
    },
    listAssetsForRelease: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        release_id: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/:release_id/assets"
    },
    listBranches: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        protected: {
          type: "boolean"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches"
    },
    listBranchesForHeadCommit: {
      headers: {
        accept: "application/vnd.github.groot-preview+json"
      },
      method: "GET",
      params: {
        commit_sha: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:commit_sha/branches-where-head"
    },
    listCollaborators: {
      method: "GET",
      params: {
        affiliation: {
          enum: ["outside", "direct", "all"],
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/collaborators"
    },
    listCommentsForCommit: {
      method: "GET",
      params: {
        commit_sha: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        ref: {
          alias: "commit_sha",
          deprecated: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:commit_sha/comments"
    },
    listCommitComments: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/comments"
    },
    listCommits: {
      method: "GET",
      params: {
        author: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        path: {
          type: "string"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          type: "string"
        },
        since: {
          type: "string"
        },
        until: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits"
    },
    listContributors: {
      method: "GET",
      params: {
        anon: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/contributors"
    },
    listDeployKeys: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/keys"
    },
    listDeploymentStatuses: {
      method: "GET",
      params: {
        deployment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/deployments/:deployment_id/statuses"
    },
    listDeployments: {
      method: "GET",
      params: {
        environment: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        ref: {
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          type: "string"
        },
        task: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/deployments"
    },
    listDownloads: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/downloads"
    },
    listForOrg: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        sort: {
          enum: ["created", "updated", "pushed", "full_name"],
          type: "string"
        },
        type: {
          enum: ["all", "public", "private", "forks", "sources", "member", "internal"],
          type: "string"
        }
      },
      url: "/orgs/:org/repos"
    },
    listForUser: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        sort: {
          enum: ["created", "updated", "pushed", "full_name"],
          type: "string"
        },
        type: {
          enum: ["all", "owner", "member"],
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/repos"
    },
    listForks: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["newest", "oldest", "stargazers"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/forks"
    },
    listHooks: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/hooks"
    },
    listInvitations: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/invitations"
    },
    listInvitationsForAuthenticatedUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/repository_invitations"
    },
    listLanguages: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/languages"
    },
    listPagesBuilds: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages/builds"
    },
    listProtectedBranchRequiredStatusChecksContexts: {
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    listProtectedBranchTeamRestrictions: {
      deprecated: "octokit.repos.listProtectedBranchTeamRestrictions() has been renamed to octokit.repos.getTeamsWithAccessToProtectedBranch() (2019-09-09)",
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    listProtectedBranchUserRestrictions: {
      deprecated: "octokit.repos.listProtectedBranchUserRestrictions() has been renamed to octokit.repos.getUsersWithAccessToProtectedBranch() (2019-09-09)",
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    listPublic: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "integer"
        }
      },
      url: "/repositories"
    },
    listPullRequestsAssociatedWithCommit: {
      headers: {
        accept: "application/vnd.github.groot-preview+json"
      },
      method: "GET",
      params: {
        commit_sha: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:commit_sha/pulls"
    },
    listReleases: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases"
    },
    listStatusesForRef: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        ref: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/commits/:ref/statuses"
    },
    listTags: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/tags"
    },
    listTeams: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/teams"
    },
    listTeamsWithAccessToProtectedBranch: {
      deprecated: "octokit.repos.listTeamsWithAccessToProtectedBranch() has been renamed to octokit.repos.getTeamsWithAccessToProtectedBranch() (2019-09-13)",
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    listTopics: {
      headers: {
        accept: "application/vnd.github.mercy-preview+json"
      },
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/topics"
    },
    listUsersWithAccessToProtectedBranch: {
      deprecated: "octokit.repos.listUsersWithAccessToProtectedBranch() has been renamed to octokit.repos.getUsersWithAccessToProtectedBranch() (2019-09-13)",
      method: "GET",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    merge: {
      method: "POST",
      params: {
        base: {
          required: true,
          type: "string"
        },
        commit_message: {
          type: "string"
        },
        head: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/merges"
    },
    pingHook: {
      method: "POST",
      params: {
        hook_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/hooks/:hook_id/pings"
    },
    removeBranchProtection: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection"
    },
    removeCollaborator: {
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/collaborators/:username"
    },
    removeDeployKey: {
      method: "DELETE",
      params: {
        key_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/keys/:key_id"
    },
    removeProtectedBranchAdminEnforcement: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/enforce_admins"
    },
    removeProtectedBranchAppRestrictions: {
      method: "DELETE",
      params: {
        apps: {
          mapTo: "data",
          required: true,
          type: "string[]"
        },
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
    },
    removeProtectedBranchPullRequestReviewEnforcement: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    removeProtectedBranchRequiredSignatures: {
      headers: {
        accept: "application/vnd.github.zzzax-preview+json"
      },
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_signatures"
    },
    removeProtectedBranchRequiredStatusChecks: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    removeProtectedBranchRequiredStatusChecksContexts: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        contexts: {
          mapTo: "data",
          required: true,
          type: "string[]"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    removeProtectedBranchRestrictions: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions"
    },
    removeProtectedBranchTeamRestrictions: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        teams: {
          mapTo: "data",
          required: true,
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    removeProtectedBranchUserRestrictions: {
      method: "DELETE",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        users: {
          mapTo: "data",
          required: true,
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    replaceProtectedBranchAppRestrictions: {
      method: "PUT",
      params: {
        apps: {
          mapTo: "data",
          required: true,
          type: "string[]"
        },
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/apps"
    },
    replaceProtectedBranchRequiredStatusChecksContexts: {
      method: "PUT",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        contexts: {
          mapTo: "data",
          required: true,
          type: "string[]"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks/contexts"
    },
    replaceProtectedBranchTeamRestrictions: {
      method: "PUT",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        teams: {
          mapTo: "data",
          required: true,
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/teams"
    },
    replaceProtectedBranchUserRestrictions: {
      method: "PUT",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        users: {
          mapTo: "data",
          required: true,
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/restrictions/users"
    },
    replaceTopics: {
      headers: {
        accept: "application/vnd.github.mercy-preview+json"
      },
      method: "PUT",
      params: {
        names: {
          required: true,
          type: "string[]"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/topics"
    },
    requestPageBuild: {
      method: "POST",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages/builds"
    },
    retrieveCommunityProfileMetrics: {
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/community/profile"
    },
    testPushHook: {
      method: "POST",
      params: {
        hook_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/hooks/:hook_id/tests"
    },
    transfer: {
      method: "POST",
      params: {
        new_owner: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_ids: {
          type: "integer[]"
        }
      },
      url: "/repos/:owner/:repo/transfer"
    },
    update: {
      method: "PATCH",
      params: {
        allow_merge_commit: {
          type: "boolean"
        },
        allow_rebase_merge: {
          type: "boolean"
        },
        allow_squash_merge: {
          type: "boolean"
        },
        archived: {
          type: "boolean"
        },
        default_branch: {
          type: "string"
        },
        delete_branch_on_merge: {
          type: "boolean"
        },
        description: {
          type: "string"
        },
        has_issues: {
          type: "boolean"
        },
        has_projects: {
          type: "boolean"
        },
        has_wiki: {
          type: "boolean"
        },
        homepage: {
          type: "string"
        },
        is_template: {
          type: "boolean"
        },
        name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        private: {
          type: "boolean"
        },
        repo: {
          required: true,
          type: "string"
        },
        visibility: {
          enum: ["public", "private", "visibility", "internal"],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo"
    },
    updateBranchProtection: {
      method: "PUT",
      params: {
        allow_deletions: {
          type: "boolean"
        },
        allow_force_pushes: {
          allowNull: true,
          type: "boolean"
        },
        branch: {
          required: true,
          type: "string"
        },
        enforce_admins: {
          allowNull: true,
          required: true,
          type: "boolean"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        required_linear_history: {
          type: "boolean"
        },
        required_pull_request_reviews: {
          allowNull: true,
          required: true,
          type: "object"
        },
        "required_pull_request_reviews.dismiss_stale_reviews": {
          type: "boolean"
        },
        "required_pull_request_reviews.dismissal_restrictions": {
          type: "object"
        },
        "required_pull_request_reviews.dismissal_restrictions.teams": {
          type: "string[]"
        },
        "required_pull_request_reviews.dismissal_restrictions.users": {
          type: "string[]"
        },
        "required_pull_request_reviews.require_code_owner_reviews": {
          type: "boolean"
        },
        "required_pull_request_reviews.required_approving_review_count": {
          type: "integer"
        },
        required_status_checks: {
          allowNull: true,
          required: true,
          type: "object"
        },
        "required_status_checks.contexts": {
          required: true,
          type: "string[]"
        },
        "required_status_checks.strict": {
          required: true,
          type: "boolean"
        },
        restrictions: {
          allowNull: true,
          required: true,
          type: "object"
        },
        "restrictions.apps": {
          type: "string[]"
        },
        "restrictions.teams": {
          required: true,
          type: "string[]"
        },
        "restrictions.users": {
          required: true,
          type: "string[]"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection"
    },
    updateCommitComment: {
      method: "PATCH",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/comments/:comment_id"
    },
    updateFile: {
      deprecated: "octokit.repos.updateFile() has been renamed to octokit.repos.createOrUpdateFile() (2019-06-07)",
      method: "PUT",
      params: {
        author: {
          type: "object"
        },
        "author.email": {
          required: true,
          type: "string"
        },
        "author.name": {
          required: true,
          type: "string"
        },
        branch: {
          type: "string"
        },
        committer: {
          type: "object"
        },
        "committer.email": {
          required: true,
          type: "string"
        },
        "committer.name": {
          required: true,
          type: "string"
        },
        content: {
          required: true,
          type: "string"
        },
        message: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        path: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        sha: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/contents/:path"
    },
    updateHook: {
      method: "PATCH",
      params: {
        active: {
          type: "boolean"
        },
        add_events: {
          type: "string[]"
        },
        config: {
          type: "object"
        },
        "config.content_type": {
          type: "string"
        },
        "config.insecure_ssl": {
          type: "string"
        },
        "config.secret": {
          type: "string"
        },
        "config.url": {
          required: true,
          type: "string"
        },
        events: {
          type: "string[]"
        },
        hook_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        remove_events: {
          type: "string[]"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/hooks/:hook_id"
    },
    updateInformationAboutPagesSite: {
      method: "PUT",
      params: {
        cname: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        source: {
          enum: ['"gh-pages"', '"master"', '"master /docs"'],
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/pages"
    },
    updateInvitation: {
      method: "PATCH",
      params: {
        invitation_id: {
          required: true,
          type: "integer"
        },
        owner: {
          required: true,
          type: "string"
        },
        permissions: {
          enum: ["read", "write", "admin"],
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/invitations/:invitation_id"
    },
    updateProtectedBranchPullRequestReviewEnforcement: {
      method: "PATCH",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        dismiss_stale_reviews: {
          type: "boolean"
        },
        dismissal_restrictions: {
          type: "object"
        },
        "dismissal_restrictions.teams": {
          type: "string[]"
        },
        "dismissal_restrictions.users": {
          type: "string[]"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        require_code_owner_reviews: {
          type: "boolean"
        },
        required_approving_review_count: {
          type: "integer"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_pull_request_reviews"
    },
    updateProtectedBranchRequiredStatusChecks: {
      method: "PATCH",
      params: {
        branch: {
          required: true,
          type: "string"
        },
        contexts: {
          type: "string[]"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        strict: {
          type: "boolean"
        }
      },
      url: "/repos/:owner/:repo/branches/:branch/protection/required_status_checks"
    },
    updateRelease: {
      method: "PATCH",
      params: {
        body: {
          type: "string"
        },
        draft: {
          type: "boolean"
        },
        name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        prerelease: {
          type: "boolean"
        },
        release_id: {
          required: true,
          type: "integer"
        },
        repo: {
          required: true,
          type: "string"
        },
        tag_name: {
          type: "string"
        },
        target_commitish: {
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/:release_id"
    },
    updateReleaseAsset: {
      method: "PATCH",
      params: {
        asset_id: {
          required: true,
          type: "integer"
        },
        label: {
          type: "string"
        },
        name: {
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        }
      },
      url: "/repos/:owner/:repo/releases/assets/:asset_id"
    },
    uploadReleaseAsset: {
      method: "POST",
      params: {
        data: {
          mapTo: "data",
          required: true,
          type: "string | object"
        },
        file: {
          alias: "data",
          deprecated: true,
          type: "string | object"
        },
        headers: {
          required: true,
          type: "object"
        },
        "headers.content-length": {
          required: true,
          type: "integer"
        },
        "headers.content-type": {
          required: true,
          type: "string"
        },
        label: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        url: {
          required: true,
          type: "string"
        }
      },
      url: ":url"
    }
  },
  search: {
    code: {
      method: "GET",
      params: {
        order: {
          enum: ["desc", "asc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        q: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["indexed"],
          type: "string"
        }
      },
      url: "/search/code"
    },
    commits: {
      headers: {
        accept: "application/vnd.github.cloak-preview+json"
      },
      method: "GET",
      params: {
        order: {
          enum: ["desc", "asc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        q: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["author-date", "committer-date"],
          type: "string"
        }
      },
      url: "/search/commits"
    },
    issues: {
      deprecated: "octokit.search.issues() has been renamed to octokit.search.issuesAndPullRequests() (2018-12-27)",
      method: "GET",
      params: {
        order: {
          enum: ["desc", "asc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        q: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"],
          type: "string"
        }
      },
      url: "/search/issues"
    },
    issuesAndPullRequests: {
      method: "GET",
      params: {
        order: {
          enum: ["desc", "asc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        q: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["comments", "reactions", "reactions-+1", "reactions--1", "reactions-smile", "reactions-thinking_face", "reactions-heart", "reactions-tada", "interactions", "created", "updated"],
          type: "string"
        }
      },
      url: "/search/issues"
    },
    labels: {
      method: "GET",
      params: {
        order: {
          enum: ["desc", "asc"],
          type: "string"
        },
        q: {
          required: true,
          type: "string"
        },
        repository_id: {
          required: true,
          type: "integer"
        },
        sort: {
          enum: ["created", "updated"],
          type: "string"
        }
      },
      url: "/search/labels"
    },
    repos: {
      method: "GET",
      params: {
        order: {
          enum: ["desc", "asc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        q: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["stars", "forks", "help-wanted-issues", "updated"],
          type: "string"
        }
      },
      url: "/search/repositories"
    },
    topics: {
      method: "GET",
      params: {
        q: {
          required: true,
          type: "string"
        }
      },
      url: "/search/topics"
    },
    users: {
      method: "GET",
      params: {
        order: {
          enum: ["desc", "asc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        q: {
          required: true,
          type: "string"
        },
        sort: {
          enum: ["followers", "repositories", "joined"],
          type: "string"
        }
      },
      url: "/search/users"
    }
  },
  teams: {
    addMember: {
      deprecated: "octokit.teams.addMember() has been renamed to octokit.teams.addMemberLegacy() (2020-01-16)",
      method: "PUT",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/members/:username"
    },
    addMemberLegacy: {
      deprecated: "octokit.teams.addMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#add-team-member-legacy",
      method: "PUT",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/members/:username"
    },
    addOrUpdateMembership: {
      deprecated: "octokit.teams.addOrUpdateMembership() has been renamed to octokit.teams.addOrUpdateMembershipLegacy() (2020-01-16)",
      method: "PUT",
      params: {
        role: {
          enum: ["member", "maintainer"],
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/memberships/:username"
    },
    addOrUpdateMembershipInOrg: {
      method: "PUT",
      params: {
        org: {
          required: true,
          type: "string"
        },
        role: {
          enum: ["member", "maintainer"],
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/memberships/:username"
    },
    addOrUpdateMembershipLegacy: {
      deprecated: "octokit.teams.addOrUpdateMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#add-or-update-team-membership-legacy",
      method: "PUT",
      params: {
        role: {
          enum: ["member", "maintainer"],
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/memberships/:username"
    },
    addOrUpdateProject: {
      deprecated: "octokit.teams.addOrUpdateProject() has been renamed to octokit.teams.addOrUpdateProjectLegacy() (2020-01-16)",
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "PUT",
      params: {
        permission: {
          enum: ["read", "write", "admin"],
          type: "string"
        },
        project_id: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects/:project_id"
    },
    addOrUpdateProjectInOrg: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "PUT",
      params: {
        org: {
          required: true,
          type: "string"
        },
        permission: {
          enum: ["read", "write", "admin"],
          type: "string"
        },
        project_id: {
          required: true,
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/projects/:project_id"
    },
    addOrUpdateProjectLegacy: {
      deprecated: "octokit.teams.addOrUpdateProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#add-or-update-team-project-legacy",
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "PUT",
      params: {
        permission: {
          enum: ["read", "write", "admin"],
          type: "string"
        },
        project_id: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects/:project_id"
    },
    addOrUpdateRepo: {
      deprecated: "octokit.teams.addOrUpdateRepo() has been renamed to octokit.teams.addOrUpdateRepoLegacy() (2020-01-16)",
      method: "PUT",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos/:owner/:repo"
    },
    addOrUpdateRepoInOrg: {
      method: "PUT",
      params: {
        org: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/repos/:owner/:repo"
    },
    addOrUpdateRepoLegacy: {
      deprecated: "octokit.teams.addOrUpdateRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#add-or-update-team-repository-legacy",
      method: "PUT",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos/:owner/:repo"
    },
    checkManagesRepo: {
      deprecated: "octokit.teams.checkManagesRepo() has been renamed to octokit.teams.checkManagesRepoLegacy() (2020-01-16)",
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos/:owner/:repo"
    },
    checkManagesRepoInOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/repos/:owner/:repo"
    },
    checkManagesRepoLegacy: {
      deprecated: "octokit.teams.checkManagesRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#check-if-a-team-manages-a-repository-legacy",
      method: "GET",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos/:owner/:repo"
    },
    create: {
      method: "POST",
      params: {
        description: {
          type: "string"
        },
        maintainers: {
          type: "string[]"
        },
        name: {
          required: true,
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        parent_team_id: {
          type: "integer"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        privacy: {
          enum: ["secret", "closed"],
          type: "string"
        },
        repo_names: {
          type: "string[]"
        }
      },
      url: "/orgs/:org/teams"
    },
    createDiscussion: {
      deprecated: "octokit.teams.createDiscussion() has been renamed to octokit.teams.createDiscussionLegacy() (2020-01-16)",
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        private: {
          type: "boolean"
        },
        team_id: {
          required: true,
          type: "integer"
        },
        title: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/discussions"
    },
    createDiscussionComment: {
      deprecated: "octokit.teams.createDiscussionComment() has been renamed to octokit.teams.createDiscussionCommentLegacy() (2020-01-16)",
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments"
    },
    createDiscussionCommentInOrg: {
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments"
    },
    createDiscussionCommentLegacy: {
      deprecated: "octokit.teams.createDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#create-a-comment-legacy",
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments"
    },
    createDiscussionInOrg: {
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        private: {
          type: "boolean"
        },
        team_slug: {
          required: true,
          type: "string"
        },
        title: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions"
    },
    createDiscussionLegacy: {
      deprecated: "octokit.teams.createDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#create-a-discussion-legacy",
      method: "POST",
      params: {
        body: {
          required: true,
          type: "string"
        },
        private: {
          type: "boolean"
        },
        team_id: {
          required: true,
          type: "integer"
        },
        title: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/discussions"
    },
    delete: {
      deprecated: "octokit.teams.delete() has been renamed to octokit.teams.deleteLegacy() (2020-01-16)",
      method: "DELETE",
      params: {
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id"
    },
    deleteDiscussion: {
      deprecated: "octokit.teams.deleteDiscussion() has been renamed to octokit.teams.deleteDiscussionLegacy() (2020-01-16)",
      method: "DELETE",
      params: {
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number"
    },
    deleteDiscussionComment: {
      deprecated: "octokit.teams.deleteDiscussionComment() has been renamed to octokit.teams.deleteDiscussionCommentLegacy() (2020-01-16)",
      method: "DELETE",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    deleteDiscussionCommentInOrg: {
      method: "DELETE",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"
    },
    deleteDiscussionCommentLegacy: {
      deprecated: "octokit.teams.deleteDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#delete-a-comment-legacy",
      method: "DELETE",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    deleteDiscussionInOrg: {
      method: "DELETE",
      params: {
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number"
    },
    deleteDiscussionLegacy: {
      deprecated: "octokit.teams.deleteDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#delete-a-discussion-legacy",
      method: "DELETE",
      params: {
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number"
    },
    deleteInOrg: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug"
    },
    deleteLegacy: {
      deprecated: "octokit.teams.deleteLegacy() is deprecated, see https://developer.github.com/v3/teams/#delete-team-legacy",
      method: "DELETE",
      params: {
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id"
    },
    get: {
      deprecated: "octokit.teams.get() has been renamed to octokit.teams.getLegacy() (2020-01-16)",
      method: "GET",
      params: {
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id"
    },
    getByName: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug"
    },
    getDiscussion: {
      deprecated: "octokit.teams.getDiscussion() has been renamed to octokit.teams.getDiscussionLegacy() (2020-01-16)",
      method: "GET",
      params: {
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number"
    },
    getDiscussionComment: {
      deprecated: "octokit.teams.getDiscussionComment() has been renamed to octokit.teams.getDiscussionCommentLegacy() (2020-01-16)",
      method: "GET",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    getDiscussionCommentInOrg: {
      method: "GET",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"
    },
    getDiscussionCommentLegacy: {
      deprecated: "octokit.teams.getDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#get-a-single-comment-legacy",
      method: "GET",
      params: {
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    getDiscussionInOrg: {
      method: "GET",
      params: {
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number"
    },
    getDiscussionLegacy: {
      deprecated: "octokit.teams.getDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#get-a-single-discussion-legacy",
      method: "GET",
      params: {
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number"
    },
    getLegacy: {
      deprecated: "octokit.teams.getLegacy() is deprecated, see https://developer.github.com/v3/teams/#get-team-legacy",
      method: "GET",
      params: {
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id"
    },
    getMember: {
      deprecated: "octokit.teams.getMember() has been renamed to octokit.teams.getMemberLegacy() (2020-01-16)",
      method: "GET",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/members/:username"
    },
    getMemberLegacy: {
      deprecated: "octokit.teams.getMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#get-team-member-legacy",
      method: "GET",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/members/:username"
    },
    getMembership: {
      deprecated: "octokit.teams.getMembership() has been renamed to octokit.teams.getMembershipLegacy() (2020-01-16)",
      method: "GET",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/memberships/:username"
    },
    getMembershipInOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/memberships/:username"
    },
    getMembershipLegacy: {
      deprecated: "octokit.teams.getMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#get-team-membership-legacy",
      method: "GET",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/memberships/:username"
    },
    list: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/orgs/:org/teams"
    },
    listChild: {
      deprecated: "octokit.teams.listChild() has been renamed to octokit.teams.listChildLegacy() (2020-01-16)",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/teams"
    },
    listChildInOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/teams"
    },
    listChildLegacy: {
      deprecated: "octokit.teams.listChildLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-child-teams-legacy",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/teams"
    },
    listDiscussionComments: {
      deprecated: "octokit.teams.listDiscussionComments() has been renamed to octokit.teams.listDiscussionCommentsLegacy() (2020-01-16)",
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments"
    },
    listDiscussionCommentsInOrg: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments"
    },
    listDiscussionCommentsLegacy: {
      deprecated: "octokit.teams.listDiscussionCommentsLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#list-comments-legacy",
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments"
    },
    listDiscussions: {
      deprecated: "octokit.teams.listDiscussions() has been renamed to octokit.teams.listDiscussionsLegacy() (2020-01-16)",
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions"
    },
    listDiscussionsInOrg: {
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions"
    },
    listDiscussionsLegacy: {
      deprecated: "octokit.teams.listDiscussionsLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#list-discussions-legacy",
      method: "GET",
      params: {
        direction: {
          enum: ["asc", "desc"],
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions"
    },
    listForAuthenticatedUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/teams"
    },
    listMembers: {
      deprecated: "octokit.teams.listMembers() has been renamed to octokit.teams.listMembersLegacy() (2020-01-16)",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        role: {
          enum: ["member", "maintainer", "all"],
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/members"
    },
    listMembersInOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        role: {
          enum: ["member", "maintainer", "all"],
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/members"
    },
    listMembersLegacy: {
      deprecated: "octokit.teams.listMembersLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#list-team-members-legacy",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        role: {
          enum: ["member", "maintainer", "all"],
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/members"
    },
    listPendingInvitations: {
      deprecated: "octokit.teams.listPendingInvitations() has been renamed to octokit.teams.listPendingInvitationsLegacy() (2020-01-16)",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/invitations"
    },
    listPendingInvitationsInOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/invitations"
    },
    listPendingInvitationsLegacy: {
      deprecated: "octokit.teams.listPendingInvitationsLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#list-pending-team-invitations-legacy",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/invitations"
    },
    listProjects: {
      deprecated: "octokit.teams.listProjects() has been renamed to octokit.teams.listProjectsLegacy() (2020-01-16)",
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects"
    },
    listProjectsInOrg: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/projects"
    },
    listProjectsLegacy: {
      deprecated: "octokit.teams.listProjectsLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-team-projects-legacy",
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects"
    },
    listRepos: {
      deprecated: "octokit.teams.listRepos() has been renamed to octokit.teams.listReposLegacy() (2020-01-16)",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos"
    },
    listReposInOrg: {
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/repos"
    },
    listReposLegacy: {
      deprecated: "octokit.teams.listReposLegacy() is deprecated, see https://developer.github.com/v3/teams/#list-team-repos-legacy",
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos"
    },
    removeMember: {
      deprecated: "octokit.teams.removeMember() has been renamed to octokit.teams.removeMemberLegacy() (2020-01-16)",
      method: "DELETE",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/members/:username"
    },
    removeMemberLegacy: {
      deprecated: "octokit.teams.removeMemberLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#remove-team-member-legacy",
      method: "DELETE",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/members/:username"
    },
    removeMembership: {
      deprecated: "octokit.teams.removeMembership() has been renamed to octokit.teams.removeMembershipLegacy() (2020-01-16)",
      method: "DELETE",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/memberships/:username"
    },
    removeMembershipInOrg: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/memberships/:username"
    },
    removeMembershipLegacy: {
      deprecated: "octokit.teams.removeMembershipLegacy() is deprecated, see https://developer.github.com/v3/teams/members/#remove-team-membership-legacy",
      method: "DELETE",
      params: {
        team_id: {
          required: true,
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/teams/:team_id/memberships/:username"
    },
    removeProject: {
      deprecated: "octokit.teams.removeProject() has been renamed to octokit.teams.removeProjectLegacy() (2020-01-16)",
      method: "DELETE",
      params: {
        project_id: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects/:project_id"
    },
    removeProjectInOrg: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        project_id: {
          required: true,
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/projects/:project_id"
    },
    removeProjectLegacy: {
      deprecated: "octokit.teams.removeProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#remove-team-project-legacy",
      method: "DELETE",
      params: {
        project_id: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects/:project_id"
    },
    removeRepo: {
      deprecated: "octokit.teams.removeRepo() has been renamed to octokit.teams.removeRepoLegacy() (2020-01-16)",
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos/:owner/:repo"
    },
    removeRepoInOrg: {
      method: "DELETE",
      params: {
        org: {
          required: true,
          type: "string"
        },
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/repos/:owner/:repo"
    },
    removeRepoLegacy: {
      deprecated: "octokit.teams.removeRepoLegacy() is deprecated, see https://developer.github.com/v3/teams/#remove-team-repository-legacy",
      method: "DELETE",
      params: {
        owner: {
          required: true,
          type: "string"
        },
        repo: {
          required: true,
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/repos/:owner/:repo"
    },
    reviewProject: {
      deprecated: "octokit.teams.reviewProject() has been renamed to octokit.teams.reviewProjectLegacy() (2020-01-16)",
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        project_id: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects/:project_id"
    },
    reviewProjectInOrg: {
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        org: {
          required: true,
          type: "string"
        },
        project_id: {
          required: true,
          type: "integer"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/projects/:project_id"
    },
    reviewProjectLegacy: {
      deprecated: "octokit.teams.reviewProjectLegacy() is deprecated, see https://developer.github.com/v3/teams/#review-a-team-project-legacy",
      headers: {
        accept: "application/vnd.github.inertia-preview+json"
      },
      method: "GET",
      params: {
        project_id: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/projects/:project_id"
    },
    update: {
      deprecated: "octokit.teams.update() has been renamed to octokit.teams.updateLegacy() (2020-01-16)",
      method: "PATCH",
      params: {
        description: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        parent_team_id: {
          type: "integer"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        privacy: {
          enum: ["secret", "closed"],
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id"
    },
    updateDiscussion: {
      deprecated: "octokit.teams.updateDiscussion() has been renamed to octokit.teams.updateDiscussionLegacy() (2020-01-16)",
      method: "PATCH",
      params: {
        body: {
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        },
        title: {
          type: "string"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number"
    },
    updateDiscussionComment: {
      deprecated: "octokit.teams.updateDiscussionComment() has been renamed to octokit.teams.updateDiscussionCommentLegacy() (2020-01-16)",
      method: "PATCH",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    updateDiscussionCommentInOrg: {
      method: "PATCH",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number/comments/:comment_number"
    },
    updateDiscussionCommentLegacy: {
      deprecated: "octokit.teams.updateDiscussionCommentLegacy() is deprecated, see https://developer.github.com/v3/teams/discussion_comments/#edit-a-comment-legacy",
      method: "PATCH",
      params: {
        body: {
          required: true,
          type: "string"
        },
        comment_number: {
          required: true,
          type: "integer"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number/comments/:comment_number"
    },
    updateDiscussionInOrg: {
      method: "PATCH",
      params: {
        body: {
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        org: {
          required: true,
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        },
        title: {
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug/discussions/:discussion_number"
    },
    updateDiscussionLegacy: {
      deprecated: "octokit.teams.updateDiscussionLegacy() is deprecated, see https://developer.github.com/v3/teams/discussions/#edit-a-discussion-legacy",
      method: "PATCH",
      params: {
        body: {
          type: "string"
        },
        discussion_number: {
          required: true,
          type: "integer"
        },
        team_id: {
          required: true,
          type: "integer"
        },
        title: {
          type: "string"
        }
      },
      url: "/teams/:team_id/discussions/:discussion_number"
    },
    updateInOrg: {
      method: "PATCH",
      params: {
        description: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        org: {
          required: true,
          type: "string"
        },
        parent_team_id: {
          type: "integer"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        privacy: {
          enum: ["secret", "closed"],
          type: "string"
        },
        team_slug: {
          required: true,
          type: "string"
        }
      },
      url: "/orgs/:org/teams/:team_slug"
    },
    updateLegacy: {
      deprecated: "octokit.teams.updateLegacy() is deprecated, see https://developer.github.com/v3/teams/#edit-team-legacy",
      method: "PATCH",
      params: {
        description: {
          type: "string"
        },
        name: {
          required: true,
          type: "string"
        },
        parent_team_id: {
          type: "integer"
        },
        permission: {
          enum: ["pull", "push", "admin"],
          type: "string"
        },
        privacy: {
          enum: ["secret", "closed"],
          type: "string"
        },
        team_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/teams/:team_id"
    }
  },
  users: {
    addEmails: {
      method: "POST",
      params: {
        emails: {
          required: true,
          type: "string[]"
        }
      },
      url: "/user/emails"
    },
    block: {
      method: "PUT",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/user/blocks/:username"
    },
    checkBlocked: {
      method: "GET",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/user/blocks/:username"
    },
    checkFollowing: {
      method: "GET",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/user/following/:username"
    },
    checkFollowingForUser: {
      method: "GET",
      params: {
        target_user: {
          required: true,
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/following/:target_user"
    },
    createGpgKey: {
      method: "POST",
      params: {
        armored_public_key: {
          type: "string"
        }
      },
      url: "/user/gpg_keys"
    },
    createPublicKey: {
      method: "POST",
      params: {
        key: {
          type: "string"
        },
        title: {
          type: "string"
        }
      },
      url: "/user/keys"
    },
    deleteEmails: {
      method: "DELETE",
      params: {
        emails: {
          required: true,
          type: "string[]"
        }
      },
      url: "/user/emails"
    },
    deleteGpgKey: {
      method: "DELETE",
      params: {
        gpg_key_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/gpg_keys/:gpg_key_id"
    },
    deletePublicKey: {
      method: "DELETE",
      params: {
        key_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/keys/:key_id"
    },
    follow: {
      method: "PUT",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/user/following/:username"
    },
    getAuthenticated: {
      method: "GET",
      params: {},
      url: "/user"
    },
    getByUsername: {
      method: "GET",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username"
    },
    getContextForUser: {
      method: "GET",
      params: {
        subject_id: {
          type: "string"
        },
        subject_type: {
          enum: ["organization", "repository", "issue", "pull_request"],
          type: "string"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/hovercard"
    },
    getGpgKey: {
      method: "GET",
      params: {
        gpg_key_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/gpg_keys/:gpg_key_id"
    },
    getPublicKey: {
      method: "GET",
      params: {
        key_id: {
          required: true,
          type: "integer"
        }
      },
      url: "/user/keys/:key_id"
    },
    list: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        since: {
          type: "string"
        }
      },
      url: "/users"
    },
    listBlocked: {
      method: "GET",
      params: {},
      url: "/user/blocks"
    },
    listEmails: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/emails"
    },
    listFollowersForAuthenticatedUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/followers"
    },
    listFollowersForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/followers"
    },
    listFollowingForAuthenticatedUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/following"
    },
    listFollowingForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/following"
    },
    listGpgKeys: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/gpg_keys"
    },
    listGpgKeysForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/gpg_keys"
    },
    listPublicEmails: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/public_emails"
    },
    listPublicKeys: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        }
      },
      url: "/user/keys"
    },
    listPublicKeysForUser: {
      method: "GET",
      params: {
        page: {
          type: "integer"
        },
        per_page: {
          type: "integer"
        },
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/users/:username/keys"
    },
    togglePrimaryEmailVisibility: {
      method: "PATCH",
      params: {
        email: {
          required: true,
          type: "string"
        },
        visibility: {
          required: true,
          type: "string"
        }
      },
      url: "/user/email/visibility"
    },
    unblock: {
      method: "DELETE",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/user/blocks/:username"
    },
    unfollow: {
      method: "DELETE",
      params: {
        username: {
          required: true,
          type: "string"
        }
      },
      url: "/user/following/:username"
    },
    updateAuthenticated: {
      method: "PATCH",
      params: {
        bio: {
          type: "string"
        },
        blog: {
          type: "string"
        },
        company: {
          type: "string"
        },
        email: {
          type: "string"
        },
        hireable: {
          type: "boolean"
        },
        location: {
          type: "string"
        },
        name: {
          type: "string"
        }
      },
      url: "/user"
    }
  }
};

const VERSION = "2.4.0";

function registerEndpoints(octokit, routes) {
  Object.keys(routes).forEach(namespaceName => {
    if (!octokit[namespaceName]) {
      octokit[namespaceName] = {};
    }

    Object.keys(routes[namespaceName]).forEach(apiName => {
      const apiOptions = routes[namespaceName][apiName];
      const endpointDefaults = ["method", "url", "headers"].reduce((map, key) => {
        if (typeof apiOptions[key] !== "undefined") {
          map[key] = apiOptions[key];
        }

        return map;
      }, {});
      endpointDefaults.request = {
        validate: apiOptions.params
      };
      let request = octokit.request.defaults(endpointDefaults); // patch request & endpoint methods to support deprecated parameters.
      // Not the most elegant solution, but we don’t want to move deprecation
      // logic into octokit/endpoint.js as it’s out of scope

      const hasDeprecatedParam = Object.keys(apiOptions.params || {}).find(key => apiOptions.params[key].deprecated);

      if (hasDeprecatedParam) {
        const patch = patchForDeprecation.bind(null, octokit, apiOptions);
        request = patch(octokit.request.defaults(endpointDefaults), `.${namespaceName}.${apiName}()`);
        request.endpoint = patch(request.endpoint, `.${namespaceName}.${apiName}.endpoint()`);
        request.endpoint.merge = patch(request.endpoint.merge, `.${namespaceName}.${apiName}.endpoint.merge()`);
      }

      if (apiOptions.deprecated) {
        octokit[namespaceName][apiName] = Object.assign(function deprecatedEndpointMethod() {
          octokit.log.warn(new deprecation.Deprecation(`[@octokit/rest] ${apiOptions.deprecated}`));
          octokit[namespaceName][apiName] = request;
          return request.apply(null, arguments);
        }, request);
        return;
      }

      octokit[namespaceName][apiName] = request;
    });
  });
}

function patchForDeprecation(octokit, apiOptions, method, methodName) {
  const patchedMethod = options => {
    options = Object.assign({}, options);
    Object.keys(options).forEach(key => {
      if (apiOptions.params[key] && apiOptions.params[key].deprecated) {
        const aliasKey = apiOptions.params[key].alias;
        octokit.log.warn(new deprecation.Deprecation(`[@octokit/rest] "${key}" parameter is deprecated for "${methodName}". Use "${aliasKey}" instead`));

        if (!(aliasKey in options)) {
          options[aliasKey] = options[key];
        }

        delete options[key];
      }
    });
    return method(options);
  };

  Object.keys(method).forEach(key => {
    patchedMethod[key] = method[key];
  });
  return patchedMethod;
}

/**
 * This plugin is a 1:1 copy of internal @octokit/rest plugins. The primary
 * goal is to rebuild @octokit/rest on top of @octokit/core. Once that is
 * done, we will remove the registerEndpoints methods and return the methods
 * directly as with the other plugins. At that point we will also remove the
 * legacy workarounds and deprecations.
 *
 * See the plan at
 * https://github.com/octokit/plugin-rest-endpoint-methods.js/pull/1
 */

function restEndpointMethods(octokit) {
  // @ts-ignore
  octokit.registerEndpoints = registerEndpoints.bind(null, octokit);
  registerEndpoints(octokit, endpointsByScope); // Aliasing scopes for backward compatibility
  // See https://github.com/octokit/rest.js/pull/1134

  [["gitdata", "git"], ["authorization", "oauthAuthorizations"], ["pullRequests", "pulls"]].forEach(([deprecatedScope, scope]) => {
    Object.defineProperty(octokit, deprecatedScope, {
      get() {
        octokit.log.warn( // @ts-ignore
        new deprecation.Deprecation(`[@octokit/plugin-rest-endpoint-methods] "octokit.${deprecatedScope}.*" methods are deprecated, use "octokit.${scope}.*" instead`)); // @ts-ignore

        return octokit[scope];
      }

    });
  });
  return {};
}
restEndpointMethods.VERSION = VERSION;

exports.restEndpointMethods = restEndpointMethods;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 537:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var deprecation = __nccwpck_require__(8932);
var once = _interopDefault(__nccwpck_require__(1223));

const logOnce = once(deprecation => console.warn(deprecation));
/**
 * Error with extra properties to help with debugging
 */

class RequestError extends Error {
  constructor(message, statusCode, options) {
    super(message); // Maintains proper stack trace (only available on V8)

    /* istanbul ignore next */

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }

    this.name = "HttpError";
    this.status = statusCode;
    Object.defineProperty(this, "code", {
      get() {
        logOnce(new deprecation.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
        return statusCode;
      }

    });
    this.headers = options.headers || {}; // redact request credentials without mutating original request options

    const requestCopy = Object.assign({}, options.request);

    if (options.request.headers.authorization) {
      requestCopy.headers = Object.assign({}, options.request.headers, {
        authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
      });
    }

    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit
    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications
    .replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]") // OAuth tokens can be passed as URL query parameters, although it is not recommended
    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header
    .replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy;
  }

}

exports.RequestError = RequestError;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 6234:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var endpoint = __nccwpck_require__(9440);
var universalUserAgent = __nccwpck_require__(5030);
var isPlainObject = __nccwpck_require__(3287);
var nodeFetch = _interopDefault(__nccwpck_require__(467));
var requestError = __nccwpck_require__(537);

const VERSION = "5.4.15";

function getBufferResponse(response) {
  return response.arrayBuffer();
}

function fetchWrapper(requestOptions) {
  if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {
    requestOptions.body = JSON.stringify(requestOptions.body);
  }

  let headers = {};
  let status;
  let url;
  const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;
  return fetch(requestOptions.url, Object.assign({
    method: requestOptions.method,
    body: requestOptions.body,
    headers: requestOptions.headers,
    redirect: requestOptions.redirect
  }, // `requestOptions.request.agent` type is incompatible
  // see https://github.com/octokit/types.ts/pull/264
  requestOptions.request)).then(response => {
    url = response.url;
    status = response.status;

    for (const keyAndValue of response.headers) {
      headers[keyAndValue[0]] = keyAndValue[1];
    }

    if (status === 204 || status === 205) {
      return;
    } // GitHub API returns 200 for HEAD requests


    if (requestOptions.method === "HEAD") {
      if (status < 400) {
        return;
      }

      throw new requestError.RequestError(response.statusText, status, {
        headers,
        request: requestOptions
      });
    }

    if (status === 304) {
      throw new requestError.RequestError("Not modified", status, {
        headers,
        request: requestOptions
      });
    }

    if (status >= 400) {
      return response.text().then(message => {
        const error = new requestError.RequestError(message, status, {
          headers,
          request: requestOptions
        });

        try {
          let responseBody = JSON.parse(error.message);
          Object.assign(error, responseBody);
          let errors = responseBody.errors; // Assumption `errors` would always be in Array format

          error.message = error.message + ": " + errors.map(JSON.stringify).join(", ");
        } catch (e) {// ignore, see octokit/rest.js#684
        }

        throw error;
      });
    }

    const contentType = response.headers.get("content-type");

    if (/application\/json/.test(contentType)) {
      return response.json();
    }

    if (!contentType || /^text\/|charset=utf-8$/.test(contentType)) {
      return response.text();
    }

    return getBufferResponse(response);
  }).then(data => {
    return {
      status,
      url,
      headers,
      data
    };
  }).catch(error => {
    if (error instanceof requestError.RequestError) {
      throw error;
    }

    throw new requestError.RequestError(error.message, 500, {
      headers,
      request: requestOptions
    });
  });
}

function withDefaults(oldEndpoint, newDefaults) {
  const endpoint = oldEndpoint.defaults(newDefaults);

  const newApi = function (route, parameters) {
    const endpointOptions = endpoint.merge(route, parameters);

    if (!endpointOptions.request || !endpointOptions.request.hook) {
      return fetchWrapper(endpoint.parse(endpointOptions));
    }

    const request = (route, parameters) => {
      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));
    };

    Object.assign(request, {
      endpoint,
      defaults: withDefaults.bind(null, endpoint)
    });
    return endpointOptions.request.hook(request, endpointOptions);
  };

  return Object.assign(newApi, {
    endpoint,
    defaults: withDefaults.bind(null, endpoint)
  });
}

const request = withDefaults(endpoint.endpoint, {
  headers: {
    "user-agent": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`
  }
});

exports.request = request;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 9351:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const { requestLog } = __nccwpck_require__(8883);
const {
  restEndpointMethods
} = __nccwpck_require__(3044);

const Core = __nccwpck_require__(9833);

const CORE_PLUGINS = [
  __nccwpck_require__(4555),
  __nccwpck_require__(3691), // deprecated: remove in v17
  requestLog,
  __nccwpck_require__(8579),
  restEndpointMethods,
  __nccwpck_require__(2657),

  __nccwpck_require__(2072) // deprecated: remove in v17
];

const OctokitRest = Core.plugin(CORE_PLUGINS);

function DeprecatedOctokit(options) {
  const warn =
    options && options.log && options.log.warn
      ? options.log.warn
      : console.warn;
  warn(
    '[@octokit/rest] `const Octokit = require("@octokit/rest")` is deprecated. Use `const { Octokit } = require("@octokit/rest")` instead'
  );
  return new OctokitRest(options);
}

const Octokit = Object.assign(DeprecatedOctokit, {
  Octokit: OctokitRest
});

Object.keys(OctokitRest).forEach(key => {
  /* istanbul ignore else */
  if (OctokitRest.hasOwnProperty(key)) {
    Octokit[key] = OctokitRest[key];
  }
});

module.exports = Octokit;


/***/ }),

/***/ 823:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = Octokit;

const { request } = __nccwpck_require__(6234);
const Hook = __nccwpck_require__(3682);

const parseClientOptions = __nccwpck_require__(4613);

function Octokit(plugins, options) {
  options = options || {};
  const hook = new Hook.Collection();
  const log = Object.assign(
    {
      debug: () => {},
      info: () => {},
      warn: console.warn,
      error: console.error
    },
    options && options.log
  );
  const api = {
    hook,
    log,
    request: request.defaults(parseClientOptions(options, log, hook))
  };

  plugins.forEach(pluginFunction => pluginFunction(api, options));

  return api;
}


/***/ }),

/***/ 9833:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

const factory = __nccwpck_require__(5320);

module.exports = factory();


/***/ }),

/***/ 5320:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = factory;

const Octokit = __nccwpck_require__(823);
const registerPlugin = __nccwpck_require__(7826);

function factory(plugins) {
  const Api = Octokit.bind(null, plugins || []);
  Api.plugin = registerPlugin.bind(null, plugins || []);
  return Api;
}


/***/ }),

/***/ 4613:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = parseOptions;

const { Deprecation } = __nccwpck_require__(8932);
const { getUserAgent } = __nccwpck_require__(3318);
const once = __nccwpck_require__(1223);

const pkg = __nccwpck_require__(9674);

const deprecateOptionsTimeout = once((log, deprecation) =>
  log.warn(deprecation)
);
const deprecateOptionsAgent = once((log, deprecation) => log.warn(deprecation));
const deprecateOptionsHeaders = once((log, deprecation) =>
  log.warn(deprecation)
);

function parseOptions(options, log, hook) {
  if (options.headers) {
    options.headers = Object.keys(options.headers).reduce((newObj, key) => {
      newObj[key.toLowerCase()] = options.headers[key];
      return newObj;
    }, {});
  }

  const clientDefaults = {
    headers: options.headers || {},
    request: options.request || {},
    mediaType: {
      previews: [],
      format: ""
    }
  };

  if (options.baseUrl) {
    clientDefaults.baseUrl = options.baseUrl;
  }

  if (options.userAgent) {
    clientDefaults.headers["user-agent"] = options.userAgent;
  }

  if (options.previews) {
    clientDefaults.mediaType.previews = options.previews;
  }

  if (options.timeZone) {
    clientDefaults.headers["time-zone"] = options.timeZone;
  }

  if (options.timeout) {
    deprecateOptionsTimeout(
      log,
      new Deprecation(
        "[@octokit/rest] new Octokit({timeout}) is deprecated. Use {request: {timeout}} instead. See https://github.com/octokit/request.js#request"
      )
    );
    clientDefaults.request.timeout = options.timeout;
  }

  if (options.agent) {
    deprecateOptionsAgent(
      log,
      new Deprecation(
        "[@octokit/rest] new Octokit({agent}) is deprecated. Use {request: {agent}} instead. See https://github.com/octokit/request.js#request"
      )
    );
    clientDefaults.request.agent = options.agent;
  }

  if (options.headers) {
    deprecateOptionsHeaders(
      log,
      new Deprecation(
        "[@octokit/rest] new Octokit({headers}) is deprecated. Use {userAgent, previews} instead. See https://github.com/octokit/request.js#request"
      )
    );
  }

  const userAgentOption = clientDefaults.headers["user-agent"];
  const defaultUserAgent = `octokit.js/${pkg.version} ${getUserAgent()}`;

  clientDefaults.headers["user-agent"] = [userAgentOption, defaultUserAgent]
    .filter(Boolean)
    .join(" ");

  clientDefaults.request.hook = hook.bind(null, "request");

  return clientDefaults;
}


/***/ }),

/***/ 7826:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = registerPlugin;

const factory = __nccwpck_require__(5320);

function registerPlugin(plugins, pluginFunction) {
  return factory(
    plugins.includes(pluginFunction) ? plugins : plugins.concat(pluginFunction)
  );
}


/***/ }),

/***/ 6239:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var deprecation = __nccwpck_require__(8932);
var once = _interopDefault(__nccwpck_require__(1223));

const logOnce = once(deprecation => console.warn(deprecation));
/**
 * Error with extra properties to help with debugging
 */

class RequestError extends Error {
  constructor(message, statusCode, options) {
    super(message); // Maintains proper stack trace (only available on V8)

    /* istanbul ignore next */

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }

    this.name = "HttpError";
    this.status = statusCode;
    Object.defineProperty(this, "code", {
      get() {
        logOnce(new deprecation.Deprecation("[@octokit/request-error] `error.code` is deprecated, use `error.status`."));
        return statusCode;
      }

    });
    this.headers = options.headers || {}; // redact request credentials without mutating original request options

    const requestCopy = Object.assign({}, options.request);

    if (options.request.headers.authorization) {
      requestCopy.headers = Object.assign({}, options.request.headers, {
        authorization: options.request.headers.authorization.replace(/ .*$/, " [REDACTED]")
      });
    }

    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit
    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications
    .replace(/\bclient_secret=\w+/g, "client_secret=[REDACTED]") // OAuth tokens can be passed as URL query parameters, although it is not recommended
    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header
    .replace(/\baccess_token=\w+/g, "access_token=[REDACTED]");
    this.request = requestCopy;
  }

}

exports.RequestError = RequestError;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 3318:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var osName = _interopDefault(__nccwpck_require__(4824));

function getUserAgent() {
  try {
    return `Node.js/${process.version.substr(1)} (${osName()}; ${process.arch})`;
  } catch (error) {
    if (/wmic os get Caption/.test(error.message)) {
      return "Windows <version undetectable>";
    }

    throw error;
  }
}

exports.getUserAgent = getUserAgent;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 795:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = authenticate;

const { Deprecation } = __nccwpck_require__(8932);
const once = __nccwpck_require__(1223);

const deprecateAuthenticate = once((log, deprecation) => log.warn(deprecation));

function authenticate(state, options) {
  deprecateAuthenticate(
    state.octokit.log,
    new Deprecation(
      '[@octokit/rest] octokit.authenticate() is deprecated. Use "auth" constructor option instead.'
    )
  );

  if (!options) {
    state.auth = false;
    return;
  }

  switch (options.type) {
    case "basic":
      if (!options.username || !options.password) {
        throw new Error(
          "Basic authentication requires both a username and password to be set"
        );
      }
      break;

    case "oauth":
      if (!options.token && !(options.key && options.secret)) {
        throw new Error(
          "OAuth2 authentication requires a token or key & secret to be set"
        );
      }
      break;

    case "token":
    case "app":
      if (!options.token) {
        throw new Error("Token authentication requires a token to be set");
      }
      break;

    default:
      throw new Error(
        "Invalid authentication type, must be 'basic', 'oauth', 'token' or 'app'"
      );
  }

  state.auth = options;
}


/***/ }),

/***/ 7578:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = authenticationBeforeRequest;

const btoa = __nccwpck_require__(2358);
const uniq = __nccwpck_require__(8216);

function authenticationBeforeRequest(state, options) {
  if (!state.auth.type) {
    return;
  }

  if (state.auth.type === "basic") {
    const hash = btoa(`${state.auth.username}:${state.auth.password}`);
    options.headers.authorization = `Basic ${hash}`;
    return;
  }

  if (state.auth.type === "token") {
    options.headers.authorization = `token ${state.auth.token}`;
    return;
  }

  if (state.auth.type === "app") {
    options.headers.authorization = `Bearer ${state.auth.token}`;
    const acceptHeaders = options.headers.accept
      .split(",")
      .concat("application/vnd.github.machine-man-preview+json");
    options.headers.accept = uniq(acceptHeaders)
      .filter(Boolean)
      .join(",");
    return;
  }

  options.url += options.url.indexOf("?") === -1 ? "?" : "&";

  if (state.auth.token) {
    options.url += `access_token=${encodeURIComponent(state.auth.token)}`;
    return;
  }

  const key = encodeURIComponent(state.auth.key);
  const secret = encodeURIComponent(state.auth.secret);
  options.url += `client_id=${key}&client_secret=${secret}`;
}


/***/ }),

/***/ 3691:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = authenticationPlugin;

const { Deprecation } = __nccwpck_require__(8932);
const once = __nccwpck_require__(1223);

const deprecateAuthenticate = once((log, deprecation) => log.warn(deprecation));

const authenticate = __nccwpck_require__(795);
const beforeRequest = __nccwpck_require__(7578);
const requestError = __nccwpck_require__(4275);

function authenticationPlugin(octokit, options) {
  if (options.auth) {
    octokit.authenticate = () => {
      deprecateAuthenticate(
        octokit.log,
        new Deprecation(
          '[@octokit/rest] octokit.authenticate() is deprecated and has no effect when "auth" option is set on Octokit constructor'
        )
      );
    };
    return;
  }
  const state = {
    octokit,
    auth: false
  };
  octokit.authenticate = authenticate.bind(null, state);
  octokit.hook.before("request", beforeRequest.bind(null, state));
  octokit.hook.error("request", requestError.bind(null, state));
}


/***/ }),

/***/ 4275:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = authenticationRequestError;

const { RequestError } = __nccwpck_require__(6239);

function authenticationRequestError(state, error, options) {
  /* istanbul ignore next */
  if (!error.headers) throw error;

  const otpRequired = /required/.test(error.headers["x-github-otp"] || "");
  // handle "2FA required" error only
  if (error.status !== 401 || !otpRequired) {
    throw error;
  }

  if (
    error.status === 401 &&
    otpRequired &&
    error.request &&
    error.request.headers["x-github-otp"]
  ) {
    throw new RequestError(
      "Invalid one-time password for two-factor authentication",
      401,
      {
        headers: error.headers,
        request: options
      }
    );
  }

  if (typeof state.auth.on2fa !== "function") {
    throw new RequestError(
      "2FA required, but options.on2fa is not a function. See https://github.com/octokit/rest.js#authentication",
      401,
      {
        headers: error.headers,
        request: options
      }
    );
  }

  return Promise.resolve()
    .then(() => {
      return state.auth.on2fa();
    })
    .then(oneTimePassword => {
      const newOptions = Object.assign(options, {
        headers: Object.assign(
          { "x-github-otp": oneTimePassword },
          options.headers
        )
      });
      return state.octokit.request(newOptions);
    });
}


/***/ }),

/***/ 9733:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = authenticationBeforeRequest;

const btoa = __nccwpck_require__(2358);

const withAuthorizationPrefix = __nccwpck_require__(9603);

function authenticationBeforeRequest(state, options) {
  if (typeof state.auth === "string") {
    options.headers.authorization = withAuthorizationPrefix(state.auth);
    return;
  }

  if (state.auth.username) {
    const hash = btoa(`${state.auth.username}:${state.auth.password}`);
    options.headers.authorization = `Basic ${hash}`;
    if (state.otp) {
      options.headers["x-github-otp"] = state.otp;
    }
    return;
  }

  if (state.auth.clientId) {
    // There is a special case for OAuth applications, when `clientId` and `clientSecret` is passed as
    // Basic Authorization instead of query parameters. The only routes where that applies share the same
    // URL though: `/applications/:client_id/tokens/:access_token`.
    //
    //  1. [Check an authorization](https://developer.github.com/v3/oauth_authorizations/#check-an-authorization)
    //  2. [Reset an authorization](https://developer.github.com/v3/oauth_authorizations/#reset-an-authorization)
    //  3. [Revoke an authorization for an application](https://developer.github.com/v3/oauth_authorizations/#revoke-an-authorization-for-an-application)
    //
    // We identify by checking the URL. It must merge both "/applications/:client_id/tokens/:access_token"
    // as well as "/applications/123/tokens/token456"
    if (/\/applications\/:?[\w_]+\/tokens\/:?[\w_]+($|\?)/.test(options.url)) {
      const hash = btoa(`${state.auth.clientId}:${state.auth.clientSecret}`);
      options.headers.authorization = `Basic ${hash}`;
      return;
    }

    options.url += options.url.indexOf("?") === -1 ? "?" : "&";
    options.url += `client_id=${state.auth.clientId}&client_secret=${state.auth.clientSecret}`;
    return;
  }

  return Promise.resolve()

    .then(() => {
      return state.auth();
    })

    .then(authorization => {
      options.headers.authorization = withAuthorizationPrefix(authorization);
    });
}


/***/ }),

/***/ 4555:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = authenticationPlugin;

const { createTokenAuth } = __nccwpck_require__(334);
const { Deprecation } = __nccwpck_require__(8932);
const once = __nccwpck_require__(1223);

const beforeRequest = __nccwpck_require__(9733);
const requestError = __nccwpck_require__(3217);
const validate = __nccwpck_require__(8997);
const withAuthorizationPrefix = __nccwpck_require__(9603);

const deprecateAuthBasic = once((log, deprecation) => log.warn(deprecation));
const deprecateAuthObject = once((log, deprecation) => log.warn(deprecation));

function authenticationPlugin(octokit, options) {
  // If `options.authStrategy` is set then use it and pass in `options.auth`
  if (options.authStrategy) {
    const auth = options.authStrategy(options.auth);
    octokit.hook.wrap("request", auth.hook);
    octokit.auth = auth;
    return;
  }

  // If neither `options.authStrategy` nor `options.auth` are set, the `octokit` instance
  // is unauthenticated. The `octokit.auth()` method is a no-op and no request hook is registred.
  if (!options.auth) {
    octokit.auth = () =>
      Promise.resolve({
        type: "unauthenticated"
      });
    return;
  }

  const isBasicAuthString =
    typeof options.auth === "string" &&
    /^basic/.test(withAuthorizationPrefix(options.auth));

  // If only `options.auth` is set to a string, use the default token authentication strategy.
  if (typeof options.auth === "string" && !isBasicAuthString) {
    const auth = createTokenAuth(options.auth);
    octokit.hook.wrap("request", auth.hook);
    octokit.auth = auth;
    return;
  }

  // Otherwise log a deprecation message
  const [deprecationMethod, deprecationMessapge] = isBasicAuthString
    ? [
        deprecateAuthBasic,
        'Setting the "new Octokit({ auth })" option to a Basic Auth string is deprecated. Use https://github.com/octokit/auth-basic.js instead. See (https://octokit.github.io/rest.js/#authentication)'
      ]
    : [
        deprecateAuthObject,
        'Setting the "new Octokit({ auth })" option to an object without also setting the "authStrategy" option is deprecated and will be removed in v17. See (https://octokit.github.io/rest.js/#authentication)'
      ];
  deprecationMethod(
    octokit.log,
    new Deprecation("[@octokit/rest] " + deprecationMessapge)
  );

  octokit.auth = () =>
    Promise.resolve({
      type: "deprecated",
      message: deprecationMessapge
    });

  validate(options.auth);

  const state = {
    octokit,
    auth: options.auth
  };

  octokit.hook.before("request", beforeRequest.bind(null, state));
  octokit.hook.error("request", requestError.bind(null, state));
}


/***/ }),

/***/ 3217:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = authenticationRequestError;

const { RequestError } = __nccwpck_require__(6239);

function authenticationRequestError(state, error, options) {
  if (!error.headers) throw error;

  const otpRequired = /required/.test(error.headers["x-github-otp"] || "");
  // handle "2FA required" error only
  if (error.status !== 401 || !otpRequired) {
    throw error;
  }

  if (
    error.status === 401 &&
    otpRequired &&
    error.request &&
    error.request.headers["x-github-otp"]
  ) {
    if (state.otp) {
      delete state.otp; // no longer valid, request again
    } else {
      throw new RequestError(
        "Invalid one-time password for two-factor authentication",
        401,
        {
          headers: error.headers,
          request: options
        }
      );
    }
  }

  if (typeof state.auth.on2fa !== "function") {
    throw new RequestError(
      "2FA required, but options.on2fa is not a function. See https://github.com/octokit/rest.js#authentication",
      401,
      {
        headers: error.headers,
        request: options
      }
    );
  }

  return Promise.resolve()
    .then(() => {
      return state.auth.on2fa();
    })
    .then(oneTimePassword => {
      const newOptions = Object.assign(options, {
        headers: Object.assign(options.headers, {
          "x-github-otp": oneTimePassword
        })
      });
      return state.octokit.request(newOptions).then(response => {
        // If OTP still valid, then persist it for following requests
        state.otp = oneTimePassword;
        return response;
      });
    });
}


/***/ }),

/***/ 8997:
/***/ ((module) => {

module.exports = validateAuth;

function validateAuth(auth) {
  if (typeof auth === "string") {
    return;
  }

  if (typeof auth === "function") {
    return;
  }

  if (auth.username && auth.password) {
    return;
  }

  if (auth.clientId && auth.clientSecret) {
    return;
  }

  throw new Error(`Invalid "auth" option: ${JSON.stringify(auth)}`);
}


/***/ }),

/***/ 9603:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = withAuthorizationPrefix;

const atob = __nccwpck_require__(5224);

const REGEX_IS_BASIC_AUTH = /^[\w-]+:/;

function withAuthorizationPrefix(authorization) {
  if (/^(basic|bearer|token) /i.test(authorization)) {
    return authorization;
  }

  try {
    if (REGEX_IS_BASIC_AUTH.test(atob(authorization))) {
      return `basic ${authorization}`;
    }
  } catch (error) {}

  if (authorization.split(/\./).length === 3) {
    return `bearer ${authorization}`;
  }

  return `token ${authorization}`;
}


/***/ }),

/***/ 8579:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = paginatePlugin;

const { paginateRest } = __nccwpck_require__(4193);

function paginatePlugin(octokit) {
  Object.assign(octokit, paginateRest(octokit));
}


/***/ }),

/***/ 2657:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = octokitValidate;

const validate = __nccwpck_require__(6132);

function octokitValidate(octokit) {
  octokit.hook.before("request", validate.bind(null, octokit));
}


/***/ }),

/***/ 6132:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


module.exports = validate;

const { RequestError } = __nccwpck_require__(6239);
const get = __nccwpck_require__(9197);
const set = __nccwpck_require__(1552);

function validate(octokit, options) {
  if (!options.request.validate) {
    return;
  }
  const { validate: params } = options.request;

  Object.keys(params).forEach(parameterName => {
    const parameter = get(params, parameterName);

    const expectedType = parameter.type;
    let parentParameterName;
    let parentValue;
    let parentParamIsPresent = true;
    let parentParameterIsArray = false;

    if (/\./.test(parameterName)) {
      parentParameterName = parameterName.replace(/\.[^.]+$/, "");
      parentParameterIsArray = parentParameterName.slice(-2) === "[]";
      if (parentParameterIsArray) {
        parentParameterName = parentParameterName.slice(0, -2);
      }
      parentValue = get(options, parentParameterName);
      parentParamIsPresent =
        parentParameterName === "headers" ||
        (typeof parentValue === "object" && parentValue !== null);
    }

    const values = parentParameterIsArray
      ? (get(options, parentParameterName) || []).map(
          value => value[parameterName.split(/\./).pop()]
        )
      : [get(options, parameterName)];

    values.forEach((value, i) => {
      const valueIsPresent = typeof value !== "undefined";
      const valueIsNull = value === null;
      const currentParameterName = parentParameterIsArray
        ? parameterName.replace(/\[\]/, `[${i}]`)
        : parameterName;

      if (!parameter.required && !valueIsPresent) {
        return;
      }

      // if the parent parameter is of type object but allows null
      // then the child parameters can be ignored
      if (!parentParamIsPresent) {
        return;
      }

      if (parameter.allowNull && valueIsNull) {
        return;
      }

      if (!parameter.allowNull && valueIsNull) {
        throw new RequestError(
          `'${currentParameterName}' cannot be null`,
          400,
          {
            request: options
          }
        );
      }

      if (parameter.required && !valueIsPresent) {
        throw new RequestError(
          `Empty value for parameter '${currentParameterName}': ${JSON.stringify(
            value
          )}`,
          400,
          {
            request: options
          }
        );
      }

      // parse to integer before checking for enum
      // so that string "1" will match enum with number 1
      if (expectedType === "integer") {
        const unparsedValue = value;
        value = parseInt(value, 10);
        if (isNaN(value)) {
          throw new RequestError(
            `Invalid value for parameter '${currentParameterName}': ${JSON.stringify(
              unparsedValue
            )} is NaN`,
            400,
            {
              request: options
            }
          );
        }
      }

      if (parameter.enum && parameter.enum.indexOf(String(value)) === -1) {
        throw new RequestError(
          `Invalid value for parameter '${currentParameterName}': ${JSON.stringify(
            value
          )}`,
          400,
          {
            request: options
          }
        );
      }

      if (parameter.validation) {
        const regex = new RegExp(parameter.validation);
        if (!regex.test(value)) {
          throw new RequestError(
            `Invalid value for parameter '${currentParameterName}': ${JSON.stringify(
              value
            )}`,
            400,
            {
              request: options
            }
          );
        }
      }

      if (expectedType === "object" && typeof value === "string") {
        try {
          value = JSON.parse(value);
        } catch (exception) {
          throw new RequestError(
            `JSON parse error of value for parameter '${currentParameterName}': ${JSON.stringify(
              value
            )}`,
            400,
            {
              request: options
            }
          );
        }
      }

      set(options, parameter.mapTo || currentParameterName, value);
    });
  });

  return options;
}


/***/ }),

/***/ 5224:
/***/ ((module) => {

module.exports = function atob(str) {
  return Buffer.from(str, 'base64').toString('binary')
}


/***/ }),

/***/ 3682:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var register = __nccwpck_require__(4670)
var addHook = __nccwpck_require__(5549)
var removeHook = __nccwpck_require__(6819)

// bind with array of arguments: https://stackoverflow.com/a/21792913
var bind = Function.bind
var bindable = bind.bind(bind)

function bindApi (hook, state, name) {
  var removeHookRef = bindable(removeHook, null).apply(null, name ? [state, name] : [state])
  hook.api = { remove: removeHookRef }
  hook.remove = removeHookRef

  ;['before', 'error', 'after', 'wrap'].forEach(function (kind) {
    var args = name ? [state, kind, name] : [state, kind]
    hook[kind] = hook.api[kind] = bindable(addHook, null).apply(null, args)
  })
}

function HookSingular () {
  var singularHookName = 'h'
  var singularHookState = {
    registry: {}
  }
  var singularHook = register.bind(null, singularHookState, singularHookName)
  bindApi(singularHook, singularHookState, singularHookName)
  return singularHook
}

function HookCollection () {
  var state = {
    registry: {}
  }

  var hook = register.bind(null, state)
  bindApi(hook, state)

  return hook
}

var collectionHookDeprecationMessageDisplayed = false
function Hook () {
  if (!collectionHookDeprecationMessageDisplayed) {
    console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4')
    collectionHookDeprecationMessageDisplayed = true
  }
  return HookCollection()
}

Hook.Singular = HookSingular.bind()
Hook.Collection = HookCollection.bind()

module.exports = Hook
// expose constructors as a named property for TypeScript
module.exports.Hook = Hook
module.exports.Singular = Hook.Singular
module.exports.Collection = Hook.Collection


/***/ }),

/***/ 5549:
/***/ ((module) => {

module.exports = addHook;

function addHook(state, kind, name, hook) {
  var orig = hook;
  if (!state.registry[name]) {
    state.registry[name] = [];
  }

  if (kind === "before") {
    hook = function (method, options) {
      return Promise.resolve()
        .then(orig.bind(null, options))
        .then(method.bind(null, options));
    };
  }

  if (kind === "after") {
    hook = function (method, options) {
      var result;
      return Promise.resolve()
        .then(method.bind(null, options))
        .then(function (result_) {
          result = result_;
          return orig(result, options);
        })
        .then(function () {
          return result;
        });
    };
  }

  if (kind === "error") {
    hook = function (method, options) {
      return Promise.resolve()
        .then(method.bind(null, options))
        .catch(function (error) {
          return orig(error, options);
        });
    };
  }

  state.registry[name].push({
    hook: hook,
    orig: orig,
  });
}


/***/ }),

/***/ 4670:
/***/ ((module) => {

module.exports = register;

function register(state, name, method, options) {
  if (typeof method !== "function") {
    throw new Error("method for before hook must be a function");
  }

  if (!options) {
    options = {};
  }

  if (Array.isArray(name)) {
    return name.reverse().reduce(function (callback, name) {
      return register.bind(null, state, name, callback, options);
    }, method)();
  }

  return Promise.resolve().then(function () {
    if (!state.registry[name]) {
      return method(options);
    }

    return state.registry[name].reduce(function (method, registered) {
      return registered.hook.bind(null, method, options);
    }, method)();
  });
}


/***/ }),

/***/ 6819:
/***/ ((module) => {

module.exports = removeHook;

function removeHook(state, name, method) {
  if (!state.registry[name]) {
    return;
  }

  var index = state.registry[name]
    .map(function (registered) {
      return registered.orig;
    })
    .indexOf(method);

  if (index === -1) {
    return;
  }

  state.registry[name].splice(index, 1);
}


/***/ }),

/***/ 2358:
/***/ ((module) => {

module.exports = function btoa(str) {
  return new Buffer(str).toString('base64')
}


/***/ }),

/***/ 2746:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const cp = __nccwpck_require__(3129);
const parse = __nccwpck_require__(6855);
const enoent = __nccwpck_require__(4101);

function spawn(command, args, options) {
    // Parse the arguments
    const parsed = parse(command, args, options);

    // Spawn the child process
    const spawned = cp.spawn(parsed.command, parsed.args, parsed.options);

    // Hook into child process "exit" event to emit an error if the command
    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
    enoent.hookChildProcess(spawned, parsed);

    return spawned;
}

function spawnSync(command, args, options) {
    // Parse the arguments
    const parsed = parse(command, args, options);

    // Spawn the child process
    const result = cp.spawnSync(parsed.command, parsed.args, parsed.options);

    // Analyze if the command does not exist, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16
    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);

    return result;
}

module.exports = spawn;
module.exports.spawn = spawn;
module.exports.sync = spawnSync;

module.exports._parse = parse;
module.exports._enoent = enoent;


/***/ }),

/***/ 4101:
/***/ ((module) => {

"use strict";


const isWin = process.platform === 'win32';

function notFoundError(original, syscall) {
    return Object.assign(new Error(`${syscall} ${original.command} ENOENT`), {
        code: 'ENOENT',
        errno: 'ENOENT',
        syscall: `${syscall} ${original.command}`,
        path: original.command,
        spawnargs: original.args,
    });
}

function hookChildProcess(cp, parsed) {
    if (!isWin) {
        return;
    }

    const originalEmit = cp.emit;

    cp.emit = function (name, arg1) {
        // If emitting "exit" event and exit code is 1, we need to check if
        // the command exists and emit an "error" instead
        // See https://github.com/IndigoUnited/node-cross-spawn/issues/16
        if (name === 'exit') {
            const err = verifyENOENT(arg1, parsed, 'spawn');

            if (err) {
                return originalEmit.call(cp, 'error', err);
            }
        }

        return originalEmit.apply(cp, arguments); // eslint-disable-line prefer-rest-params
    };
}

function verifyENOENT(status, parsed) {
    if (isWin && status === 1 && !parsed.file) {
        return notFoundError(parsed.original, 'spawn');
    }

    return null;
}

function verifyENOENTSync(status, parsed) {
    if (isWin && status === 1 && !parsed.file) {
        return notFoundError(parsed.original, 'spawnSync');
    }

    return null;
}

module.exports = {
    hookChildProcess,
    verifyENOENT,
    verifyENOENTSync,
    notFoundError,
};


/***/ }),

/***/ 6855:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(5622);
const niceTry = __nccwpck_require__(8560);
const resolveCommand = __nccwpck_require__(7274);
const escape = __nccwpck_require__(4274);
const readShebang = __nccwpck_require__(1252);
const semver = __nccwpck_require__(5911);

const isWin = process.platform === 'win32';
const isExecutableRegExp = /\.(?:com|exe)$/i;
const isCmdShimRegExp = /node_modules[\\/].bin[\\/][^\\/]+\.cmd$/i;

// `options.shell` is supported in Node ^4.8.0, ^5.7.0 and >= 6.0.0
const supportsShellOption = niceTry(() => semver.satisfies(process.version, '^4.8.0 || ^5.7.0 || >= 6.0.0', true)) || false;

function detectShebang(parsed) {
    parsed.file = resolveCommand(parsed);

    const shebang = parsed.file && readShebang(parsed.file);

    if (shebang) {
        parsed.args.unshift(parsed.file);
        parsed.command = shebang;

        return resolveCommand(parsed);
    }

    return parsed.file;
}

function parseNonShell(parsed) {
    if (!isWin) {
        return parsed;
    }

    // Detect & add support for shebangs
    const commandFile = detectShebang(parsed);

    // We don't need a shell if the command filename is an executable
    const needsShell = !isExecutableRegExp.test(commandFile);

    // If a shell is required, use cmd.exe and take care of escaping everything correctly
    // Note that `forceShell` is an hidden option used only in tests
    if (parsed.options.forceShell || needsShell) {
        // Need to double escape meta chars if the command is a cmd-shim located in `node_modules/.bin/`
        // The cmd-shim simply calls execute the package bin file with NodeJS, proxying any argument
        // Because the escape of metachars with ^ gets interpreted when the cmd.exe is first called,
        // we need to double escape them
        const needsDoubleEscapeMetaChars = isCmdShimRegExp.test(commandFile);

        // Normalize posix paths into OS compatible paths (e.g.: foo/bar -> foo\bar)
        // This is necessary otherwise it will always fail with ENOENT in those cases
        parsed.command = path.normalize(parsed.command);

        // Escape command & arguments
        parsed.command = escape.command(parsed.command);
        parsed.args = parsed.args.map((arg) => escape.argument(arg, needsDoubleEscapeMetaChars));

        const shellCommand = [parsed.command].concat(parsed.args).join(' ');

        parsed.args = ['/d', '/s', '/c', `"${shellCommand}"`];
        parsed.command = process.env.comspec || 'cmd.exe';
        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped
    }

    return parsed;
}

function parseShell(parsed) {
    // If node supports the shell option, there's no need to mimic its behavior
    if (supportsShellOption) {
        return parsed;
    }

    // Mimic node shell option
    // See https://github.com/nodejs/node/blob/b9f6a2dc059a1062776133f3d4fd848c4da7d150/lib/child_process.js#L335
    const shellCommand = [parsed.command].concat(parsed.args).join(' ');

    if (isWin) {
        parsed.command = typeof parsed.options.shell === 'string' ? parsed.options.shell : process.env.comspec || 'cmd.exe';
        parsed.args = ['/d', '/s', '/c', `"${shellCommand}"`];
        parsed.options.windowsVerbatimArguments = true; // Tell node's spawn that the arguments are already escaped
    } else {
        if (typeof parsed.options.shell === 'string') {
            parsed.command = parsed.options.shell;
        } else if (process.platform === 'android') {
            parsed.command = '/system/bin/sh';
        } else {
            parsed.command = '/bin/sh';
        }

        parsed.args = ['-c', shellCommand];
    }

    return parsed;
}

function parse(command, args, options) {
    // Normalize arguments, similar to nodejs
    if (args && !Array.isArray(args)) {
        options = args;
        args = null;
    }

    args = args ? args.slice(0) : []; // Clone array to avoid changing the original
    options = Object.assign({}, options); // Clone object to avoid changing the original

    // Build our parsed object
    const parsed = {
        command,
        args,
        options,
        file: undefined,
        original: {
            command,
            args,
        },
    };

    // Delegate further parsing to shell or non-shell
    return options.shell ? parseShell(parsed) : parseNonShell(parsed);
}

module.exports = parse;


/***/ }),

/***/ 4274:
/***/ ((module) => {

"use strict";


// See http://www.robvanderwoude.com/escapechars.php
const metaCharsRegExp = /([()\][%!^"`<>&|;, *?])/g;

function escapeCommand(arg) {
    // Escape meta chars
    arg = arg.replace(metaCharsRegExp, '^$1');

    return arg;
}

function escapeArgument(arg, doubleEscapeMetaChars) {
    // Convert to string
    arg = `${arg}`;

    // Algorithm below is based on https://qntm.org/cmd

    // Sequence of backslashes followed by a double quote:
    // double up all the backslashes and escape the double quote
    arg = arg.replace(/(\\*)"/g, '$1$1\\"');

    // Sequence of backslashes followed by the end of the string
    // (which will become a double quote later):
    // double up all the backslashes
    arg = arg.replace(/(\\*)$/, '$1$1');

    // All other backslashes occur literally

    // Quote the whole thing:
    arg = `"${arg}"`;

    // Escape meta chars
    arg = arg.replace(metaCharsRegExp, '^$1');

    // Double escape meta chars if necessary
    if (doubleEscapeMetaChars) {
        arg = arg.replace(metaCharsRegExp, '^$1');
    }

    return arg;
}

module.exports.command = escapeCommand;
module.exports.argument = escapeArgument;


/***/ }),

/***/ 1252:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const fs = __nccwpck_require__(5747);
const shebangCommand = __nccwpck_require__(7032);

function readShebang(command) {
    // Read the first 150 bytes from the file
    const size = 150;
    let buffer;

    if (Buffer.alloc) {
        // Node.js v4.5+ / v5.10+
        buffer = Buffer.alloc(size);
    } else {
        // Old Node.js API
        buffer = new Buffer(size);
        buffer.fill(0); // zero-fill
    }

    let fd;

    try {
        fd = fs.openSync(command, 'r');
        fs.readSync(fd, buffer, 0, size, 0);
        fs.closeSync(fd);
    } catch (e) { /* Empty */ }

    // Attempt to extract shebang (null is returned if not a shebang)
    return shebangCommand(buffer.toString());
}

module.exports = readShebang;


/***/ }),

/***/ 7274:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const path = __nccwpck_require__(5622);
const which = __nccwpck_require__(4207);
const pathKey = __nccwpck_require__(539)();

function resolveCommandAttempt(parsed, withoutPathExt) {
    const cwd = process.cwd();
    const hasCustomCwd = parsed.options.cwd != null;

    // If a custom `cwd` was specified, we need to change the process cwd
    // because `which` will do stat calls but does not support a custom cwd
    if (hasCustomCwd) {
        try {
            process.chdir(parsed.options.cwd);
        } catch (err) {
            /* Empty */
        }
    }

    let resolved;

    try {
        resolved = which.sync(parsed.command, {
            path: (parsed.options.env || process.env)[pathKey],
            pathExt: withoutPathExt ? path.delimiter : undefined,
        });
    } catch (e) {
        /* Empty */
    } finally {
        process.chdir(cwd);
    }

    // If we successfully resolved, ensure that an absolute path is returned
    // Note that when a custom `cwd` was used, we need to resolve to an absolute path based on it
    if (resolved) {
        resolved = path.resolve(hasCustomCwd ? parsed.options.cwd : '', resolved);
    }

    return resolved;
}

function resolveCommand(parsed) {
    return resolveCommandAttempt(parsed) || resolveCommandAttempt(parsed, true);
}

module.exports = resolveCommand;


/***/ }),

/***/ 8932:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

class Deprecation extends Error {
  constructor(message) {
    super(message); // Maintains proper stack trace (only available on V8)

    /* istanbul ignore next */

    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor);
    }

    this.name = 'Deprecation';
  }

}

exports.Deprecation = Deprecation;


/***/ }),

/***/ 1205:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var once = __nccwpck_require__(1223);

var noop = function() {};

var isRequest = function(stream) {
	return stream.setHeader && typeof stream.abort === 'function';
};

var isChildProcess = function(stream) {
	return stream.stdio && Array.isArray(stream.stdio) && stream.stdio.length === 3
};

var eos = function(stream, opts, callback) {
	if (typeof opts === 'function') return eos(stream, null, opts);
	if (!opts) opts = {};

	callback = once(callback || noop);

	var ws = stream._writableState;
	var rs = stream._readableState;
	var readable = opts.readable || (opts.readable !== false && stream.readable);
	var writable = opts.writable || (opts.writable !== false && stream.writable);
	var cancelled = false;

	var onlegacyfinish = function() {
		if (!stream.writable) onfinish();
	};

	var onfinish = function() {
		writable = false;
		if (!readable) callback.call(stream);
	};

	var onend = function() {
		readable = false;
		if (!writable) callback.call(stream);
	};

	var onexit = function(exitCode) {
		callback.call(stream, exitCode ? new Error('exited with error code: ' + exitCode) : null);
	};

	var onerror = function(err) {
		callback.call(stream, err);
	};

	var onclose = function() {
		process.nextTick(onclosenexttick);
	};

	var onclosenexttick = function() {
		if (cancelled) return;
		if (readable && !(rs && (rs.ended && !rs.destroyed))) return callback.call(stream, new Error('premature close'));
		if (writable && !(ws && (ws.ended && !ws.destroyed))) return callback.call(stream, new Error('premature close'));
	};

	var onrequest = function() {
		stream.req.on('finish', onfinish);
	};

	if (isRequest(stream)) {
		stream.on('complete', onfinish);
		stream.on('abort', onclose);
		if (stream.req) onrequest();
		else stream.on('request', onrequest);
	} else if (writable && !ws) { // legacy streams
		stream.on('end', onlegacyfinish);
		stream.on('close', onlegacyfinish);
	}

	if (isChildProcess(stream)) stream.on('exit', onexit);

	stream.on('end', onend);
	stream.on('finish', onfinish);
	if (opts.error !== false) stream.on('error', onerror);
	stream.on('close', onclose);

	return function() {
		cancelled = true;
		stream.removeListener('complete', onfinish);
		stream.removeListener('abort', onclose);
		stream.removeListener('request', onrequest);
		if (stream.req) stream.req.removeListener('finish', onfinish);
		stream.removeListener('end', onlegacyfinish);
		stream.removeListener('close', onlegacyfinish);
		stream.removeListener('finish', onfinish);
		stream.removeListener('exit', onexit);
		stream.removeListener('end', onend);
		stream.removeListener('error', onerror);
		stream.removeListener('close', onclose);
	};
};

module.exports = eos;


/***/ }),

/***/ 5447:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const path = __nccwpck_require__(5622);
const childProcess = __nccwpck_require__(3129);
const crossSpawn = __nccwpck_require__(2746);
const stripEof = __nccwpck_require__(5515);
const npmRunPath = __nccwpck_require__(502);
const isStream = __nccwpck_require__(1554);
const _getStream = __nccwpck_require__(1766);
const pFinally = __nccwpck_require__(1330);
const onExit = __nccwpck_require__(4931);
const errname = __nccwpck_require__(4689);
const stdio = __nccwpck_require__(166);

const TEN_MEGABYTES = 1000 * 1000 * 10;

function handleArgs(cmd, args, opts) {
	let parsed;

	opts = Object.assign({
		extendEnv: true,
		env: {}
	}, opts);

	if (opts.extendEnv) {
		opts.env = Object.assign({}, process.env, opts.env);
	}

	if (opts.__winShell === true) {
		delete opts.__winShell;
		parsed = {
			command: cmd,
			args,
			options: opts,
			file: cmd,
			original: {
				cmd,
				args
			}
		};
	} else {
		parsed = crossSpawn._parse(cmd, args, opts);
	}

	opts = Object.assign({
		maxBuffer: TEN_MEGABYTES,
		buffer: true,
		stripEof: true,
		preferLocal: true,
		localDir: parsed.options.cwd || process.cwd(),
		encoding: 'utf8',
		reject: true,
		cleanup: true
	}, parsed.options);

	opts.stdio = stdio(opts);

	if (opts.preferLocal) {
		opts.env = npmRunPath.env(Object.assign({}, opts, {cwd: opts.localDir}));
	}

	if (opts.detached) {
		// #115
		opts.cleanup = false;
	}

	if (process.platform === 'win32' && path.basename(parsed.command) === 'cmd.exe') {
		// #116
		parsed.args.unshift('/q');
	}

	return {
		cmd: parsed.command,
		args: parsed.args,
		opts,
		parsed
	};
}

function handleInput(spawned, input) {
	if (input === null || input === undefined) {
		return;
	}

	if (isStream(input)) {
		input.pipe(spawned.stdin);
	} else {
		spawned.stdin.end(input);
	}
}

function handleOutput(opts, val) {
	if (val && opts.stripEof) {
		val = stripEof(val);
	}

	return val;
}

function handleShell(fn, cmd, opts) {
	let file = '/bin/sh';
	let args = ['-c', cmd];

	opts = Object.assign({}, opts);

	if (process.platform === 'win32') {
		opts.__winShell = true;
		file = process.env.comspec || 'cmd.exe';
		args = ['/s', '/c', `"${cmd}"`];
		opts.windowsVerbatimArguments = true;
	}

	if (opts.shell) {
		file = opts.shell;
		delete opts.shell;
	}

	return fn(file, args, opts);
}

function getStream(process, stream, {encoding, buffer, maxBuffer}) {
	if (!process[stream]) {
		return null;
	}

	let ret;

	if (!buffer) {
		// TODO: Use `ret = util.promisify(stream.finished)(process[stream]);` when targeting Node.js 10
		ret = new Promise((resolve, reject) => {
			process[stream]
				.once('end', resolve)
				.once('error', reject);
		});
	} else if (encoding) {
		ret = _getStream(process[stream], {
			encoding,
			maxBuffer
		});
	} else {
		ret = _getStream.buffer(process[stream], {maxBuffer});
	}

	return ret.catch(err => {
		err.stream = stream;
		err.message = `${stream} ${err.message}`;
		throw err;
	});
}

function makeError(result, options) {
	const {stdout, stderr} = result;

	let err = result.error;
	const {code, signal} = result;

	const {parsed, joinedCmd} = options;
	const timedOut = options.timedOut || false;

	if (!err) {
		let output = '';

		if (Array.isArray(parsed.opts.stdio)) {
			if (parsed.opts.stdio[2] !== 'inherit') {
				output += output.length > 0 ? stderr : `\n${stderr}`;
			}

			if (parsed.opts.stdio[1] !== 'inherit') {
				output += `\n${stdout}`;
			}
		} else if (parsed.opts.stdio !== 'inherit') {
			output = `\n${stderr}${stdout}`;
		}

		err = new Error(`Command failed: ${joinedCmd}${output}`);
		err.code = code < 0 ? errname(code) : code;
	}

	err.stdout = stdout;
	err.stderr = stderr;
	err.failed = true;
	err.signal = signal || null;
	err.cmd = joinedCmd;
	err.timedOut = timedOut;

	return err;
}

function joinCmd(cmd, args) {
	let joinedCmd = cmd;

	if (Array.isArray(args) && args.length > 0) {
		joinedCmd += ' ' + args.join(' ');
	}

	return joinedCmd;
}

module.exports = (cmd, args, opts) => {
	const parsed = handleArgs(cmd, args, opts);
	const {encoding, buffer, maxBuffer} = parsed.opts;
	const joinedCmd = joinCmd(cmd, args);

	let spawned;
	try {
		spawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);
	} catch (err) {
		return Promise.reject(err);
	}

	let removeExitHandler;
	if (parsed.opts.cleanup) {
		removeExitHandler = onExit(() => {
			spawned.kill();
		});
	}

	let timeoutId = null;
	let timedOut = false;

	const cleanup = () => {
		if (timeoutId) {
			clearTimeout(timeoutId);
			timeoutId = null;
		}

		if (removeExitHandler) {
			removeExitHandler();
		}
	};

	if (parsed.opts.timeout > 0) {
		timeoutId = setTimeout(() => {
			timeoutId = null;
			timedOut = true;
			spawned.kill(parsed.opts.killSignal);
		}, parsed.opts.timeout);
	}

	const processDone = new Promise(resolve => {
		spawned.on('exit', (code, signal) => {
			cleanup();
			resolve({code, signal});
		});

		spawned.on('error', err => {
			cleanup();
			resolve({error: err});
		});

		if (spawned.stdin) {
			spawned.stdin.on('error', err => {
				cleanup();
				resolve({error: err});
			});
		}
	});

	function destroy() {
		if (spawned.stdout) {
			spawned.stdout.destroy();
		}

		if (spawned.stderr) {
			spawned.stderr.destroy();
		}
	}

	const handlePromise = () => pFinally(Promise.all([
		processDone,
		getStream(spawned, 'stdout', {encoding, buffer, maxBuffer}),
		getStream(spawned, 'stderr', {encoding, buffer, maxBuffer})
	]).then(arr => {
		const result = arr[0];
		result.stdout = arr[1];
		result.stderr = arr[2];

		if (result.error || result.code !== 0 || result.signal !== null) {
			const err = makeError(result, {
				joinedCmd,
				parsed,
				timedOut
			});

			// TODO: missing some timeout logic for killed
			// https://github.com/nodejs/node/blob/master/lib/child_process.js#L203
			// err.killed = spawned.killed || killed;
			err.killed = err.killed || spawned.killed;

			if (!parsed.opts.reject) {
				return err;
			}

			throw err;
		}

		return {
			stdout: handleOutput(parsed.opts, result.stdout),
			stderr: handleOutput(parsed.opts, result.stderr),
			code: 0,
			failed: false,
			killed: false,
			signal: null,
			cmd: joinedCmd,
			timedOut: false
		};
	}), destroy);

	crossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);

	handleInput(spawned, parsed.opts.input);

	spawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);
	spawned.catch = onrejected => handlePromise().catch(onrejected);

	return spawned;
};

// TODO: set `stderr: 'ignore'` when that option is implemented
module.exports.stdout = (...args) => module.exports(...args).then(x => x.stdout);

// TODO: set `stdout: 'ignore'` when that option is implemented
module.exports.stderr = (...args) => module.exports(...args).then(x => x.stderr);

module.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);

module.exports.sync = (cmd, args, opts) => {
	const parsed = handleArgs(cmd, args, opts);
	const joinedCmd = joinCmd(cmd, args);

	if (isStream(parsed.opts.input)) {
		throw new TypeError('The `input` option cannot be a stream in sync mode');
	}

	const result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);
	result.code = result.status;

	if (result.error || result.status !== 0 || result.signal !== null) {
		const err = makeError(result, {
			joinedCmd,
			parsed
		});

		if (!parsed.opts.reject) {
			return err;
		}

		throw err;
	}

	return {
		stdout: handleOutput(parsed.opts, result.stdout),
		stderr: handleOutput(parsed.opts, result.stderr),
		code: 0,
		failed: false,
		signal: null,
		cmd: joinedCmd,
		timedOut: false
	};
};

module.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);


/***/ }),

/***/ 4689:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

// Older verions of Node.js might not have `util.getSystemErrorName()`.
// In that case, fall back to a deprecated internal.
const util = __nccwpck_require__(1669);

let uv;

if (typeof util.getSystemErrorName === 'function') {
	module.exports = util.getSystemErrorName;
} else {
	try {
		uv = process.binding('uv');

		if (typeof uv.errname !== 'function') {
			throw new TypeError('uv.errname is not a function');
		}
	} catch (err) {
		console.error('execa/lib/errname: unable to establish process.binding(\'uv\')', err);
		uv = null;
	}

	module.exports = code => errname(uv, code);
}

// Used for testing the fallback behavior
module.exports.__test__ = errname;

function errname(uv, code) {
	if (uv) {
		return uv.errname(code);
	}

	if (!(code < 0)) {
		throw new Error('err >= 0');
	}

	return `Unknown system error ${code}`;
}



/***/ }),

/***/ 166:
/***/ ((module) => {

"use strict";

const alias = ['stdin', 'stdout', 'stderr'];

const hasAlias = opts => alias.some(x => Boolean(opts[x]));

module.exports = opts => {
	if (!opts) {
		return null;
	}

	if (opts.stdio && hasAlias(opts)) {
		throw new Error(`It's not possible to provide \`stdio\` in combination with one of ${alias.map(x => `\`${x}\``).join(', ')}`);
	}

	if (typeof opts.stdio === 'string') {
		return opts.stdio;
	}

	const stdio = opts.stdio || [];

	if (!Array.isArray(stdio)) {
		throw new TypeError(`Expected \`stdio\` to be of type \`string\` or \`Array\`, got \`${typeof stdio}\``);
	}

	const result = [];
	const len = Math.max(stdio.length, alias.length);

	for (let i = 0; i < len; i++) {
		let value = null;

		if (stdio[i] !== undefined) {
			value = stdio[i];
		} else if (opts[alias[i]] !== undefined) {
			value = opts[alias[i]];
		}

		result[i] = value;
	}

	return result;
};


/***/ }),

/***/ 1585:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const {PassThrough} = __nccwpck_require__(2413);

module.exports = options => {
	options = Object.assign({}, options);

	const {array} = options;
	let {encoding} = options;
	const buffer = encoding === 'buffer';
	let objectMode = false;

	if (array) {
		objectMode = !(encoding || buffer);
	} else {
		encoding = encoding || 'utf8';
	}

	if (buffer) {
		encoding = null;
	}

	let len = 0;
	const ret = [];
	const stream = new PassThrough({objectMode});

	if (encoding) {
		stream.setEncoding(encoding);
	}

	stream.on('data', chunk => {
		ret.push(chunk);

		if (objectMode) {
			len = ret.length;
		} else {
			len += chunk.length;
		}
	});

	stream.getBufferedValue = () => {
		if (array) {
			return ret;
		}

		return buffer ? Buffer.concat(ret, len) : ret.join('');
	};

	stream.getBufferedLength = () => len;

	return stream;
};


/***/ }),

/***/ 1766:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const pump = __nccwpck_require__(8341);
const bufferStream = __nccwpck_require__(1585);

class MaxBufferError extends Error {
	constructor() {
		super('maxBuffer exceeded');
		this.name = 'MaxBufferError';
	}
}

function getStream(inputStream, options) {
	if (!inputStream) {
		return Promise.reject(new Error('Expected a stream'));
	}

	options = Object.assign({maxBuffer: Infinity}, options);

	const {maxBuffer} = options;

	let stream;
	return new Promise((resolve, reject) => {
		const rejectPromise = error => {
			if (error) { // A null check
				error.bufferedData = stream.getBufferedValue();
			}
			reject(error);
		};

		stream = pump(inputStream, bufferStream(options), error => {
			if (error) {
				rejectPromise(error);
				return;
			}

			resolve();
		});

		stream.on('data', () => {
			if (stream.getBufferedLength() > maxBuffer) {
				rejectPromise(new MaxBufferError());
			}
		});
	}).then(() => stream.getBufferedValue());
}

module.exports = getStream;
module.exports.buffer = (stream, options) => getStream(stream, Object.assign({}, options, {encoding: 'buffer'}));
module.exports.array = (stream, options) => getStream(stream, Object.assign({}, options, {array: true}));
module.exports.MaxBufferError = MaxBufferError;


/***/ }),

/***/ 8377:
/***/ (function(__unused_webpack_module, exports, __nccwpck_require__) {

(function (global, factory) {
     true ? factory(exports, __nccwpck_require__(4351), __nccwpck_require__(6155)) :
    0;
}(this, (function (exports, tslib, graphql) { 'use strict';

    var docCache = new Map();
    var fragmentSourceMap = new Map();
    var printFragmentWarnings = true;
    var experimentalFragmentVariables = false;
    function normalize(string) {
        return string.replace(/[\s,]+/g, ' ').trim();
    }
    function cacheKeyFromLoc(loc) {
        return normalize(loc.source.body.substring(loc.start, loc.end));
    }
    function processFragments(ast) {
        var seenKeys = new Set();
        var definitions = [];
        ast.definitions.forEach(function (fragmentDefinition) {
            if (fragmentDefinition.kind === 'FragmentDefinition') {
                var fragmentName = fragmentDefinition.name.value;
                var sourceKey = cacheKeyFromLoc(fragmentDefinition.loc);
                var sourceKeySet = fragmentSourceMap.get(fragmentName);
                if (sourceKeySet && !sourceKeySet.has(sourceKey)) {
                    if (printFragmentWarnings) {
                        console.warn("Warning: fragment with name " + fragmentName + " already exists.\n"
                            + "graphql-tag enforces all fragment names across your application to be unique; read more about\n"
                            + "this in the docs: http://dev.apollodata.com/core/fragments.html#unique-names");
                    }
                }
                else if (!sourceKeySet) {
                    fragmentSourceMap.set(fragmentName, sourceKeySet = new Set);
                }
                sourceKeySet.add(sourceKey);
                if (!seenKeys.has(sourceKey)) {
                    seenKeys.add(sourceKey);
                    definitions.push(fragmentDefinition);
                }
            }
            else {
                definitions.push(fragmentDefinition);
            }
        });
        return tslib.__assign(tslib.__assign({}, ast), { definitions: definitions });
    }
    function stripLoc(doc) {
        var workSet = new Set(doc.definitions);
        workSet.forEach(function (node) {
            if (node.loc)
                delete node.loc;
            Object.keys(node).forEach(function (key) {
                var value = node[key];
                if (value && typeof value === 'object') {
                    workSet.add(value);
                }
            });
        });
        var loc = doc.loc;
        if (loc) {
            delete loc.startToken;
            delete loc.endToken;
        }
        return doc;
    }
    function parseDocument(source) {
        var cacheKey = normalize(source);
        if (!docCache.has(cacheKey)) {
            var parsed = graphql.parse(source, {
                experimentalFragmentVariables: experimentalFragmentVariables,
                allowLegacyFragmentVariables: experimentalFragmentVariables
            });
            if (!parsed || parsed.kind !== 'Document') {
                throw new Error('Not a valid GraphQL document.');
            }
            docCache.set(cacheKey, stripLoc(processFragments(parsed)));
        }
        return docCache.get(cacheKey);
    }
    function gql(literals) {
        var args = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            args[_i - 1] = arguments[_i];
        }
        if (typeof literals === 'string') {
            literals = [literals];
        }
        var result = literals[0];
        args.forEach(function (arg, i) {
            if (arg && arg.kind === 'Document') {
                result += arg.loc.source.body;
            }
            else {
                result += arg;
            }
            result += literals[i + 1];
        });
        return parseDocument(result);
    }
    function resetCaches() {
        docCache.clear();
        fragmentSourceMap.clear();
    }
    function disableFragmentWarnings() {
        printFragmentWarnings = false;
    }
    function enableExperimentalFragmentVariables() {
        experimentalFragmentVariables = true;
    }
    function disableExperimentalFragmentVariables() {
        experimentalFragmentVariables = false;
    }
    var extras = {
        gql: gql,
        resetCaches: resetCaches,
        disableFragmentWarnings: disableFragmentWarnings,
        enableExperimentalFragmentVariables: enableExperimentalFragmentVariables,
        disableExperimentalFragmentVariables: disableExperimentalFragmentVariables
    };
    (function (gql_1) {
        gql_1.gql = extras.gql, gql_1.resetCaches = extras.resetCaches, gql_1.disableFragmentWarnings = extras.disableFragmentWarnings, gql_1.enableExperimentalFragmentVariables = extras.enableExperimentalFragmentVariables, gql_1.disableExperimentalFragmentVariables = extras.disableExperimentalFragmentVariables;
    })(gql || (gql = {}));
    gql["default"] = gql;
    var gql$1 = gql;

    exports.default = gql$1;
    exports.disableExperimentalFragmentVariables = disableExperimentalFragmentVariables;
    exports.disableFragmentWarnings = disableFragmentWarnings;
    exports.enableExperimentalFragmentVariables = enableExperimentalFragmentVariables;
    exports.gql = gql;
    exports.resetCaches = resetCaches;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=graphql-tag.umd.js.map


/***/ }),

/***/ 8435:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// For backwards compatibility, make sure require("graphql-tag") returns
// the gql function, rather than an exports object.
module.exports = __nccwpck_require__(8377).gql;


/***/ }),

/***/ 4797:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.GraphQLError = void 0;
exports.formatError = formatError;
exports.printError = printError;

var _isObjectLike = __nccwpck_require__(5865);

var _location = __nccwpck_require__(1922);

var _printLocation = __nccwpck_require__(5250);

function toNormalizedOptions(args) {
  const firstArg = args[0];

  if (firstArg == null || 'kind' in firstArg || 'length' in firstArg) {
    return {
      nodes: firstArg,
      source: args[1],
      positions: args[2],
      path: args[3],
      originalError: args[4],
      extensions: args[5],
    };
  }

  return firstArg;
}
/**
 * A GraphQLError describes an Error found during the parse, validate, or
 * execute phases of performing a GraphQL operation. In addition to a message
 * and stack trace, it also includes information about the locations in a
 * GraphQL document and/or execution result that correspond to the Error.
 */

class GraphQLError extends Error {
  /**
   * An array of `{ line, column }` locations within the source GraphQL document
   * which correspond to this error.
   *
   * Errors during validation often contain multiple locations, for example to
   * point out two things with the same name. Errors during execution include a
   * single location, the field which produced the error.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */

  /**
   * An array describing the JSON-path into the execution response which
   * corresponds to this error. Only included for errors during execution.
   *
   * Enumerable, and appears in the result of JSON.stringify().
   */

  /**
   * An array of GraphQL AST Nodes corresponding to this error.
   */

  /**
   * The source GraphQL document for the first location of this error.
   *
   * Note that if this Error represents more than one node, the source may not
   * represent nodes after the first node.
   */

  /**
   * An array of character offsets within the source GraphQL document
   * which correspond to this error.
   */

  /**
   * The original error thrown from a field resolver during execution.
   */

  /**
   * Extension fields to add to the formatted error.
   */

  /**
   * @deprecated Please use the `GraphQLErrorOptions` constructor overload instead.
   */
  constructor(message, ...rawArgs) {
    var _this$nodes, _nodeLocations$, _ref;

    const { nodes, source, positions, path, originalError, extensions } =
      toNormalizedOptions(rawArgs);
    super(message);
    this.name = 'GraphQLError';
    this.path = path !== null && path !== void 0 ? path : undefined;
    this.originalError =
      originalError !== null && originalError !== void 0
        ? originalError
        : undefined; // Compute list of blame nodes.

    this.nodes = undefinedIfEmpty(
      Array.isArray(nodes) ? nodes : nodes ? [nodes] : undefined,
    );
    const nodeLocations = undefinedIfEmpty(
      (_this$nodes = this.nodes) === null || _this$nodes === void 0
        ? void 0
        : _this$nodes.map((node) => node.loc).filter((loc) => loc != null),
    ); // Compute locations in the source for the given nodes/positions.

    this.source =
      source !== null && source !== void 0
        ? source
        : nodeLocations === null || nodeLocations === void 0
        ? void 0
        : (_nodeLocations$ = nodeLocations[0]) === null ||
          _nodeLocations$ === void 0
        ? void 0
        : _nodeLocations$.source;
    this.positions =
      positions !== null && positions !== void 0
        ? positions
        : nodeLocations === null || nodeLocations === void 0
        ? void 0
        : nodeLocations.map((loc) => loc.start);
    this.locations =
      positions && source
        ? positions.map((pos) => (0, _location.getLocation)(source, pos))
        : nodeLocations === null || nodeLocations === void 0
        ? void 0
        : nodeLocations.map((loc) =>
            (0, _location.getLocation)(loc.source, loc.start),
          );
    const originalExtensions = (0, _isObjectLike.isObjectLike)(
      originalError === null || originalError === void 0
        ? void 0
        : originalError.extensions,
    )
      ? originalError === null || originalError === void 0
        ? void 0
        : originalError.extensions
      : undefined;
    this.extensions =
      (_ref =
        extensions !== null && extensions !== void 0
          ? extensions
          : originalExtensions) !== null && _ref !== void 0
        ? _ref
        : Object.create(null); // Only properties prescribed by the spec should be enumerable.
    // Keep the rest as non-enumerable.

    Object.defineProperties(this, {
      message: {
        writable: true,
        enumerable: true,
      },
      name: {
        enumerable: false,
      },
      nodes: {
        enumerable: false,
      },
      source: {
        enumerable: false,
      },
      positions: {
        enumerable: false,
      },
      originalError: {
        enumerable: false,
      },
    }); // Include (non-enumerable) stack trace.

    /* c8 ignore start */
    // FIXME: https://github.com/graphql/graphql-js/issues/2317

    if (
      originalError !== null &&
      originalError !== void 0 &&
      originalError.stack
    ) {
      Object.defineProperty(this, 'stack', {
        value: originalError.stack,
        writable: true,
        configurable: true,
      });
    } else if (Error.captureStackTrace) {
      Error.captureStackTrace(this, GraphQLError);
    } else {
      Object.defineProperty(this, 'stack', {
        value: Error().stack,
        writable: true,
        configurable: true,
      });
    }
    /* c8 ignore stop */
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLError';
  }

  toString() {
    let output = this.message;

    if (this.nodes) {
      for (const node of this.nodes) {
        if (node.loc) {
          output += '\n\n' + (0, _printLocation.printLocation)(node.loc);
        }
      }
    } else if (this.source && this.locations) {
      for (const location of this.locations) {
        output +=
          '\n\n' +
          (0, _printLocation.printSourceLocation)(this.source, location);
      }
    }

    return output;
  }

  toJSON() {
    const formattedError = {
      message: this.message,
    };

    if (this.locations != null) {
      formattedError.locations = this.locations;
    }

    if (this.path != null) {
      formattedError.path = this.path;
    }

    if (this.extensions != null && Object.keys(this.extensions).length > 0) {
      formattedError.extensions = this.extensions;
    }

    return formattedError;
  }
}

exports.GraphQLError = GraphQLError;

function undefinedIfEmpty(array) {
  return array === undefined || array.length === 0 ? undefined : array;
}
/**
 * See: https://spec.graphql.org/draft/#sec-Errors
 */

/**
 * Prints a GraphQLError to a string, representing useful location information
 * about the error's position in the source.
 *
 * @deprecated Please use `error.toString` instead. Will be removed in v17
 */
function printError(error) {
  return error.toString();
}
/**
 * Given a GraphQLError, format it according to the rules described by the
 * Response Format, Errors section of the GraphQL Specification.
 *
 * @deprecated Please use `error.toJSON` instead. Will be removed in v17
 */

function formatError(error) {
  return error.toJSON();
}


/***/ }),

/***/ 578:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
Object.defineProperty(exports, "GraphQLError", ({
  enumerable: true,
  get: function () {
    return _GraphQLError.GraphQLError;
  },
}));
Object.defineProperty(exports, "formatError", ({
  enumerable: true,
  get: function () {
    return _GraphQLError.formatError;
  },
}));
Object.defineProperty(exports, "locatedError", ({
  enumerable: true,
  get: function () {
    return _locatedError.locatedError;
  },
}));
Object.defineProperty(exports, "printError", ({
  enumerable: true,
  get: function () {
    return _GraphQLError.printError;
  },
}));
Object.defineProperty(exports, "syntaxError", ({
  enumerable: true,
  get: function () {
    return _syntaxError.syntaxError;
  },
}));

var _GraphQLError = __nccwpck_require__(4797);

var _syntaxError = __nccwpck_require__(2295);

var _locatedError = __nccwpck_require__(6842);


/***/ }),

/***/ 6842:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.locatedError = locatedError;

var _toError = __nccwpck_require__(5472);

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Given an arbitrary value, presumably thrown while attempting to execute a
 * GraphQL operation, produce a new GraphQLError aware of the location in the
 * document responsible for the original Error.
 */
function locatedError(rawOriginalError, nodes, path) {
  var _nodes;

  const originalError = (0, _toError.toError)(rawOriginalError); // Note: this uses a brand-check to support GraphQL errors originating from other contexts.

  if (isLocatedGraphQLError(originalError)) {
    return originalError;
  }

  return new _GraphQLError.GraphQLError(originalError.message, {
    nodes:
      (_nodes = originalError.nodes) !== null && _nodes !== void 0
        ? _nodes
        : nodes,
    source: originalError.source,
    positions: originalError.positions,
    path,
    originalError,
  });
}

function isLocatedGraphQLError(error) {
  return Array.isArray(error.path);
}


/***/ }),

/***/ 2295:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.syntaxError = syntaxError;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Produces a GraphQLError representing a syntax error, containing useful
 * descriptive information about the syntax error's position in the source.
 */
function syntaxError(source, position, description) {
  return new _GraphQLError.GraphQLError(`Syntax Error: ${description}`, {
    source,
    positions: [position],
  });
}


/***/ }),

/***/ 9942:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.collectFields = collectFields;
exports.collectSubfields = collectSubfields;

var _kinds = __nccwpck_require__(1927);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _typeFromAST = __nccwpck_require__(7664);

var _values = __nccwpck_require__(4834);

/**
 * Given a selectionSet, collects all of the fields and returns them.
 *
 * CollectFields requires the "runtime type" of an object. For a field that
 * returns an Interface or Union type, the "runtime type" will be the actual
 * object type returned by that field.
 *
 * @internal
 */
function collectFields(
  schema,
  fragments,
  variableValues,
  runtimeType,
  selectionSet,
) {
  const fields = new Map();
  collectFieldsImpl(
    schema,
    fragments,
    variableValues,
    runtimeType,
    selectionSet,
    fields,
    new Set(),
  );
  return fields;
}
/**
 * Given an array of field nodes, collects all of the subfields of the passed
 * in fields, and returns them at the end.
 *
 * CollectSubFields requires the "return type" of an object. For a field that
 * returns an Interface or Union type, the "return type" will be the actual
 * object type returned by that field.
 *
 * @internal
 */

function collectSubfields(
  schema,
  fragments,
  variableValues,
  returnType,
  fieldNodes,
) {
  const subFieldNodes = new Map();
  const visitedFragmentNames = new Set();

  for (const node of fieldNodes) {
    if (node.selectionSet) {
      collectFieldsImpl(
        schema,
        fragments,
        variableValues,
        returnType,
        node.selectionSet,
        subFieldNodes,
        visitedFragmentNames,
      );
    }
  }

  return subFieldNodes;
}

function collectFieldsImpl(
  schema,
  fragments,
  variableValues,
  runtimeType,
  selectionSet,
  fields,
  visitedFragmentNames,
) {
  for (const selection of selectionSet.selections) {
    switch (selection.kind) {
      case _kinds.Kind.FIELD: {
        if (!shouldIncludeNode(variableValues, selection)) {
          continue;
        }

        const name = getFieldEntryKey(selection);
        const fieldList = fields.get(name);

        if (fieldList !== undefined) {
          fieldList.push(selection);
        } else {
          fields.set(name, [selection]);
        }

        break;
      }

      case _kinds.Kind.INLINE_FRAGMENT: {
        if (
          !shouldIncludeNode(variableValues, selection) ||
          !doesFragmentConditionMatch(schema, selection, runtimeType)
        ) {
          continue;
        }

        collectFieldsImpl(
          schema,
          fragments,
          variableValues,
          runtimeType,
          selection.selectionSet,
          fields,
          visitedFragmentNames,
        );
        break;
      }

      case _kinds.Kind.FRAGMENT_SPREAD: {
        const fragName = selection.name.value;

        if (
          visitedFragmentNames.has(fragName) ||
          !shouldIncludeNode(variableValues, selection)
        ) {
          continue;
        }

        visitedFragmentNames.add(fragName);
        const fragment = fragments[fragName];

        if (
          !fragment ||
          !doesFragmentConditionMatch(schema, fragment, runtimeType)
        ) {
          continue;
        }

        collectFieldsImpl(
          schema,
          fragments,
          variableValues,
          runtimeType,
          fragment.selectionSet,
          fields,
          visitedFragmentNames,
        );
        break;
      }
    }
  }
}
/**
 * Determines if a field should be included based on the `@include` and `@skip`
 * directives, where `@skip` has higher precedence than `@include`.
 */

function shouldIncludeNode(variableValues, node) {
  const skip = (0, _values.getDirectiveValues)(
    _directives.GraphQLSkipDirective,
    node,
    variableValues,
  );

  if ((skip === null || skip === void 0 ? void 0 : skip.if) === true) {
    return false;
  }

  const include = (0, _values.getDirectiveValues)(
    _directives.GraphQLIncludeDirective,
    node,
    variableValues,
  );

  if (
    (include === null || include === void 0 ? void 0 : include.if) === false
  ) {
    return false;
  }

  return true;
}
/**
 * Determines if a fragment is applicable to the given type.
 */

function doesFragmentConditionMatch(schema, fragment, type) {
  const typeConditionNode = fragment.typeCondition;

  if (!typeConditionNode) {
    return true;
  }

  const conditionalType = (0, _typeFromAST.typeFromAST)(
    schema,
    typeConditionNode,
  );

  if (conditionalType === type) {
    return true;
  }

  if ((0, _definition.isAbstractType)(conditionalType)) {
    return schema.isSubType(conditionalType, type);
  }

  return false;
}
/**
 * Implements the logic to compute the key of a given field's entry
 */

function getFieldEntryKey(node) {
  return node.alias ? node.alias.value : node.name.value;
}


/***/ }),

/***/ 3677:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.assertValidExecutionArguments = assertValidExecutionArguments;
exports.buildExecutionContext = buildExecutionContext;
exports.buildResolveInfo = buildResolveInfo;
exports.defaultTypeResolver = exports.defaultFieldResolver = void 0;
exports.execute = execute;
exports.executeSync = executeSync;
exports.getFieldDef = getFieldDef;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _isIterableObject = __nccwpck_require__(1258);

var _isObjectLike = __nccwpck_require__(5865);

var _isPromise = __nccwpck_require__(3910);

var _memoize = __nccwpck_require__(4217);

var _Path = __nccwpck_require__(1262);

var _promiseForObject = __nccwpck_require__(6804);

var _promiseReduce = __nccwpck_require__(7286);

var _GraphQLError = __nccwpck_require__(4797);

var _locatedError = __nccwpck_require__(6842);

var _ast = __nccwpck_require__(5494);

var _kinds = __nccwpck_require__(1927);

var _definition = __nccwpck_require__(5821);

var _introspection = __nccwpck_require__(8344);

var _validate = __nccwpck_require__(2430);

var _collectFields = __nccwpck_require__(9942);

var _values = __nccwpck_require__(4834);

/**
 * A memoized collection of relevant subfields with regard to the return
 * type. Memoizing ensures the subfields are not repeatedly calculated, which
 * saves overhead when resolving lists of values.
 */
const collectSubfields = (0, _memoize.memoize3)(
  (exeContext, returnType, fieldNodes) =>
    (0, _collectFields.collectSubfields)(
      exeContext.schema,
      exeContext.fragments,
      exeContext.variableValues,
      returnType,
      fieldNodes,
    ),
);
/**
 * Terminology
 *
 * "Definitions" are the generic name for top-level statements in the document.
 * Examples of this include:
 * 1) Operations (such as a query)
 * 2) Fragments
 *
 * "Operations" are a generic name for requests in the document.
 * Examples of this include:
 * 1) query,
 * 2) mutation
 *
 * "Selections" are the definitions that can appear legally and at
 * single level of the query. These include:
 * 1) field references e.g `a`
 * 2) fragment "spreads" e.g. `...c`
 * 3) inline fragment "spreads" e.g. `...on Type { a }`
 */

/**
 * Data that must be available at all points during query execution.
 *
 * Namely, schema of the type system that is currently executing,
 * and the fragments defined in the query document
 */

/**
 * Implements the "Executing requests" section of the GraphQL specification.
 *
 * Returns either a synchronous ExecutionResult (if all encountered resolvers
 * are synchronous), or a Promise of an ExecutionResult that will eventually be
 * resolved and never rejected.
 *
 * If the arguments to this function do not result in a legal execution context,
 * a GraphQLError will be thrown immediately explaining the invalid input.
 */
function execute(args) {
  // Temporary for v15 to v16 migration. Remove in v17
  arguments.length < 2 ||
    (0, _devAssert.devAssert)(
      false,
      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',
    );
  const { schema, document, variableValues, rootValue } = args; // If arguments are missing or incorrect, throw an error.

  assertValidExecutionArguments(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,
  // a "Response" with only errors is returned.

  const exeContext = buildExecutionContext(args); // Return early errors if execution context failed.

  if (!('schema' in exeContext)) {
    return {
      errors: exeContext,
    };
  } // Return a Promise that will eventually resolve to the data described by
  // The "Response" section of the GraphQL specification.
  //
  // If errors are encountered while executing a GraphQL field, only that
  // field and its descendants will be omitted, and sibling fields will still
  // be executed. An execution which encounters errors will still result in a
  // resolved Promise.
  //
  // Errors from sub-fields of a NonNull type may propagate to the top level,
  // at which point we still log the error and null the parent field, which
  // in this case is the entire response.

  try {
    const { operation } = exeContext;
    const result = executeOperation(exeContext, operation, rootValue);

    if ((0, _isPromise.isPromise)(result)) {
      return result.then(
        (data) => buildResponse(data, exeContext.errors),
        (error) => {
          exeContext.errors.push(error);
          return buildResponse(null, exeContext.errors);
        },
      );
    }

    return buildResponse(result, exeContext.errors);
  } catch (error) {
    exeContext.errors.push(error);
    return buildResponse(null, exeContext.errors);
  }
}
/**
 * Also implements the "Executing requests" section of the GraphQL specification.
 * However, it guarantees to complete synchronously (or throw an error) assuming
 * that all field resolvers are also synchronous.
 */

function executeSync(args) {
  const result = execute(args); // Assert that the execution was synchronous.

  if ((0, _isPromise.isPromise)(result)) {
    throw new Error('GraphQL execution failed to complete synchronously.');
  }

  return result;
}
/**
 * Given a completed execution context and data, build the `{ errors, data }`
 * response defined by the "Response" section of the GraphQL specification.
 */

function buildResponse(data, errors) {
  return errors.length === 0
    ? {
        data,
      }
    : {
        errors,
        data,
      };
}
/**
 * Essential assertions before executing to provide developer feedback for
 * improper use of the GraphQL library.
 *
 * @internal
 */

function assertValidExecutionArguments(schema, document, rawVariableValues) {
  document || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for execution is invalid, throw an error.

  (0, _validate.assertValidSchema)(schema); // Variables, if provided, must be an object.

  rawVariableValues == null ||
    (0, _isObjectLike.isObjectLike)(rawVariableValues) ||
    (0, _devAssert.devAssert)(
      false,
      'Variables must be provided as an Object where each property is a variable value. Perhaps look to see if an unparsed JSON string was provided.',
    );
}
/**
 * Constructs a ExecutionContext object from the arguments passed to
 * execute, which we will pass throughout the other execution methods.
 *
 * Throws a GraphQLError if a valid execution context cannot be created.
 *
 * @internal
 */

function buildExecutionContext(args) {
  var _definition$name, _operation$variableDe;

  const {
    schema,
    document,
    rootValue,
    contextValue,
    variableValues: rawVariableValues,
    operationName,
    fieldResolver,
    typeResolver,
    subscribeFieldResolver,
  } = args;
  let operation;
  const fragments = Object.create(null);

  for (const definition of document.definitions) {
    switch (definition.kind) {
      case _kinds.Kind.OPERATION_DEFINITION:
        if (operationName == null) {
          if (operation !== undefined) {
            return [
              new _GraphQLError.GraphQLError(
                'Must provide operation name if query contains multiple operations.',
              ),
            ];
          }

          operation = definition;
        } else if (
          ((_definition$name = definition.name) === null ||
          _definition$name === void 0
            ? void 0
            : _definition$name.value) === operationName
        ) {
          operation = definition;
        }

        break;

      case _kinds.Kind.FRAGMENT_DEFINITION:
        fragments[definition.name.value] = definition;
        break;

      default: // ignore non-executable definitions
    }
  }

  if (!operation) {
    if (operationName != null) {
      return [
        new _GraphQLError.GraphQLError(
          `Unknown operation named "${operationName}".`,
        ),
      ];
    }

    return [new _GraphQLError.GraphQLError('Must provide an operation.')];
  } // FIXME: https://github.com/graphql/graphql-js/issues/2203

  /* c8 ignore next */

  const variableDefinitions =
    (_operation$variableDe = operation.variableDefinitions) !== null &&
    _operation$variableDe !== void 0
      ? _operation$variableDe
      : [];
  const coercedVariableValues = (0, _values.getVariableValues)(
    schema,
    variableDefinitions,
    rawVariableValues !== null && rawVariableValues !== void 0
      ? rawVariableValues
      : {},
    {
      maxErrors: 50,
    },
  );

  if (coercedVariableValues.errors) {
    return coercedVariableValues.errors;
  }

  return {
    schema,
    fragments,
    rootValue,
    contextValue,
    operation,
    variableValues: coercedVariableValues.coerced,
    fieldResolver:
      fieldResolver !== null && fieldResolver !== void 0
        ? fieldResolver
        : defaultFieldResolver,
    typeResolver:
      typeResolver !== null && typeResolver !== void 0
        ? typeResolver
        : defaultTypeResolver,
    subscribeFieldResolver:
      subscribeFieldResolver !== null && subscribeFieldResolver !== void 0
        ? subscribeFieldResolver
        : defaultFieldResolver,
    errors: [],
  };
}
/**
 * Implements the "Executing operations" section of the spec.
 */

function executeOperation(exeContext, operation, rootValue) {
  const rootType = exeContext.schema.getRootType(operation.operation);

  if (rootType == null) {
    throw new _GraphQLError.GraphQLError(
      `Schema is not configured to execute ${operation.operation} operation.`,
      {
        nodes: operation,
      },
    );
  }

  const rootFields = (0, _collectFields.collectFields)(
    exeContext.schema,
    exeContext.fragments,
    exeContext.variableValues,
    rootType,
    operation.selectionSet,
  );
  const path = undefined;

  switch (operation.operation) {
    case _ast.OperationTypeNode.QUERY:
      return executeFields(exeContext, rootType, rootValue, path, rootFields);

    case _ast.OperationTypeNode.MUTATION:
      return executeFieldsSerially(
        exeContext,
        rootType,
        rootValue,
        path,
        rootFields,
      );

    case _ast.OperationTypeNode.SUBSCRIPTION:
      // TODO: deprecate `subscribe` and move all logic here
      // Temporary solution until we finish merging execute and subscribe together
      return executeFields(exeContext, rootType, rootValue, path, rootFields);
  }
}
/**
 * Implements the "Executing selection sets" section of the spec
 * for fields that must be executed serially.
 */

function executeFieldsSerially(
  exeContext,
  parentType,
  sourceValue,
  path,
  fields,
) {
  return (0, _promiseReduce.promiseReduce)(
    fields.entries(),
    (results, [responseName, fieldNodes]) => {
      const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);
      const result = executeField(
        exeContext,
        parentType,
        sourceValue,
        fieldNodes,
        fieldPath,
      );

      if (result === undefined) {
        return results;
      }

      if ((0, _isPromise.isPromise)(result)) {
        return result.then((resolvedResult) => {
          results[responseName] = resolvedResult;
          return results;
        });
      }

      results[responseName] = result;
      return results;
    },
    Object.create(null),
  );
}
/**
 * Implements the "Executing selection sets" section of the spec
 * for fields that may be executed in parallel.
 */

function executeFields(exeContext, parentType, sourceValue, path, fields) {
  const results = Object.create(null);
  let containsPromise = false;

  for (const [responseName, fieldNodes] of fields.entries()) {
    const fieldPath = (0, _Path.addPath)(path, responseName, parentType.name);
    const result = executeField(
      exeContext,
      parentType,
      sourceValue,
      fieldNodes,
      fieldPath,
    );

    if (result !== undefined) {
      results[responseName] = result;

      if ((0, _isPromise.isPromise)(result)) {
        containsPromise = true;
      }
    }
  } // If there are no promises, we can just return the object

  if (!containsPromise) {
    return results;
  } // Otherwise, results is a map from field name to the result of resolving that
  // field, which is possibly a promise. Return a promise that will return this
  // same map, but with any promises replaced with the values they resolved to.

  return (0, _promiseForObject.promiseForObject)(results);
}
/**
 * Implements the "Executing fields" section of the spec
 * In particular, this function figures out the value that the field returns by
 * calling its resolve function, then calls completeValue to complete promises,
 * serialize scalars, or execute the sub-selection-set for objects.
 */

function executeField(exeContext, parentType, source, fieldNodes, path) {
  var _fieldDef$resolve;

  const fieldDef = getFieldDef(exeContext.schema, parentType, fieldNodes[0]);

  if (!fieldDef) {
    return;
  }

  const returnType = fieldDef.type;
  const resolveFn =
    (_fieldDef$resolve = fieldDef.resolve) !== null &&
    _fieldDef$resolve !== void 0
      ? _fieldDef$resolve
      : exeContext.fieldResolver;
  const info = buildResolveInfo(
    exeContext,
    fieldDef,
    fieldNodes,
    parentType,
    path,
  ); // Get the resolve function, regardless of if its result is normal or abrupt (error).

  try {
    // Build a JS object of arguments from the field.arguments AST, using the
    // variables scope to fulfill any variable references.
    // TODO: find a way to memoize, in case this field is within a List type.
    const args = (0, _values.getArgumentValues)(
      fieldDef,
      fieldNodes[0],
      exeContext.variableValues,
    ); // The resolve function's optional third argument is a context value that
    // is provided to every resolve function within an execution. It is commonly
    // used to represent an authenticated user, or request-specific caches.

    const contextValue = exeContext.contextValue;
    const result = resolveFn(source, args, contextValue, info);
    let completed;

    if ((0, _isPromise.isPromise)(result)) {
      completed = result.then((resolved) =>
        completeValue(exeContext, returnType, fieldNodes, info, path, resolved),
      );
    } else {
      completed = completeValue(
        exeContext,
        returnType,
        fieldNodes,
        info,
        path,
        result,
      );
    }

    if ((0, _isPromise.isPromise)(completed)) {
      // Note: we don't rely on a `catch` method, but we do expect "thenable"
      // to take a second callback for the error case.
      return completed.then(undefined, (rawError) => {
        const error = (0, _locatedError.locatedError)(
          rawError,
          fieldNodes,
          (0, _Path.pathToArray)(path),
        );
        return handleFieldError(error, returnType, exeContext);
      });
    }

    return completed;
  } catch (rawError) {
    const error = (0, _locatedError.locatedError)(
      rawError,
      fieldNodes,
      (0, _Path.pathToArray)(path),
    );
    return handleFieldError(error, returnType, exeContext);
  }
}
/**
 * @internal
 */

function buildResolveInfo(exeContext, fieldDef, fieldNodes, parentType, path) {
  // The resolve function's optional fourth argument is a collection of
  // information about the current execution state.
  return {
    fieldName: fieldDef.name,
    fieldNodes,
    returnType: fieldDef.type,
    parentType,
    path,
    schema: exeContext.schema,
    fragments: exeContext.fragments,
    rootValue: exeContext.rootValue,
    operation: exeContext.operation,
    variableValues: exeContext.variableValues,
  };
}

function handleFieldError(error, returnType, exeContext) {
  // If the field type is non-nullable, then it is resolved without any
  // protection from errors, however it still properly locates the error.
  if ((0, _definition.isNonNullType)(returnType)) {
    throw error;
  } // Otherwise, error protection is applied, logging the error and resolving
  // a null value for this field if one is encountered.

  exeContext.errors.push(error);
  return null;
}
/**
 * Implements the instructions for completeValue as defined in the
 * "Value Completion" section of the spec.
 *
 * If the field type is Non-Null, then this recursively completes the value
 * for the inner type. It throws a field error if that completion returns null,
 * as per the "Nullability" section of the spec.
 *
 * If the field type is a List, then this recursively completes the value
 * for the inner type on each item in the list.
 *
 * If the field type is a Scalar or Enum, ensures the completed value is a legal
 * value of the type by calling the `serialize` method of GraphQL type
 * definition.
 *
 * If the field is an abstract type, determine the runtime type of the value
 * and then complete based on that type
 *
 * Otherwise, the field type expects a sub-selection set, and will complete the
 * value by executing all sub-selections.
 */

function completeValue(exeContext, returnType, fieldNodes, info, path, result) {
  // If result is an Error, throw a located error.
  if (result instanceof Error) {
    throw result;
  } // If field type is NonNull, complete for inner type, and throw field error
  // if result is null.

  if ((0, _definition.isNonNullType)(returnType)) {
    const completed = completeValue(
      exeContext,
      returnType.ofType,
      fieldNodes,
      info,
      path,
      result,
    );

    if (completed === null) {
      throw new Error(
        `Cannot return null for non-nullable field ${info.parentType.name}.${info.fieldName}.`,
      );
    }

    return completed;
  } // If result value is null or undefined then return null.

  if (result == null) {
    return null;
  } // If field type is List, complete each item in the list with the inner type

  if ((0, _definition.isListType)(returnType)) {
    return completeListValue(
      exeContext,
      returnType,
      fieldNodes,
      info,
      path,
      result,
    );
  } // If field type is a leaf type, Scalar or Enum, serialize to a valid value,
  // returning null if serialization is not possible.

  if ((0, _definition.isLeafType)(returnType)) {
    return completeLeafValue(returnType, result);
  } // If field type is an abstract type, Interface or Union, determine the
  // runtime Object type and complete for that type.

  if ((0, _definition.isAbstractType)(returnType)) {
    return completeAbstractValue(
      exeContext,
      returnType,
      fieldNodes,
      info,
      path,
      result,
    );
  } // If field type is Object, execute and complete all sub-selections.

  if ((0, _definition.isObjectType)(returnType)) {
    return completeObjectValue(
      exeContext,
      returnType,
      fieldNodes,
      info,
      path,
      result,
    );
  }
  /* c8 ignore next 6 */
  // Not reachable, all possible output types have been considered.

   false ||
    (0, _invariant.invariant)(
      false,
      'Cannot complete value of unexpected output type: ' +
        (0, _inspect.inspect)(returnType),
    );
}
/**
 * Complete a list value by completing each item in the list with the
 * inner type
 */

function completeListValue(
  exeContext,
  returnType,
  fieldNodes,
  info,
  path,
  result,
) {
  if (!(0, _isIterableObject.isIterableObject)(result)) {
    throw new _GraphQLError.GraphQLError(
      `Expected Iterable, but did not find one for field "${info.parentType.name}.${info.fieldName}".`,
    );
  } // This is specified as a simple map, however we're optimizing the path
  // where the list contains no Promises by avoiding creating another Promise.

  const itemType = returnType.ofType;
  let containsPromise = false;
  const completedResults = Array.from(result, (item, index) => {
    // No need to modify the info object containing the path,
    // since from here on it is not ever accessed by resolver functions.
    const itemPath = (0, _Path.addPath)(path, index, undefined);

    try {
      let completedItem;

      if ((0, _isPromise.isPromise)(item)) {
        completedItem = item.then((resolved) =>
          completeValue(
            exeContext,
            itemType,
            fieldNodes,
            info,
            itemPath,
            resolved,
          ),
        );
      } else {
        completedItem = completeValue(
          exeContext,
          itemType,
          fieldNodes,
          info,
          itemPath,
          item,
        );
      }

      if ((0, _isPromise.isPromise)(completedItem)) {
        containsPromise = true; // Note: we don't rely on a `catch` method, but we do expect "thenable"
        // to take a second callback for the error case.

        return completedItem.then(undefined, (rawError) => {
          const error = (0, _locatedError.locatedError)(
            rawError,
            fieldNodes,
            (0, _Path.pathToArray)(itemPath),
          );
          return handleFieldError(error, itemType, exeContext);
        });
      }

      return completedItem;
    } catch (rawError) {
      const error = (0, _locatedError.locatedError)(
        rawError,
        fieldNodes,
        (0, _Path.pathToArray)(itemPath),
      );
      return handleFieldError(error, itemType, exeContext);
    }
  });
  return containsPromise ? Promise.all(completedResults) : completedResults;
}
/**
 * Complete a Scalar or Enum by serializing to a valid value, returning
 * null if serialization is not possible.
 */

function completeLeafValue(returnType, result) {
  const serializedResult = returnType.serialize(result);

  if (serializedResult == null) {
    throw new Error(
      `Expected \`${(0, _inspect.inspect)(returnType)}.serialize(${(0,
      _inspect.inspect)(result)})\` to ` +
        `return non-nullable value, returned: ${(0, _inspect.inspect)(
          serializedResult,
        )}`,
    );
  }

  return serializedResult;
}
/**
 * Complete a value of an abstract type by determining the runtime object type
 * of that value, then complete the value for that type.
 */

function completeAbstractValue(
  exeContext,
  returnType,
  fieldNodes,
  info,
  path,
  result,
) {
  var _returnType$resolveTy;

  const resolveTypeFn =
    (_returnType$resolveTy = returnType.resolveType) !== null &&
    _returnType$resolveTy !== void 0
      ? _returnType$resolveTy
      : exeContext.typeResolver;
  const contextValue = exeContext.contextValue;
  const runtimeType = resolveTypeFn(result, contextValue, info, returnType);

  if ((0, _isPromise.isPromise)(runtimeType)) {
    return runtimeType.then((resolvedRuntimeType) =>
      completeObjectValue(
        exeContext,
        ensureValidRuntimeType(
          resolvedRuntimeType,
          exeContext,
          returnType,
          fieldNodes,
          info,
          result,
        ),
        fieldNodes,
        info,
        path,
        result,
      ),
    );
  }

  return completeObjectValue(
    exeContext,
    ensureValidRuntimeType(
      runtimeType,
      exeContext,
      returnType,
      fieldNodes,
      info,
      result,
    ),
    fieldNodes,
    info,
    path,
    result,
  );
}

function ensureValidRuntimeType(
  runtimeTypeName,
  exeContext,
  returnType,
  fieldNodes,
  info,
  result,
) {
  if (runtimeTypeName == null) {
    throw new _GraphQLError.GraphQLError(
      `Abstract type "${returnType.name}" must resolve to an Object type at runtime for field "${info.parentType.name}.${info.fieldName}". Either the "${returnType.name}" type should provide a "resolveType" function or each possible type should provide an "isTypeOf" function.`,
      fieldNodes,
    );
  } // releases before 16.0.0 supported returning `GraphQLObjectType` from `resolveType`
  // TODO: remove in 17.0.0 release

  if ((0, _definition.isObjectType)(runtimeTypeName)) {
    throw new _GraphQLError.GraphQLError(
      'Support for returning GraphQLObjectType from resolveType was removed in graphql-js@16.0.0 please return type name instead.',
    );
  }

  if (typeof runtimeTypeName !== 'string') {
    throw new _GraphQLError.GraphQLError(
      `Abstract type "${returnType.name}" must resolve to an Object type at runtime for field "${info.parentType.name}.${info.fieldName}" with ` +
        `value ${(0, _inspect.inspect)(result)}, received "${(0,
        _inspect.inspect)(runtimeTypeName)}".`,
    );
  }

  const runtimeType = exeContext.schema.getType(runtimeTypeName);

  if (runtimeType == null) {
    throw new _GraphQLError.GraphQLError(
      `Abstract type "${returnType.name}" was resolved to a type "${runtimeTypeName}" that does not exist inside the schema.`,
      {
        nodes: fieldNodes,
      },
    );
  }

  if (!(0, _definition.isObjectType)(runtimeType)) {
    throw new _GraphQLError.GraphQLError(
      `Abstract type "${returnType.name}" was resolved to a non-object type "${runtimeTypeName}".`,
      {
        nodes: fieldNodes,
      },
    );
  }

  if (!exeContext.schema.isSubType(returnType, runtimeType)) {
    throw new _GraphQLError.GraphQLError(
      `Runtime Object type "${runtimeType.name}" is not a possible type for "${returnType.name}".`,
      {
        nodes: fieldNodes,
      },
    );
  }

  return runtimeType;
}
/**
 * Complete an Object value by executing all sub-selections.
 */

function completeObjectValue(
  exeContext,
  returnType,
  fieldNodes,
  info,
  path,
  result,
) {
  // Collect sub-fields to execute to complete this value.
  const subFieldNodes = collectSubfields(exeContext, returnType, fieldNodes); // If there is an isTypeOf predicate function, call it with the
  // current result. If isTypeOf returns false, then raise an error rather
  // than continuing execution.

  if (returnType.isTypeOf) {
    const isTypeOf = returnType.isTypeOf(result, exeContext.contextValue, info);

    if ((0, _isPromise.isPromise)(isTypeOf)) {
      return isTypeOf.then((resolvedIsTypeOf) => {
        if (!resolvedIsTypeOf) {
          throw invalidReturnTypeError(returnType, result, fieldNodes);
        }

        return executeFields(
          exeContext,
          returnType,
          result,
          path,
          subFieldNodes,
        );
      });
    }

    if (!isTypeOf) {
      throw invalidReturnTypeError(returnType, result, fieldNodes);
    }
  }

  return executeFields(exeContext, returnType, result, path, subFieldNodes);
}

function invalidReturnTypeError(returnType, result, fieldNodes) {
  return new _GraphQLError.GraphQLError(
    `Expected value of type "${returnType.name}" but got: ${(0,
    _inspect.inspect)(result)}.`,
    {
      nodes: fieldNodes,
    },
  );
}
/**
 * If a resolveType function is not given, then a default resolve behavior is
 * used which attempts two strategies:
 *
 * First, See if the provided value has a `__typename` field defined, if so, use
 * that value as name of the resolved type.
 *
 * Otherwise, test each possible type for the abstract type by calling
 * isTypeOf for the object being coerced, returning the first type that matches.
 */

const defaultTypeResolver = function (value, contextValue, info, abstractType) {
  // First, look for `__typename`.
  if (
    (0, _isObjectLike.isObjectLike)(value) &&
    typeof value.__typename === 'string'
  ) {
    return value.__typename;
  } // Otherwise, test each possible type.

  const possibleTypes = info.schema.getPossibleTypes(abstractType);
  const promisedIsTypeOfResults = [];

  for (let i = 0; i < possibleTypes.length; i++) {
    const type = possibleTypes[i];

    if (type.isTypeOf) {
      const isTypeOfResult = type.isTypeOf(value, contextValue, info);

      if ((0, _isPromise.isPromise)(isTypeOfResult)) {
        promisedIsTypeOfResults[i] = isTypeOfResult;
      } else if (isTypeOfResult) {
        return type.name;
      }
    }
  }

  if (promisedIsTypeOfResults.length) {
    return Promise.all(promisedIsTypeOfResults).then((isTypeOfResults) => {
      for (let i = 0; i < isTypeOfResults.length; i++) {
        if (isTypeOfResults[i]) {
          return possibleTypes[i].name;
        }
      }
    });
  }
};
/**
 * If a resolve function is not given, then a default resolve behavior is used
 * which takes the property of the source object of the same name as the field
 * and returns it as the result, or if it's a function, returns the result
 * of calling that function while passing along args and context value.
 */

exports.defaultTypeResolver = defaultTypeResolver;

const defaultFieldResolver = function (source, args, contextValue, info) {
  // ensure source is a value for which property access is acceptable.
  if ((0, _isObjectLike.isObjectLike)(source) || typeof source === 'function') {
    const property = source[info.fieldName];

    if (typeof property === 'function') {
      return source[info.fieldName](args, contextValue, info);
    }

    return property;
  }
};
/**
 * This method looks up the field on the given type definition.
 * It has special casing for the three introspection fields,
 * __schema, __type and __typename. __typename is special because
 * it can always be queried as a field, even in situations where no
 * other fields are allowed, like on a Union. __schema and __type
 * could get automatically added to the query type, but that would
 * require mutating type definitions, which would cause issues.
 *
 * @internal
 */

exports.defaultFieldResolver = defaultFieldResolver;

function getFieldDef(schema, parentType, fieldNode) {
  const fieldName = fieldNode.name.value;

  if (
    fieldName === _introspection.SchemaMetaFieldDef.name &&
    schema.getQueryType() === parentType
  ) {
    return _introspection.SchemaMetaFieldDef;
  } else if (
    fieldName === _introspection.TypeMetaFieldDef.name &&
    schema.getQueryType() === parentType
  ) {
    return _introspection.TypeMetaFieldDef;
  } else if (fieldName === _introspection.TypeNameMetaFieldDef.name) {
    return _introspection.TypeNameMetaFieldDef;
  }

  return parentType.getFields()[fieldName];
}


/***/ }),

/***/ 3176:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
Object.defineProperty(exports, "createSourceEventStream", ({
  enumerable: true,
  get: function () {
    return _subscribe.createSourceEventStream;
  },
}));
Object.defineProperty(exports, "defaultFieldResolver", ({
  enumerable: true,
  get: function () {
    return _execute.defaultFieldResolver;
  },
}));
Object.defineProperty(exports, "defaultTypeResolver", ({
  enumerable: true,
  get: function () {
    return _execute.defaultTypeResolver;
  },
}));
Object.defineProperty(exports, "execute", ({
  enumerable: true,
  get: function () {
    return _execute.execute;
  },
}));
Object.defineProperty(exports, "executeSync", ({
  enumerable: true,
  get: function () {
    return _execute.executeSync;
  },
}));
Object.defineProperty(exports, "getArgumentValues", ({
  enumerable: true,
  get: function () {
    return _values.getArgumentValues;
  },
}));
Object.defineProperty(exports, "getDirectiveValues", ({
  enumerable: true,
  get: function () {
    return _values.getDirectiveValues;
  },
}));
Object.defineProperty(exports, "getVariableValues", ({
  enumerable: true,
  get: function () {
    return _values.getVariableValues;
  },
}));
Object.defineProperty(exports, "responsePathAsArray", ({
  enumerable: true,
  get: function () {
    return _Path.pathToArray;
  },
}));
Object.defineProperty(exports, "subscribe", ({
  enumerable: true,
  get: function () {
    return _subscribe.subscribe;
  },
}));

var _Path = __nccwpck_require__(1262);

var _execute = __nccwpck_require__(3677);

var _subscribe = __nccwpck_require__(7847);

var _values = __nccwpck_require__(4834);


/***/ }),

/***/ 6063:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.mapAsyncIterator = mapAsyncIterator;

/**
 * Given an AsyncIterable and a callback function, return an AsyncIterator
 * which produces values mapped via calling the callback function.
 */
function mapAsyncIterator(iterable, callback) {
  const iterator = iterable[Symbol.asyncIterator]();

  async function mapResult(result) {
    if (result.done) {
      return result;
    }

    try {
      return {
        value: await callback(result.value),
        done: false,
      };
    } catch (error) {
      /* c8 ignore start */
      // FIXME: add test case
      if (typeof iterator.return === 'function') {
        try {
          await iterator.return();
        } catch (_e) {
          /* ignore error */
        }
      }

      throw error;
      /* c8 ignore stop */
    }
  }

  return {
    async next() {
      return mapResult(await iterator.next());
    },

    async return() {
      // If iterator.return() does not exist, then type R must be undefined.
      return typeof iterator.return === 'function'
        ? mapResult(await iterator.return())
        : {
            value: undefined,
            done: true,
          };
    },

    async throw(error) {
      if (typeof iterator.throw === 'function') {
        return mapResult(await iterator.throw(error));
      }

      throw error;
    },

    [Symbol.asyncIterator]() {
      return this;
    },
  };
}


/***/ }),

/***/ 7847:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.createSourceEventStream = createSourceEventStream;
exports.subscribe = subscribe;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _isAsyncIterable = __nccwpck_require__(626);

var _Path = __nccwpck_require__(1262);

var _GraphQLError = __nccwpck_require__(4797);

var _locatedError = __nccwpck_require__(6842);

var _collectFields = __nccwpck_require__(9942);

var _execute = __nccwpck_require__(3677);

var _mapAsyncIterator = __nccwpck_require__(6063);

var _values = __nccwpck_require__(4834);

/**
 * Implements the "Subscribe" algorithm described in the GraphQL specification.
 *
 * Returns a Promise which resolves to either an AsyncIterator (if successful)
 * or an ExecutionResult (error). The promise will be rejected if the schema or
 * other arguments to this function are invalid, or if the resolved event stream
 * is not an async iterable.
 *
 * If the client-provided arguments to this function do not result in a
 * compliant subscription, a GraphQL Response (ExecutionResult) with
 * descriptive errors and no data will be returned.
 *
 * If the source stream could not be created due to faulty subscription
 * resolver logic or underlying systems, the promise will resolve to a single
 * ExecutionResult containing `errors` and no `data`.
 *
 * If the operation succeeded, the promise resolves to an AsyncIterator, which
 * yields a stream of ExecutionResults representing the response stream.
 *
 * Accepts either an object with named arguments, or individual arguments.
 */
async function subscribe(args) {
  // Temporary for v15 to v16 migration. Remove in v17
  arguments.length < 2 ||
    (0, _devAssert.devAssert)(
      false,
      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',
    );
  const resultOrStream = await createSourceEventStream(args);

  if (!(0, _isAsyncIterable.isAsyncIterable)(resultOrStream)) {
    return resultOrStream;
  } // For each payload yielded from a subscription, map it over the normal
  // GraphQL `execute` function, with `payload` as the rootValue.
  // This implements the "MapSourceToResponseEvent" algorithm described in
  // the GraphQL specification. The `execute` function provides the
  // "ExecuteSubscriptionEvent" algorithm, as it is nearly identical to the
  // "ExecuteQuery" algorithm, for which `execute` is also used.

  const mapSourceToResponse = (payload) =>
    (0, _execute.execute)({ ...args, rootValue: payload }); // Map every source value to a ExecutionResult value as described above.

  return (0, _mapAsyncIterator.mapAsyncIterator)(
    resultOrStream,
    mapSourceToResponse,
  );
}

function toNormalizedArgs(args) {
  const firstArg = args[0];

  if (firstArg && 'document' in firstArg) {
    return firstArg;
  }

  return {
    schema: firstArg,
    // FIXME: when underlying TS bug fixed, see https://github.com/microsoft/TypeScript/issues/31613
    document: args[1],
    rootValue: args[2],
    contextValue: args[3],
    variableValues: args[4],
    operationName: args[5],
    subscribeFieldResolver: args[6],
  };
}
/**
 * Implements the "CreateSourceEventStream" algorithm described in the
 * GraphQL specification, resolving the subscription source event stream.
 *
 * Returns a Promise which resolves to either an AsyncIterable (if successful)
 * or an ExecutionResult (error). The promise will be rejected if the schema or
 * other arguments to this function are invalid, or if the resolved event stream
 * is not an async iterable.
 *
 * If the client-provided arguments to this function do not result in a
 * compliant subscription, a GraphQL Response (ExecutionResult) with
 * descriptive errors and no data will be returned.
 *
 * If the the source stream could not be created due to faulty subscription
 * resolver logic or underlying systems, the promise will resolve to a single
 * ExecutionResult containing `errors` and no `data`.
 *
 * If the operation succeeded, the promise resolves to the AsyncIterable for the
 * event stream returned by the resolver.
 *
 * A Source Event Stream represents a sequence of events, each of which triggers
 * a GraphQL execution for that event.
 *
 * This may be useful when hosting the stateful subscription service in a
 * different process or machine than the stateless GraphQL execution engine,
 * or otherwise separating these two steps. For more on this, see the
 * "Supporting Subscriptions at Scale" information in the GraphQL specification.
 */

async function createSourceEventStream(...rawArgs) {
  const args = toNormalizedArgs(rawArgs);
  const { schema, document, variableValues } = args; // If arguments are missing or incorrectly typed, this is an internal
  // developer mistake which should throw an early error.

  (0, _execute.assertValidExecutionArguments)(schema, document, variableValues); // If a valid execution context cannot be created due to incorrect arguments,
  // a "Response" with only errors is returned.

  const exeContext = (0, _execute.buildExecutionContext)(args); // Return early errors if execution context failed.

  if (!('schema' in exeContext)) {
    return {
      errors: exeContext,
    };
  }

  try {
    const eventStream = await executeSubscription(exeContext); // Assert field returned an event stream, otherwise yield an error.

    if (!(0, _isAsyncIterable.isAsyncIterable)(eventStream)) {
      throw new Error(
        'Subscription field must return Async Iterable. ' +
          `Received: ${(0, _inspect.inspect)(eventStream)}.`,
      );
    }

    return eventStream;
  } catch (error) {
    // If it GraphQLError, report it as an ExecutionResult, containing only errors and no data.
    // Otherwise treat the error as a system-class error and re-throw it.
    if (error instanceof _GraphQLError.GraphQLError) {
      return {
        errors: [error],
      };
    }

    throw error;
  }
}

async function executeSubscription(exeContext) {
  const { schema, fragments, operation, variableValues, rootValue } =
    exeContext;
  const rootType = schema.getSubscriptionType();

  if (rootType == null) {
    throw new _GraphQLError.GraphQLError(
      'Schema is not configured to execute subscription operation.',
      {
        nodes: operation,
      },
    );
  }

  const rootFields = (0, _collectFields.collectFields)(
    schema,
    fragments,
    variableValues,
    rootType,
    operation.selectionSet,
  );
  const [responseName, fieldNodes] = [...rootFields.entries()][0];
  const fieldDef = (0, _execute.getFieldDef)(schema, rootType, fieldNodes[0]);

  if (!fieldDef) {
    const fieldName = fieldNodes[0].name.value;
    throw new _GraphQLError.GraphQLError(
      `The subscription field "${fieldName}" is not defined.`,
      {
        nodes: fieldNodes,
      },
    );
  }

  const path = (0, _Path.addPath)(undefined, responseName, rootType.name);
  const info = (0, _execute.buildResolveInfo)(
    exeContext,
    fieldDef,
    fieldNodes,
    rootType,
    path,
  );

  try {
    var _fieldDef$subscribe;

    // Implements the "ResolveFieldEventStream" algorithm from GraphQL specification.
    // It differs from "ResolveFieldValue" due to providing a different `resolveFn`.
    // Build a JS object of arguments from the field.arguments AST, using the
    // variables scope to fulfill any variable references.
    const args = (0, _values.getArgumentValues)(
      fieldDef,
      fieldNodes[0],
      variableValues,
    ); // The resolve function's optional third argument is a context value that
    // is provided to every resolve function within an execution. It is commonly
    // used to represent an authenticated user, or request-specific caches.

    const contextValue = exeContext.contextValue; // Call the `subscribe()` resolver or the default resolver to produce an
    // AsyncIterable yielding raw payloads.

    const resolveFn =
      (_fieldDef$subscribe = fieldDef.subscribe) !== null &&
      _fieldDef$subscribe !== void 0
        ? _fieldDef$subscribe
        : exeContext.subscribeFieldResolver;
    const eventStream = await resolveFn(rootValue, args, contextValue, info);

    if (eventStream instanceof Error) {
      throw eventStream;
    }

    return eventStream;
  } catch (error) {
    throw (0, _locatedError.locatedError)(
      error,
      fieldNodes,
      (0, _Path.pathToArray)(path),
    );
  }
}


/***/ }),

/***/ 4834:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.getArgumentValues = getArgumentValues;
exports.getDirectiveValues = getDirectiveValues;
exports.getVariableValues = getVariableValues;

var _inspect = __nccwpck_require__(102);

var _keyMap = __nccwpck_require__(711);

var _printPathArray = __nccwpck_require__(4281);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

var _coerceInputValue = __nccwpck_require__(4743);

var _typeFromAST = __nccwpck_require__(7664);

var _valueFromAST = __nccwpck_require__(3181);

/**
 * Prepares an object map of variableValues of the correct type based on the
 * provided variable definitions and arbitrary input. If the input cannot be
 * parsed to match the variable definitions, a GraphQLError will be thrown.
 *
 * Note: The returned value is a plain Object with a prototype, since it is
 * exposed to user code. Care should be taken to not pull values from the
 * Object prototype.
 */
function getVariableValues(schema, varDefNodes, inputs, options) {
  const errors = [];
  const maxErrors =
    options === null || options === void 0 ? void 0 : options.maxErrors;

  try {
    const coerced = coerceVariableValues(
      schema,
      varDefNodes,
      inputs,
      (error) => {
        if (maxErrors != null && errors.length >= maxErrors) {
          throw new _GraphQLError.GraphQLError(
            'Too many errors processing variables, error limit reached. Execution aborted.',
          );
        }

        errors.push(error);
      },
    );

    if (errors.length === 0) {
      return {
        coerced,
      };
    }
  } catch (error) {
    errors.push(error);
  }

  return {
    errors,
  };
}

function coerceVariableValues(schema, varDefNodes, inputs, onError) {
  const coercedValues = {};

  for (const varDefNode of varDefNodes) {
    const varName = varDefNode.variable.name.value;
    const varType = (0, _typeFromAST.typeFromAST)(schema, varDefNode.type);

    if (!(0, _definition.isInputType)(varType)) {
      // Must use input types for variables. This should be caught during
      // validation, however is checked again here for safety.
      const varTypeStr = (0, _printer.print)(varDefNode.type);
      onError(
        new _GraphQLError.GraphQLError(
          `Variable "$${varName}" expected value of type "${varTypeStr}" which cannot be used as an input type.`,
          {
            nodes: varDefNode.type,
          },
        ),
      );
      continue;
    }

    if (!hasOwnProperty(inputs, varName)) {
      if (varDefNode.defaultValue) {
        coercedValues[varName] = (0, _valueFromAST.valueFromAST)(
          varDefNode.defaultValue,
          varType,
        );
      } else if ((0, _definition.isNonNullType)(varType)) {
        const varTypeStr = (0, _inspect.inspect)(varType);
        onError(
          new _GraphQLError.GraphQLError(
            `Variable "$${varName}" of required type "${varTypeStr}" was not provided.`,
            {
              nodes: varDefNode,
            },
          ),
        );
      }

      continue;
    }

    const value = inputs[varName];

    if (value === null && (0, _definition.isNonNullType)(varType)) {
      const varTypeStr = (0, _inspect.inspect)(varType);
      onError(
        new _GraphQLError.GraphQLError(
          `Variable "$${varName}" of non-null type "${varTypeStr}" must not be null.`,
          {
            nodes: varDefNode,
          },
        ),
      );
      continue;
    }

    coercedValues[varName] = (0, _coerceInputValue.coerceInputValue)(
      value,
      varType,
      (path, invalidValue, error) => {
        let prefix =
          `Variable "$${varName}" got invalid value ` +
          (0, _inspect.inspect)(invalidValue);

        if (path.length > 0) {
          prefix += ` at "${varName}${(0, _printPathArray.printPathArray)(
            path,
          )}"`;
        }

        onError(
          new _GraphQLError.GraphQLError(prefix + '; ' + error.message, {
            nodes: varDefNode,
            originalError: error.originalError,
          }),
        );
      },
    );
  }

  return coercedValues;
}
/**
 * Prepares an object map of argument values given a list of argument
 * definitions and list of argument AST nodes.
 *
 * Note: The returned value is a plain Object with a prototype, since it is
 * exposed to user code. Care should be taken to not pull values from the
 * Object prototype.
 */

function getArgumentValues(def, node, variableValues) {
  var _node$arguments;

  const coercedValues = {}; // FIXME: https://github.com/graphql/graphql-js/issues/2203

  /* c8 ignore next */

  const argumentNodes =
    (_node$arguments = node.arguments) !== null && _node$arguments !== void 0
      ? _node$arguments
      : [];
  const argNodeMap = (0, _keyMap.keyMap)(
    argumentNodes,
    (arg) => arg.name.value,
  );

  for (const argDef of def.args) {
    const name = argDef.name;
    const argType = argDef.type;
    const argumentNode = argNodeMap[name];

    if (!argumentNode) {
      if (argDef.defaultValue !== undefined) {
        coercedValues[name] = argDef.defaultValue;
      } else if ((0, _definition.isNonNullType)(argType)) {
        throw new _GraphQLError.GraphQLError(
          `Argument "${name}" of required type "${(0, _inspect.inspect)(
            argType,
          )}" ` + 'was not provided.',
          {
            nodes: node,
          },
        );
      }

      continue;
    }

    const valueNode = argumentNode.value;
    let isNull = valueNode.kind === _kinds.Kind.NULL;

    if (valueNode.kind === _kinds.Kind.VARIABLE) {
      const variableName = valueNode.name.value;

      if (
        variableValues == null ||
        !hasOwnProperty(variableValues, variableName)
      ) {
        if (argDef.defaultValue !== undefined) {
          coercedValues[name] = argDef.defaultValue;
        } else if ((0, _definition.isNonNullType)(argType)) {
          throw new _GraphQLError.GraphQLError(
            `Argument "${name}" of required type "${(0, _inspect.inspect)(
              argType,
            )}" ` +
              `was provided the variable "$${variableName}" which was not provided a runtime value.`,
            {
              nodes: valueNode,
            },
          );
        }

        continue;
      }

      isNull = variableValues[variableName] == null;
    }

    if (isNull && (0, _definition.isNonNullType)(argType)) {
      throw new _GraphQLError.GraphQLError(
        `Argument "${name}" of non-null type "${(0, _inspect.inspect)(
          argType,
        )}" ` + 'must not be null.',
        {
          nodes: valueNode,
        },
      );
    }

    const coercedValue = (0, _valueFromAST.valueFromAST)(
      valueNode,
      argType,
      variableValues,
    );

    if (coercedValue === undefined) {
      // Note: ValuesOfCorrectTypeRule validation should catch this before
      // execution. This is a runtime check to ensure execution does not
      // continue with an invalid argument value.
      throw new _GraphQLError.GraphQLError(
        `Argument "${name}" has invalid value ${(0, _printer.print)(
          valueNode,
        )}.`,
        {
          nodes: valueNode,
        },
      );
    }

    coercedValues[name] = coercedValue;
  }

  return coercedValues;
}
/**
 * Prepares an object map of argument values given a directive definition
 * and a AST node which may contain directives. Optionally also accepts a map
 * of variable values.
 *
 * If the directive does not exist on the node, returns undefined.
 *
 * Note: The returned value is a plain Object with a prototype, since it is
 * exposed to user code. Care should be taken to not pull values from the
 * Object prototype.
 */

function getDirectiveValues(directiveDef, node, variableValues) {
  var _node$directives;

  const directiveNode =
    (_node$directives = node.directives) === null || _node$directives === void 0
      ? void 0
      : _node$directives.find(
          (directive) => directive.name.value === directiveDef.name,
        );

  if (directiveNode) {
    return getArgumentValues(directiveDef, directiveNode, variableValues);
  }
}

function hasOwnProperty(obj, prop) {
  return Object.prototype.hasOwnProperty.call(obj, prop);
}


/***/ }),

/***/ 4215:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.graphql = graphql;
exports.graphqlSync = graphqlSync;

var _devAssert = __nccwpck_require__(6514);

var _isPromise = __nccwpck_require__(3910);

var _parser = __nccwpck_require__(655);

var _validate = __nccwpck_require__(2430);

var _validate2 = __nccwpck_require__(4409);

var _execute = __nccwpck_require__(3677);

function graphql(args) {
  // Always return a Promise for a consistent API.
  return new Promise((resolve) => resolve(graphqlImpl(args)));
}
/**
 * The graphqlSync function also fulfills GraphQL operations by parsing,
 * validating, and executing a GraphQL document along side a GraphQL schema.
 * However, it guarantees to complete synchronously (or throw an error) assuming
 * that all field resolvers are also synchronous.
 */

function graphqlSync(args) {
  const result = graphqlImpl(args); // Assert that the execution was synchronous.

  if ((0, _isPromise.isPromise)(result)) {
    throw new Error('GraphQL execution failed to complete synchronously.');
  }

  return result;
}

function graphqlImpl(args) {
  // Temporary for v15 to v16 migration. Remove in v17
  arguments.length < 2 ||
    (0, _devAssert.devAssert)(
      false,
      'graphql@16 dropped long-deprecated support for positional arguments, please pass an object instead.',
    );
  const {
    schema,
    source,
    rootValue,
    contextValue,
    variableValues,
    operationName,
    fieldResolver,
    typeResolver,
  } = args; // Validate Schema

  const schemaValidationErrors = (0, _validate.validateSchema)(schema);

  if (schemaValidationErrors.length > 0) {
    return {
      errors: schemaValidationErrors,
    };
  } // Parse

  let document;

  try {
    document = (0, _parser.parse)(source);
  } catch (syntaxError) {
    return {
      errors: [syntaxError],
    };
  } // Validate

  const validationErrors = (0, _validate2.validate)(schema, document);

  if (validationErrors.length > 0) {
    return {
      errors: validationErrors,
    };
  } // Execute

  return (0, _execute.execute)({
    schema,
    document,
    rootValue,
    contextValue,
    variableValues,
    operationName,
    fieldResolver,
    typeResolver,
  });
}


/***/ }),

/***/ 6155:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
Object.defineProperty(exports, "BREAK", ({
  enumerable: true,
  get: function () {
    return _index2.BREAK;
  },
}));
Object.defineProperty(exports, "BreakingChangeType", ({
  enumerable: true,
  get: function () {
    return _index6.BreakingChangeType;
  },
}));
Object.defineProperty(exports, "DEFAULT_DEPRECATION_REASON", ({
  enumerable: true,
  get: function () {
    return _index.DEFAULT_DEPRECATION_REASON;
  },
}));
Object.defineProperty(exports, "DangerousChangeType", ({
  enumerable: true,
  get: function () {
    return _index6.DangerousChangeType;
  },
}));
Object.defineProperty(exports, "DirectiveLocation", ({
  enumerable: true,
  get: function () {
    return _index2.DirectiveLocation;
  },
}));
Object.defineProperty(exports, "ExecutableDefinitionsRule", ({
  enumerable: true,
  get: function () {
    return _index4.ExecutableDefinitionsRule;
  },
}));
Object.defineProperty(exports, "FieldsOnCorrectTypeRule", ({
  enumerable: true,
  get: function () {
    return _index4.FieldsOnCorrectTypeRule;
  },
}));
Object.defineProperty(exports, "FragmentsOnCompositeTypesRule", ({
  enumerable: true,
  get: function () {
    return _index4.FragmentsOnCompositeTypesRule;
  },
}));
Object.defineProperty(exports, "GRAPHQL_MAX_INT", ({
  enumerable: true,
  get: function () {
    return _index.GRAPHQL_MAX_INT;
  },
}));
Object.defineProperty(exports, "GRAPHQL_MIN_INT", ({
  enumerable: true,
  get: function () {
    return _index.GRAPHQL_MIN_INT;
  },
}));
Object.defineProperty(exports, "GraphQLBoolean", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLBoolean;
  },
}));
Object.defineProperty(exports, "GraphQLDeprecatedDirective", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLDeprecatedDirective;
  },
}));
Object.defineProperty(exports, "GraphQLDirective", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLDirective;
  },
}));
Object.defineProperty(exports, "GraphQLEnumType", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLEnumType;
  },
}));
Object.defineProperty(exports, "GraphQLError", ({
  enumerable: true,
  get: function () {
    return _index5.GraphQLError;
  },
}));
Object.defineProperty(exports, "GraphQLFloat", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLFloat;
  },
}));
Object.defineProperty(exports, "GraphQLID", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLID;
  },
}));
Object.defineProperty(exports, "GraphQLIncludeDirective", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLIncludeDirective;
  },
}));
Object.defineProperty(exports, "GraphQLInputObjectType", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLInputObjectType;
  },
}));
Object.defineProperty(exports, "GraphQLInt", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLInt;
  },
}));
Object.defineProperty(exports, "GraphQLInterfaceType", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLInterfaceType;
  },
}));
Object.defineProperty(exports, "GraphQLList", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLList;
  },
}));
Object.defineProperty(exports, "GraphQLNonNull", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLNonNull;
  },
}));
Object.defineProperty(exports, "GraphQLObjectType", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLObjectType;
  },
}));
Object.defineProperty(exports, "GraphQLScalarType", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLScalarType;
  },
}));
Object.defineProperty(exports, "GraphQLSchema", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLSchema;
  },
}));
Object.defineProperty(exports, "GraphQLSkipDirective", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLSkipDirective;
  },
}));
Object.defineProperty(exports, "GraphQLSpecifiedByDirective", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLSpecifiedByDirective;
  },
}));
Object.defineProperty(exports, "GraphQLString", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLString;
  },
}));
Object.defineProperty(exports, "GraphQLUnionType", ({
  enumerable: true,
  get: function () {
    return _index.GraphQLUnionType;
  },
}));
Object.defineProperty(exports, "Kind", ({
  enumerable: true,
  get: function () {
    return _index2.Kind;
  },
}));
Object.defineProperty(exports, "KnownArgumentNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.KnownArgumentNamesRule;
  },
}));
Object.defineProperty(exports, "KnownDirectivesRule", ({
  enumerable: true,
  get: function () {
    return _index4.KnownDirectivesRule;
  },
}));
Object.defineProperty(exports, "KnownFragmentNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.KnownFragmentNamesRule;
  },
}));
Object.defineProperty(exports, "KnownTypeNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.KnownTypeNamesRule;
  },
}));
Object.defineProperty(exports, "Lexer", ({
  enumerable: true,
  get: function () {
    return _index2.Lexer;
  },
}));
Object.defineProperty(exports, "Location", ({
  enumerable: true,
  get: function () {
    return _index2.Location;
  },
}));
Object.defineProperty(exports, "LoneAnonymousOperationRule", ({
  enumerable: true,
  get: function () {
    return _index4.LoneAnonymousOperationRule;
  },
}));
Object.defineProperty(exports, "LoneSchemaDefinitionRule", ({
  enumerable: true,
  get: function () {
    return _index4.LoneSchemaDefinitionRule;
  },
}));
Object.defineProperty(exports, "NoDeprecatedCustomRule", ({
  enumerable: true,
  get: function () {
    return _index4.NoDeprecatedCustomRule;
  },
}));
Object.defineProperty(exports, "NoFragmentCyclesRule", ({
  enumerable: true,
  get: function () {
    return _index4.NoFragmentCyclesRule;
  },
}));
Object.defineProperty(exports, "NoSchemaIntrospectionCustomRule", ({
  enumerable: true,
  get: function () {
    return _index4.NoSchemaIntrospectionCustomRule;
  },
}));
Object.defineProperty(exports, "NoUndefinedVariablesRule", ({
  enumerable: true,
  get: function () {
    return _index4.NoUndefinedVariablesRule;
  },
}));
Object.defineProperty(exports, "NoUnusedFragmentsRule", ({
  enumerable: true,
  get: function () {
    return _index4.NoUnusedFragmentsRule;
  },
}));
Object.defineProperty(exports, "NoUnusedVariablesRule", ({
  enumerable: true,
  get: function () {
    return _index4.NoUnusedVariablesRule;
  },
}));
Object.defineProperty(exports, "OperationTypeNode", ({
  enumerable: true,
  get: function () {
    return _index2.OperationTypeNode;
  },
}));
Object.defineProperty(exports, "OverlappingFieldsCanBeMergedRule", ({
  enumerable: true,
  get: function () {
    return _index4.OverlappingFieldsCanBeMergedRule;
  },
}));
Object.defineProperty(exports, "PossibleFragmentSpreadsRule", ({
  enumerable: true,
  get: function () {
    return _index4.PossibleFragmentSpreadsRule;
  },
}));
Object.defineProperty(exports, "PossibleTypeExtensionsRule", ({
  enumerable: true,
  get: function () {
    return _index4.PossibleTypeExtensionsRule;
  },
}));
Object.defineProperty(exports, "ProvidedRequiredArgumentsRule", ({
  enumerable: true,
  get: function () {
    return _index4.ProvidedRequiredArgumentsRule;
  },
}));
Object.defineProperty(exports, "ScalarLeafsRule", ({
  enumerable: true,
  get: function () {
    return _index4.ScalarLeafsRule;
  },
}));
Object.defineProperty(exports, "SchemaMetaFieldDef", ({
  enumerable: true,
  get: function () {
    return _index.SchemaMetaFieldDef;
  },
}));
Object.defineProperty(exports, "SingleFieldSubscriptionsRule", ({
  enumerable: true,
  get: function () {
    return _index4.SingleFieldSubscriptionsRule;
  },
}));
Object.defineProperty(exports, "Source", ({
  enumerable: true,
  get: function () {
    return _index2.Source;
  },
}));
Object.defineProperty(exports, "Token", ({
  enumerable: true,
  get: function () {
    return _index2.Token;
  },
}));
Object.defineProperty(exports, "TokenKind", ({
  enumerable: true,
  get: function () {
    return _index2.TokenKind;
  },
}));
Object.defineProperty(exports, "TypeInfo", ({
  enumerable: true,
  get: function () {
    return _index6.TypeInfo;
  },
}));
Object.defineProperty(exports, "TypeKind", ({
  enumerable: true,
  get: function () {
    return _index.TypeKind;
  },
}));
Object.defineProperty(exports, "TypeMetaFieldDef", ({
  enumerable: true,
  get: function () {
    return _index.TypeMetaFieldDef;
  },
}));
Object.defineProperty(exports, "TypeNameMetaFieldDef", ({
  enumerable: true,
  get: function () {
    return _index.TypeNameMetaFieldDef;
  },
}));
Object.defineProperty(exports, "UniqueArgumentDefinitionNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueArgumentDefinitionNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueArgumentNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueArgumentNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueDirectiveNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueDirectiveNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueDirectivesPerLocationRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueDirectivesPerLocationRule;
  },
}));
Object.defineProperty(exports, "UniqueEnumValueNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueEnumValueNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueFieldDefinitionNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueFieldDefinitionNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueFragmentNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueFragmentNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueInputFieldNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueInputFieldNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueOperationNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueOperationNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueOperationTypesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueOperationTypesRule;
  },
}));
Object.defineProperty(exports, "UniqueTypeNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueTypeNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueVariableNamesRule", ({
  enumerable: true,
  get: function () {
    return _index4.UniqueVariableNamesRule;
  },
}));
Object.defineProperty(exports, "ValidationContext", ({
  enumerable: true,
  get: function () {
    return _index4.ValidationContext;
  },
}));
Object.defineProperty(exports, "ValuesOfCorrectTypeRule", ({
  enumerable: true,
  get: function () {
    return _index4.ValuesOfCorrectTypeRule;
  },
}));
Object.defineProperty(exports, "VariablesAreInputTypesRule", ({
  enumerable: true,
  get: function () {
    return _index4.VariablesAreInputTypesRule;
  },
}));
Object.defineProperty(exports, "VariablesInAllowedPositionRule", ({
  enumerable: true,
  get: function () {
    return _index4.VariablesInAllowedPositionRule;
  },
}));
Object.defineProperty(exports, "__Directive", ({
  enumerable: true,
  get: function () {
    return _index.__Directive;
  },
}));
Object.defineProperty(exports, "__DirectiveLocation", ({
  enumerable: true,
  get: function () {
    return _index.__DirectiveLocation;
  },
}));
Object.defineProperty(exports, "__EnumValue", ({
  enumerable: true,
  get: function () {
    return _index.__EnumValue;
  },
}));
Object.defineProperty(exports, "__Field", ({
  enumerable: true,
  get: function () {
    return _index.__Field;
  },
}));
Object.defineProperty(exports, "__InputValue", ({
  enumerable: true,
  get: function () {
    return _index.__InputValue;
  },
}));
Object.defineProperty(exports, "__Schema", ({
  enumerable: true,
  get: function () {
    return _index.__Schema;
  },
}));
Object.defineProperty(exports, "__Type", ({
  enumerable: true,
  get: function () {
    return _index.__Type;
  },
}));
Object.defineProperty(exports, "__TypeKind", ({
  enumerable: true,
  get: function () {
    return _index.__TypeKind;
  },
}));
Object.defineProperty(exports, "assertAbstractType", ({
  enumerable: true,
  get: function () {
    return _index.assertAbstractType;
  },
}));
Object.defineProperty(exports, "assertCompositeType", ({
  enumerable: true,
  get: function () {
    return _index.assertCompositeType;
  },
}));
Object.defineProperty(exports, "assertDirective", ({
  enumerable: true,
  get: function () {
    return _index.assertDirective;
  },
}));
Object.defineProperty(exports, "assertEnumType", ({
  enumerable: true,
  get: function () {
    return _index.assertEnumType;
  },
}));
Object.defineProperty(exports, "assertEnumValueName", ({
  enumerable: true,
  get: function () {
    return _index.assertEnumValueName;
  },
}));
Object.defineProperty(exports, "assertInputObjectType", ({
  enumerable: true,
  get: function () {
    return _index.assertInputObjectType;
  },
}));
Object.defineProperty(exports, "assertInputType", ({
  enumerable: true,
  get: function () {
    return _index.assertInputType;
  },
}));
Object.defineProperty(exports, "assertInterfaceType", ({
  enumerable: true,
  get: function () {
    return _index.assertInterfaceType;
  },
}));
Object.defineProperty(exports, "assertLeafType", ({
  enumerable: true,
  get: function () {
    return _index.assertLeafType;
  },
}));
Object.defineProperty(exports, "assertListType", ({
  enumerable: true,
  get: function () {
    return _index.assertListType;
  },
}));
Object.defineProperty(exports, "assertName", ({
  enumerable: true,
  get: function () {
    return _index.assertName;
  },
}));
Object.defineProperty(exports, "assertNamedType", ({
  enumerable: true,
  get: function () {
    return _index.assertNamedType;
  },
}));
Object.defineProperty(exports, "assertNonNullType", ({
  enumerable: true,
  get: function () {
    return _index.assertNonNullType;
  },
}));
Object.defineProperty(exports, "assertNullableType", ({
  enumerable: true,
  get: function () {
    return _index.assertNullableType;
  },
}));
Object.defineProperty(exports, "assertObjectType", ({
  enumerable: true,
  get: function () {
    return _index.assertObjectType;
  },
}));
Object.defineProperty(exports, "assertOutputType", ({
  enumerable: true,
  get: function () {
    return _index.assertOutputType;
  },
}));
Object.defineProperty(exports, "assertScalarType", ({
  enumerable: true,
  get: function () {
    return _index.assertScalarType;
  },
}));
Object.defineProperty(exports, "assertSchema", ({
  enumerable: true,
  get: function () {
    return _index.assertSchema;
  },
}));
Object.defineProperty(exports, "assertType", ({
  enumerable: true,
  get: function () {
    return _index.assertType;
  },
}));
Object.defineProperty(exports, "assertUnionType", ({
  enumerable: true,
  get: function () {
    return _index.assertUnionType;
  },
}));
Object.defineProperty(exports, "assertValidName", ({
  enumerable: true,
  get: function () {
    return _index6.assertValidName;
  },
}));
Object.defineProperty(exports, "assertValidSchema", ({
  enumerable: true,
  get: function () {
    return _index.assertValidSchema;
  },
}));
Object.defineProperty(exports, "assertWrappingType", ({
  enumerable: true,
  get: function () {
    return _index.assertWrappingType;
  },
}));
Object.defineProperty(exports, "astFromValue", ({
  enumerable: true,
  get: function () {
    return _index6.astFromValue;
  },
}));
Object.defineProperty(exports, "buildASTSchema", ({
  enumerable: true,
  get: function () {
    return _index6.buildASTSchema;
  },
}));
Object.defineProperty(exports, "buildClientSchema", ({
  enumerable: true,
  get: function () {
    return _index6.buildClientSchema;
  },
}));
Object.defineProperty(exports, "buildSchema", ({
  enumerable: true,
  get: function () {
    return _index6.buildSchema;
  },
}));
Object.defineProperty(exports, "coerceInputValue", ({
  enumerable: true,
  get: function () {
    return _index6.coerceInputValue;
  },
}));
Object.defineProperty(exports, "concatAST", ({
  enumerable: true,
  get: function () {
    return _index6.concatAST;
  },
}));
Object.defineProperty(exports, "createSourceEventStream", ({
  enumerable: true,
  get: function () {
    return _index3.createSourceEventStream;
  },
}));
Object.defineProperty(exports, "defaultFieldResolver", ({
  enumerable: true,
  get: function () {
    return _index3.defaultFieldResolver;
  },
}));
Object.defineProperty(exports, "defaultTypeResolver", ({
  enumerable: true,
  get: function () {
    return _index3.defaultTypeResolver;
  },
}));
Object.defineProperty(exports, "doTypesOverlap", ({
  enumerable: true,
  get: function () {
    return _index6.doTypesOverlap;
  },
}));
Object.defineProperty(exports, "execute", ({
  enumerable: true,
  get: function () {
    return _index3.execute;
  },
}));
Object.defineProperty(exports, "executeSync", ({
  enumerable: true,
  get: function () {
    return _index3.executeSync;
  },
}));
Object.defineProperty(exports, "extendSchema", ({
  enumerable: true,
  get: function () {
    return _index6.extendSchema;
  },
}));
Object.defineProperty(exports, "findBreakingChanges", ({
  enumerable: true,
  get: function () {
    return _index6.findBreakingChanges;
  },
}));
Object.defineProperty(exports, "findDangerousChanges", ({
  enumerable: true,
  get: function () {
    return _index6.findDangerousChanges;
  },
}));
Object.defineProperty(exports, "formatError", ({
  enumerable: true,
  get: function () {
    return _index5.formatError;
  },
}));
Object.defineProperty(exports, "getArgumentValues", ({
  enumerable: true,
  get: function () {
    return _index3.getArgumentValues;
  },
}));
Object.defineProperty(exports, "getDirectiveValues", ({
  enumerable: true,
  get: function () {
    return _index3.getDirectiveValues;
  },
}));
Object.defineProperty(exports, "getEnterLeaveForKind", ({
  enumerable: true,
  get: function () {
    return _index2.getEnterLeaveForKind;
  },
}));
Object.defineProperty(exports, "getIntrospectionQuery", ({
  enumerable: true,
  get: function () {
    return _index6.getIntrospectionQuery;
  },
}));
Object.defineProperty(exports, "getLocation", ({
  enumerable: true,
  get: function () {
    return _index2.getLocation;
  },
}));
Object.defineProperty(exports, "getNamedType", ({
  enumerable: true,
  get: function () {
    return _index.getNamedType;
  },
}));
Object.defineProperty(exports, "getNullableType", ({
  enumerable: true,
  get: function () {
    return _index.getNullableType;
  },
}));
Object.defineProperty(exports, "getOperationAST", ({
  enumerable: true,
  get: function () {
    return _index6.getOperationAST;
  },
}));
Object.defineProperty(exports, "getOperationRootType", ({
  enumerable: true,
  get: function () {
    return _index6.getOperationRootType;
  },
}));
Object.defineProperty(exports, "getVariableValues", ({
  enumerable: true,
  get: function () {
    return _index3.getVariableValues;
  },
}));
Object.defineProperty(exports, "getVisitFn", ({
  enumerable: true,
  get: function () {
    return _index2.getVisitFn;
  },
}));
Object.defineProperty(exports, "graphql", ({
  enumerable: true,
  get: function () {
    return _graphql.graphql;
  },
}));
Object.defineProperty(exports, "graphqlSync", ({
  enumerable: true,
  get: function () {
    return _graphql.graphqlSync;
  },
}));
Object.defineProperty(exports, "introspectionFromSchema", ({
  enumerable: true,
  get: function () {
    return _index6.introspectionFromSchema;
  },
}));
Object.defineProperty(exports, "introspectionTypes", ({
  enumerable: true,
  get: function () {
    return _index.introspectionTypes;
  },
}));
Object.defineProperty(exports, "isAbstractType", ({
  enumerable: true,
  get: function () {
    return _index.isAbstractType;
  },
}));
Object.defineProperty(exports, "isCompositeType", ({
  enumerable: true,
  get: function () {
    return _index.isCompositeType;
  },
}));
Object.defineProperty(exports, "isConstValueNode", ({
  enumerable: true,
  get: function () {
    return _index2.isConstValueNode;
  },
}));
Object.defineProperty(exports, "isDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _index2.isDefinitionNode;
  },
}));
Object.defineProperty(exports, "isDirective", ({
  enumerable: true,
  get: function () {
    return _index.isDirective;
  },
}));
Object.defineProperty(exports, "isEnumType", ({
  enumerable: true,
  get: function () {
    return _index.isEnumType;
  },
}));
Object.defineProperty(exports, "isEqualType", ({
  enumerable: true,
  get: function () {
    return _index6.isEqualType;
  },
}));
Object.defineProperty(exports, "isExecutableDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _index2.isExecutableDefinitionNode;
  },
}));
Object.defineProperty(exports, "isInputObjectType", ({
  enumerable: true,
  get: function () {
    return _index.isInputObjectType;
  },
}));
Object.defineProperty(exports, "isInputType", ({
  enumerable: true,
  get: function () {
    return _index.isInputType;
  },
}));
Object.defineProperty(exports, "isInterfaceType", ({
  enumerable: true,
  get: function () {
    return _index.isInterfaceType;
  },
}));
Object.defineProperty(exports, "isIntrospectionType", ({
  enumerable: true,
  get: function () {
    return _index.isIntrospectionType;
  },
}));
Object.defineProperty(exports, "isLeafType", ({
  enumerable: true,
  get: function () {
    return _index.isLeafType;
  },
}));
Object.defineProperty(exports, "isListType", ({
  enumerable: true,
  get: function () {
    return _index.isListType;
  },
}));
Object.defineProperty(exports, "isNamedType", ({
  enumerable: true,
  get: function () {
    return _index.isNamedType;
  },
}));
Object.defineProperty(exports, "isNonNullType", ({
  enumerable: true,
  get: function () {
    return _index.isNonNullType;
  },
}));
Object.defineProperty(exports, "isNullableType", ({
  enumerable: true,
  get: function () {
    return _index.isNullableType;
  },
}));
Object.defineProperty(exports, "isObjectType", ({
  enumerable: true,
  get: function () {
    return _index.isObjectType;
  },
}));
Object.defineProperty(exports, "isOutputType", ({
  enumerable: true,
  get: function () {
    return _index.isOutputType;
  },
}));
Object.defineProperty(exports, "isRequiredArgument", ({
  enumerable: true,
  get: function () {
    return _index.isRequiredArgument;
  },
}));
Object.defineProperty(exports, "isRequiredInputField", ({
  enumerable: true,
  get: function () {
    return _index.isRequiredInputField;
  },
}));
Object.defineProperty(exports, "isScalarType", ({
  enumerable: true,
  get: function () {
    return _index.isScalarType;
  },
}));
Object.defineProperty(exports, "isSchema", ({
  enumerable: true,
  get: function () {
    return _index.isSchema;
  },
}));
Object.defineProperty(exports, "isSelectionNode", ({
  enumerable: true,
  get: function () {
    return _index2.isSelectionNode;
  },
}));
Object.defineProperty(exports, "isSpecifiedDirective", ({
  enumerable: true,
  get: function () {
    return _index.isSpecifiedDirective;
  },
}));
Object.defineProperty(exports, "isSpecifiedScalarType", ({
  enumerable: true,
  get: function () {
    return _index.isSpecifiedScalarType;
  },
}));
Object.defineProperty(exports, "isType", ({
  enumerable: true,
  get: function () {
    return _index.isType;
  },
}));
Object.defineProperty(exports, "isTypeDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _index2.isTypeDefinitionNode;
  },
}));
Object.defineProperty(exports, "isTypeExtensionNode", ({
  enumerable: true,
  get: function () {
    return _index2.isTypeExtensionNode;
  },
}));
Object.defineProperty(exports, "isTypeNode", ({
  enumerable: true,
  get: function () {
    return _index2.isTypeNode;
  },
}));
Object.defineProperty(exports, "isTypeSubTypeOf", ({
  enumerable: true,
  get: function () {
    return _index6.isTypeSubTypeOf;
  },
}));
Object.defineProperty(exports, "isTypeSystemDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _index2.isTypeSystemDefinitionNode;
  },
}));
Object.defineProperty(exports, "isTypeSystemExtensionNode", ({
  enumerable: true,
  get: function () {
    return _index2.isTypeSystemExtensionNode;
  },
}));
Object.defineProperty(exports, "isUnionType", ({
  enumerable: true,
  get: function () {
    return _index.isUnionType;
  },
}));
Object.defineProperty(exports, "isValidNameError", ({
  enumerable: true,
  get: function () {
    return _index6.isValidNameError;
  },
}));
Object.defineProperty(exports, "isValueNode", ({
  enumerable: true,
  get: function () {
    return _index2.isValueNode;
  },
}));
Object.defineProperty(exports, "isWrappingType", ({
  enumerable: true,
  get: function () {
    return _index.isWrappingType;
  },
}));
Object.defineProperty(exports, "lexicographicSortSchema", ({
  enumerable: true,
  get: function () {
    return _index6.lexicographicSortSchema;
  },
}));
Object.defineProperty(exports, "locatedError", ({
  enumerable: true,
  get: function () {
    return _index5.locatedError;
  },
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _index2.parse;
  },
}));
Object.defineProperty(exports, "parseConstValue", ({
  enumerable: true,
  get: function () {
    return _index2.parseConstValue;
  },
}));
Object.defineProperty(exports, "parseType", ({
  enumerable: true,
  get: function () {
    return _index2.parseType;
  },
}));
Object.defineProperty(exports, "parseValue", ({
  enumerable: true,
  get: function () {
    return _index2.parseValue;
  },
}));
Object.defineProperty(exports, "print", ({
  enumerable: true,
  get: function () {
    return _index2.print;
  },
}));
Object.defineProperty(exports, "printError", ({
  enumerable: true,
  get: function () {
    return _index5.printError;
  },
}));
Object.defineProperty(exports, "printIntrospectionSchema", ({
  enumerable: true,
  get: function () {
    return _index6.printIntrospectionSchema;
  },
}));
Object.defineProperty(exports, "printLocation", ({
  enumerable: true,
  get: function () {
    return _index2.printLocation;
  },
}));
Object.defineProperty(exports, "printSchema", ({
  enumerable: true,
  get: function () {
    return _index6.printSchema;
  },
}));
Object.defineProperty(exports, "printSourceLocation", ({
  enumerable: true,
  get: function () {
    return _index2.printSourceLocation;
  },
}));
Object.defineProperty(exports, "printType", ({
  enumerable: true,
  get: function () {
    return _index6.printType;
  },
}));
Object.defineProperty(exports, "resolveObjMapThunk", ({
  enumerable: true,
  get: function () {
    return _index.resolveObjMapThunk;
  },
}));
Object.defineProperty(exports, "resolveReadonlyArrayThunk", ({
  enumerable: true,
  get: function () {
    return _index.resolveReadonlyArrayThunk;
  },
}));
Object.defineProperty(exports, "responsePathAsArray", ({
  enumerable: true,
  get: function () {
    return _index3.responsePathAsArray;
  },
}));
Object.defineProperty(exports, "separateOperations", ({
  enumerable: true,
  get: function () {
    return _index6.separateOperations;
  },
}));
Object.defineProperty(exports, "specifiedDirectives", ({
  enumerable: true,
  get: function () {
    return _index.specifiedDirectives;
  },
}));
Object.defineProperty(exports, "specifiedRules", ({
  enumerable: true,
  get: function () {
    return _index4.specifiedRules;
  },
}));
Object.defineProperty(exports, "specifiedScalarTypes", ({
  enumerable: true,
  get: function () {
    return _index.specifiedScalarTypes;
  },
}));
Object.defineProperty(exports, "stripIgnoredCharacters", ({
  enumerable: true,
  get: function () {
    return _index6.stripIgnoredCharacters;
  },
}));
Object.defineProperty(exports, "subscribe", ({
  enumerable: true,
  get: function () {
    return _index3.subscribe;
  },
}));
Object.defineProperty(exports, "syntaxError", ({
  enumerable: true,
  get: function () {
    return _index5.syntaxError;
  },
}));
Object.defineProperty(exports, "typeFromAST", ({
  enumerable: true,
  get: function () {
    return _index6.typeFromAST;
  },
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _index4.validate;
  },
}));
Object.defineProperty(exports, "validateSchema", ({
  enumerable: true,
  get: function () {
    return _index.validateSchema;
  },
}));
Object.defineProperty(exports, "valueFromAST", ({
  enumerable: true,
  get: function () {
    return _index6.valueFromAST;
  },
}));
Object.defineProperty(exports, "valueFromASTUntyped", ({
  enumerable: true,
  get: function () {
    return _index6.valueFromASTUntyped;
  },
}));
Object.defineProperty(exports, "version", ({
  enumerable: true,
  get: function () {
    return _version.version;
  },
}));
Object.defineProperty(exports, "versionInfo", ({
  enumerable: true,
  get: function () {
    return _version.versionInfo;
  },
}));
Object.defineProperty(exports, "visit", ({
  enumerable: true,
  get: function () {
    return _index2.visit;
  },
}));
Object.defineProperty(exports, "visitInParallel", ({
  enumerable: true,
  get: function () {
    return _index2.visitInParallel;
  },
}));
Object.defineProperty(exports, "visitWithTypeInfo", ({
  enumerable: true,
  get: function () {
    return _index6.visitWithTypeInfo;
  },
}));

var _version = __nccwpck_require__(1923);

var _graphql = __nccwpck_require__(4215);

var _index = __nccwpck_require__(3280);

var _index2 = __nccwpck_require__(9537);

var _index3 = __nccwpck_require__(3176);

var _index4 = __nccwpck_require__(2201);

var _index5 = __nccwpck_require__(578);

var _index6 = __nccwpck_require__(676);


/***/ }),

/***/ 1262:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.addPath = addPath;
exports.pathToArray = pathToArray;

/**
 * Given a Path and a key, return a new Path containing the new key.
 */
function addPath(prev, key, typename) {
  return {
    prev,
    key,
    typename,
  };
}
/**
 * Given a Path, return an Array of the path keys.
 */

function pathToArray(path) {
  const flattened = [];
  let curr = path;

  while (curr) {
    flattened.push(curr.key);
    curr = curr.prev;
  }

  return flattened.reverse();
}


/***/ }),

/***/ 6514:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.devAssert = devAssert;

function devAssert(condition, message) {
  const booleanCondition = Boolean(condition);

  if (!booleanCondition) {
    throw new Error(message);
  }
}


/***/ }),

/***/ 2878:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.didYouMean = didYouMean;
const MAX_SUGGESTIONS = 5;
/**
 * Given [ A, B, C ] return ' Did you mean A, B, or C?'.
 */

function didYouMean(firstArg, secondArg) {
  const [subMessage, suggestionsArg] = secondArg
    ? [firstArg, secondArg]
    : [undefined, firstArg];
  let message = ' Did you mean ';

  if (subMessage) {
    message += subMessage + ' ';
  }

  const suggestions = suggestionsArg.map((x) => `"${x}"`);

  switch (suggestions.length) {
    case 0:
      return '';

    case 1:
      return message + suggestions[0] + '?';

    case 2:
      return message + suggestions[0] + ' or ' + suggestions[1] + '?';
  }

  const selected = suggestions.slice(0, MAX_SUGGESTIONS);
  const lastItem = selected.pop();
  return message + selected.join(', ') + ', or ' + lastItem + '?';
}


/***/ }),

/***/ 3173:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.groupBy = groupBy;

/**
 * Groups array items into a Map, given a function to produce grouping key.
 */
function groupBy(list, keyFn) {
  const result = new Map();

  for (const item of list) {
    const key = keyFn(item);
    const group = result.get(key);

    if (group === undefined) {
      result.set(key, [item]);
    } else {
      group.push(item);
    }
  }

  return result;
}


/***/ }),

/***/ 1188:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.identityFunc = identityFunc;

/**
 * Returns the first argument it receives.
 */
function identityFunc(x) {
  return x;
}


/***/ }),

/***/ 102:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.inspect = inspect;
const MAX_ARRAY_LENGTH = 10;
const MAX_RECURSIVE_DEPTH = 2;
/**
 * Used to print values in error messages.
 */

function inspect(value) {
  return formatValue(value, []);
}

function formatValue(value, seenValues) {
  switch (typeof value) {
    case 'string':
      return JSON.stringify(value);

    case 'function':
      return value.name ? `[function ${value.name}]` : '[function]';

    case 'object':
      return formatObjectValue(value, seenValues);

    default:
      return String(value);
  }
}

function formatObjectValue(value, previouslySeenValues) {
  if (value === null) {
    return 'null';
  }

  if (previouslySeenValues.includes(value)) {
    return '[Circular]';
  }

  const seenValues = [...previouslySeenValues, value];

  if (isJSONable(value)) {
    const jsonValue = value.toJSON(); // check for infinite recursion

    if (jsonValue !== value) {
      return typeof jsonValue === 'string'
        ? jsonValue
        : formatValue(jsonValue, seenValues);
    }
  } else if (Array.isArray(value)) {
    return formatArray(value, seenValues);
  }

  return formatObject(value, seenValues);
}

function isJSONable(value) {
  return typeof value.toJSON === 'function';
}

function formatObject(object, seenValues) {
  const entries = Object.entries(object);

  if (entries.length === 0) {
    return '{}';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[' + getObjectTag(object) + ']';
  }

  const properties = entries.map(
    ([key, value]) => key + ': ' + formatValue(value, seenValues),
  );
  return '{ ' + properties.join(', ') + ' }';
}

function formatArray(array, seenValues) {
  if (array.length === 0) {
    return '[]';
  }

  if (seenValues.length > MAX_RECURSIVE_DEPTH) {
    return '[Array]';
  }

  const len = Math.min(MAX_ARRAY_LENGTH, array.length);
  const remaining = array.length - len;
  const items = [];

  for (let i = 0; i < len; ++i) {
    items.push(formatValue(array[i], seenValues));
  }

  if (remaining === 1) {
    items.push('... 1 more item');
  } else if (remaining > 1) {
    items.push(`... ${remaining} more items`);
  }

  return '[' + items.join(', ') + ']';
}

function getObjectTag(object) {
  const tag = Object.prototype.toString
    .call(object)
    .replace(/^\[object /, '')
    .replace(/]$/, '');

  if (tag === 'Object' && typeof object.constructor === 'function') {
    const name = object.constructor.name;

    if (typeof name === 'string' && name !== '') {
      return name;
    }
  }

  return tag;
}


/***/ }),

/***/ 3481:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.instanceOf = void 0;

var _inspect = __nccwpck_require__(102);

/**
 * A replacement for instanceof which includes an error warning when multi-realm
 * constructors are detected.
 * See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production
 * See: https://webpack.js.org/guides/production/
 */
const instanceOf =
  /* c8 ignore next 6 */
  // FIXME: https://github.com/graphql/graphql-js/issues/2317
  // eslint-disable-next-line no-undef
  process.env.NODE_ENV === 'production'
    ? function instanceOf(value, constructor) {
        return value instanceof constructor;
      }
    : function instanceOf(value, constructor) {
        if (value instanceof constructor) {
          return true;
        }

        if (typeof value === 'object' && value !== null) {
          var _value$constructor;

          // Prefer Symbol.toStringTag since it is immune to minification.
          const className = constructor.prototype[Symbol.toStringTag];
          const valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.
            Symbol.toStringTag in value // @ts-expect-error TS bug see, https://github.com/microsoft/TypeScript/issues/38009
              ? value[Symbol.toStringTag]
              : (_value$constructor = value.constructor) === null ||
                _value$constructor === void 0
              ? void 0
              : _value$constructor.name;

          if (className === valueClassName) {
            const stringifiedValue = (0, _inspect.inspect)(value);
            throw new Error(`Cannot use ${className} "${stringifiedValue}" from another module or realm.

Ensure that there is only one instance of "graphql" in the node_modules
directory. If different versions of "graphql" are the dependencies of other
relied on modules, use "resolutions" to ensure only one version is installed.

https://yarnpkg.com/en/docs/selective-version-resolutions

Duplicate "graphql" modules cannot be used at the same time since different
versions may have different capabilities and behavior. The data from one
version used in the function from another could produce confusing and
spurious results.`);
          }
        }

        return false;
      };
exports.instanceOf = instanceOf;


/***/ }),

/***/ 8847:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.invariant = invariant;

function invariant(condition, message) {
  const booleanCondition = Boolean(condition);

  if (!booleanCondition) {
    throw new Error(
      message != null ? message : 'Unexpected invariant triggered.',
    );
  }
}


/***/ }),

/***/ 626:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.isAsyncIterable = isAsyncIterable;

/**
 * Returns true if the provided object implements the AsyncIterator protocol via
 * implementing a `Symbol.asyncIterator` method.
 */
function isAsyncIterable(maybeAsyncIterable) {
  return (
    typeof (maybeAsyncIterable === null || maybeAsyncIterable === void 0
      ? void 0
      : maybeAsyncIterable[Symbol.asyncIterator]) === 'function'
  );
}


/***/ }),

/***/ 1258:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.isIterableObject = isIterableObject;

/**
 * Returns true if the provided object is an Object (i.e. not a string literal)
 * and implements the Iterator protocol.
 *
 * This may be used in place of [Array.isArray()][isArray] to determine if
 * an object should be iterated-over e.g. Array, Map, Set, Int8Array,
 * TypedArray, etc. but excludes string literals.
 *
 * @example
 * ```ts
 * isIterableObject([ 1, 2, 3 ]) // true
 * isIterableObject(new Map()) // true
 * isIterableObject('ABC') // false
 * isIterableObject({ key: 'value' }) // false
 * isIterableObject({ length: 1, 0: 'Alpha' }) // false
 * ```
 */
function isIterableObject(maybeIterable) {
  return (
    typeof maybeIterable === 'object' &&
    typeof (maybeIterable === null || maybeIterable === void 0
      ? void 0
      : maybeIterable[Symbol.iterator]) === 'function'
  );
}


/***/ }),

/***/ 5865:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.isObjectLike = isObjectLike;

/**
 * Return true if `value` is object-like. A value is object-like if it's not
 * `null` and has a `typeof` result of "object".
 */
function isObjectLike(value) {
  return typeof value == 'object' && value !== null;
}


/***/ }),

/***/ 3910:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.isPromise = isPromise;

/**
 * Returns true if the value acts like a Promise, i.e. has a "then" function,
 * otherwise returns false.
 */
function isPromise(value) {
  return (
    typeof (value === null || value === void 0 ? void 0 : value.then) ===
    'function'
  );
}


/***/ }),

/***/ 711:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.keyMap = keyMap;

/**
 * Creates a keyed JS object from an array, given a function to produce the keys
 * for each value in the array.
 *
 * This provides a convenient lookup for the array items if the key function
 * produces unique results.
 * ```ts
 * const phoneBook = [
 *   { name: 'Jon', num: '555-1234' },
 *   { name: 'Jenny', num: '867-5309' }
 * ]
 *
 * const entriesByName = keyMap(
 *   phoneBook,
 *   entry => entry.name
 * )
 *
 * // {
 * //   Jon: { name: 'Jon', num: '555-1234' },
 * //   Jenny: { name: 'Jenny', num: '867-5309' }
 * // }
 *
 * const jennyEntry = entriesByName['Jenny']
 *
 * // { name: 'Jenny', num: '857-6309' }
 * ```
 */
function keyMap(list, keyFn) {
  const result = Object.create(null);

  for (const item of list) {
    result[keyFn(item)] = item;
  }

  return result;
}


/***/ }),

/***/ 9268:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.keyValMap = keyValMap;

/**
 * Creates a keyed JS object from an array, given a function to produce the keys
 * and a function to produce the values from each item in the array.
 * ```ts
 * const phoneBook = [
 *   { name: 'Jon', num: '555-1234' },
 *   { name: 'Jenny', num: '867-5309' }
 * ]
 *
 * // { Jon: '555-1234', Jenny: '867-5309' }
 * const phonesByName = keyValMap(
 *   phoneBook,
 *   entry => entry.name,
 *   entry => entry.num
 * )
 * ```
 */
function keyValMap(list, keyFn, valFn) {
  const result = Object.create(null);

  for (const item of list) {
    result[keyFn(item)] = valFn(item);
  }

  return result;
}


/***/ }),

/***/ 2223:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.mapValue = mapValue;

/**
 * Creates an object map with the same keys as `map` and values generated by
 * running each value of `map` thru `fn`.
 */
function mapValue(map, fn) {
  const result = Object.create(null);

  for (const key of Object.keys(map)) {
    result[key] = fn(map[key], key);
  }

  return result;
}


/***/ }),

/***/ 4217:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.memoize3 = memoize3;

/**
 * Memoizes the provided three-argument function.
 */
function memoize3(fn) {
  let cache0;
  return function memoized(a1, a2, a3) {
    if (cache0 === undefined) {
      cache0 = new WeakMap();
    }

    let cache1 = cache0.get(a1);

    if (cache1 === undefined) {
      cache1 = new WeakMap();
      cache0.set(a1, cache1);
    }

    let cache2 = cache1.get(a2);

    if (cache2 === undefined) {
      cache2 = new WeakMap();
      cache1.set(a2, cache2);
    }

    let fnResult = cache2.get(a3);

    if (fnResult === undefined) {
      fnResult = fn(a1, a2, a3);
      cache2.set(a3, fnResult);
    }

    return fnResult;
  };
}


/***/ }),

/***/ 38:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.naturalCompare = naturalCompare;

/**
 * Returns a number indicating whether a reference string comes before, or after,
 * or is the same as the given string in natural sort order.
 *
 * See: https://en.wikipedia.org/wiki/Natural_sort_order
 *
 */
function naturalCompare(aStr, bStr) {
  let aIndex = 0;
  let bIndex = 0;

  while (aIndex < aStr.length && bIndex < bStr.length) {
    let aChar = aStr.charCodeAt(aIndex);
    let bChar = bStr.charCodeAt(bIndex);

    if (isDigit(aChar) && isDigit(bChar)) {
      let aNum = 0;

      do {
        ++aIndex;
        aNum = aNum * 10 + aChar - DIGIT_0;
        aChar = aStr.charCodeAt(aIndex);
      } while (isDigit(aChar) && aNum > 0);

      let bNum = 0;

      do {
        ++bIndex;
        bNum = bNum * 10 + bChar - DIGIT_0;
        bChar = bStr.charCodeAt(bIndex);
      } while (isDigit(bChar) && bNum > 0);

      if (aNum < bNum) {
        return -1;
      }

      if (aNum > bNum) {
        return 1;
      }
    } else {
      if (aChar < bChar) {
        return -1;
      }

      if (aChar > bChar) {
        return 1;
      }

      ++aIndex;
      ++bIndex;
    }
  }

  return aStr.length - bStr.length;
}

const DIGIT_0 = 48;
const DIGIT_9 = 57;

function isDigit(code) {
  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;
}


/***/ }),

/***/ 4281:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.printPathArray = printPathArray;

/**
 * Build a string describing the path.
 */
function printPathArray(path) {
  return path
    .map((key) =>
      typeof key === 'number' ? '[' + key.toString() + ']' : '.' + key,
    )
    .join('');
}


/***/ }),

/***/ 6804:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.promiseForObject = promiseForObject;

/**
 * This function transforms a JS object `ObjMap<Promise<T>>` into
 * a `Promise<ObjMap<T>>`
 *
 * This is akin to bluebird's `Promise.props`, but implemented only using
 * `Promise.all` so it will work with any implementation of ES6 promises.
 */
function promiseForObject(object) {
  return Promise.all(Object.values(object)).then((resolvedValues) => {
    const resolvedObject = Object.create(null);

    for (const [i, key] of Object.keys(object).entries()) {
      resolvedObject[key] = resolvedValues[i];
    }

    return resolvedObject;
  });
}


/***/ }),

/***/ 7286:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.promiseReduce = promiseReduce;

var _isPromise = __nccwpck_require__(3910);

/**
 * Similar to Array.prototype.reduce(), however the reducing callback may return
 * a Promise, in which case reduction will continue after each promise resolves.
 *
 * If the callback does not return a Promise, then this function will also not
 * return a Promise.
 */
function promiseReduce(values, callbackFn, initialValue) {
  let accumulator = initialValue;

  for (const value of values) {
    accumulator = (0, _isPromise.isPromise)(accumulator)
      ? accumulator.then((resolved) => callbackFn(resolved, value))
      : callbackFn(accumulator, value);
  }

  return accumulator;
}


/***/ }),

/***/ 7704:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.suggestionList = suggestionList;

var _naturalCompare = __nccwpck_require__(38);

/**
 * Given an invalid input string and a list of valid options, returns a filtered
 * list of valid options sorted based on their similarity with the input.
 */
function suggestionList(input, options) {
  const optionsByDistance = Object.create(null);
  const lexicalDistance = new LexicalDistance(input);
  const threshold = Math.floor(input.length * 0.4) + 1;

  for (const option of options) {
    const distance = lexicalDistance.measure(option, threshold);

    if (distance !== undefined) {
      optionsByDistance[option] = distance;
    }
  }

  return Object.keys(optionsByDistance).sort((a, b) => {
    const distanceDiff = optionsByDistance[a] - optionsByDistance[b];
    return distanceDiff !== 0
      ? distanceDiff
      : (0, _naturalCompare.naturalCompare)(a, b);
  });
}
/**
 * Computes the lexical distance between strings A and B.
 *
 * The "distance" between two strings is given by counting the minimum number
 * of edits needed to transform string A into string B. An edit can be an
 * insertion, deletion, or substitution of a single character, or a swap of two
 * adjacent characters.
 *
 * Includes a custom alteration from Damerau-Levenshtein to treat case changes
 * as a single edit which helps identify mis-cased values with an edit distance
 * of 1.
 *
 * This distance can be useful for detecting typos in input or sorting
 */

class LexicalDistance {
  constructor(input) {
    this._input = input;
    this._inputLowerCase = input.toLowerCase();
    this._inputArray = stringToArray(this._inputLowerCase);
    this._rows = [
      new Array(input.length + 1).fill(0),
      new Array(input.length + 1).fill(0),
      new Array(input.length + 1).fill(0),
    ];
  }

  measure(option, threshold) {
    if (this._input === option) {
      return 0;
    }

    const optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit

    if (this._inputLowerCase === optionLowerCase) {
      return 1;
    }

    let a = stringToArray(optionLowerCase);
    let b = this._inputArray;

    if (a.length < b.length) {
      const tmp = a;
      a = b;
      b = tmp;
    }

    const aLength = a.length;
    const bLength = b.length;

    if (aLength - bLength > threshold) {
      return undefined;
    }

    const rows = this._rows;

    for (let j = 0; j <= bLength; j++) {
      rows[0][j] = j;
    }

    for (let i = 1; i <= aLength; i++) {
      const upRow = rows[(i - 1) % 3];
      const currentRow = rows[i % 3];
      let smallestCell = (currentRow[0] = i);

      for (let j = 1; j <= bLength; j++) {
        const cost = a[i - 1] === b[j - 1] ? 0 : 1;
        let currentCell = Math.min(
          upRow[j] + 1, // delete
          currentRow[j - 1] + 1, // insert
          upRow[j - 1] + cost, // substitute
        );

        if (i > 1 && j > 1 && a[i - 1] === b[j - 2] && a[i - 2] === b[j - 1]) {
          // transposition
          const doubleDiagonalCell = rows[(i - 2) % 3][j - 2];
          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);
        }

        if (currentCell < smallestCell) {
          smallestCell = currentCell;
        }

        currentRow[j] = currentCell;
      } // Early exit, since distance can't go smaller than smallest element of the previous row.

      if (smallestCell > threshold) {
        return undefined;
      }
    }

    const distance = rows[aLength % 3][bLength];
    return distance <= threshold ? distance : undefined;
  }
}

function stringToArray(str) {
  const strLength = str.length;
  const array = new Array(strLength);

  for (let i = 0; i < strLength; ++i) {
    array[i] = str.charCodeAt(i);
  }

  return array;
}


/***/ }),

/***/ 5472:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.toError = toError;

var _inspect = __nccwpck_require__(102);

/**
 * Sometimes a non-error is thrown, wrap it as an Error instance to ensure a consistent Error interface.
 */
function toError(thrownValue) {
  return thrownValue instanceof Error
    ? thrownValue
    : new NonErrorThrown(thrownValue);
}

class NonErrorThrown extends Error {
  constructor(thrownValue) {
    super('Unexpected error value: ' + (0, _inspect.inspect)(thrownValue));
    this.name = 'NonErrorThrown';
    this.thrownValue = thrownValue;
  }
}


/***/ }),

/***/ 4728:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.toObjMap = toObjMap;

function toObjMap(obj) {
  if (obj == null) {
    return Object.create(null);
  }

  if (Object.getPrototypeOf(obj) === null) {
    return obj;
  }

  const map = Object.create(null);

  for (const [key, value] of Object.entries(obj)) {
    map[key] = value;
  }

  return map;
}


/***/ }),

/***/ 5494:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.Token =
  exports.QueryDocumentKeys =
  exports.OperationTypeNode =
  exports.Location =
    void 0;
exports.isNode = isNode;

/**
 * Contains a range of UTF-8 character offsets and token references that
 * identify the region of the source from which the AST derived.
 */
class Location {
  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The Token at which this Node begins.
   */

  /**
   * The Token at which this Node ends.
   */

  /**
   * The Source document the AST represents.
   */
  constructor(startToken, endToken, source) {
    this.start = startToken.start;
    this.end = endToken.end;
    this.startToken = startToken;
    this.endToken = endToken;
    this.source = source;
  }

  get [Symbol.toStringTag]() {
    return 'Location';
  }

  toJSON() {
    return {
      start: this.start,
      end: this.end,
    };
  }
}
/**
 * Represents a range of characters represented by a lexical token
 * within a Source.
 */

exports.Location = Location;

class Token {
  /**
   * The kind of Token.
   */

  /**
   * The character offset at which this Node begins.
   */

  /**
   * The character offset at which this Node ends.
   */

  /**
   * The 1-indexed line number on which this Token appears.
   */

  /**
   * The 1-indexed column number at which this Token begins.
   */

  /**
   * For non-punctuation tokens, represents the interpreted value of the token.
   *
   * Note: is undefined for punctuation tokens, but typed as string for
   * convenience in the parser.
   */

  /**
   * Tokens exist as nodes in a double-linked-list amongst all tokens
   * including ignored tokens. <SOF> is always the first node and <EOF>
   * the last.
   */
  constructor(kind, start, end, line, column, value) {
    this.kind = kind;
    this.start = start;
    this.end = end;
    this.line = line;
    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion

    this.value = value;
    this.prev = null;
    this.next = null;
  }

  get [Symbol.toStringTag]() {
    return 'Token';
  }

  toJSON() {
    return {
      kind: this.kind,
      value: this.value,
      line: this.line,
      column: this.column,
    };
  }
}
/**
 * The list of all possible AST node types.
 */

exports.Token = Token;

/**
 * @internal
 */
const QueryDocumentKeys = {
  Name: [],
  Document: ['definitions'],
  OperationDefinition: [
    'name',
    'variableDefinitions',
    'directives',
    'selectionSet',
  ],
  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],
  Variable: ['name'],
  SelectionSet: ['selections'],
  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],
  Argument: ['name', 'value'],
  FragmentSpread: ['name', 'directives'],
  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],
  FragmentDefinition: [
    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0
    'variableDefinitions',
    'typeCondition',
    'directives',
    'selectionSet',
  ],
  IntValue: [],
  FloatValue: [],
  StringValue: [],
  BooleanValue: [],
  NullValue: [],
  EnumValue: [],
  ListValue: ['values'],
  ObjectValue: ['fields'],
  ObjectField: ['name', 'value'],
  Directive: ['name', 'arguments'],
  NamedType: ['name'],
  ListType: ['type'],
  NonNullType: ['type'],
  SchemaDefinition: ['description', 'directives', 'operationTypes'],
  OperationTypeDefinition: ['type'],
  ScalarTypeDefinition: ['description', 'name', 'directives'],
  ObjectTypeDefinition: [
    'description',
    'name',
    'interfaces',
    'directives',
    'fields',
  ],
  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],
  InputValueDefinition: [
    'description',
    'name',
    'type',
    'defaultValue',
    'directives',
  ],
  InterfaceTypeDefinition: [
    'description',
    'name',
    'interfaces',
    'directives',
    'fields',
  ],
  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],
  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],
  EnumValueDefinition: ['description', 'name', 'directives'],
  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],
  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],
  SchemaExtension: ['directives', 'operationTypes'],
  ScalarTypeExtension: ['name', 'directives'],
  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],
  UnionTypeExtension: ['name', 'directives', 'types'],
  EnumTypeExtension: ['name', 'directives', 'values'],
  InputObjectTypeExtension: ['name', 'directives', 'fields'],
};
exports.QueryDocumentKeys = QueryDocumentKeys;
const kindValues = new Set(Object.keys(QueryDocumentKeys));
/**
 * @internal
 */

function isNode(maybeNode) {
  const maybeKind =
    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;
  return typeof maybeKind === 'string' && kindValues.has(maybeKind);
}
/** Name */

var OperationTypeNode;
exports.OperationTypeNode = OperationTypeNode;

(function (OperationTypeNode) {
  OperationTypeNode['QUERY'] = 'query';
  OperationTypeNode['MUTATION'] = 'mutation';
  OperationTypeNode['SUBSCRIPTION'] = 'subscription';
})(OperationTypeNode || (exports.OperationTypeNode = OperationTypeNode = {}));


/***/ }),

/***/ 4515:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.dedentBlockStringLines = dedentBlockStringLines;
exports.isPrintableAsBlockString = isPrintableAsBlockString;
exports.printBlockString = printBlockString;

var _characterClasses = __nccwpck_require__(7234);

/**
 * Produces the value of a block string from its parsed raw value, similar to
 * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.
 *
 * This implements the GraphQL spec's BlockStringValue() static algorithm.
 *
 * @internal
 */
function dedentBlockStringLines(lines) {
  var _firstNonEmptyLine2;

  let commonIndent = Number.MAX_SAFE_INTEGER;
  let firstNonEmptyLine = null;
  let lastNonEmptyLine = -1;

  for (let i = 0; i < lines.length; ++i) {
    var _firstNonEmptyLine;

    const line = lines[i];
    const indent = leadingWhitespace(line);

    if (indent === line.length) {
      continue; // skip empty lines
    }

    firstNonEmptyLine =
      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&
      _firstNonEmptyLine !== void 0
        ? _firstNonEmptyLine
        : i;
    lastNonEmptyLine = i;

    if (i !== 0 && indent < commonIndent) {
      commonIndent = indent;
    }
  }

  return lines // Remove common indentation from all lines but first.
    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.
    .slice(
      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&
        _firstNonEmptyLine2 !== void 0
        ? _firstNonEmptyLine2
        : 0,
      lastNonEmptyLine + 1,
    );
}

function leadingWhitespace(str) {
  let i = 0;

  while (
    i < str.length &&
    (0, _characterClasses.isWhiteSpace)(str.charCodeAt(i))
  ) {
    ++i;
  }

  return i;
}
/**
 * @internal
 */

function isPrintableAsBlockString(value) {
  if (value === '') {
    return true; // empty string is printable
  }

  let isEmptyLine = true;
  let hasIndent = false;
  let hasCommonIndent = true;
  let seenNonEmptyLine = false;

  for (let i = 0; i < value.length; ++i) {
    switch (value.codePointAt(i)) {
      case 0x0000:
      case 0x0001:
      case 0x0002:
      case 0x0003:
      case 0x0004:
      case 0x0005:
      case 0x0006:
      case 0x0007:
      case 0x0008:
      case 0x000b:
      case 0x000c:
      case 0x000e:
      case 0x000f:
        return false;
      // Has non-printable characters

      case 0x000d:
        //  \r
        return false;
      // Has \r or \r\n which will be replaced as \n

      case 10:
        //  \n
        if (isEmptyLine && !seenNonEmptyLine) {
          return false; // Has leading new line
        }

        seenNonEmptyLine = true;
        isEmptyLine = true;
        hasIndent = false;
        break;

      case 9: //   \t

      case 32:
        //  <space>
        hasIndent || (hasIndent = isEmptyLine);
        break;

      default:
        hasCommonIndent && (hasCommonIndent = hasIndent);
        isEmptyLine = false;
    }
  }

  if (isEmptyLine) {
    return false; // Has trailing empty lines
  }

  if (hasCommonIndent && seenNonEmptyLine) {
    return false; // Has internal indent
  }

  return true;
}
/**
 * Print a block string in the indented block form by adding a leading and
 * trailing blank line. However, if a block string starts with whitespace and is
 * a single-line, adding a leading blank line would strip that whitespace.
 *
 * @internal
 */

function printBlockString(value, options) {
  const escapedValue = value.replace(/"""/g, '\\"""'); // Expand a block string's raw value into independent lines.

  const lines = escapedValue.split(/\r\n|[\n\r]/g);
  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line

  const forceLeadingNewLine =
    lines.length > 1 &&
    lines
      .slice(1)
      .every(
        (line) =>
          line.length === 0 ||
          (0, _characterClasses.isWhiteSpace)(line.charCodeAt(0)),
      ); // Trailing triple quotes just looks confusing but doesn't force trailing new line

  const hasTrailingTripleQuotes = escapedValue.endsWith('\\"""'); // Trailing quote (single or double) or slash forces trailing new line

  const hasTrailingQuote = value.endsWith('"') && !hasTrailingTripleQuotes;
  const hasTrailingSlash = value.endsWith('\\');
  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;
  const printAsMultipleLines =
    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability
    (!isSingleLine ||
      value.length > 70 ||
      forceTrailingNewline ||
      forceLeadingNewLine ||
      hasTrailingTripleQuotes);
  let result = ''; // Format a multi-line block quote to account for leading space.

  const skipLeadingNewLine =
    isSingleLine && (0, _characterClasses.isWhiteSpace)(value.charCodeAt(0));

  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {
    result += '\n';
  }

  result += escapedValue;

  if (printAsMultipleLines || forceTrailingNewline) {
    result += '\n';
  }

  return '"""' + result + '"""';
}


/***/ }),

/***/ 7234:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.isDigit = isDigit;
exports.isLetter = isLetter;
exports.isNameContinue = isNameContinue;
exports.isNameStart = isNameStart;
exports.isWhiteSpace = isWhiteSpace;

/**
 * ```
 * WhiteSpace ::
 *   - "Horizontal Tab (U+0009)"
 *   - "Space (U+0020)"
 * ```
 * @internal
 */
function isWhiteSpace(code) {
  return code === 0x0009 || code === 0x0020;
}
/**
 * ```
 * Digit :: one of
 *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`
 * ```
 * @internal
 */

function isDigit(code) {
  return code >= 0x0030 && code <= 0x0039;
}
/**
 * ```
 * Letter :: one of
 *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`
 *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`
 *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`
 *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`
 * ```
 * @internal
 */

function isLetter(code) {
  return (
    (code >= 0x0061 && code <= 0x007a) || // A-Z
    (code >= 0x0041 && code <= 0x005a) // a-z
  );
}
/**
 * ```
 * NameStart ::
 *   - Letter
 *   - `_`
 * ```
 * @internal
 */

function isNameStart(code) {
  return isLetter(code) || code === 0x005f;
}
/**
 * ```
 * NameContinue ::
 *   - Letter
 *   - Digit
 *   - `_`
 * ```
 * @internal
 */

function isNameContinue(code) {
  return isLetter(code) || isDigit(code) || code === 0x005f;
}


/***/ }),

/***/ 1553:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.DirectiveLocation = void 0;

/**
 * The set of allowed directive location values.
 */
var DirectiveLocation;
exports.DirectiveLocation = DirectiveLocation;

(function (DirectiveLocation) {
  DirectiveLocation['QUERY'] = 'QUERY';
  DirectiveLocation['MUTATION'] = 'MUTATION';
  DirectiveLocation['SUBSCRIPTION'] = 'SUBSCRIPTION';
  DirectiveLocation['FIELD'] = 'FIELD';
  DirectiveLocation['FRAGMENT_DEFINITION'] = 'FRAGMENT_DEFINITION';
  DirectiveLocation['FRAGMENT_SPREAD'] = 'FRAGMENT_SPREAD';
  DirectiveLocation['INLINE_FRAGMENT'] = 'INLINE_FRAGMENT';
  DirectiveLocation['VARIABLE_DEFINITION'] = 'VARIABLE_DEFINITION';
  DirectiveLocation['SCHEMA'] = 'SCHEMA';
  DirectiveLocation['SCALAR'] = 'SCALAR';
  DirectiveLocation['OBJECT'] = 'OBJECT';
  DirectiveLocation['FIELD_DEFINITION'] = 'FIELD_DEFINITION';
  DirectiveLocation['ARGUMENT_DEFINITION'] = 'ARGUMENT_DEFINITION';
  DirectiveLocation['INTERFACE'] = 'INTERFACE';
  DirectiveLocation['UNION'] = 'UNION';
  DirectiveLocation['ENUM'] = 'ENUM';
  DirectiveLocation['ENUM_VALUE'] = 'ENUM_VALUE';
  DirectiveLocation['INPUT_OBJECT'] = 'INPUT_OBJECT';
  DirectiveLocation['INPUT_FIELD_DEFINITION'] = 'INPUT_FIELD_DEFINITION';
})(DirectiveLocation || (exports.DirectiveLocation = DirectiveLocation = {}));
/**
 * The enum type representing the directive location values.
 *
 * @deprecated Please use `DirectiveLocation`. Will be remove in v17.
 */


/***/ }),

/***/ 9537:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
Object.defineProperty(exports, "BREAK", ({
  enumerable: true,
  get: function () {
    return _visitor.BREAK;
  },
}));
Object.defineProperty(exports, "DirectiveLocation", ({
  enumerable: true,
  get: function () {
    return _directiveLocation.DirectiveLocation;
  },
}));
Object.defineProperty(exports, "Kind", ({
  enumerable: true,
  get: function () {
    return _kinds.Kind;
  },
}));
Object.defineProperty(exports, "Lexer", ({
  enumerable: true,
  get: function () {
    return _lexer.Lexer;
  },
}));
Object.defineProperty(exports, "Location", ({
  enumerable: true,
  get: function () {
    return _ast.Location;
  },
}));
Object.defineProperty(exports, "OperationTypeNode", ({
  enumerable: true,
  get: function () {
    return _ast.OperationTypeNode;
  },
}));
Object.defineProperty(exports, "Source", ({
  enumerable: true,
  get: function () {
    return _source.Source;
  },
}));
Object.defineProperty(exports, "Token", ({
  enumerable: true,
  get: function () {
    return _ast.Token;
  },
}));
Object.defineProperty(exports, "TokenKind", ({
  enumerable: true,
  get: function () {
    return _tokenKind.TokenKind;
  },
}));
Object.defineProperty(exports, "getEnterLeaveForKind", ({
  enumerable: true,
  get: function () {
    return _visitor.getEnterLeaveForKind;
  },
}));
Object.defineProperty(exports, "getLocation", ({
  enumerable: true,
  get: function () {
    return _location.getLocation;
  },
}));
Object.defineProperty(exports, "getVisitFn", ({
  enumerable: true,
  get: function () {
    return _visitor.getVisitFn;
  },
}));
Object.defineProperty(exports, "isConstValueNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isConstValueNode;
  },
}));
Object.defineProperty(exports, "isDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isDefinitionNode;
  },
}));
Object.defineProperty(exports, "isExecutableDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isExecutableDefinitionNode;
  },
}));
Object.defineProperty(exports, "isSelectionNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isSelectionNode;
  },
}));
Object.defineProperty(exports, "isTypeDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isTypeDefinitionNode;
  },
}));
Object.defineProperty(exports, "isTypeExtensionNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isTypeExtensionNode;
  },
}));
Object.defineProperty(exports, "isTypeNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isTypeNode;
  },
}));
Object.defineProperty(exports, "isTypeSystemDefinitionNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isTypeSystemDefinitionNode;
  },
}));
Object.defineProperty(exports, "isTypeSystemExtensionNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isTypeSystemExtensionNode;
  },
}));
Object.defineProperty(exports, "isValueNode", ({
  enumerable: true,
  get: function () {
    return _predicates.isValueNode;
  },
}));
Object.defineProperty(exports, "parse", ({
  enumerable: true,
  get: function () {
    return _parser.parse;
  },
}));
Object.defineProperty(exports, "parseConstValue", ({
  enumerable: true,
  get: function () {
    return _parser.parseConstValue;
  },
}));
Object.defineProperty(exports, "parseType", ({
  enumerable: true,
  get: function () {
    return _parser.parseType;
  },
}));
Object.defineProperty(exports, "parseValue", ({
  enumerable: true,
  get: function () {
    return _parser.parseValue;
  },
}));
Object.defineProperty(exports, "print", ({
  enumerable: true,
  get: function () {
    return _printer.print;
  },
}));
Object.defineProperty(exports, "printLocation", ({
  enumerable: true,
  get: function () {
    return _printLocation.printLocation;
  },
}));
Object.defineProperty(exports, "printSourceLocation", ({
  enumerable: true,
  get: function () {
    return _printLocation.printSourceLocation;
  },
}));
Object.defineProperty(exports, "visit", ({
  enumerable: true,
  get: function () {
    return _visitor.visit;
  },
}));
Object.defineProperty(exports, "visitInParallel", ({
  enumerable: true,
  get: function () {
    return _visitor.visitInParallel;
  },
}));

var _source = __nccwpck_require__(5521);

var _location = __nccwpck_require__(1922);

var _printLocation = __nccwpck_require__(5250);

var _kinds = __nccwpck_require__(1927);

var _tokenKind = __nccwpck_require__(1565);

var _lexer = __nccwpck_require__(4605);

var _parser = __nccwpck_require__(655);

var _printer = __nccwpck_require__(8203);

var _visitor = __nccwpck_require__(5678);

var _ast = __nccwpck_require__(5494);

var _predicates = __nccwpck_require__(535);

var _directiveLocation = __nccwpck_require__(1553);


/***/ }),

/***/ 1927:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.Kind = void 0;

/**
 * The set of allowed kind values for AST nodes.
 */
var Kind;
exports.Kind = Kind;

(function (Kind) {
  Kind['NAME'] = 'Name';
  Kind['DOCUMENT'] = 'Document';
  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';
  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';
  Kind['SELECTION_SET'] = 'SelectionSet';
  Kind['FIELD'] = 'Field';
  Kind['ARGUMENT'] = 'Argument';
  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';
  Kind['INLINE_FRAGMENT'] = 'InlineFragment';
  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';
  Kind['VARIABLE'] = 'Variable';
  Kind['INT'] = 'IntValue';
  Kind['FLOAT'] = 'FloatValue';
  Kind['STRING'] = 'StringValue';
  Kind['BOOLEAN'] = 'BooleanValue';
  Kind['NULL'] = 'NullValue';
  Kind['ENUM'] = 'EnumValue';
  Kind['LIST'] = 'ListValue';
  Kind['OBJECT'] = 'ObjectValue';
  Kind['OBJECT_FIELD'] = 'ObjectField';
  Kind['DIRECTIVE'] = 'Directive';
  Kind['NAMED_TYPE'] = 'NamedType';
  Kind['LIST_TYPE'] = 'ListType';
  Kind['NON_NULL_TYPE'] = 'NonNullType';
  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';
  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';
  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';
  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';
  Kind['FIELD_DEFINITION'] = 'FieldDefinition';
  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';
  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';
  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';
  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';
  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';
  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';
  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';
  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';
  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';
  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';
  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';
  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';
  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';
  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';
})(Kind || (exports.Kind = Kind = {}));
/**
 * The enum type representing the possible kind values of AST nodes.
 *
 * @deprecated Please use `Kind`. Will be remove in v17.
 */


/***/ }),

/***/ 4605:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.Lexer = void 0;
exports.isPunctuatorTokenKind = isPunctuatorTokenKind;

var _syntaxError = __nccwpck_require__(2295);

var _ast = __nccwpck_require__(5494);

var _blockString = __nccwpck_require__(4515);

var _characterClasses = __nccwpck_require__(7234);

var _tokenKind = __nccwpck_require__(1565);

/**
 * Given a Source object, creates a Lexer for that source.
 * A Lexer is a stateful stream generator in that every time
 * it is advanced, it returns the next token in the Source. Assuming the
 * source lexes, the final Token emitted by the lexer will be of kind
 * EOF, after which the lexer will repeatedly return the same EOF token
 * whenever called.
 */
class Lexer {
  /**
   * The previously focused non-ignored token.
   */

  /**
   * The currently focused non-ignored token.
   */

  /**
   * The (1-indexed) line containing the current token.
   */

  /**
   * The character offset at which the current line begins.
   */
  constructor(source) {
    const startOfFileToken = new _ast.Token(
      _tokenKind.TokenKind.SOF,
      0,
      0,
      0,
      0,
    );
    this.source = source;
    this.lastToken = startOfFileToken;
    this.token = startOfFileToken;
    this.line = 1;
    this.lineStart = 0;
  }

  get [Symbol.toStringTag]() {
    return 'Lexer';
  }
  /**
   * Advances the token stream to the next non-ignored token.
   */

  advance() {
    this.lastToken = this.token;
    const token = (this.token = this.lookahead());
    return token;
  }
  /**
   * Looks ahead and returns the next non-ignored token, but does not change
   * the state of Lexer.
   */

  lookahead() {
    let token = this.token;

    if (token.kind !== _tokenKind.TokenKind.EOF) {
      do {
        if (token.next) {
          token = token.next;
        } else {
          // Read the next token and form a link in the token linked-list.
          const nextToken = readNextToken(this, token.end); // @ts-expect-error next is only mutable during parsing.

          token.next = nextToken; // @ts-expect-error prev is only mutable during parsing.

          nextToken.prev = token;
          token = nextToken;
        }
      } while (token.kind === _tokenKind.TokenKind.COMMENT);
    }

    return token;
  }
}
/**
 * @internal
 */

exports.Lexer = Lexer;

function isPunctuatorTokenKind(kind) {
  return (
    kind === _tokenKind.TokenKind.BANG ||
    kind === _tokenKind.TokenKind.DOLLAR ||
    kind === _tokenKind.TokenKind.AMP ||
    kind === _tokenKind.TokenKind.PAREN_L ||
    kind === _tokenKind.TokenKind.PAREN_R ||
    kind === _tokenKind.TokenKind.SPREAD ||
    kind === _tokenKind.TokenKind.COLON ||
    kind === _tokenKind.TokenKind.EQUALS ||
    kind === _tokenKind.TokenKind.AT ||
    kind === _tokenKind.TokenKind.BRACKET_L ||
    kind === _tokenKind.TokenKind.BRACKET_R ||
    kind === _tokenKind.TokenKind.BRACE_L ||
    kind === _tokenKind.TokenKind.PIPE ||
    kind === _tokenKind.TokenKind.BRACE_R
  );
}
/**
 * A Unicode scalar value is any Unicode code point except surrogate code
 * points. In other words, the inclusive ranges of values 0x0000 to 0xD7FF and
 * 0xE000 to 0x10FFFF.
 *
 * SourceCharacter ::
 *   - "Any Unicode scalar value"
 */

function isUnicodeScalarValue(code) {
  return (
    (code >= 0x0000 && code <= 0xd7ff) || (code >= 0xe000 && code <= 0x10ffff)
  );
}
/**
 * The GraphQL specification defines source text as a sequence of unicode scalar
 * values (which Unicode defines to exclude surrogate code points). However
 * JavaScript defines strings as a sequence of UTF-16 code units which may
 * include surrogates. A surrogate pair is a valid source character as it
 * encodes a supplementary code point (above U+FFFF), but unpaired surrogate
 * code points are not valid source characters.
 */

function isSupplementaryCodePoint(body, location) {
  return (
    isLeadingSurrogate(body.charCodeAt(location)) &&
    isTrailingSurrogate(body.charCodeAt(location + 1))
  );
}

function isLeadingSurrogate(code) {
  return code >= 0xd800 && code <= 0xdbff;
}

function isTrailingSurrogate(code) {
  return code >= 0xdc00 && code <= 0xdfff;
}
/**
 * Prints the code point (or end of file reference) at a given location in a
 * source for use in error messages.
 *
 * Printable ASCII is printed quoted, while other points are printed in Unicode
 * code point form (ie. U+1234).
 */

function printCodePointAt(lexer, location) {
  const code = lexer.source.body.codePointAt(location);

  if (code === undefined) {
    return _tokenKind.TokenKind.EOF;
  } else if (code >= 0x0020 && code <= 0x007e) {
    // Printable ASCII
    const char = String.fromCodePoint(code);
    return char === '"' ? "'\"'" : `"${char}"`;
  } // Unicode code point

  return 'U+' + code.toString(16).toUpperCase().padStart(4, '0');
}
/**
 * Create a token with line and column location information.
 */

function createToken(lexer, kind, start, end, value) {
  const line = lexer.line;
  const col = 1 + start - lexer.lineStart;
  return new _ast.Token(kind, start, end, line, col, value);
}
/**
 * Gets the next token from the source starting at the given position.
 *
 * This skips over whitespace until it finds the next lexable token, then lexes
 * punctuators immediately or calls the appropriate helper function for more
 * complicated tokens.
 */

function readNextToken(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start;

  while (position < bodyLength) {
    const code = body.charCodeAt(position); // SourceCharacter

    switch (code) {
      // Ignored ::
      //   - UnicodeBOM
      //   - WhiteSpace
      //   - LineTerminator
      //   - Comment
      //   - Comma
      //
      // UnicodeBOM :: "Byte Order Mark (U+FEFF)"
      //
      // WhiteSpace ::
      //   - "Horizontal Tab (U+0009)"
      //   - "Space (U+0020)"
      //
      // Comma :: ,
      case 0xfeff: // <BOM>

      case 0x0009: // \t

      case 0x0020: // <space>

      case 0x002c:
        // ,
        ++position;
        continue;
      // LineTerminator ::
      //   - "New Line (U+000A)"
      //   - "Carriage Return (U+000D)" [lookahead != "New Line (U+000A)"]
      //   - "Carriage Return (U+000D)" "New Line (U+000A)"

      case 0x000a:
        // \n
        ++position;
        ++lexer.line;
        lexer.lineStart = position;
        continue;

      case 0x000d:
        // \r
        if (body.charCodeAt(position + 1) === 0x000a) {
          position += 2;
        } else {
          ++position;
        }

        ++lexer.line;
        lexer.lineStart = position;
        continue;
      // Comment

      case 0x0023:
        // #
        return readComment(lexer, position);
      // Token ::
      //   - Punctuator
      //   - Name
      //   - IntValue
      //   - FloatValue
      //   - StringValue
      //
      // Punctuator :: one of ! $ & ( ) ... : = @ [ ] { | }

      case 0x0021:
        // !
        return createToken(
          lexer,
          _tokenKind.TokenKind.BANG,
          position,
          position + 1,
        );

      case 0x0024:
        // $
        return createToken(
          lexer,
          _tokenKind.TokenKind.DOLLAR,
          position,
          position + 1,
        );

      case 0x0026:
        // &
        return createToken(
          lexer,
          _tokenKind.TokenKind.AMP,
          position,
          position + 1,
        );

      case 0x0028:
        // (
        return createToken(
          lexer,
          _tokenKind.TokenKind.PAREN_L,
          position,
          position + 1,
        );

      case 0x0029:
        // )
        return createToken(
          lexer,
          _tokenKind.TokenKind.PAREN_R,
          position,
          position + 1,
        );

      case 0x002e:
        // .
        if (
          body.charCodeAt(position + 1) === 0x002e &&
          body.charCodeAt(position + 2) === 0x002e
        ) {
          return createToken(
            lexer,
            _tokenKind.TokenKind.SPREAD,
            position,
            position + 3,
          );
        }

        break;

      case 0x003a:
        // :
        return createToken(
          lexer,
          _tokenKind.TokenKind.COLON,
          position,
          position + 1,
        );

      case 0x003d:
        // =
        return createToken(
          lexer,
          _tokenKind.TokenKind.EQUALS,
          position,
          position + 1,
        );

      case 0x0040:
        // @
        return createToken(
          lexer,
          _tokenKind.TokenKind.AT,
          position,
          position + 1,
        );

      case 0x005b:
        // [
        return createToken(
          lexer,
          _tokenKind.TokenKind.BRACKET_L,
          position,
          position + 1,
        );

      case 0x005d:
        // ]
        return createToken(
          lexer,
          _tokenKind.TokenKind.BRACKET_R,
          position,
          position + 1,
        );

      case 0x007b:
        // {
        return createToken(
          lexer,
          _tokenKind.TokenKind.BRACE_L,
          position,
          position + 1,
        );

      case 0x007c:
        // |
        return createToken(
          lexer,
          _tokenKind.TokenKind.PIPE,
          position,
          position + 1,
        );

      case 0x007d:
        // }
        return createToken(
          lexer,
          _tokenKind.TokenKind.BRACE_R,
          position,
          position + 1,
        );
      // StringValue

      case 0x0022:
        // "
        if (
          body.charCodeAt(position + 1) === 0x0022 &&
          body.charCodeAt(position + 2) === 0x0022
        ) {
          return readBlockString(lexer, position);
        }

        return readString(lexer, position);
    } // IntValue | FloatValue (Digit | -)

    if ((0, _characterClasses.isDigit)(code) || code === 0x002d) {
      return readNumber(lexer, position, code);
    } // Name

    if ((0, _characterClasses.isNameStart)(code)) {
      return readName(lexer, position);
    }

    throw (0, _syntaxError.syntaxError)(
      lexer.source,
      position,
      code === 0x0027
        ? 'Unexpected single quote character (\'), did you mean to use a double quote (")?'
        : isUnicodeScalarValue(code) || isSupplementaryCodePoint(body, position)
        ? `Unexpected character: ${printCodePointAt(lexer, position)}.`
        : `Invalid character: ${printCodePointAt(lexer, position)}.`,
    );
  }

  return createToken(lexer, _tokenKind.TokenKind.EOF, bodyLength, bodyLength);
}
/**
 * Reads a comment token from the source file.
 *
 * ```
 * Comment :: # CommentChar* [lookahead != CommentChar]
 *
 * CommentChar :: SourceCharacter but not LineTerminator
 * ```
 */

function readComment(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start + 1;

  while (position < bodyLength) {
    const code = body.charCodeAt(position); // LineTerminator (\n | \r)

    if (code === 0x000a || code === 0x000d) {
      break;
    } // SourceCharacter

    if (isUnicodeScalarValue(code)) {
      ++position;
    } else if (isSupplementaryCodePoint(body, position)) {
      position += 2;
    } else {
      break;
    }
  }

  return createToken(
    lexer,
    _tokenKind.TokenKind.COMMENT,
    start,
    position,
    body.slice(start + 1, position),
  );
}
/**
 * Reads a number token from the source file, either a FloatValue or an IntValue
 * depending on whether a FractionalPart or ExponentPart is encountered.
 *
 * ```
 * IntValue :: IntegerPart [lookahead != {Digit, `.`, NameStart}]
 *
 * IntegerPart ::
 *   - NegativeSign? 0
 *   - NegativeSign? NonZeroDigit Digit*
 *
 * NegativeSign :: -
 *
 * NonZeroDigit :: Digit but not `0`
 *
 * FloatValue ::
 *   - IntegerPart FractionalPart ExponentPart [lookahead != {Digit, `.`, NameStart}]
 *   - IntegerPart FractionalPart [lookahead != {Digit, `.`, NameStart}]
 *   - IntegerPart ExponentPart [lookahead != {Digit, `.`, NameStart}]
 *
 * FractionalPart :: . Digit+
 *
 * ExponentPart :: ExponentIndicator Sign? Digit+
 *
 * ExponentIndicator :: one of `e` `E`
 *
 * Sign :: one of + -
 * ```
 */

function readNumber(lexer, start, firstCode) {
  const body = lexer.source.body;
  let position = start;
  let code = firstCode;
  let isFloat = false; // NegativeSign (-)

  if (code === 0x002d) {
    code = body.charCodeAt(++position);
  } // Zero (0)

  if (code === 0x0030) {
    code = body.charCodeAt(++position);

    if ((0, _characterClasses.isDigit)(code)) {
      throw (0, _syntaxError.syntaxError)(
        lexer.source,
        position,
        `Invalid number, unexpected digit after 0: ${printCodePointAt(
          lexer,
          position,
        )}.`,
      );
    }
  } else {
    position = readDigits(lexer, position, code);
    code = body.charCodeAt(position);
  } // Full stop (.)

  if (code === 0x002e) {
    isFloat = true;
    code = body.charCodeAt(++position);
    position = readDigits(lexer, position, code);
    code = body.charCodeAt(position);
  } // E e

  if (code === 0x0045 || code === 0x0065) {
    isFloat = true;
    code = body.charCodeAt(++position); // + -

    if (code === 0x002b || code === 0x002d) {
      code = body.charCodeAt(++position);
    }

    position = readDigits(lexer, position, code);
    code = body.charCodeAt(position);
  } // Numbers cannot be followed by . or NameStart

  if (code === 0x002e || (0, _characterClasses.isNameStart)(code)) {
    throw (0, _syntaxError.syntaxError)(
      lexer.source,
      position,
      `Invalid number, expected digit but got: ${printCodePointAt(
        lexer,
        position,
      )}.`,
    );
  }

  return createToken(
    lexer,
    isFloat ? _tokenKind.TokenKind.FLOAT : _tokenKind.TokenKind.INT,
    start,
    position,
    body.slice(start, position),
  );
}
/**
 * Returns the new position in the source after reading one or more digits.
 */

function readDigits(lexer, start, firstCode) {
  if (!(0, _characterClasses.isDigit)(firstCode)) {
    throw (0, _syntaxError.syntaxError)(
      lexer.source,
      start,
      `Invalid number, expected digit but got: ${printCodePointAt(
        lexer,
        start,
      )}.`,
    );
  }

  const body = lexer.source.body;
  let position = start + 1; // +1 to skip first firstCode

  while ((0, _characterClasses.isDigit)(body.charCodeAt(position))) {
    ++position;
  }

  return position;
}
/**
 * Reads a single-quote string token from the source file.
 *
 * ```
 * StringValue ::
 *   - `""` [lookahead != `"`]
 *   - `"` StringCharacter+ `"`
 *
 * StringCharacter ::
 *   - SourceCharacter but not `"` or `\` or LineTerminator
 *   - `\u` EscapedUnicode
 *   - `\` EscapedCharacter
 *
 * EscapedUnicode ::
 *   - `{` HexDigit+ `}`
 *   - HexDigit HexDigit HexDigit HexDigit
 *
 * EscapedCharacter :: one of `"` `\` `/` `b` `f` `n` `r` `t`
 * ```
 */

function readString(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start + 1;
  let chunkStart = position;
  let value = '';

  while (position < bodyLength) {
    const code = body.charCodeAt(position); // Closing Quote (")

    if (code === 0x0022) {
      value += body.slice(chunkStart, position);
      return createToken(
        lexer,
        _tokenKind.TokenKind.STRING,
        start,
        position + 1,
        value,
      );
    } // Escape Sequence (\)

    if (code === 0x005c) {
      value += body.slice(chunkStart, position);
      const escape =
        body.charCodeAt(position + 1) === 0x0075 // u
          ? body.charCodeAt(position + 2) === 0x007b // {
            ? readEscapedUnicodeVariableWidth(lexer, position)
            : readEscapedUnicodeFixedWidth(lexer, position)
          : readEscapedCharacter(lexer, position);
      value += escape.value;
      position += escape.size;
      chunkStart = position;
      continue;
    } // LineTerminator (\n | \r)

    if (code === 0x000a || code === 0x000d) {
      break;
    } // SourceCharacter

    if (isUnicodeScalarValue(code)) {
      ++position;
    } else if (isSupplementaryCodePoint(body, position)) {
      position += 2;
    } else {
      throw (0, _syntaxError.syntaxError)(
        lexer.source,
        position,
        `Invalid character within String: ${printCodePointAt(
          lexer,
          position,
        )}.`,
      );
    }
  }

  throw (0, _syntaxError.syntaxError)(
    lexer.source,
    position,
    'Unterminated string.',
  );
} // The string value and lexed size of an escape sequence.

function readEscapedUnicodeVariableWidth(lexer, position) {
  const body = lexer.source.body;
  let point = 0;
  let size = 3; // Cannot be larger than 12 chars (\u{00000000}).

  while (size < 12) {
    const code = body.charCodeAt(position + size++); // Closing Brace (})

    if (code === 0x007d) {
      // Must be at least 5 chars (\u{0}) and encode a Unicode scalar value.
      if (size < 5 || !isUnicodeScalarValue(point)) {
        break;
      }

      return {
        value: String.fromCodePoint(point),
        size,
      };
    } // Append this hex digit to the code point.

    point = (point << 4) | readHexDigit(code);

    if (point < 0) {
      break;
    }
  }

  throw (0, _syntaxError.syntaxError)(
    lexer.source,
    position,
    `Invalid Unicode escape sequence: "${body.slice(
      position,
      position + size,
    )}".`,
  );
}

function readEscapedUnicodeFixedWidth(lexer, position) {
  const body = lexer.source.body;
  const code = read16BitHexCode(body, position + 2);

  if (isUnicodeScalarValue(code)) {
    return {
      value: String.fromCodePoint(code),
      size: 6,
    };
  } // GraphQL allows JSON-style surrogate pair escape sequences, but only when
  // a valid pair is formed.

  if (isLeadingSurrogate(code)) {
    // \u
    if (
      body.charCodeAt(position + 6) === 0x005c &&
      body.charCodeAt(position + 7) === 0x0075
    ) {
      const trailingCode = read16BitHexCode(body, position + 8);

      if (isTrailingSurrogate(trailingCode)) {
        // JavaScript defines strings as a sequence of UTF-16 code units and
        // encodes Unicode code points above U+FFFF using a surrogate pair of
        // code units. Since this is a surrogate pair escape sequence, just
        // include both codes into the JavaScript string value. Had JavaScript
        // not been internally based on UTF-16, then this surrogate pair would
        // be decoded to retrieve the supplementary code point.
        return {
          value: String.fromCodePoint(code, trailingCode),
          size: 12,
        };
      }
    }
  }

  throw (0, _syntaxError.syntaxError)(
    lexer.source,
    position,
    `Invalid Unicode escape sequence: "${body.slice(position, position + 6)}".`,
  );
}
/**
 * Reads four hexadecimal characters and returns the positive integer that 16bit
 * hexadecimal string represents. For example, "000f" will return 15, and "dead"
 * will return 57005.
 *
 * Returns a negative number if any char was not a valid hexadecimal digit.
 */

function read16BitHexCode(body, position) {
  // readHexDigit() returns -1 on error. ORing a negative value with any other
  // value always produces a negative value.
  return (
    (readHexDigit(body.charCodeAt(position)) << 12) |
    (readHexDigit(body.charCodeAt(position + 1)) << 8) |
    (readHexDigit(body.charCodeAt(position + 2)) << 4) |
    readHexDigit(body.charCodeAt(position + 3))
  );
}
/**
 * Reads a hexadecimal character and returns its positive integer value (0-15).
 *
 * '0' becomes 0, '9' becomes 9
 * 'A' becomes 10, 'F' becomes 15
 * 'a' becomes 10, 'f' becomes 15
 *
 * Returns -1 if the provided character code was not a valid hexadecimal digit.
 *
 * HexDigit :: one of
 *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`
 *   - `A` `B` `C` `D` `E` `F`
 *   - `a` `b` `c` `d` `e` `f`
 */

function readHexDigit(code) {
  return code >= 0x0030 && code <= 0x0039 // 0-9
    ? code - 0x0030
    : code >= 0x0041 && code <= 0x0046 // A-F
    ? code - 0x0037
    : code >= 0x0061 && code <= 0x0066 // a-f
    ? code - 0x0057
    : -1;
}
/**
 * | Escaped Character | Code Point | Character Name               |
 * | ----------------- | ---------- | ---------------------------- |
 * | `"`               | U+0022     | double quote                 |
 * | `\`               | U+005C     | reverse solidus (back slash) |
 * | `/`               | U+002F     | solidus (forward slash)      |
 * | `b`               | U+0008     | backspace                    |
 * | `f`               | U+000C     | form feed                    |
 * | `n`               | U+000A     | line feed (new line)         |
 * | `r`               | U+000D     | carriage return              |
 * | `t`               | U+0009     | horizontal tab               |
 */

function readEscapedCharacter(lexer, position) {
  const body = lexer.source.body;
  const code = body.charCodeAt(position + 1);

  switch (code) {
    case 0x0022:
      // "
      return {
        value: '\u0022',
        size: 2,
      };

    case 0x005c:
      // \
      return {
        value: '\u005c',
        size: 2,
      };

    case 0x002f:
      // /
      return {
        value: '\u002f',
        size: 2,
      };

    case 0x0062:
      // b
      return {
        value: '\u0008',
        size: 2,
      };

    case 0x0066:
      // f
      return {
        value: '\u000c',
        size: 2,
      };

    case 0x006e:
      // n
      return {
        value: '\u000a',
        size: 2,
      };

    case 0x0072:
      // r
      return {
        value: '\u000d',
        size: 2,
      };

    case 0x0074:
      // t
      return {
        value: '\u0009',
        size: 2,
      };
  }

  throw (0, _syntaxError.syntaxError)(
    lexer.source,
    position,
    `Invalid character escape sequence: "${body.slice(
      position,
      position + 2,
    )}".`,
  );
}
/**
 * Reads a block string token from the source file.
 *
 * ```
 * StringValue ::
 *   - `"""` BlockStringCharacter* `"""`
 *
 * BlockStringCharacter ::
 *   - SourceCharacter but not `"""` or `\"""`
 *   - `\"""`
 * ```
 */

function readBlockString(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let lineStart = lexer.lineStart;
  let position = start + 3;
  let chunkStart = position;
  let currentLine = '';
  const blockLines = [];

  while (position < bodyLength) {
    const code = body.charCodeAt(position); // Closing Triple-Quote (""")

    if (
      code === 0x0022 &&
      body.charCodeAt(position + 1) === 0x0022 &&
      body.charCodeAt(position + 2) === 0x0022
    ) {
      currentLine += body.slice(chunkStart, position);
      blockLines.push(currentLine);
      const token = createToken(
        lexer,
        _tokenKind.TokenKind.BLOCK_STRING,
        start,
        position + 3, // Return a string of the lines joined with U+000A.
        (0, _blockString.dedentBlockStringLines)(blockLines).join('\n'),
      );
      lexer.line += blockLines.length - 1;
      lexer.lineStart = lineStart;
      return token;
    } // Escaped Triple-Quote (\""")

    if (
      code === 0x005c &&
      body.charCodeAt(position + 1) === 0x0022 &&
      body.charCodeAt(position + 2) === 0x0022 &&
      body.charCodeAt(position + 3) === 0x0022
    ) {
      currentLine += body.slice(chunkStart, position);
      chunkStart = position + 1; // skip only slash

      position += 4;
      continue;
    } // LineTerminator

    if (code === 0x000a || code === 0x000d) {
      currentLine += body.slice(chunkStart, position);
      blockLines.push(currentLine);

      if (code === 0x000d && body.charCodeAt(position + 1) === 0x000a) {
        position += 2;
      } else {
        ++position;
      }

      currentLine = '';
      chunkStart = position;
      lineStart = position;
      continue;
    } // SourceCharacter

    if (isUnicodeScalarValue(code)) {
      ++position;
    } else if (isSupplementaryCodePoint(body, position)) {
      position += 2;
    } else {
      throw (0, _syntaxError.syntaxError)(
        lexer.source,
        position,
        `Invalid character within String: ${printCodePointAt(
          lexer,
          position,
        )}.`,
      );
    }
  }

  throw (0, _syntaxError.syntaxError)(
    lexer.source,
    position,
    'Unterminated string.',
  );
}
/**
 * Reads an alphanumeric + underscore name from the source.
 *
 * ```
 * Name ::
 *   - NameStart NameContinue* [lookahead != NameContinue]
 * ```
 */

function readName(lexer, start) {
  const body = lexer.source.body;
  const bodyLength = body.length;
  let position = start + 1;

  while (position < bodyLength) {
    const code = body.charCodeAt(position);

    if ((0, _characterClasses.isNameContinue)(code)) {
      ++position;
    } else {
      break;
    }
  }

  return createToken(
    lexer,
    _tokenKind.TokenKind.NAME,
    start,
    position,
    body.slice(start, position),
  );
}


/***/ }),

/***/ 1922:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.getLocation = getLocation;

var _invariant = __nccwpck_require__(8847);

const LineRegExp = /\r\n|[\n\r]/g;
/**
 * Represents a location in a Source.
 */

/**
 * Takes a Source and a UTF-8 character offset, and returns the corresponding
 * line and column as a SourceLocation.
 */
function getLocation(source, position) {
  let lastLineStart = 0;
  let line = 1;

  for (const match of source.body.matchAll(LineRegExp)) {
    typeof match.index === 'number' || (0, _invariant.invariant)(false);

    if (match.index >= position) {
      break;
    }

    lastLineStart = match.index + match[0].length;
    line += 1;
  }

  return {
    line,
    column: position + 1 - lastLineStart,
  };
}


/***/ }),

/***/ 655:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.Parser = void 0;
exports.parse = parse;
exports.parseConstValue = parseConstValue;
exports.parseType = parseType;
exports.parseValue = parseValue;

var _syntaxError = __nccwpck_require__(2295);

var _ast = __nccwpck_require__(5494);

var _directiveLocation = __nccwpck_require__(1553);

var _kinds = __nccwpck_require__(1927);

var _lexer = __nccwpck_require__(4605);

var _source = __nccwpck_require__(5521);

var _tokenKind = __nccwpck_require__(1565);

/**
 * Given a GraphQL source, parses it into a Document.
 * Throws GraphQLError if a syntax error is encountered.
 */
function parse(source, options) {
  const parser = new Parser(source, options);
  return parser.parseDocument();
}
/**
 * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for
 * that value.
 * Throws GraphQLError if a syntax error is encountered.
 *
 * This is useful within tools that operate upon GraphQL Values directly and
 * in isolation of complete GraphQL documents.
 *
 * Consider providing the results to the utility function: valueFromAST().
 */

function parseValue(source, options) {
  const parser = new Parser(source, options);
  parser.expectToken(_tokenKind.TokenKind.SOF);
  const value = parser.parseValueLiteral(false);
  parser.expectToken(_tokenKind.TokenKind.EOF);
  return value;
}
/**
 * Similar to parseValue(), but raises a parse error if it encounters a
 * variable. The return type will be a constant value.
 */

function parseConstValue(source, options) {
  const parser = new Parser(source, options);
  parser.expectToken(_tokenKind.TokenKind.SOF);
  const value = parser.parseConstValueLiteral();
  parser.expectToken(_tokenKind.TokenKind.EOF);
  return value;
}
/**
 * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for
 * that type.
 * Throws GraphQLError if a syntax error is encountered.
 *
 * This is useful within tools that operate upon GraphQL Types directly and
 * in isolation of complete GraphQL documents.
 *
 * Consider providing the results to the utility function: typeFromAST().
 */

function parseType(source, options) {
  const parser = new Parser(source, options);
  parser.expectToken(_tokenKind.TokenKind.SOF);
  const type = parser.parseTypeReference();
  parser.expectToken(_tokenKind.TokenKind.EOF);
  return type;
}
/**
 * This class is exported only to assist people in implementing their own parsers
 * without duplicating too much code and should be used only as last resort for cases
 * such as experimental syntax or if certain features could not be contributed upstream.
 *
 * It is still part of the internal API and is versioned, so any changes to it are never
 * considered breaking changes. If you still need to support multiple versions of the
 * library, please use the `versionInfo` variable for version detection.
 *
 * @internal
 */

class Parser {
  constructor(source, options = {}) {
    const sourceObj = (0, _source.isSource)(source)
      ? source
      : new _source.Source(source);
    this._lexer = new _lexer.Lexer(sourceObj);
    this._options = options;
    this._tokenCounter = 0;
  }
  /**
   * Converts a name lex token into a name parse node.
   */

  parseName() {
    const token = this.expectToken(_tokenKind.TokenKind.NAME);
    return this.node(token, {
      kind: _kinds.Kind.NAME,
      value: token.value,
    });
  } // Implements the parsing rules in the Document section.

  /**
   * Document : Definition+
   */

  parseDocument() {
    return this.node(this._lexer.token, {
      kind: _kinds.Kind.DOCUMENT,
      definitions: this.many(
        _tokenKind.TokenKind.SOF,
        this.parseDefinition,
        _tokenKind.TokenKind.EOF,
      ),
    });
  }
  /**
   * Definition :
   *   - ExecutableDefinition
   *   - TypeSystemDefinition
   *   - TypeSystemExtension
   *
   * ExecutableDefinition :
   *   - OperationDefinition
   *   - FragmentDefinition
   *
   * TypeSystemDefinition :
   *   - SchemaDefinition
   *   - TypeDefinition
   *   - DirectiveDefinition
   *
   * TypeDefinition :
   *   - ScalarTypeDefinition
   *   - ObjectTypeDefinition
   *   - InterfaceTypeDefinition
   *   - UnionTypeDefinition
   *   - EnumTypeDefinition
   *   - InputObjectTypeDefinition
   */

  parseDefinition() {
    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {
      return this.parseOperationDefinition();
    } // Many definitions begin with a description and require a lookahead.

    const hasDescription = this.peekDescription();
    const keywordToken = hasDescription
      ? this._lexer.lookahead()
      : this._lexer.token;

    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {
      switch (keywordToken.value) {
        case 'schema':
          return this.parseSchemaDefinition();

        case 'scalar':
          return this.parseScalarTypeDefinition();

        case 'type':
          return this.parseObjectTypeDefinition();

        case 'interface':
          return this.parseInterfaceTypeDefinition();

        case 'union':
          return this.parseUnionTypeDefinition();

        case 'enum':
          return this.parseEnumTypeDefinition();

        case 'input':
          return this.parseInputObjectTypeDefinition();

        case 'directive':
          return this.parseDirectiveDefinition();
      }

      if (hasDescription) {
        throw (0, _syntaxError.syntaxError)(
          this._lexer.source,
          this._lexer.token.start,
          'Unexpected description, descriptions are supported only on type definitions.',
        );
      }

      switch (keywordToken.value) {
        case 'query':
        case 'mutation':
        case 'subscription':
          return this.parseOperationDefinition();

        case 'fragment':
          return this.parseFragmentDefinition();

        case 'extend':
          return this.parseTypeSystemExtension();
      }
    }

    throw this.unexpected(keywordToken);
  } // Implements the parsing rules in the Operations section.

  /**
   * OperationDefinition :
   *  - SelectionSet
   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet
   */

  parseOperationDefinition() {
    const start = this._lexer.token;

    if (this.peek(_tokenKind.TokenKind.BRACE_L)) {
      return this.node(start, {
        kind: _kinds.Kind.OPERATION_DEFINITION,
        operation: _ast.OperationTypeNode.QUERY,
        name: undefined,
        variableDefinitions: [],
        directives: [],
        selectionSet: this.parseSelectionSet(),
      });
    }

    const operation = this.parseOperationType();
    let name;

    if (this.peek(_tokenKind.TokenKind.NAME)) {
      name = this.parseName();
    }

    return this.node(start, {
      kind: _kinds.Kind.OPERATION_DEFINITION,
      operation,
      name,
      variableDefinitions: this.parseVariableDefinitions(),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
    });
  }
  /**
   * OperationType : one of query mutation subscription
   */

  parseOperationType() {
    const operationToken = this.expectToken(_tokenKind.TokenKind.NAME);

    switch (operationToken.value) {
      case 'query':
        return _ast.OperationTypeNode.QUERY;

      case 'mutation':
        return _ast.OperationTypeNode.MUTATION;

      case 'subscription':
        return _ast.OperationTypeNode.SUBSCRIPTION;
    }

    throw this.unexpected(operationToken);
  }
  /**
   * VariableDefinitions : ( VariableDefinition+ )
   */

  parseVariableDefinitions() {
    return this.optionalMany(
      _tokenKind.TokenKind.PAREN_L,
      this.parseVariableDefinition,
      _tokenKind.TokenKind.PAREN_R,
    );
  }
  /**
   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?
   */

  parseVariableDefinition() {
    return this.node(this._lexer.token, {
      kind: _kinds.Kind.VARIABLE_DEFINITION,
      variable: this.parseVariable(),
      type:
        (this.expectToken(_tokenKind.TokenKind.COLON),
        this.parseTypeReference()),
      defaultValue: this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)
        ? this.parseConstValueLiteral()
        : undefined,
      directives: this.parseConstDirectives(),
    });
  }
  /**
   * Variable : $ Name
   */

  parseVariable() {
    const start = this._lexer.token;
    this.expectToken(_tokenKind.TokenKind.DOLLAR);
    return this.node(start, {
      kind: _kinds.Kind.VARIABLE,
      name: this.parseName(),
    });
  }
  /**
   * ```
   * SelectionSet : { Selection+ }
   * ```
   */

  parseSelectionSet() {
    return this.node(this._lexer.token, {
      kind: _kinds.Kind.SELECTION_SET,
      selections: this.many(
        _tokenKind.TokenKind.BRACE_L,
        this.parseSelection,
        _tokenKind.TokenKind.BRACE_R,
      ),
    });
  }
  /**
   * Selection :
   *   - Field
   *   - FragmentSpread
   *   - InlineFragment
   */

  parseSelection() {
    return this.peek(_tokenKind.TokenKind.SPREAD)
      ? this.parseFragment()
      : this.parseField();
  }
  /**
   * Field : Alias? Name Arguments? Directives? SelectionSet?
   *
   * Alias : Name :
   */

  parseField() {
    const start = this._lexer.token;
    const nameOrAlias = this.parseName();
    let alias;
    let name;

    if (this.expectOptionalToken(_tokenKind.TokenKind.COLON)) {
      alias = nameOrAlias;
      name = this.parseName();
    } else {
      name = nameOrAlias;
    }

    return this.node(start, {
      kind: _kinds.Kind.FIELD,
      alias,
      name,
      arguments: this.parseArguments(false),
      directives: this.parseDirectives(false),
      selectionSet: this.peek(_tokenKind.TokenKind.BRACE_L)
        ? this.parseSelectionSet()
        : undefined,
    });
  }
  /**
   * Arguments[Const] : ( Argument[?Const]+ )
   */

  parseArguments(isConst) {
    const item = isConst ? this.parseConstArgument : this.parseArgument;
    return this.optionalMany(
      _tokenKind.TokenKind.PAREN_L,
      item,
      _tokenKind.TokenKind.PAREN_R,
    );
  }
  /**
   * Argument[Const] : Name : Value[?Const]
   */

  parseArgument(isConst = false) {
    const start = this._lexer.token;
    const name = this.parseName();
    this.expectToken(_tokenKind.TokenKind.COLON);
    return this.node(start, {
      kind: _kinds.Kind.ARGUMENT,
      name,
      value: this.parseValueLiteral(isConst),
    });
  }

  parseConstArgument() {
    return this.parseArgument(true);
  } // Implements the parsing rules in the Fragments section.

  /**
   * Corresponds to both FragmentSpread and InlineFragment in the spec.
   *
   * FragmentSpread : ... FragmentName Directives?
   *
   * InlineFragment : ... TypeCondition? Directives? SelectionSet
   */

  parseFragment() {
    const start = this._lexer.token;
    this.expectToken(_tokenKind.TokenKind.SPREAD);
    const hasTypeCondition = this.expectOptionalKeyword('on');

    if (!hasTypeCondition && this.peek(_tokenKind.TokenKind.NAME)) {
      return this.node(start, {
        kind: _kinds.Kind.FRAGMENT_SPREAD,
        name: this.parseFragmentName(),
        directives: this.parseDirectives(false),
      });
    }

    return this.node(start, {
      kind: _kinds.Kind.INLINE_FRAGMENT,
      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
    });
  }
  /**
   * FragmentDefinition :
   *   - fragment FragmentName on TypeCondition Directives? SelectionSet
   *
   * TypeCondition : NamedType
   */

  parseFragmentDefinition() {
    const start = this._lexer.token;
    this.expectKeyword('fragment'); // Legacy support for defining variables within fragments changes
    // the grammar of FragmentDefinition:
    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet

    if (this._options.allowLegacyFragmentVariables === true) {
      return this.node(start, {
        kind: _kinds.Kind.FRAGMENT_DEFINITION,
        name: this.parseFragmentName(),
        variableDefinitions: this.parseVariableDefinitions(),
        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),
        directives: this.parseDirectives(false),
        selectionSet: this.parseSelectionSet(),
      });
    }

    return this.node(start, {
      kind: _kinds.Kind.FRAGMENT_DEFINITION,
      name: this.parseFragmentName(),
      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),
      directives: this.parseDirectives(false),
      selectionSet: this.parseSelectionSet(),
    });
  }
  /**
   * FragmentName : Name but not `on`
   */

  parseFragmentName() {
    if (this._lexer.token.value === 'on') {
      throw this.unexpected();
    }

    return this.parseName();
  } // Implements the parsing rules in the Values section.

  /**
   * Value[Const] :
   *   - [~Const] Variable
   *   - IntValue
   *   - FloatValue
   *   - StringValue
   *   - BooleanValue
   *   - NullValue
   *   - EnumValue
   *   - ListValue[?Const]
   *   - ObjectValue[?Const]
   *
   * BooleanValue : one of `true` `false`
   *
   * NullValue : `null`
   *
   * EnumValue : Name but not `true`, `false` or `null`
   */

  parseValueLiteral(isConst) {
    const token = this._lexer.token;

    switch (token.kind) {
      case _tokenKind.TokenKind.BRACKET_L:
        return this.parseList(isConst);

      case _tokenKind.TokenKind.BRACE_L:
        return this.parseObject(isConst);

      case _tokenKind.TokenKind.INT:
        this.advanceLexer();
        return this.node(token, {
          kind: _kinds.Kind.INT,
          value: token.value,
        });

      case _tokenKind.TokenKind.FLOAT:
        this.advanceLexer();
        return this.node(token, {
          kind: _kinds.Kind.FLOAT,
          value: token.value,
        });

      case _tokenKind.TokenKind.STRING:
      case _tokenKind.TokenKind.BLOCK_STRING:
        return this.parseStringLiteral();

      case _tokenKind.TokenKind.NAME:
        this.advanceLexer();

        switch (token.value) {
          case 'true':
            return this.node(token, {
              kind: _kinds.Kind.BOOLEAN,
              value: true,
            });

          case 'false':
            return this.node(token, {
              kind: _kinds.Kind.BOOLEAN,
              value: false,
            });

          case 'null':
            return this.node(token, {
              kind: _kinds.Kind.NULL,
            });

          default:
            return this.node(token, {
              kind: _kinds.Kind.ENUM,
              value: token.value,
            });
        }

      case _tokenKind.TokenKind.DOLLAR:
        if (isConst) {
          this.expectToken(_tokenKind.TokenKind.DOLLAR);

          if (this._lexer.token.kind === _tokenKind.TokenKind.NAME) {
            const varName = this._lexer.token.value;
            throw (0, _syntaxError.syntaxError)(
              this._lexer.source,
              token.start,
              `Unexpected variable "$${varName}" in constant value.`,
            );
          } else {
            throw this.unexpected(token);
          }
        }

        return this.parseVariable();

      default:
        throw this.unexpected();
    }
  }

  parseConstValueLiteral() {
    return this.parseValueLiteral(true);
  }

  parseStringLiteral() {
    const token = this._lexer.token;
    this.advanceLexer();
    return this.node(token, {
      kind: _kinds.Kind.STRING,
      value: token.value,
      block: token.kind === _tokenKind.TokenKind.BLOCK_STRING,
    });
  }
  /**
   * ListValue[Const] :
   *   - [ ]
   *   - [ Value[?Const]+ ]
   */

  parseList(isConst) {
    const item = () => this.parseValueLiteral(isConst);

    return this.node(this._lexer.token, {
      kind: _kinds.Kind.LIST,
      values: this.any(
        _tokenKind.TokenKind.BRACKET_L,
        item,
        _tokenKind.TokenKind.BRACKET_R,
      ),
    });
  }
  /**
   * ```
   * ObjectValue[Const] :
   *   - { }
   *   - { ObjectField[?Const]+ }
   * ```
   */

  parseObject(isConst) {
    const item = () => this.parseObjectField(isConst);

    return this.node(this._lexer.token, {
      kind: _kinds.Kind.OBJECT,
      fields: this.any(
        _tokenKind.TokenKind.BRACE_L,
        item,
        _tokenKind.TokenKind.BRACE_R,
      ),
    });
  }
  /**
   * ObjectField[Const] : Name : Value[?Const]
   */

  parseObjectField(isConst) {
    const start = this._lexer.token;
    const name = this.parseName();
    this.expectToken(_tokenKind.TokenKind.COLON);
    return this.node(start, {
      kind: _kinds.Kind.OBJECT_FIELD,
      name,
      value: this.parseValueLiteral(isConst),
    });
  } // Implements the parsing rules in the Directives section.

  /**
   * Directives[Const] : Directive[?Const]+
   */

  parseDirectives(isConst) {
    const directives = [];

    while (this.peek(_tokenKind.TokenKind.AT)) {
      directives.push(this.parseDirective(isConst));
    }

    return directives;
  }

  parseConstDirectives() {
    return this.parseDirectives(true);
  }
  /**
   * ```
   * Directive[Const] : @ Name Arguments[?Const]?
   * ```
   */

  parseDirective(isConst) {
    const start = this._lexer.token;
    this.expectToken(_tokenKind.TokenKind.AT);
    return this.node(start, {
      kind: _kinds.Kind.DIRECTIVE,
      name: this.parseName(),
      arguments: this.parseArguments(isConst),
    });
  } // Implements the parsing rules in the Types section.

  /**
   * Type :
   *   - NamedType
   *   - ListType
   *   - NonNullType
   */

  parseTypeReference() {
    const start = this._lexer.token;
    let type;

    if (this.expectOptionalToken(_tokenKind.TokenKind.BRACKET_L)) {
      const innerType = this.parseTypeReference();
      this.expectToken(_tokenKind.TokenKind.BRACKET_R);
      type = this.node(start, {
        kind: _kinds.Kind.LIST_TYPE,
        type: innerType,
      });
    } else {
      type = this.parseNamedType();
    }

    if (this.expectOptionalToken(_tokenKind.TokenKind.BANG)) {
      return this.node(start, {
        kind: _kinds.Kind.NON_NULL_TYPE,
        type,
      });
    }

    return type;
  }
  /**
   * NamedType : Name
   */

  parseNamedType() {
    return this.node(this._lexer.token, {
      kind: _kinds.Kind.NAMED_TYPE,
      name: this.parseName(),
    });
  } // Implements the parsing rules in the Type Definition section.

  peekDescription() {
    return (
      this.peek(_tokenKind.TokenKind.STRING) ||
      this.peek(_tokenKind.TokenKind.BLOCK_STRING)
    );
  }
  /**
   * Description : StringValue
   */

  parseDescription() {
    if (this.peekDescription()) {
      return this.parseStringLiteral();
    }
  }
  /**
   * ```
   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }
   * ```
   */

  parseSchemaDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('schema');
    const directives = this.parseConstDirectives();
    const operationTypes = this.many(
      _tokenKind.TokenKind.BRACE_L,
      this.parseOperationTypeDefinition,
      _tokenKind.TokenKind.BRACE_R,
    );
    return this.node(start, {
      kind: _kinds.Kind.SCHEMA_DEFINITION,
      description,
      directives,
      operationTypes,
    });
  }
  /**
   * OperationTypeDefinition : OperationType : NamedType
   */

  parseOperationTypeDefinition() {
    const start = this._lexer.token;
    const operation = this.parseOperationType();
    this.expectToken(_tokenKind.TokenKind.COLON);
    const type = this.parseNamedType();
    return this.node(start, {
      kind: _kinds.Kind.OPERATION_TYPE_DEFINITION,
      operation,
      type,
    });
  }
  /**
   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?
   */

  parseScalarTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('scalar');
    const name = this.parseName();
    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: _kinds.Kind.SCALAR_TYPE_DEFINITION,
      description,
      name,
      directives,
    });
  }
  /**
   * ObjectTypeDefinition :
   *   Description?
   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?
   */

  parseObjectTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('type');
    const name = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();
    return this.node(start, {
      kind: _kinds.Kind.OBJECT_TYPE_DEFINITION,
      description,
      name,
      interfaces,
      directives,
      fields,
    });
  }
  /**
   * ImplementsInterfaces :
   *   - implements `&`? NamedType
   *   - ImplementsInterfaces & NamedType
   */

  parseImplementsInterfaces() {
    return this.expectOptionalKeyword('implements')
      ? this.delimitedMany(_tokenKind.TokenKind.AMP, this.parseNamedType)
      : [];
  }
  /**
   * ```
   * FieldsDefinition : { FieldDefinition+ }
   * ```
   */

  parseFieldsDefinition() {
    return this.optionalMany(
      _tokenKind.TokenKind.BRACE_L,
      this.parseFieldDefinition,
      _tokenKind.TokenKind.BRACE_R,
    );
  }
  /**
   * FieldDefinition :
   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?
   */

  parseFieldDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    const name = this.parseName();
    const args = this.parseArgumentDefs();
    this.expectToken(_tokenKind.TokenKind.COLON);
    const type = this.parseTypeReference();
    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: _kinds.Kind.FIELD_DEFINITION,
      description,
      name,
      arguments: args,
      type,
      directives,
    });
  }
  /**
   * ArgumentsDefinition : ( InputValueDefinition+ )
   */

  parseArgumentDefs() {
    return this.optionalMany(
      _tokenKind.TokenKind.PAREN_L,
      this.parseInputValueDef,
      _tokenKind.TokenKind.PAREN_R,
    );
  }
  /**
   * InputValueDefinition :
   *   - Description? Name : Type DefaultValue? Directives[Const]?
   */

  parseInputValueDef() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    const name = this.parseName();
    this.expectToken(_tokenKind.TokenKind.COLON);
    const type = this.parseTypeReference();
    let defaultValue;

    if (this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)) {
      defaultValue = this.parseConstValueLiteral();
    }

    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: _kinds.Kind.INPUT_VALUE_DEFINITION,
      description,
      name,
      type,
      defaultValue,
      directives,
    });
  }
  /**
   * InterfaceTypeDefinition :
   *   - Description? interface Name Directives[Const]? FieldsDefinition?
   */

  parseInterfaceTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('interface');
    const name = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();
    return this.node(start, {
      kind: _kinds.Kind.INTERFACE_TYPE_DEFINITION,
      description,
      name,
      interfaces,
      directives,
      fields,
    });
  }
  /**
   * UnionTypeDefinition :
   *   - Description? union Name Directives[Const]? UnionMemberTypes?
   */

  parseUnionTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('union');
    const name = this.parseName();
    const directives = this.parseConstDirectives();
    const types = this.parseUnionMemberTypes();
    return this.node(start, {
      kind: _kinds.Kind.UNION_TYPE_DEFINITION,
      description,
      name,
      directives,
      types,
    });
  }
  /**
   * UnionMemberTypes :
   *   - = `|`? NamedType
   *   - UnionMemberTypes | NamedType
   */

  parseUnionMemberTypes() {
    return this.expectOptionalToken(_tokenKind.TokenKind.EQUALS)
      ? this.delimitedMany(_tokenKind.TokenKind.PIPE, this.parseNamedType)
      : [];
  }
  /**
   * EnumTypeDefinition :
   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?
   */

  parseEnumTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('enum');
    const name = this.parseName();
    const directives = this.parseConstDirectives();
    const values = this.parseEnumValuesDefinition();
    return this.node(start, {
      kind: _kinds.Kind.ENUM_TYPE_DEFINITION,
      description,
      name,
      directives,
      values,
    });
  }
  /**
   * ```
   * EnumValuesDefinition : { EnumValueDefinition+ }
   * ```
   */

  parseEnumValuesDefinition() {
    return this.optionalMany(
      _tokenKind.TokenKind.BRACE_L,
      this.parseEnumValueDefinition,
      _tokenKind.TokenKind.BRACE_R,
    );
  }
  /**
   * EnumValueDefinition : Description? EnumValue Directives[Const]?
   */

  parseEnumValueDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    const name = this.parseEnumValueName();
    const directives = this.parseConstDirectives();
    return this.node(start, {
      kind: _kinds.Kind.ENUM_VALUE_DEFINITION,
      description,
      name,
      directives,
    });
  }
  /**
   * EnumValue : Name but not `true`, `false` or `null`
   */

  parseEnumValueName() {
    if (
      this._lexer.token.value === 'true' ||
      this._lexer.token.value === 'false' ||
      this._lexer.token.value === 'null'
    ) {
      throw (0, _syntaxError.syntaxError)(
        this._lexer.source,
        this._lexer.token.start,
        `${getTokenDesc(
          this._lexer.token,
        )} is reserved and cannot be used for an enum value.`,
      );
    }

    return this.parseName();
  }
  /**
   * InputObjectTypeDefinition :
   *   - Description? input Name Directives[Const]? InputFieldsDefinition?
   */

  parseInputObjectTypeDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('input');
    const name = this.parseName();
    const directives = this.parseConstDirectives();
    const fields = this.parseInputFieldsDefinition();
    return this.node(start, {
      kind: _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION,
      description,
      name,
      directives,
      fields,
    });
  }
  /**
   * ```
   * InputFieldsDefinition : { InputValueDefinition+ }
   * ```
   */

  parseInputFieldsDefinition() {
    return this.optionalMany(
      _tokenKind.TokenKind.BRACE_L,
      this.parseInputValueDef,
      _tokenKind.TokenKind.BRACE_R,
    );
  }
  /**
   * TypeSystemExtension :
   *   - SchemaExtension
   *   - TypeExtension
   *
   * TypeExtension :
   *   - ScalarTypeExtension
   *   - ObjectTypeExtension
   *   - InterfaceTypeExtension
   *   - UnionTypeExtension
   *   - EnumTypeExtension
   *   - InputObjectTypeDefinition
   */

  parseTypeSystemExtension() {
    const keywordToken = this._lexer.lookahead();

    if (keywordToken.kind === _tokenKind.TokenKind.NAME) {
      switch (keywordToken.value) {
        case 'schema':
          return this.parseSchemaExtension();

        case 'scalar':
          return this.parseScalarTypeExtension();

        case 'type':
          return this.parseObjectTypeExtension();

        case 'interface':
          return this.parseInterfaceTypeExtension();

        case 'union':
          return this.parseUnionTypeExtension();

        case 'enum':
          return this.parseEnumTypeExtension();

        case 'input':
          return this.parseInputObjectTypeExtension();
      }
    }

    throw this.unexpected(keywordToken);
  }
  /**
   * ```
   * SchemaExtension :
   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }
   *  - extend schema Directives[Const]
   * ```
   */

  parseSchemaExtension() {
    const start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('schema');
    const directives = this.parseConstDirectives();
    const operationTypes = this.optionalMany(
      _tokenKind.TokenKind.BRACE_L,
      this.parseOperationTypeDefinition,
      _tokenKind.TokenKind.BRACE_R,
    );

    if (directives.length === 0 && operationTypes.length === 0) {
      throw this.unexpected();
    }

    return this.node(start, {
      kind: _kinds.Kind.SCHEMA_EXTENSION,
      directives,
      operationTypes,
    });
  }
  /**
   * ScalarTypeExtension :
   *   - extend scalar Name Directives[Const]
   */

  parseScalarTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('scalar');
    const name = this.parseName();
    const directives = this.parseConstDirectives();

    if (directives.length === 0) {
      throw this.unexpected();
    }

    return this.node(start, {
      kind: _kinds.Kind.SCALAR_TYPE_EXTENSION,
      name,
      directives,
    });
  }
  /**
   * ObjectTypeExtension :
   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend type Name ImplementsInterfaces? Directives[Const]
   *  - extend type Name ImplementsInterfaces
   */

  parseObjectTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('type');
    const name = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();

    if (
      interfaces.length === 0 &&
      directives.length === 0 &&
      fields.length === 0
    ) {
      throw this.unexpected();
    }

    return this.node(start, {
      kind: _kinds.Kind.OBJECT_TYPE_EXTENSION,
      name,
      interfaces,
      directives,
      fields,
    });
  }
  /**
   * InterfaceTypeExtension :
   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition
   *  - extend interface Name ImplementsInterfaces? Directives[Const]
   *  - extend interface Name ImplementsInterfaces
   */

  parseInterfaceTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('interface');
    const name = this.parseName();
    const interfaces = this.parseImplementsInterfaces();
    const directives = this.parseConstDirectives();
    const fields = this.parseFieldsDefinition();

    if (
      interfaces.length === 0 &&
      directives.length === 0 &&
      fields.length === 0
    ) {
      throw this.unexpected();
    }

    return this.node(start, {
      kind: _kinds.Kind.INTERFACE_TYPE_EXTENSION,
      name,
      interfaces,
      directives,
      fields,
    });
  }
  /**
   * UnionTypeExtension :
   *   - extend union Name Directives[Const]? UnionMemberTypes
   *   - extend union Name Directives[Const]
   */

  parseUnionTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('union');
    const name = this.parseName();
    const directives = this.parseConstDirectives();
    const types = this.parseUnionMemberTypes();

    if (directives.length === 0 && types.length === 0) {
      throw this.unexpected();
    }

    return this.node(start, {
      kind: _kinds.Kind.UNION_TYPE_EXTENSION,
      name,
      directives,
      types,
    });
  }
  /**
   * EnumTypeExtension :
   *   - extend enum Name Directives[Const]? EnumValuesDefinition
   *   - extend enum Name Directives[Const]
   */

  parseEnumTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('enum');
    const name = this.parseName();
    const directives = this.parseConstDirectives();
    const values = this.parseEnumValuesDefinition();

    if (directives.length === 0 && values.length === 0) {
      throw this.unexpected();
    }

    return this.node(start, {
      kind: _kinds.Kind.ENUM_TYPE_EXTENSION,
      name,
      directives,
      values,
    });
  }
  /**
   * InputObjectTypeExtension :
   *   - extend input Name Directives[Const]? InputFieldsDefinition
   *   - extend input Name Directives[Const]
   */

  parseInputObjectTypeExtension() {
    const start = this._lexer.token;
    this.expectKeyword('extend');
    this.expectKeyword('input');
    const name = this.parseName();
    const directives = this.parseConstDirectives();
    const fields = this.parseInputFieldsDefinition();

    if (directives.length === 0 && fields.length === 0) {
      throw this.unexpected();
    }

    return this.node(start, {
      kind: _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,
      name,
      directives,
      fields,
    });
  }
  /**
   * ```
   * DirectiveDefinition :
   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations
   * ```
   */

  parseDirectiveDefinition() {
    const start = this._lexer.token;
    const description = this.parseDescription();
    this.expectKeyword('directive');
    this.expectToken(_tokenKind.TokenKind.AT);
    const name = this.parseName();
    const args = this.parseArgumentDefs();
    const repeatable = this.expectOptionalKeyword('repeatable');
    this.expectKeyword('on');
    const locations = this.parseDirectiveLocations();
    return this.node(start, {
      kind: _kinds.Kind.DIRECTIVE_DEFINITION,
      description,
      name,
      arguments: args,
      repeatable,
      locations,
    });
  }
  /**
   * DirectiveLocations :
   *   - `|`? DirectiveLocation
   *   - DirectiveLocations | DirectiveLocation
   */

  parseDirectiveLocations() {
    return this.delimitedMany(
      _tokenKind.TokenKind.PIPE,
      this.parseDirectiveLocation,
    );
  }
  /*
   * DirectiveLocation :
   *   - ExecutableDirectiveLocation
   *   - TypeSystemDirectiveLocation
   *
   * ExecutableDirectiveLocation : one of
   *   `QUERY`
   *   `MUTATION`
   *   `SUBSCRIPTION`
   *   `FIELD`
   *   `FRAGMENT_DEFINITION`
   *   `FRAGMENT_SPREAD`
   *   `INLINE_FRAGMENT`
   *
   * TypeSystemDirectiveLocation : one of
   *   `SCHEMA`
   *   `SCALAR`
   *   `OBJECT`
   *   `FIELD_DEFINITION`
   *   `ARGUMENT_DEFINITION`
   *   `INTERFACE`
   *   `UNION`
   *   `ENUM`
   *   `ENUM_VALUE`
   *   `INPUT_OBJECT`
   *   `INPUT_FIELD_DEFINITION`
   */

  parseDirectiveLocation() {
    const start = this._lexer.token;
    const name = this.parseName();

    if (
      Object.prototype.hasOwnProperty.call(
        _directiveLocation.DirectiveLocation,
        name.value,
      )
    ) {
      return name;
    }

    throw this.unexpected(start);
  } // Core parsing utility functions

  /**
   * Returns a node that, if configured to do so, sets a "loc" field as a
   * location object, used to identify the place in the source that created a
   * given parsed object.
   */

  node(startToken, node) {
    if (this._options.noLocation !== true) {
      node.loc = new _ast.Location(
        startToken,
        this._lexer.lastToken,
        this._lexer.source,
      );
    }

    return node;
  }
  /**
   * Determines if the next token is of a given kind
   */

  peek(kind) {
    return this._lexer.token.kind === kind;
  }
  /**
   * If the next token is of the given kind, return that token after advancing the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */

  expectToken(kind) {
    const token = this._lexer.token;

    if (token.kind === kind) {
      this.advanceLexer();
      return token;
    }

    throw (0, _syntaxError.syntaxError)(
      this._lexer.source,
      token.start,
      `Expected ${getTokenKindDesc(kind)}, found ${getTokenDesc(token)}.`,
    );
  }
  /**
   * If the next token is of the given kind, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */

  expectOptionalToken(kind) {
    const token = this._lexer.token;

    if (token.kind === kind) {
      this.advanceLexer();
      return true;
    }

    return false;
  }
  /**
   * If the next token is a given keyword, advance the lexer.
   * Otherwise, do not change the parser state and throw an error.
   */

  expectKeyword(value) {
    const token = this._lexer.token;

    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {
      this.advanceLexer();
    } else {
      throw (0, _syntaxError.syntaxError)(
        this._lexer.source,
        token.start,
        `Expected "${value}", found ${getTokenDesc(token)}.`,
      );
    }
  }
  /**
   * If the next token is a given keyword, return "true" after advancing the lexer.
   * Otherwise, do not change the parser state and return "false".
   */

  expectOptionalKeyword(value) {
    const token = this._lexer.token;

    if (token.kind === _tokenKind.TokenKind.NAME && token.value === value) {
      this.advanceLexer();
      return true;
    }

    return false;
  }
  /**
   * Helper function for creating an error when an unexpected lexed token is encountered.
   */

  unexpected(atToken) {
    const token =
      atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;
    return (0, _syntaxError.syntaxError)(
      this._lexer.source,
      token.start,
      `Unexpected ${getTokenDesc(token)}.`,
    );
  }
  /**
   * Returns a possibly empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */

  any(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    const nodes = [];

    while (!this.expectOptionalToken(closeKind)) {
      nodes.push(parseFn.call(this));
    }

    return nodes;
  }
  /**
   * Returns a list of parse nodes, determined by the parseFn.
   * It can be empty only if open token is missing otherwise it will always return non-empty list
   * that begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */

  optionalMany(openKind, parseFn, closeKind) {
    if (this.expectOptionalToken(openKind)) {
      const nodes = [];

      do {
        nodes.push(parseFn.call(this));
      } while (!this.expectOptionalToken(closeKind));

      return nodes;
    }

    return [];
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list begins with a lex token of openKind and ends with a lex token of closeKind.
   * Advances the parser to the next lex token after the closing token.
   */

  many(openKind, parseFn, closeKind) {
    this.expectToken(openKind);
    const nodes = [];

    do {
      nodes.push(parseFn.call(this));
    } while (!this.expectOptionalToken(closeKind));

    return nodes;
  }
  /**
   * Returns a non-empty list of parse nodes, determined by the parseFn.
   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.
   * Advances the parser to the next lex token after last item in the list.
   */

  delimitedMany(delimiterKind, parseFn) {
    this.expectOptionalToken(delimiterKind);
    const nodes = [];

    do {
      nodes.push(parseFn.call(this));
    } while (this.expectOptionalToken(delimiterKind));

    return nodes;
  }

  advanceLexer() {
    const { maxTokens } = this._options;

    const token = this._lexer.advance();

    if (maxTokens !== undefined && token.kind !== _tokenKind.TokenKind.EOF) {
      ++this._tokenCounter;

      if (this._tokenCounter > maxTokens) {
        throw (0, _syntaxError.syntaxError)(
          this._lexer.source,
          token.start,
          `Document contains more that ${maxTokens} tokens. Parsing aborted.`,
        );
      }
    }
  }
}
/**
 * A helper function to describe a token as a string for debugging.
 */

exports.Parser = Parser;

function getTokenDesc(token) {
  const value = token.value;
  return getTokenKindDesc(token.kind) + (value != null ? ` "${value}"` : '');
}
/**
 * A helper function to describe a token kind as a string for debugging.
 */

function getTokenKindDesc(kind) {
  return (0, _lexer.isPunctuatorTokenKind)(kind) ? `"${kind}"` : kind;
}


/***/ }),

/***/ 535:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.isConstValueNode = isConstValueNode;
exports.isDefinitionNode = isDefinitionNode;
exports.isExecutableDefinitionNode = isExecutableDefinitionNode;
exports.isSelectionNode = isSelectionNode;
exports.isTypeDefinitionNode = isTypeDefinitionNode;
exports.isTypeExtensionNode = isTypeExtensionNode;
exports.isTypeNode = isTypeNode;
exports.isTypeSystemDefinitionNode = isTypeSystemDefinitionNode;
exports.isTypeSystemExtensionNode = isTypeSystemExtensionNode;
exports.isValueNode = isValueNode;

var _kinds = __nccwpck_require__(1927);

function isDefinitionNode(node) {
  return (
    isExecutableDefinitionNode(node) ||
    isTypeSystemDefinitionNode(node) ||
    isTypeSystemExtensionNode(node)
  );
}

function isExecutableDefinitionNode(node) {
  return (
    node.kind === _kinds.Kind.OPERATION_DEFINITION ||
    node.kind === _kinds.Kind.FRAGMENT_DEFINITION
  );
}

function isSelectionNode(node) {
  return (
    node.kind === _kinds.Kind.FIELD ||
    node.kind === _kinds.Kind.FRAGMENT_SPREAD ||
    node.kind === _kinds.Kind.INLINE_FRAGMENT
  );
}

function isValueNode(node) {
  return (
    node.kind === _kinds.Kind.VARIABLE ||
    node.kind === _kinds.Kind.INT ||
    node.kind === _kinds.Kind.FLOAT ||
    node.kind === _kinds.Kind.STRING ||
    node.kind === _kinds.Kind.BOOLEAN ||
    node.kind === _kinds.Kind.NULL ||
    node.kind === _kinds.Kind.ENUM ||
    node.kind === _kinds.Kind.LIST ||
    node.kind === _kinds.Kind.OBJECT
  );
}

function isConstValueNode(node) {
  return (
    isValueNode(node) &&
    (node.kind === _kinds.Kind.LIST
      ? node.values.some(isConstValueNode)
      : node.kind === _kinds.Kind.OBJECT
      ? node.fields.some((field) => isConstValueNode(field.value))
      : node.kind !== _kinds.Kind.VARIABLE)
  );
}

function isTypeNode(node) {
  return (
    node.kind === _kinds.Kind.NAMED_TYPE ||
    node.kind === _kinds.Kind.LIST_TYPE ||
    node.kind === _kinds.Kind.NON_NULL_TYPE
  );
}

function isTypeSystemDefinitionNode(node) {
  return (
    node.kind === _kinds.Kind.SCHEMA_DEFINITION ||
    isTypeDefinitionNode(node) ||
    node.kind === _kinds.Kind.DIRECTIVE_DEFINITION
  );
}

function isTypeDefinitionNode(node) {
  return (
    node.kind === _kinds.Kind.SCALAR_TYPE_DEFINITION ||
    node.kind === _kinds.Kind.OBJECT_TYPE_DEFINITION ||
    node.kind === _kinds.Kind.INTERFACE_TYPE_DEFINITION ||
    node.kind === _kinds.Kind.UNION_TYPE_DEFINITION ||
    node.kind === _kinds.Kind.ENUM_TYPE_DEFINITION ||
    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION
  );
}

function isTypeSystemExtensionNode(node) {
  return (
    node.kind === _kinds.Kind.SCHEMA_EXTENSION || isTypeExtensionNode(node)
  );
}

function isTypeExtensionNode(node) {
  return (
    node.kind === _kinds.Kind.SCALAR_TYPE_EXTENSION ||
    node.kind === _kinds.Kind.OBJECT_TYPE_EXTENSION ||
    node.kind === _kinds.Kind.INTERFACE_TYPE_EXTENSION ||
    node.kind === _kinds.Kind.UNION_TYPE_EXTENSION ||
    node.kind === _kinds.Kind.ENUM_TYPE_EXTENSION ||
    node.kind === _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION
  );
}


/***/ }),

/***/ 5250:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.printLocation = printLocation;
exports.printSourceLocation = printSourceLocation;

var _location = __nccwpck_require__(1922);

/**
 * Render a helpful description of the location in the GraphQL Source document.
 */
function printLocation(location) {
  return printSourceLocation(
    location.source,
    (0, _location.getLocation)(location.source, location.start),
  );
}
/**
 * Render a helpful description of the location in the GraphQL Source document.
 */

function printSourceLocation(source, sourceLocation) {
  const firstLineColumnOffset = source.locationOffset.column - 1;
  const body = ''.padStart(firstLineColumnOffset) + source.body;
  const lineIndex = sourceLocation.line - 1;
  const lineOffset = source.locationOffset.line - 1;
  const lineNum = sourceLocation.line + lineOffset;
  const columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;
  const columnNum = sourceLocation.column + columnOffset;
  const locationStr = `${source.name}:${lineNum}:${columnNum}\n`;
  const lines = body.split(/\r\n|[\n\r]/g);
  const locationLine = lines[lineIndex]; // Special case for minified documents

  if (locationLine.length > 120) {
    const subLineIndex = Math.floor(columnNum / 80);
    const subLineColumnNum = columnNum % 80;
    const subLines = [];

    for (let i = 0; i < locationLine.length; i += 80) {
      subLines.push(locationLine.slice(i, i + 80));
    }

    return (
      locationStr +
      printPrefixedLines([
        [`${lineNum} |`, subLines[0]],
        ...subLines.slice(1, subLineIndex + 1).map((subLine) => ['|', subLine]),
        ['|', '^'.padStart(subLineColumnNum)],
        ['|', subLines[subLineIndex + 1]],
      ])
    );
  }

  return (
    locationStr +
    printPrefixedLines([
      // Lines specified like this: ["prefix", "string"],
      [`${lineNum - 1} |`, lines[lineIndex - 1]],
      [`${lineNum} |`, locationLine],
      ['|', '^'.padStart(columnNum)],
      [`${lineNum + 1} |`, lines[lineIndex + 1]],
    ])
  );
}

function printPrefixedLines(lines) {
  const existingLines = lines.filter(([_, line]) => line !== undefined);
  const padLen = Math.max(...existingLines.map(([prefix]) => prefix.length));
  return existingLines
    .map(([prefix, line]) => prefix.padStart(padLen) + (line ? ' ' + line : ''))
    .join('\n');
}


/***/ }),

/***/ 6011:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.printString = printString;

/**
 * Prints a string as a GraphQL StringValue literal. Replaces control characters
 * and excluded characters (" U+0022 and \\ U+005C) with escape sequences.
 */
function printString(str) {
  return `"${str.replace(escapedRegExp, escapedReplacer)}"`;
} // eslint-disable-next-line no-control-regex

const escapedRegExp = /[\x00-\x1f\x22\x5c\x7f-\x9f]/g;

function escapedReplacer(str) {
  return escapeSequences[str.charCodeAt(0)];
} // prettier-ignore

const escapeSequences = [
  '\\u0000',
  '\\u0001',
  '\\u0002',
  '\\u0003',
  '\\u0004',
  '\\u0005',
  '\\u0006',
  '\\u0007',
  '\\b',
  '\\t',
  '\\n',
  '\\u000B',
  '\\f',
  '\\r',
  '\\u000E',
  '\\u000F',
  '\\u0010',
  '\\u0011',
  '\\u0012',
  '\\u0013',
  '\\u0014',
  '\\u0015',
  '\\u0016',
  '\\u0017',
  '\\u0018',
  '\\u0019',
  '\\u001A',
  '\\u001B',
  '\\u001C',
  '\\u001D',
  '\\u001E',
  '\\u001F',
  '',
  '',
  '\\"',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '', // 2F
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '', // 3F
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '', // 4F
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '\\\\',
  '',
  '',
  '', // 5F
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '', // 6F
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '',
  '\\u007F',
  '\\u0080',
  '\\u0081',
  '\\u0082',
  '\\u0083',
  '\\u0084',
  '\\u0085',
  '\\u0086',
  '\\u0087',
  '\\u0088',
  '\\u0089',
  '\\u008A',
  '\\u008B',
  '\\u008C',
  '\\u008D',
  '\\u008E',
  '\\u008F',
  '\\u0090',
  '\\u0091',
  '\\u0092',
  '\\u0093',
  '\\u0094',
  '\\u0095',
  '\\u0096',
  '\\u0097',
  '\\u0098',
  '\\u0099',
  '\\u009A',
  '\\u009B',
  '\\u009C',
  '\\u009D',
  '\\u009E',
  '\\u009F',
];


/***/ }),

/***/ 8203:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.print = print;

var _blockString = __nccwpck_require__(4515);

var _printString = __nccwpck_require__(6011);

var _visitor = __nccwpck_require__(5678);

/**
 * Converts an AST into a string, using one set of reasonable
 * formatting rules.
 */
function print(ast) {
  return (0, _visitor.visit)(ast, printDocASTReducer);
}

const MAX_LINE_LENGTH = 80;
const printDocASTReducer = {
  Name: {
    leave: (node) => node.value,
  },
  Variable: {
    leave: (node) => '$' + node.name,
  },
  // Document
  Document: {
    leave: (node) => join(node.definitions, '\n\n'),
  },
  OperationDefinition: {
    leave(node) {
      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');
      const prefix = join(
        [
          node.operation,
          join([node.name, varDefs]),
          join(node.directives, ' '),
        ],
        ' ',
      ); // Anonymous queries with no directives or variable definitions can use
      // the query short form.

      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;
    },
  },
  VariableDefinition: {
    leave: ({ variable, type, defaultValue, directives }) =>
      variable +
      ': ' +
      type +
      wrap(' = ', defaultValue) +
      wrap(' ', join(directives, ' ')),
  },
  SelectionSet: {
    leave: ({ selections }) => block(selections),
  },
  Field: {
    leave({ alias, name, arguments: args, directives, selectionSet }) {
      const prefix = wrap('', alias, ': ') + name;
      let argsLine = prefix + wrap('(', join(args, ', '), ')');

      if (argsLine.length > MAX_LINE_LENGTH) {
        argsLine = prefix + wrap('(\n', indent(join(args, '\n')), '\n)');
      }

      return join([argsLine, join(directives, ' '), selectionSet], ' ');
    },
  },
  Argument: {
    leave: ({ name, value }) => name + ': ' + value,
  },
  // Fragments
  FragmentSpread: {
    leave: ({ name, directives }) =>
      '...' + name + wrap(' ', join(directives, ' ')),
  },
  InlineFragment: {
    leave: ({ typeCondition, directives, selectionSet }) =>
      join(
        [
          '...',
          wrap('on ', typeCondition),
          join(directives, ' '),
          selectionSet,
        ],
        ' ',
      ),
  },
  FragmentDefinition: {
    leave: (
      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed
    ) =>
      // or removed in the future.
      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +
      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +
      selectionSet,
  },
  // Value
  IntValue: {
    leave: ({ value }) => value,
  },
  FloatValue: {
    leave: ({ value }) => value,
  },
  StringValue: {
    leave: ({ value, block: isBlockString }) =>
      isBlockString
        ? (0, _blockString.printBlockString)(value)
        : (0, _printString.printString)(value),
  },
  BooleanValue: {
    leave: ({ value }) => (value ? 'true' : 'false'),
  },
  NullValue: {
    leave: () => 'null',
  },
  EnumValue: {
    leave: ({ value }) => value,
  },
  ListValue: {
    leave: ({ values }) => '[' + join(values, ', ') + ']',
  },
  ObjectValue: {
    leave: ({ fields }) => '{' + join(fields, ', ') + '}',
  },
  ObjectField: {
    leave: ({ name, value }) => name + ': ' + value,
  },
  // Directive
  Directive: {
    leave: ({ name, arguments: args }) =>
      '@' + name + wrap('(', join(args, ', '), ')'),
  },
  // Type
  NamedType: {
    leave: ({ name }) => name,
  },
  ListType: {
    leave: ({ type }) => '[' + type + ']',
  },
  NonNullType: {
    leave: ({ type }) => type + '!',
  },
  // Type System Definitions
  SchemaDefinition: {
    leave: ({ description, directives, operationTypes }) =>
      wrap('', description, '\n') +
      join(['schema', join(directives, ' '), block(operationTypes)], ' '),
  },
  OperationTypeDefinition: {
    leave: ({ operation, type }) => operation + ': ' + type,
  },
  ScalarTypeDefinition: {
    leave: ({ description, name, directives }) =>
      wrap('', description, '\n') +
      join(['scalar', name, join(directives, ' ')], ' '),
  },
  ObjectTypeDefinition: {
    leave: ({ description, name, interfaces, directives, fields }) =>
      wrap('', description, '\n') +
      join(
        [
          'type',
          name,
          wrap('implements ', join(interfaces, ' & ')),
          join(directives, ' '),
          block(fields),
        ],
        ' ',
      ),
  },
  FieldDefinition: {
    leave: ({ description, name, arguments: args, type, directives }) =>
      wrap('', description, '\n') +
      name +
      (hasMultilineItems(args)
        ? wrap('(\n', indent(join(args, '\n')), '\n)')
        : wrap('(', join(args, ', '), ')')) +
      ': ' +
      type +
      wrap(' ', join(directives, ' ')),
  },
  InputValueDefinition: {
    leave: ({ description, name, type, defaultValue, directives }) =>
      wrap('', description, '\n') +
      join(
        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],
        ' ',
      ),
  },
  InterfaceTypeDefinition: {
    leave: ({ description, name, interfaces, directives, fields }) =>
      wrap('', description, '\n') +
      join(
        [
          'interface',
          name,
          wrap('implements ', join(interfaces, ' & ')),
          join(directives, ' '),
          block(fields),
        ],
        ' ',
      ),
  },
  UnionTypeDefinition: {
    leave: ({ description, name, directives, types }) =>
      wrap('', description, '\n') +
      join(
        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],
        ' ',
      ),
  },
  EnumTypeDefinition: {
    leave: ({ description, name, directives, values }) =>
      wrap('', description, '\n') +
      join(['enum', name, join(directives, ' '), block(values)], ' '),
  },
  EnumValueDefinition: {
    leave: ({ description, name, directives }) =>
      wrap('', description, '\n') + join([name, join(directives, ' ')], ' '),
  },
  InputObjectTypeDefinition: {
    leave: ({ description, name, directives, fields }) =>
      wrap('', description, '\n') +
      join(['input', name, join(directives, ' '), block(fields)], ' '),
  },
  DirectiveDefinition: {
    leave: ({ description, name, arguments: args, repeatable, locations }) =>
      wrap('', description, '\n') +
      'directive @' +
      name +
      (hasMultilineItems(args)
        ? wrap('(\n', indent(join(args, '\n')), '\n)')
        : wrap('(', join(args, ', '), ')')) +
      (repeatable ? ' repeatable' : '') +
      ' on ' +
      join(locations, ' | '),
  },
  SchemaExtension: {
    leave: ({ directives, operationTypes }) =>
      join(
        ['extend schema', join(directives, ' '), block(operationTypes)],
        ' ',
      ),
  },
  ScalarTypeExtension: {
    leave: ({ name, directives }) =>
      join(['extend scalar', name, join(directives, ' ')], ' '),
  },
  ObjectTypeExtension: {
    leave: ({ name, interfaces, directives, fields }) =>
      join(
        [
          'extend type',
          name,
          wrap('implements ', join(interfaces, ' & ')),
          join(directives, ' '),
          block(fields),
        ],
        ' ',
      ),
  },
  InterfaceTypeExtension: {
    leave: ({ name, interfaces, directives, fields }) =>
      join(
        [
          'extend interface',
          name,
          wrap('implements ', join(interfaces, ' & ')),
          join(directives, ' '),
          block(fields),
        ],
        ' ',
      ),
  },
  UnionTypeExtension: {
    leave: ({ name, directives, types }) =>
      join(
        [
          'extend union',
          name,
          join(directives, ' '),
          wrap('= ', join(types, ' | ')),
        ],
        ' ',
      ),
  },
  EnumTypeExtension: {
    leave: ({ name, directives, values }) =>
      join(['extend enum', name, join(directives, ' '), block(values)], ' '),
  },
  InputObjectTypeExtension: {
    leave: ({ name, directives, fields }) =>
      join(['extend input', name, join(directives, ' '), block(fields)], ' '),
  },
};
/**
 * Given maybeArray, print an empty string if it is null or empty, otherwise
 * print all items together separated by separator if provided
 */

function join(maybeArray, separator = '') {
  var _maybeArray$filter$jo;

  return (_maybeArray$filter$jo =
    maybeArray === null || maybeArray === void 0
      ? void 0
      : maybeArray.filter((x) => x).join(separator)) !== null &&
    _maybeArray$filter$jo !== void 0
    ? _maybeArray$filter$jo
    : '';
}
/**
 * Given array, print each item on its own line, wrapped in an indented `{ }` block.
 */

function block(array) {
  return wrap('{\n', indent(join(array, '\n')), '\n}');
}
/**
 * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.
 */

function wrap(start, maybeString, end = '') {
  return maybeString != null && maybeString !== ''
    ? start + maybeString + end
    : '';
}

function indent(str) {
  return wrap('  ', str.replace(/\n/g, '\n  '));
}

function hasMultilineItems(maybeArray) {
  var _maybeArray$some;

  // FIXME: https://github.com/graphql/graphql-js/issues/2203

  /* c8 ignore next */
  return (_maybeArray$some =
    maybeArray === null || maybeArray === void 0
      ? void 0
      : maybeArray.some((str) => str.includes('\n'))) !== null &&
    _maybeArray$some !== void 0
    ? _maybeArray$some
    : false;
}


/***/ }),

/***/ 5521:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.Source = void 0;
exports.isSource = isSource;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _instanceOf = __nccwpck_require__(3481);

/**
 * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are
 * optional, but they are useful for clients who store GraphQL documents in source files.
 * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might
 * be useful for `name` to be `"Foo.graphql"` and location to be `{ line: 40, column: 1 }`.
 * The `line` and `column` properties in `locationOffset` are 1-indexed.
 */
class Source {
  constructor(
    body,
    name = 'GraphQL request',
    locationOffset = {
      line: 1,
      column: 1,
    },
  ) {
    typeof body === 'string' ||
      (0, _devAssert.devAssert)(
        false,
        `Body must be a string. Received: ${(0, _inspect.inspect)(body)}.`,
      );
    this.body = body;
    this.name = name;
    this.locationOffset = locationOffset;
    this.locationOffset.line > 0 ||
      (0, _devAssert.devAssert)(
        false,
        'line in locationOffset is 1-indexed and must be positive.',
      );
    this.locationOffset.column > 0 ||
      (0, _devAssert.devAssert)(
        false,
        'column in locationOffset is 1-indexed and must be positive.',
      );
  }

  get [Symbol.toStringTag]() {
    return 'Source';
  }
}
/**
 * Test if the given value is a Source object.
 *
 * @internal
 */

exports.Source = Source;

function isSource(source) {
  return (0, _instanceOf.instanceOf)(source, Source);
}


/***/ }),

/***/ 1565:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.TokenKind = void 0;

/**
 * An exported enum describing the different kinds of tokens that the
 * lexer emits.
 */
var TokenKind;
exports.TokenKind = TokenKind;

(function (TokenKind) {
  TokenKind['SOF'] = '<SOF>';
  TokenKind['EOF'] = '<EOF>';
  TokenKind['BANG'] = '!';
  TokenKind['DOLLAR'] = '$';
  TokenKind['AMP'] = '&';
  TokenKind['PAREN_L'] = '(';
  TokenKind['PAREN_R'] = ')';
  TokenKind['SPREAD'] = '...';
  TokenKind['COLON'] = ':';
  TokenKind['EQUALS'] = '=';
  TokenKind['AT'] = '@';
  TokenKind['BRACKET_L'] = '[';
  TokenKind['BRACKET_R'] = ']';
  TokenKind['BRACE_L'] = '{';
  TokenKind['PIPE'] = '|';
  TokenKind['BRACE_R'] = '}';
  TokenKind['NAME'] = 'Name';
  TokenKind['INT'] = 'Int';
  TokenKind['FLOAT'] = 'Float';
  TokenKind['STRING'] = 'String';
  TokenKind['BLOCK_STRING'] = 'BlockString';
  TokenKind['COMMENT'] = 'Comment';
})(TokenKind || (exports.TokenKind = TokenKind = {}));
/**
 * The enum type representing the token kinds values.
 *
 * @deprecated Please use `TokenKind`. Will be remove in v17.
 */


/***/ }),

/***/ 5678:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.BREAK = void 0;
exports.getEnterLeaveForKind = getEnterLeaveForKind;
exports.getVisitFn = getVisitFn;
exports.visit = visit;
exports.visitInParallel = visitInParallel;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _ast = __nccwpck_require__(5494);

var _kinds = __nccwpck_require__(1927);

const BREAK = Object.freeze({});
/**
 * visit() will walk through an AST using a depth-first traversal, calling
 * the visitor's enter function at each node in the traversal, and calling the
 * leave function after visiting that node and all of its child nodes.
 *
 * By returning different values from the enter and leave functions, the
 * behavior of the visitor can be altered, including skipping over a sub-tree of
 * the AST (by returning false), editing the AST by returning a value or null
 * to remove the value, or to stop the whole traversal by returning BREAK.
 *
 * When using visit() to edit an AST, the original AST will not be modified, and
 * a new version of the AST with the changes applied will be returned from the
 * visit function.
 *
 * ```ts
 * const editedAST = visit(ast, {
 *   enter(node, key, parent, path, ancestors) {
 *     // @return
 *     //   undefined: no action
 *     //   false: skip visiting this node
 *     //   visitor.BREAK: stop visiting altogether
 *     //   null: delete this node
 *     //   any value: replace this node with the returned value
 *   },
 *   leave(node, key, parent, path, ancestors) {
 *     // @return
 *     //   undefined: no action
 *     //   false: no action
 *     //   visitor.BREAK: stop visiting altogether
 *     //   null: delete this node
 *     //   any value: replace this node with the returned value
 *   }
 * });
 * ```
 *
 * Alternatively to providing enter() and leave() functions, a visitor can
 * instead provide functions named the same as the kinds of AST nodes, or
 * enter/leave visitors at a named key, leading to three permutations of the
 * visitor API:
 *
 * 1) Named visitors triggered when entering a node of a specific kind.
 *
 * ```ts
 * visit(ast, {
 *   Kind(node) {
 *     // enter the "Kind" node
 *   }
 * })
 * ```
 *
 * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.
 *
 * ```ts
 * visit(ast, {
 *   Kind: {
 *     enter(node) {
 *       // enter the "Kind" node
 *     }
 *     leave(node) {
 *       // leave the "Kind" node
 *     }
 *   }
 * })
 * ```
 *
 * 3) Generic visitors that trigger upon entering and leaving any node.
 *
 * ```ts
 * visit(ast, {
 *   enter(node) {
 *     // enter any node
 *   },
 *   leave(node) {
 *     // leave any node
 *   }
 * })
 * ```
 */

exports.BREAK = BREAK;

function visit(root, visitor, visitorKeys = _ast.QueryDocumentKeys) {
  const enterLeaveMap = new Map();

  for (const kind of Object.values(_kinds.Kind)) {
    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));
  }
  /* eslint-disable no-undef-init */

  let stack = undefined;
  let inArray = Array.isArray(root);
  let keys = [root];
  let index = -1;
  let edits = [];
  let node = root;
  let key = undefined;
  let parent = undefined;
  const path = [];
  const ancestors = [];
  /* eslint-enable no-undef-init */

  do {
    index++;
    const isLeaving = index === keys.length;
    const isEdited = isLeaving && edits.length !== 0;

    if (isLeaving) {
      key = ancestors.length === 0 ? undefined : path[path.length - 1];
      node = parent;
      parent = ancestors.pop();

      if (isEdited) {
        if (inArray) {
          node = node.slice();
          let editOffset = 0;

          for (const [editKey, editValue] of edits) {
            const arrayKey = editKey - editOffset;

            if (editValue === null) {
              node.splice(arrayKey, 1);
              editOffset++;
            } else {
              node[arrayKey] = editValue;
            }
          }
        } else {
          node = Object.defineProperties(
            {},
            Object.getOwnPropertyDescriptors(node),
          );

          for (const [editKey, editValue] of edits) {
            node[editKey] = editValue;
          }
        }
      }

      index = stack.index;
      keys = stack.keys;
      edits = stack.edits;
      inArray = stack.inArray;
      stack = stack.prev;
    } else if (parent) {
      key = inArray ? index : keys[index];
      node = parent[key];

      if (node === null || node === undefined) {
        continue;
      }

      path.push(key);
    }

    let result;

    if (!Array.isArray(node)) {
      var _enterLeaveMap$get, _enterLeaveMap$get2;

      (0, _ast.isNode)(node) ||
        (0, _devAssert.devAssert)(
          false,
          `Invalid AST Node: ${(0, _inspect.inspect)(node)}.`,
        );
      const visitFn = isLeaving
        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||
          _enterLeaveMap$get === void 0
          ? void 0
          : _enterLeaveMap$get.leave
        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||
          _enterLeaveMap$get2 === void 0
        ? void 0
        : _enterLeaveMap$get2.enter;
      result =
        visitFn === null || visitFn === void 0
          ? void 0
          : visitFn.call(visitor, node, key, parent, path, ancestors);

      if (result === BREAK) {
        break;
      }

      if (result === false) {
        if (!isLeaving) {
          path.pop();
          continue;
        }
      } else if (result !== undefined) {
        edits.push([key, result]);

        if (!isLeaving) {
          if ((0, _ast.isNode)(result)) {
            node = result;
          } else {
            path.pop();
            continue;
          }
        }
      }
    }

    if (result === undefined && isEdited) {
      edits.push([key, node]);
    }

    if (isLeaving) {
      path.pop();
    } else {
      var _node$kind;

      stack = {
        inArray,
        index,
        keys,
        edits,
        prev: stack,
      };
      inArray = Array.isArray(node);
      keys = inArray
        ? node
        : (_node$kind = visitorKeys[node.kind]) !== null &&
          _node$kind !== void 0
        ? _node$kind
        : [];
      index = -1;
      edits = [];

      if (parent) {
        ancestors.push(parent);
      }

      parent = node;
    }
  } while (stack !== undefined);

  if (edits.length !== 0) {
    // New root
    return edits[edits.length - 1][1];
  }

  return root;
}
/**
 * Creates a new visitor instance which delegates to many visitors to run in
 * parallel. Each visitor will be visited for each node before moving on.
 *
 * If a prior visitor edits a node, no following visitors will see that node.
 */

function visitInParallel(visitors) {
  const skipping = new Array(visitors.length).fill(null);
  const mergedVisitor = Object.create(null);

  for (const kind of Object.values(_kinds.Kind)) {
    let hasVisitor = false;
    const enterList = new Array(visitors.length).fill(undefined);
    const leaveList = new Array(visitors.length).fill(undefined);

    for (let i = 0; i < visitors.length; ++i) {
      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);
      hasVisitor || (hasVisitor = enter != null || leave != null);
      enterList[i] = enter;
      leaveList[i] = leave;
    }

    if (!hasVisitor) {
      continue;
    }

    const mergedEnterLeave = {
      enter(...args) {
        const node = args[0];

        for (let i = 0; i < visitors.length; i++) {
          if (skipping[i] === null) {
            var _enterList$i;

            const result =
              (_enterList$i = enterList[i]) === null || _enterList$i === void 0
                ? void 0
                : _enterList$i.apply(visitors[i], args);

            if (result === false) {
              skipping[i] = node;
            } else if (result === BREAK) {
              skipping[i] = BREAK;
            } else if (result !== undefined) {
              return result;
            }
          }
        }
      },

      leave(...args) {
        const node = args[0];

        for (let i = 0; i < visitors.length; i++) {
          if (skipping[i] === null) {
            var _leaveList$i;

            const result =
              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0
                ? void 0
                : _leaveList$i.apply(visitors[i], args);

            if (result === BREAK) {
              skipping[i] = BREAK;
            } else if (result !== undefined && result !== false) {
              return result;
            }
          } else if (skipping[i] === node) {
            skipping[i] = null;
          }
        }
      },
    };
    mergedVisitor[kind] = mergedEnterLeave;
  }

  return mergedVisitor;
}
/**
 * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.
 */

function getEnterLeaveForKind(visitor, kind) {
  const kindVisitor = visitor[kind];

  if (typeof kindVisitor === 'object') {
    // { Kind: { enter() {}, leave() {} } }
    return kindVisitor;
  } else if (typeof kindVisitor === 'function') {
    // { Kind() {} }
    return {
      enter: kindVisitor,
      leave: undefined,
    };
  } // { enter() {}, leave() {} }

  return {
    enter: visitor.enter,
    leave: visitor.leave,
  };
}
/**
 * Given a visitor instance, if it is leaving or not, and a node kind, return
 * the function the visitor runtime should call.
 *
 * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17
 */

/* c8 ignore next 8 */

function getVisitFn(visitor, kind, isLeaving) {
  const { enter, leave } = getEnterLeaveForKind(visitor, kind);
  return isLeaving ? leave : enter;
}


/***/ }),

/***/ 4947:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.assertEnumValueName = assertEnumValueName;
exports.assertName = assertName;

var _devAssert = __nccwpck_require__(6514);

var _GraphQLError = __nccwpck_require__(4797);

var _characterClasses = __nccwpck_require__(7234);

/**
 * Upholds the spec rules about naming.
 */
function assertName(name) {
  name != null || (0, _devAssert.devAssert)(false, 'Must provide name.');
  typeof name === 'string' ||
    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');

  if (name.length === 0) {
    throw new _GraphQLError.GraphQLError(
      'Expected name to be a non-empty string.',
    );
  }

  for (let i = 1; i < name.length; ++i) {
    if (!(0, _characterClasses.isNameContinue)(name.charCodeAt(i))) {
      throw new _GraphQLError.GraphQLError(
        `Names must only contain [_a-zA-Z0-9] but "${name}" does not.`,
      );
    }
  }

  if (!(0, _characterClasses.isNameStart)(name.charCodeAt(0))) {
    throw new _GraphQLError.GraphQLError(
      `Names must start with [_a-zA-Z] but "${name}" does not.`,
    );
  }

  return name;
}
/**
 * Upholds the spec rules about naming enum values.
 *
 * @internal
 */

function assertEnumValueName(name) {
  if (name === 'true' || name === 'false' || name === 'null') {
    throw new _GraphQLError.GraphQLError(
      `Enum values cannot be named: ${name}`,
    );
  }

  return assertName(name);
}


/***/ }),

/***/ 5821:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.GraphQLUnionType =
  exports.GraphQLScalarType =
  exports.GraphQLObjectType =
  exports.GraphQLNonNull =
  exports.GraphQLList =
  exports.GraphQLInterfaceType =
  exports.GraphQLInputObjectType =
  exports.GraphQLEnumType =
    void 0;
exports.argsToArgsConfig = argsToArgsConfig;
exports.assertAbstractType = assertAbstractType;
exports.assertCompositeType = assertCompositeType;
exports.assertEnumType = assertEnumType;
exports.assertInputObjectType = assertInputObjectType;
exports.assertInputType = assertInputType;
exports.assertInterfaceType = assertInterfaceType;
exports.assertLeafType = assertLeafType;
exports.assertListType = assertListType;
exports.assertNamedType = assertNamedType;
exports.assertNonNullType = assertNonNullType;
exports.assertNullableType = assertNullableType;
exports.assertObjectType = assertObjectType;
exports.assertOutputType = assertOutputType;
exports.assertScalarType = assertScalarType;
exports.assertType = assertType;
exports.assertUnionType = assertUnionType;
exports.assertWrappingType = assertWrappingType;
exports.defineArguments = defineArguments;
exports.getNamedType = getNamedType;
exports.getNullableType = getNullableType;
exports.isAbstractType = isAbstractType;
exports.isCompositeType = isCompositeType;
exports.isEnumType = isEnumType;
exports.isInputObjectType = isInputObjectType;
exports.isInputType = isInputType;
exports.isInterfaceType = isInterfaceType;
exports.isLeafType = isLeafType;
exports.isListType = isListType;
exports.isNamedType = isNamedType;
exports.isNonNullType = isNonNullType;
exports.isNullableType = isNullableType;
exports.isObjectType = isObjectType;
exports.isOutputType = isOutputType;
exports.isRequiredArgument = isRequiredArgument;
exports.isRequiredInputField = isRequiredInputField;
exports.isScalarType = isScalarType;
exports.isType = isType;
exports.isUnionType = isUnionType;
exports.isWrappingType = isWrappingType;
exports.resolveObjMapThunk = resolveObjMapThunk;
exports.resolveReadonlyArrayThunk = resolveReadonlyArrayThunk;

var _devAssert = __nccwpck_require__(6514);

var _didYouMean = __nccwpck_require__(2878);

var _identityFunc = __nccwpck_require__(1188);

var _inspect = __nccwpck_require__(102);

var _instanceOf = __nccwpck_require__(3481);

var _isObjectLike = __nccwpck_require__(5865);

var _keyMap = __nccwpck_require__(711);

var _keyValMap = __nccwpck_require__(9268);

var _mapValue = __nccwpck_require__(2223);

var _suggestionList = __nccwpck_require__(7704);

var _toObjMap = __nccwpck_require__(4728);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _printer = __nccwpck_require__(8203);

var _valueFromASTUntyped = __nccwpck_require__(6699);

var _assertName = __nccwpck_require__(4947);

function isType(type) {
  return (
    isScalarType(type) ||
    isObjectType(type) ||
    isInterfaceType(type) ||
    isUnionType(type) ||
    isEnumType(type) ||
    isInputObjectType(type) ||
    isListType(type) ||
    isNonNullType(type)
  );
}

function assertType(type) {
  if (!isType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL type.`,
    );
  }

  return type;
}
/**
 * There are predicates for each kind of GraphQL type.
 */

function isScalarType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLScalarType);
}

function assertScalarType(type) {
  if (!isScalarType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Scalar type.`,
    );
  }

  return type;
}

function isObjectType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLObjectType);
}

function assertObjectType(type) {
  if (!isObjectType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Object type.`,
    );
  }

  return type;
}

function isInterfaceType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLInterfaceType);
}

function assertInterfaceType(type) {
  if (!isInterfaceType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Interface type.`,
    );
  }

  return type;
}

function isUnionType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLUnionType);
}

function assertUnionType(type) {
  if (!isUnionType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Union type.`,
    );
  }

  return type;
}

function isEnumType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLEnumType);
}

function assertEnumType(type) {
  if (!isEnumType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Enum type.`,
    );
  }

  return type;
}

function isInputObjectType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLInputObjectType);
}

function assertInputObjectType(type) {
  if (!isInputObjectType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(
        type,
      )} to be a GraphQL Input Object type.`,
    );
  }

  return type;
}

function isListType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLList);
}

function assertListType(type) {
  if (!isListType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL List type.`,
    );
  }

  return type;
}

function isNonNullType(type) {
  return (0, _instanceOf.instanceOf)(type, GraphQLNonNull);
}

function assertNonNullType(type) {
  if (!isNonNullType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL Non-Null type.`,
    );
  }

  return type;
}
/**
 * These types may be used as input types for arguments and directives.
 */

function isInputType(type) {
  return (
    isScalarType(type) ||
    isEnumType(type) ||
    isInputObjectType(type) ||
    (isWrappingType(type) && isInputType(type.ofType))
  );
}

function assertInputType(type) {
  if (!isInputType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL input type.`,
    );
  }

  return type;
}
/**
 * These types may be used as output types as the result of fields.
 */

function isOutputType(type) {
  return (
    isScalarType(type) ||
    isObjectType(type) ||
    isInterfaceType(type) ||
    isUnionType(type) ||
    isEnumType(type) ||
    (isWrappingType(type) && isOutputType(type.ofType))
  );
}

function assertOutputType(type) {
  if (!isOutputType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL output type.`,
    );
  }

  return type;
}
/**
 * These types may describe types which may be leaf values.
 */

function isLeafType(type) {
  return isScalarType(type) || isEnumType(type);
}

function assertLeafType(type) {
  if (!isLeafType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL leaf type.`,
    );
  }

  return type;
}
/**
 * These types may describe the parent context of a selection set.
 */

function isCompositeType(type) {
  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);
}

function assertCompositeType(type) {
  if (!isCompositeType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL composite type.`,
    );
  }

  return type;
}
/**
 * These types may describe the parent context of a selection set.
 */

function isAbstractType(type) {
  return isInterfaceType(type) || isUnionType(type);
}

function assertAbstractType(type) {
  if (!isAbstractType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL abstract type.`,
    );
  }

  return type;
}
/**
 * List Type Wrapper
 *
 * A list is a wrapping type which points to another type.
 * Lists are often created within the context of defining the fields of
 * an object type.
 *
 * Example:
 *
 * ```ts
 * const PersonType = new GraphQLObjectType({
 *   name: 'Person',
 *   fields: () => ({
 *     parents: { type: new GraphQLList(PersonType) },
 *     children: { type: new GraphQLList(PersonType) },
 *   })
 * })
 * ```
 */

class GraphQLList {
  constructor(ofType) {
    isType(ofType) ||
      (0, _devAssert.devAssert)(
        false,
        `Expected ${(0, _inspect.inspect)(ofType)} to be a GraphQL type.`,
      );
    this.ofType = ofType;
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLList';
  }

  toString() {
    return '[' + String(this.ofType) + ']';
  }

  toJSON() {
    return this.toString();
  }
}
/**
 * Non-Null Type Wrapper
 *
 * A non-null is a wrapping type which points to another type.
 * Non-null types enforce that their values are never null and can ensure
 * an error is raised if this ever occurs during a request. It is useful for
 * fields which you can make a strong guarantee on non-nullability, for example
 * usually the id field of a database row will never be null.
 *
 * Example:
 *
 * ```ts
 * const RowType = new GraphQLObjectType({
 *   name: 'Row',
 *   fields: () => ({
 *     id: { type: new GraphQLNonNull(GraphQLString) },
 *   })
 * })
 * ```
 * Note: the enforcement of non-nullability occurs within the executor.
 */

exports.GraphQLList = GraphQLList;

class GraphQLNonNull {
  constructor(ofType) {
    isNullableType(ofType) ||
      (0, _devAssert.devAssert)(
        false,
        `Expected ${(0, _inspect.inspect)(
          ofType,
        )} to be a GraphQL nullable type.`,
      );
    this.ofType = ofType;
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLNonNull';
  }

  toString() {
    return String(this.ofType) + '!';
  }

  toJSON() {
    return this.toString();
  }
}
/**
 * These types wrap and modify other types
 */

exports.GraphQLNonNull = GraphQLNonNull;

function isWrappingType(type) {
  return isListType(type) || isNonNullType(type);
}

function assertWrappingType(type) {
  if (!isWrappingType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL wrapping type.`,
    );
  }

  return type;
}
/**
 * These types can all accept null as a value.
 */

function isNullableType(type) {
  return isType(type) && !isNonNullType(type);
}

function assertNullableType(type) {
  if (!isNullableType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL nullable type.`,
    );
  }

  return type;
}

function getNullableType(type) {
  if (type) {
    return isNonNullType(type) ? type.ofType : type;
  }
}
/**
 * These named types do not include modifiers like List or NonNull.
 */

function isNamedType(type) {
  return (
    isScalarType(type) ||
    isObjectType(type) ||
    isInterfaceType(type) ||
    isUnionType(type) ||
    isEnumType(type) ||
    isInputObjectType(type)
  );
}

function assertNamedType(type) {
  if (!isNamedType(type)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(type)} to be a GraphQL named type.`,
    );
  }

  return type;
}

function getNamedType(type) {
  if (type) {
    let unwrappedType = type;

    while (isWrappingType(unwrappedType)) {
      unwrappedType = unwrappedType.ofType;
    }

    return unwrappedType;
  }
}
/**
 * Used while defining GraphQL types to allow for circular references in
 * otherwise immutable type definitions.
 */

function resolveReadonlyArrayThunk(thunk) {
  return typeof thunk === 'function' ? thunk() : thunk;
}

function resolveObjMapThunk(thunk) {
  return typeof thunk === 'function' ? thunk() : thunk;
}
/**
 * Custom extensions
 *
 * @remarks
 * Use a unique identifier name for your extension, for example the name of
 * your library or project. Do not use a shortened identifier as this increases
 * the risk of conflicts. We recommend you add at most one extension field,
 * an object which can contain all the values you need.
 */

/**
 * Scalar Type Definition
 *
 * The leaf values of any request and input values to arguments are
 * Scalars (or Enums) and are defined with a name and a series of functions
 * used to parse input from ast or variables and to ensure validity.
 *
 * If a type's serialize function returns `null` or does not return a value
 * (i.e. it returns `undefined`) then an error will be raised and a `null`
 * value will be returned in the response. It is always better to validate
 *
 * Example:
 *
 * ```ts
 * const OddType = new GraphQLScalarType({
 *   name: 'Odd',
 *   serialize(value) {
 *     if (!Number.isFinite(value)) {
 *       throw new Error(
 *         `Scalar "Odd" cannot represent "${value}" since it is not a finite number.`,
 *       );
 *     }
 *
 *     if (value % 2 === 0) {
 *       throw new Error(`Scalar "Odd" cannot represent "${value}" since it is even.`);
 *     }
 *     return value;
 *   }
 * });
 * ```
 */
class GraphQLScalarType {
  constructor(config) {
    var _config$parseValue,
      _config$serialize,
      _config$parseLiteral,
      _config$extensionASTN;

    const parseValue =
      (_config$parseValue = config.parseValue) !== null &&
      _config$parseValue !== void 0
        ? _config$parseValue
        : _identityFunc.identityFunc;
    this.name = (0, _assertName.assertName)(config.name);
    this.description = config.description;
    this.specifiedByURL = config.specifiedByURL;
    this.serialize =
      (_config$serialize = config.serialize) !== null &&
      _config$serialize !== void 0
        ? _config$serialize
        : _identityFunc.identityFunc;
    this.parseValue = parseValue;
    this.parseLiteral =
      (_config$parseLiteral = config.parseLiteral) !== null &&
      _config$parseLiteral !== void 0
        ? _config$parseLiteral
        : (node, variables) =>
            parseValue(
              (0, _valueFromASTUntyped.valueFromASTUntyped)(node, variables),
            );
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    this.extensionASTNodes =
      (_config$extensionASTN = config.extensionASTNodes) !== null &&
      _config$extensionASTN !== void 0
        ? _config$extensionASTN
        : [];
    config.specifiedByURL == null ||
      typeof config.specifiedByURL === 'string' ||
      (0, _devAssert.devAssert)(
        false,
        `${this.name} must provide "specifiedByURL" as a string, ` +
          `but got: ${(0, _inspect.inspect)(config.specifiedByURL)}.`,
      );
    config.serialize == null ||
      typeof config.serialize === 'function' ||
      (0, _devAssert.devAssert)(
        false,
        `${this.name} must provide "serialize" function. If this custom Scalar is also used as an input type, ensure "parseValue" and "parseLiteral" functions are also provided.`,
      );

    if (config.parseLiteral) {
      (typeof config.parseValue === 'function' &&
        typeof config.parseLiteral === 'function') ||
        (0, _devAssert.devAssert)(
          false,
          `${this.name} must provide both "parseValue" and "parseLiteral" functions.`,
        );
    }
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLScalarType';
  }

  toConfig() {
    return {
      name: this.name,
      description: this.description,
      specifiedByURL: this.specifiedByURL,
      serialize: this.serialize,
      parseValue: this.parseValue,
      parseLiteral: this.parseLiteral,
      extensions: this.extensions,
      astNode: this.astNode,
      extensionASTNodes: this.extensionASTNodes,
    };
  }

  toString() {
    return this.name;
  }

  toJSON() {
    return this.toString();
  }
}

exports.GraphQLScalarType = GraphQLScalarType;

/**
 * Object Type Definition
 *
 * Almost all of the GraphQL types you define will be object types. Object types
 * have a name, but most importantly describe their fields.
 *
 * Example:
 *
 * ```ts
 * const AddressType = new GraphQLObjectType({
 *   name: 'Address',
 *   fields: {
 *     street: { type: GraphQLString },
 *     number: { type: GraphQLInt },
 *     formatted: {
 *       type: GraphQLString,
 *       resolve(obj) {
 *         return obj.number + ' ' + obj.street
 *       }
 *     }
 *   }
 * });
 * ```
 *
 * When two types need to refer to each other, or a type needs to refer to
 * itself in a field, you can use a function expression (aka a closure or a
 * thunk) to supply the fields lazily.
 *
 * Example:
 *
 * ```ts
 * const PersonType = new GraphQLObjectType({
 *   name: 'Person',
 *   fields: () => ({
 *     name: { type: GraphQLString },
 *     bestFriend: { type: PersonType },
 *   })
 * });
 * ```
 */
class GraphQLObjectType {
  constructor(config) {
    var _config$extensionASTN2;

    this.name = (0, _assertName.assertName)(config.name);
    this.description = config.description;
    this.isTypeOf = config.isTypeOf;
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    this.extensionASTNodes =
      (_config$extensionASTN2 = config.extensionASTNodes) !== null &&
      _config$extensionASTN2 !== void 0
        ? _config$extensionASTN2
        : [];

    this._fields = () => defineFieldMap(config);

    this._interfaces = () => defineInterfaces(config);

    config.isTypeOf == null ||
      typeof config.isTypeOf === 'function' ||
      (0, _devAssert.devAssert)(
        false,
        `${this.name} must provide "isTypeOf" as a function, ` +
          `but got: ${(0, _inspect.inspect)(config.isTypeOf)}.`,
      );
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLObjectType';
  }

  getFields() {
    if (typeof this._fields === 'function') {
      this._fields = this._fields();
    }

    return this._fields;
  }

  getInterfaces() {
    if (typeof this._interfaces === 'function') {
      this._interfaces = this._interfaces();
    }

    return this._interfaces;
  }

  toConfig() {
    return {
      name: this.name,
      description: this.description,
      interfaces: this.getInterfaces(),
      fields: fieldsToFieldsConfig(this.getFields()),
      isTypeOf: this.isTypeOf,
      extensions: this.extensions,
      astNode: this.astNode,
      extensionASTNodes: this.extensionASTNodes,
    };
  }

  toString() {
    return this.name;
  }

  toJSON() {
    return this.toString();
  }
}

exports.GraphQLObjectType = GraphQLObjectType;

function defineInterfaces(config) {
  var _config$interfaces;

  const interfaces = resolveReadonlyArrayThunk(
    (_config$interfaces = config.interfaces) !== null &&
      _config$interfaces !== void 0
      ? _config$interfaces
      : [],
  );
  Array.isArray(interfaces) ||
    (0, _devAssert.devAssert)(
      false,
      `${config.name} interfaces must be an Array or a function which returns an Array.`,
    );
  return interfaces;
}

function defineFieldMap(config) {
  const fieldMap = resolveObjMapThunk(config.fields);
  isPlainObj(fieldMap) ||
    (0, _devAssert.devAssert)(
      false,
      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,
    );
  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {
    var _fieldConfig$args;

    isPlainObj(fieldConfig) ||
      (0, _devAssert.devAssert)(
        false,
        `${config.name}.${fieldName} field config must be an object.`,
      );
    fieldConfig.resolve == null ||
      typeof fieldConfig.resolve === 'function' ||
      (0, _devAssert.devAssert)(
        false,
        `${config.name}.${fieldName} field resolver must be a function if ` +
          `provided, but got: ${(0, _inspect.inspect)(fieldConfig.resolve)}.`,
      );
    const argsConfig =
      (_fieldConfig$args = fieldConfig.args) !== null &&
      _fieldConfig$args !== void 0
        ? _fieldConfig$args
        : {};
    isPlainObj(argsConfig) ||
      (0, _devAssert.devAssert)(
        false,
        `${config.name}.${fieldName} args must be an object with argument names as keys.`,
      );
    return {
      name: (0, _assertName.assertName)(fieldName),
      description: fieldConfig.description,
      type: fieldConfig.type,
      args: defineArguments(argsConfig),
      resolve: fieldConfig.resolve,
      subscribe: fieldConfig.subscribe,
      deprecationReason: fieldConfig.deprecationReason,
      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),
      astNode: fieldConfig.astNode,
    };
  });
}

function defineArguments(config) {
  return Object.entries(config).map(([argName, argConfig]) => ({
    name: (0, _assertName.assertName)(argName),
    description: argConfig.description,
    type: argConfig.type,
    defaultValue: argConfig.defaultValue,
    deprecationReason: argConfig.deprecationReason,
    extensions: (0, _toObjMap.toObjMap)(argConfig.extensions),
    astNode: argConfig.astNode,
  }));
}

function isPlainObj(obj) {
  return (0, _isObjectLike.isObjectLike)(obj) && !Array.isArray(obj);
}

function fieldsToFieldsConfig(fields) {
  return (0, _mapValue.mapValue)(fields, (field) => ({
    description: field.description,
    type: field.type,
    args: argsToArgsConfig(field.args),
    resolve: field.resolve,
    subscribe: field.subscribe,
    deprecationReason: field.deprecationReason,
    extensions: field.extensions,
    astNode: field.astNode,
  }));
}
/**
 * @internal
 */

function argsToArgsConfig(args) {
  return (0, _keyValMap.keyValMap)(
    args,
    (arg) => arg.name,
    (arg) => ({
      description: arg.description,
      type: arg.type,
      defaultValue: arg.defaultValue,
      deprecationReason: arg.deprecationReason,
      extensions: arg.extensions,
      astNode: arg.astNode,
    }),
  );
}

function isRequiredArgument(arg) {
  return isNonNullType(arg.type) && arg.defaultValue === undefined;
}

/**
 * Interface Type Definition
 *
 * When a field can return one of a heterogeneous set of types, a Interface type
 * is used to describe what types are possible, what fields are in common across
 * all types, as well as a function to determine which type is actually used
 * when the field is resolved.
 *
 * Example:
 *
 * ```ts
 * const EntityType = new GraphQLInterfaceType({
 *   name: 'Entity',
 *   fields: {
 *     name: { type: GraphQLString }
 *   }
 * });
 * ```
 */
class GraphQLInterfaceType {
  constructor(config) {
    var _config$extensionASTN3;

    this.name = (0, _assertName.assertName)(config.name);
    this.description = config.description;
    this.resolveType = config.resolveType;
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    this.extensionASTNodes =
      (_config$extensionASTN3 = config.extensionASTNodes) !== null &&
      _config$extensionASTN3 !== void 0
        ? _config$extensionASTN3
        : [];
    this._fields = defineFieldMap.bind(undefined, config);
    this._interfaces = defineInterfaces.bind(undefined, config);
    config.resolveType == null ||
      typeof config.resolveType === 'function' ||
      (0, _devAssert.devAssert)(
        false,
        `${this.name} must provide "resolveType" as a function, ` +
          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,
      );
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLInterfaceType';
  }

  getFields() {
    if (typeof this._fields === 'function') {
      this._fields = this._fields();
    }

    return this._fields;
  }

  getInterfaces() {
    if (typeof this._interfaces === 'function') {
      this._interfaces = this._interfaces();
    }

    return this._interfaces;
  }

  toConfig() {
    return {
      name: this.name,
      description: this.description,
      interfaces: this.getInterfaces(),
      fields: fieldsToFieldsConfig(this.getFields()),
      resolveType: this.resolveType,
      extensions: this.extensions,
      astNode: this.astNode,
      extensionASTNodes: this.extensionASTNodes,
    };
  }

  toString() {
    return this.name;
  }

  toJSON() {
    return this.toString();
  }
}

exports.GraphQLInterfaceType = GraphQLInterfaceType;

/**
 * Union Type Definition
 *
 * When a field can return one of a heterogeneous set of types, a Union type
 * is used to describe what types are possible as well as providing a function
 * to determine which type is actually used when the field is resolved.
 *
 * Example:
 *
 * ```ts
 * const PetType = new GraphQLUnionType({
 *   name: 'Pet',
 *   types: [ DogType, CatType ],
 *   resolveType(value) {
 *     if (value instanceof Dog) {
 *       return DogType;
 *     }
 *     if (value instanceof Cat) {
 *       return CatType;
 *     }
 *   }
 * });
 * ```
 */
class GraphQLUnionType {
  constructor(config) {
    var _config$extensionASTN4;

    this.name = (0, _assertName.assertName)(config.name);
    this.description = config.description;
    this.resolveType = config.resolveType;
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    this.extensionASTNodes =
      (_config$extensionASTN4 = config.extensionASTNodes) !== null &&
      _config$extensionASTN4 !== void 0
        ? _config$extensionASTN4
        : [];
    this._types = defineTypes.bind(undefined, config);
    config.resolveType == null ||
      typeof config.resolveType === 'function' ||
      (0, _devAssert.devAssert)(
        false,
        `${this.name} must provide "resolveType" as a function, ` +
          `but got: ${(0, _inspect.inspect)(config.resolveType)}.`,
      );
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLUnionType';
  }

  getTypes() {
    if (typeof this._types === 'function') {
      this._types = this._types();
    }

    return this._types;
  }

  toConfig() {
    return {
      name: this.name,
      description: this.description,
      types: this.getTypes(),
      resolveType: this.resolveType,
      extensions: this.extensions,
      astNode: this.astNode,
      extensionASTNodes: this.extensionASTNodes,
    };
  }

  toString() {
    return this.name;
  }

  toJSON() {
    return this.toString();
  }
}

exports.GraphQLUnionType = GraphQLUnionType;

function defineTypes(config) {
  const types = resolveReadonlyArrayThunk(config.types);
  Array.isArray(types) ||
    (0, _devAssert.devAssert)(
      false,
      `Must provide Array of types or a function which returns such an array for Union ${config.name}.`,
    );
  return types;
}

/**
 * Enum Type Definition
 *
 * Some leaf values of requests and input values are Enums. GraphQL serializes
 * Enum values as strings, however internally Enums can be represented by any
 * kind of type, often integers.
 *
 * Example:
 *
 * ```ts
 * const RGBType = new GraphQLEnumType({
 *   name: 'RGB',
 *   values: {
 *     RED: { value: 0 },
 *     GREEN: { value: 1 },
 *     BLUE: { value: 2 }
 *   }
 * });
 * ```
 *
 * Note: If a value is not provided in a definition, the name of the enum value
 * will be used as its internal value.
 */
class GraphQLEnumType {
  /* <T> */
  constructor(config) {
    var _config$extensionASTN5;

    this.name = (0, _assertName.assertName)(config.name);
    this.description = config.description;
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    this.extensionASTNodes =
      (_config$extensionASTN5 = config.extensionASTNodes) !== null &&
      _config$extensionASTN5 !== void 0
        ? _config$extensionASTN5
        : [];
    this._values = defineEnumValues(this.name, config.values);
    this._valueLookup = new Map(
      this._values.map((enumValue) => [enumValue.value, enumValue]),
    );
    this._nameLookup = (0, _keyMap.keyMap)(this._values, (value) => value.name);
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLEnumType';
  }

  getValues() {
    return this._values;
  }

  getValue(name) {
    return this._nameLookup[name];
  }

  serialize(outputValue) {
    const enumValue = this._valueLookup.get(outputValue);

    if (enumValue === undefined) {
      throw new _GraphQLError.GraphQLError(
        `Enum "${this.name}" cannot represent value: ${(0, _inspect.inspect)(
          outputValue,
        )}`,
      );
    }

    return enumValue.name;
  }

  parseValue(inputValue) /* T */
  {
    if (typeof inputValue !== 'string') {
      const valueStr = (0, _inspect.inspect)(inputValue);
      throw new _GraphQLError.GraphQLError(
        `Enum "${this.name}" cannot represent non-string value: ${valueStr}.` +
          didYouMeanEnumValue(this, valueStr),
      );
    }

    const enumValue = this.getValue(inputValue);

    if (enumValue == null) {
      throw new _GraphQLError.GraphQLError(
        `Value "${inputValue}" does not exist in "${this.name}" enum.` +
          didYouMeanEnumValue(this, inputValue),
      );
    }

    return enumValue.value;
  }

  parseLiteral(valueNode, _variables) /* T */
  {
    // Note: variables will be resolved to a value before calling this function.
    if (valueNode.kind !== _kinds.Kind.ENUM) {
      const valueStr = (0, _printer.print)(valueNode);
      throw new _GraphQLError.GraphQLError(
        `Enum "${this.name}" cannot represent non-enum value: ${valueStr}.` +
          didYouMeanEnumValue(this, valueStr),
        {
          nodes: valueNode,
        },
      );
    }

    const enumValue = this.getValue(valueNode.value);

    if (enumValue == null) {
      const valueStr = (0, _printer.print)(valueNode);
      throw new _GraphQLError.GraphQLError(
        `Value "${valueStr}" does not exist in "${this.name}" enum.` +
          didYouMeanEnumValue(this, valueStr),
        {
          nodes: valueNode,
        },
      );
    }

    return enumValue.value;
  }

  toConfig() {
    const values = (0, _keyValMap.keyValMap)(
      this.getValues(),
      (value) => value.name,
      (value) => ({
        description: value.description,
        value: value.value,
        deprecationReason: value.deprecationReason,
        extensions: value.extensions,
        astNode: value.astNode,
      }),
    );
    return {
      name: this.name,
      description: this.description,
      values,
      extensions: this.extensions,
      astNode: this.astNode,
      extensionASTNodes: this.extensionASTNodes,
    };
  }

  toString() {
    return this.name;
  }

  toJSON() {
    return this.toString();
  }
}

exports.GraphQLEnumType = GraphQLEnumType;

function didYouMeanEnumValue(enumType, unknownValueStr) {
  const allNames = enumType.getValues().map((value) => value.name);
  const suggestedValues = (0, _suggestionList.suggestionList)(
    unknownValueStr,
    allNames,
  );
  return (0, _didYouMean.didYouMean)('the enum value', suggestedValues);
}

function defineEnumValues(typeName, valueMap) {
  isPlainObj(valueMap) ||
    (0, _devAssert.devAssert)(
      false,
      `${typeName} values must be an object with value names as keys.`,
    );
  return Object.entries(valueMap).map(([valueName, valueConfig]) => {
    isPlainObj(valueConfig) ||
      (0, _devAssert.devAssert)(
        false,
        `${typeName}.${valueName} must refer to an object with a "value" key ` +
          `representing an internal value but got: ${(0, _inspect.inspect)(
            valueConfig,
          )}.`,
      );
    return {
      name: (0, _assertName.assertEnumValueName)(valueName),
      description: valueConfig.description,
      value: valueConfig.value !== undefined ? valueConfig.value : valueName,
      deprecationReason: valueConfig.deprecationReason,
      extensions: (0, _toObjMap.toObjMap)(valueConfig.extensions),
      astNode: valueConfig.astNode,
    };
  });
}

/**
 * Input Object Type Definition
 *
 * An input object defines a structured collection of fields which may be
 * supplied to a field argument.
 *
 * Using `NonNull` will ensure that a value must be provided by the query
 *
 * Example:
 *
 * ```ts
 * const GeoPoint = new GraphQLInputObjectType({
 *   name: 'GeoPoint',
 *   fields: {
 *     lat: { type: new GraphQLNonNull(GraphQLFloat) },
 *     lon: { type: new GraphQLNonNull(GraphQLFloat) },
 *     alt: { type: GraphQLFloat, defaultValue: 0 },
 *   }
 * });
 * ```
 */
class GraphQLInputObjectType {
  constructor(config) {
    var _config$extensionASTN6;

    this.name = (0, _assertName.assertName)(config.name);
    this.description = config.description;
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    this.extensionASTNodes =
      (_config$extensionASTN6 = config.extensionASTNodes) !== null &&
      _config$extensionASTN6 !== void 0
        ? _config$extensionASTN6
        : [];
    this._fields = defineInputFieldMap.bind(undefined, config);
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLInputObjectType';
  }

  getFields() {
    if (typeof this._fields === 'function') {
      this._fields = this._fields();
    }

    return this._fields;
  }

  toConfig() {
    const fields = (0, _mapValue.mapValue)(this.getFields(), (field) => ({
      description: field.description,
      type: field.type,
      defaultValue: field.defaultValue,
      deprecationReason: field.deprecationReason,
      extensions: field.extensions,
      astNode: field.astNode,
    }));
    return {
      name: this.name,
      description: this.description,
      fields,
      extensions: this.extensions,
      astNode: this.astNode,
      extensionASTNodes: this.extensionASTNodes,
    };
  }

  toString() {
    return this.name;
  }

  toJSON() {
    return this.toString();
  }
}

exports.GraphQLInputObjectType = GraphQLInputObjectType;

function defineInputFieldMap(config) {
  const fieldMap = resolveObjMapThunk(config.fields);
  isPlainObj(fieldMap) ||
    (0, _devAssert.devAssert)(
      false,
      `${config.name} fields must be an object with field names as keys or a function which returns such an object.`,
    );
  return (0, _mapValue.mapValue)(fieldMap, (fieldConfig, fieldName) => {
    !('resolve' in fieldConfig) ||
      (0, _devAssert.devAssert)(
        false,
        `${config.name}.${fieldName} field has a resolve property, but Input Types cannot define resolvers.`,
      );
    return {
      name: (0, _assertName.assertName)(fieldName),
      description: fieldConfig.description,
      type: fieldConfig.type,
      defaultValue: fieldConfig.defaultValue,
      deprecationReason: fieldConfig.deprecationReason,
      extensions: (0, _toObjMap.toObjMap)(fieldConfig.extensions),
      astNode: fieldConfig.astNode,
    };
  });
}

function isRequiredInputField(field) {
  return isNonNullType(field.type) && field.defaultValue === undefined;
}


/***/ }),

/***/ 3614:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.GraphQLSpecifiedByDirective =
  exports.GraphQLSkipDirective =
  exports.GraphQLIncludeDirective =
  exports.GraphQLDirective =
  exports.GraphQLDeprecatedDirective =
  exports.DEFAULT_DEPRECATION_REASON =
    void 0;
exports.assertDirective = assertDirective;
exports.isDirective = isDirective;
exports.isSpecifiedDirective = isSpecifiedDirective;
exports.specifiedDirectives = void 0;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _instanceOf = __nccwpck_require__(3481);

var _isObjectLike = __nccwpck_require__(5865);

var _toObjMap = __nccwpck_require__(4728);

var _directiveLocation = __nccwpck_require__(1553);

var _assertName = __nccwpck_require__(4947);

var _definition = __nccwpck_require__(5821);

var _scalars = __nccwpck_require__(3145);

/**
 * Test if the given value is a GraphQL directive.
 */
function isDirective(directive) {
  return (0, _instanceOf.instanceOf)(directive, GraphQLDirective);
}

function assertDirective(directive) {
  if (!isDirective(directive)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(directive)} to be a GraphQL directive.`,
    );
  }

  return directive;
}
/**
 * Custom extensions
 *
 * @remarks
 * Use a unique identifier name for your extension, for example the name of
 * your library or project. Do not use a shortened identifier as this increases
 * the risk of conflicts. We recommend you add at most one extension field,
 * an object which can contain all the values you need.
 */

/**
 * Directives are used by the GraphQL runtime as a way of modifying execution
 * behavior. Type system creators will usually not create these directly.
 */
class GraphQLDirective {
  constructor(config) {
    var _config$isRepeatable, _config$args;

    this.name = (0, _assertName.assertName)(config.name);
    this.description = config.description;
    this.locations = config.locations;
    this.isRepeatable =
      (_config$isRepeatable = config.isRepeatable) !== null &&
      _config$isRepeatable !== void 0
        ? _config$isRepeatable
        : false;
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    Array.isArray(config.locations) ||
      (0, _devAssert.devAssert)(
        false,
        `@${config.name} locations must be an Array.`,
      );
    const args =
      (_config$args = config.args) !== null && _config$args !== void 0
        ? _config$args
        : {};
    ((0, _isObjectLike.isObjectLike)(args) && !Array.isArray(args)) ||
      (0, _devAssert.devAssert)(
        false,
        `@${config.name} args must be an object with argument names as keys.`,
      );
    this.args = (0, _definition.defineArguments)(args);
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLDirective';
  }

  toConfig() {
    return {
      name: this.name,
      description: this.description,
      locations: this.locations,
      args: (0, _definition.argsToArgsConfig)(this.args),
      isRepeatable: this.isRepeatable,
      extensions: this.extensions,
      astNode: this.astNode,
    };
  }

  toString() {
    return '@' + this.name;
  }

  toJSON() {
    return this.toString();
  }
}

exports.GraphQLDirective = GraphQLDirective;

/**
 * Used to conditionally include fields or fragments.
 */
const GraphQLIncludeDirective = new GraphQLDirective({
  name: 'include',
  description:
    'Directs the executor to include this field or fragment only when the `if` argument is true.',
  locations: [
    _directiveLocation.DirectiveLocation.FIELD,
    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,
    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,
  ],
  args: {
    if: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),
      description: 'Included when true.',
    },
  },
});
/**
 * Used to conditionally skip (exclude) fields or fragments.
 */

exports.GraphQLIncludeDirective = GraphQLIncludeDirective;
const GraphQLSkipDirective = new GraphQLDirective({
  name: 'skip',
  description:
    'Directs the executor to skip this field or fragment when the `if` argument is true.',
  locations: [
    _directiveLocation.DirectiveLocation.FIELD,
    _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,
    _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,
  ],
  args: {
    if: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),
      description: 'Skipped when true.',
    },
  },
});
/**
 * Constant string used for default reason for a deprecation.
 */

exports.GraphQLSkipDirective = GraphQLSkipDirective;
const DEFAULT_DEPRECATION_REASON = 'No longer supported';
/**
 * Used to declare element of a GraphQL schema as deprecated.
 */

exports.DEFAULT_DEPRECATION_REASON = DEFAULT_DEPRECATION_REASON;
const GraphQLDeprecatedDirective = new GraphQLDirective({
  name: 'deprecated',
  description: 'Marks an element of a GraphQL schema as no longer supported.',
  locations: [
    _directiveLocation.DirectiveLocation.FIELD_DEFINITION,
    _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,
    _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,
    _directiveLocation.DirectiveLocation.ENUM_VALUE,
  ],
  args: {
    reason: {
      type: _scalars.GraphQLString,
      description:
        'Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).',
      defaultValue: DEFAULT_DEPRECATION_REASON,
    },
  },
});
/**
 * Used to provide a URL for specifying the behavior of custom scalar definitions.
 */

exports.GraphQLDeprecatedDirective = GraphQLDeprecatedDirective;
const GraphQLSpecifiedByDirective = new GraphQLDirective({
  name: 'specifiedBy',
  description: 'Exposes a URL that specifies the behavior of this scalar.',
  locations: [_directiveLocation.DirectiveLocation.SCALAR],
  args: {
    url: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),
      description: 'The URL that specifies the behavior of this scalar.',
    },
  },
});
/**
 * The full list of specified directives.
 */

exports.GraphQLSpecifiedByDirective = GraphQLSpecifiedByDirective;
const specifiedDirectives = Object.freeze([
  GraphQLIncludeDirective,
  GraphQLSkipDirective,
  GraphQLDeprecatedDirective,
  GraphQLSpecifiedByDirective,
]);
exports.specifiedDirectives = specifiedDirectives;

function isSpecifiedDirective(directive) {
  return specifiedDirectives.some(({ name }) => name === directive.name);
}


/***/ }),

/***/ 3280:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
Object.defineProperty(exports, "DEFAULT_DEPRECATION_REASON", ({
  enumerable: true,
  get: function () {
    return _directives.DEFAULT_DEPRECATION_REASON;
  },
}));
Object.defineProperty(exports, "GRAPHQL_MAX_INT", ({
  enumerable: true,
  get: function () {
    return _scalars.GRAPHQL_MAX_INT;
  },
}));
Object.defineProperty(exports, "GRAPHQL_MIN_INT", ({
  enumerable: true,
  get: function () {
    return _scalars.GRAPHQL_MIN_INT;
  },
}));
Object.defineProperty(exports, "GraphQLBoolean", ({
  enumerable: true,
  get: function () {
    return _scalars.GraphQLBoolean;
  },
}));
Object.defineProperty(exports, "GraphQLDeprecatedDirective", ({
  enumerable: true,
  get: function () {
    return _directives.GraphQLDeprecatedDirective;
  },
}));
Object.defineProperty(exports, "GraphQLDirective", ({
  enumerable: true,
  get: function () {
    return _directives.GraphQLDirective;
  },
}));
Object.defineProperty(exports, "GraphQLEnumType", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLEnumType;
  },
}));
Object.defineProperty(exports, "GraphQLFloat", ({
  enumerable: true,
  get: function () {
    return _scalars.GraphQLFloat;
  },
}));
Object.defineProperty(exports, "GraphQLID", ({
  enumerable: true,
  get: function () {
    return _scalars.GraphQLID;
  },
}));
Object.defineProperty(exports, "GraphQLIncludeDirective", ({
  enumerable: true,
  get: function () {
    return _directives.GraphQLIncludeDirective;
  },
}));
Object.defineProperty(exports, "GraphQLInputObjectType", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLInputObjectType;
  },
}));
Object.defineProperty(exports, "GraphQLInt", ({
  enumerable: true,
  get: function () {
    return _scalars.GraphQLInt;
  },
}));
Object.defineProperty(exports, "GraphQLInterfaceType", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLInterfaceType;
  },
}));
Object.defineProperty(exports, "GraphQLList", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLList;
  },
}));
Object.defineProperty(exports, "GraphQLNonNull", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLNonNull;
  },
}));
Object.defineProperty(exports, "GraphQLObjectType", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLObjectType;
  },
}));
Object.defineProperty(exports, "GraphQLScalarType", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLScalarType;
  },
}));
Object.defineProperty(exports, "GraphQLSchema", ({
  enumerable: true,
  get: function () {
    return _schema.GraphQLSchema;
  },
}));
Object.defineProperty(exports, "GraphQLSkipDirective", ({
  enumerable: true,
  get: function () {
    return _directives.GraphQLSkipDirective;
  },
}));
Object.defineProperty(exports, "GraphQLSpecifiedByDirective", ({
  enumerable: true,
  get: function () {
    return _directives.GraphQLSpecifiedByDirective;
  },
}));
Object.defineProperty(exports, "GraphQLString", ({
  enumerable: true,
  get: function () {
    return _scalars.GraphQLString;
  },
}));
Object.defineProperty(exports, "GraphQLUnionType", ({
  enumerable: true,
  get: function () {
    return _definition.GraphQLUnionType;
  },
}));
Object.defineProperty(exports, "SchemaMetaFieldDef", ({
  enumerable: true,
  get: function () {
    return _introspection.SchemaMetaFieldDef;
  },
}));
Object.defineProperty(exports, "TypeKind", ({
  enumerable: true,
  get: function () {
    return _introspection.TypeKind;
  },
}));
Object.defineProperty(exports, "TypeMetaFieldDef", ({
  enumerable: true,
  get: function () {
    return _introspection.TypeMetaFieldDef;
  },
}));
Object.defineProperty(exports, "TypeNameMetaFieldDef", ({
  enumerable: true,
  get: function () {
    return _introspection.TypeNameMetaFieldDef;
  },
}));
Object.defineProperty(exports, "__Directive", ({
  enumerable: true,
  get: function () {
    return _introspection.__Directive;
  },
}));
Object.defineProperty(exports, "__DirectiveLocation", ({
  enumerable: true,
  get: function () {
    return _introspection.__DirectiveLocation;
  },
}));
Object.defineProperty(exports, "__EnumValue", ({
  enumerable: true,
  get: function () {
    return _introspection.__EnumValue;
  },
}));
Object.defineProperty(exports, "__Field", ({
  enumerable: true,
  get: function () {
    return _introspection.__Field;
  },
}));
Object.defineProperty(exports, "__InputValue", ({
  enumerable: true,
  get: function () {
    return _introspection.__InputValue;
  },
}));
Object.defineProperty(exports, "__Schema", ({
  enumerable: true,
  get: function () {
    return _introspection.__Schema;
  },
}));
Object.defineProperty(exports, "__Type", ({
  enumerable: true,
  get: function () {
    return _introspection.__Type;
  },
}));
Object.defineProperty(exports, "__TypeKind", ({
  enumerable: true,
  get: function () {
    return _introspection.__TypeKind;
  },
}));
Object.defineProperty(exports, "assertAbstractType", ({
  enumerable: true,
  get: function () {
    return _definition.assertAbstractType;
  },
}));
Object.defineProperty(exports, "assertCompositeType", ({
  enumerable: true,
  get: function () {
    return _definition.assertCompositeType;
  },
}));
Object.defineProperty(exports, "assertDirective", ({
  enumerable: true,
  get: function () {
    return _directives.assertDirective;
  },
}));
Object.defineProperty(exports, "assertEnumType", ({
  enumerable: true,
  get: function () {
    return _definition.assertEnumType;
  },
}));
Object.defineProperty(exports, "assertEnumValueName", ({
  enumerable: true,
  get: function () {
    return _assertName.assertEnumValueName;
  },
}));
Object.defineProperty(exports, "assertInputObjectType", ({
  enumerable: true,
  get: function () {
    return _definition.assertInputObjectType;
  },
}));
Object.defineProperty(exports, "assertInputType", ({
  enumerable: true,
  get: function () {
    return _definition.assertInputType;
  },
}));
Object.defineProperty(exports, "assertInterfaceType", ({
  enumerable: true,
  get: function () {
    return _definition.assertInterfaceType;
  },
}));
Object.defineProperty(exports, "assertLeafType", ({
  enumerable: true,
  get: function () {
    return _definition.assertLeafType;
  },
}));
Object.defineProperty(exports, "assertListType", ({
  enumerable: true,
  get: function () {
    return _definition.assertListType;
  },
}));
Object.defineProperty(exports, "assertName", ({
  enumerable: true,
  get: function () {
    return _assertName.assertName;
  },
}));
Object.defineProperty(exports, "assertNamedType", ({
  enumerable: true,
  get: function () {
    return _definition.assertNamedType;
  },
}));
Object.defineProperty(exports, "assertNonNullType", ({
  enumerable: true,
  get: function () {
    return _definition.assertNonNullType;
  },
}));
Object.defineProperty(exports, "assertNullableType", ({
  enumerable: true,
  get: function () {
    return _definition.assertNullableType;
  },
}));
Object.defineProperty(exports, "assertObjectType", ({
  enumerable: true,
  get: function () {
    return _definition.assertObjectType;
  },
}));
Object.defineProperty(exports, "assertOutputType", ({
  enumerable: true,
  get: function () {
    return _definition.assertOutputType;
  },
}));
Object.defineProperty(exports, "assertScalarType", ({
  enumerable: true,
  get: function () {
    return _definition.assertScalarType;
  },
}));
Object.defineProperty(exports, "assertSchema", ({
  enumerable: true,
  get: function () {
    return _schema.assertSchema;
  },
}));
Object.defineProperty(exports, "assertType", ({
  enumerable: true,
  get: function () {
    return _definition.assertType;
  },
}));
Object.defineProperty(exports, "assertUnionType", ({
  enumerable: true,
  get: function () {
    return _definition.assertUnionType;
  },
}));
Object.defineProperty(exports, "assertValidSchema", ({
  enumerable: true,
  get: function () {
    return _validate.assertValidSchema;
  },
}));
Object.defineProperty(exports, "assertWrappingType", ({
  enumerable: true,
  get: function () {
    return _definition.assertWrappingType;
  },
}));
Object.defineProperty(exports, "getNamedType", ({
  enumerable: true,
  get: function () {
    return _definition.getNamedType;
  },
}));
Object.defineProperty(exports, "getNullableType", ({
  enumerable: true,
  get: function () {
    return _definition.getNullableType;
  },
}));
Object.defineProperty(exports, "introspectionTypes", ({
  enumerable: true,
  get: function () {
    return _introspection.introspectionTypes;
  },
}));
Object.defineProperty(exports, "isAbstractType", ({
  enumerable: true,
  get: function () {
    return _definition.isAbstractType;
  },
}));
Object.defineProperty(exports, "isCompositeType", ({
  enumerable: true,
  get: function () {
    return _definition.isCompositeType;
  },
}));
Object.defineProperty(exports, "isDirective", ({
  enumerable: true,
  get: function () {
    return _directives.isDirective;
  },
}));
Object.defineProperty(exports, "isEnumType", ({
  enumerable: true,
  get: function () {
    return _definition.isEnumType;
  },
}));
Object.defineProperty(exports, "isInputObjectType", ({
  enumerable: true,
  get: function () {
    return _definition.isInputObjectType;
  },
}));
Object.defineProperty(exports, "isInputType", ({
  enumerable: true,
  get: function () {
    return _definition.isInputType;
  },
}));
Object.defineProperty(exports, "isInterfaceType", ({
  enumerable: true,
  get: function () {
    return _definition.isInterfaceType;
  },
}));
Object.defineProperty(exports, "isIntrospectionType", ({
  enumerable: true,
  get: function () {
    return _introspection.isIntrospectionType;
  },
}));
Object.defineProperty(exports, "isLeafType", ({
  enumerable: true,
  get: function () {
    return _definition.isLeafType;
  },
}));
Object.defineProperty(exports, "isListType", ({
  enumerable: true,
  get: function () {
    return _definition.isListType;
  },
}));
Object.defineProperty(exports, "isNamedType", ({
  enumerable: true,
  get: function () {
    return _definition.isNamedType;
  },
}));
Object.defineProperty(exports, "isNonNullType", ({
  enumerable: true,
  get: function () {
    return _definition.isNonNullType;
  },
}));
Object.defineProperty(exports, "isNullableType", ({
  enumerable: true,
  get: function () {
    return _definition.isNullableType;
  },
}));
Object.defineProperty(exports, "isObjectType", ({
  enumerable: true,
  get: function () {
    return _definition.isObjectType;
  },
}));
Object.defineProperty(exports, "isOutputType", ({
  enumerable: true,
  get: function () {
    return _definition.isOutputType;
  },
}));
Object.defineProperty(exports, "isRequiredArgument", ({
  enumerable: true,
  get: function () {
    return _definition.isRequiredArgument;
  },
}));
Object.defineProperty(exports, "isRequiredInputField", ({
  enumerable: true,
  get: function () {
    return _definition.isRequiredInputField;
  },
}));
Object.defineProperty(exports, "isScalarType", ({
  enumerable: true,
  get: function () {
    return _definition.isScalarType;
  },
}));
Object.defineProperty(exports, "isSchema", ({
  enumerable: true,
  get: function () {
    return _schema.isSchema;
  },
}));
Object.defineProperty(exports, "isSpecifiedDirective", ({
  enumerable: true,
  get: function () {
    return _directives.isSpecifiedDirective;
  },
}));
Object.defineProperty(exports, "isSpecifiedScalarType", ({
  enumerable: true,
  get: function () {
    return _scalars.isSpecifiedScalarType;
  },
}));
Object.defineProperty(exports, "isType", ({
  enumerable: true,
  get: function () {
    return _definition.isType;
  },
}));
Object.defineProperty(exports, "isUnionType", ({
  enumerable: true,
  get: function () {
    return _definition.isUnionType;
  },
}));
Object.defineProperty(exports, "isWrappingType", ({
  enumerable: true,
  get: function () {
    return _definition.isWrappingType;
  },
}));
Object.defineProperty(exports, "resolveObjMapThunk", ({
  enumerable: true,
  get: function () {
    return _definition.resolveObjMapThunk;
  },
}));
Object.defineProperty(exports, "resolveReadonlyArrayThunk", ({
  enumerable: true,
  get: function () {
    return _definition.resolveReadonlyArrayThunk;
  },
}));
Object.defineProperty(exports, "specifiedDirectives", ({
  enumerable: true,
  get: function () {
    return _directives.specifiedDirectives;
  },
}));
Object.defineProperty(exports, "specifiedScalarTypes", ({
  enumerable: true,
  get: function () {
    return _scalars.specifiedScalarTypes;
  },
}));
Object.defineProperty(exports, "validateSchema", ({
  enumerable: true,
  get: function () {
    return _validate.validateSchema;
  },
}));

var _schema = __nccwpck_require__(8505);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _scalars = __nccwpck_require__(3145);

var _introspection = __nccwpck_require__(8344);

var _validate = __nccwpck_require__(2430);

var _assertName = __nccwpck_require__(4947);


/***/ }),

/***/ 8344:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.introspectionTypes =
  exports.__TypeKind =
  exports.__Type =
  exports.__Schema =
  exports.__InputValue =
  exports.__Field =
  exports.__EnumValue =
  exports.__DirectiveLocation =
  exports.__Directive =
  exports.TypeNameMetaFieldDef =
  exports.TypeMetaFieldDef =
  exports.TypeKind =
  exports.SchemaMetaFieldDef =
    void 0;
exports.isIntrospectionType = isIntrospectionType;

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _directiveLocation = __nccwpck_require__(1553);

var _printer = __nccwpck_require__(8203);

var _astFromValue = __nccwpck_require__(2653);

var _definition = __nccwpck_require__(5821);

var _scalars = __nccwpck_require__(3145);

const __Schema = new _definition.GraphQLObjectType({
  name: '__Schema',
  description:
    'A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.',
  fields: () => ({
    description: {
      type: _scalars.GraphQLString,
      resolve: (schema) => schema.description,
    },
    types: {
      description: 'A list of all types supported by this server.',
      type: new _definition.GraphQLNonNull(
        new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),
      ),

      resolve(schema) {
        return Object.values(schema.getTypeMap());
      },
    },
    queryType: {
      description: 'The type that query operations will be rooted at.',
      type: new _definition.GraphQLNonNull(__Type),
      resolve: (schema) => schema.getQueryType(),
    },
    mutationType: {
      description:
        'If this server supports mutation, the type that mutation operations will be rooted at.',
      type: __Type,
      resolve: (schema) => schema.getMutationType(),
    },
    subscriptionType: {
      description:
        'If this server support subscription, the type that subscription operations will be rooted at.',
      type: __Type,
      resolve: (schema) => schema.getSubscriptionType(),
    },
    directives: {
      description: 'A list of all directives supported by this server.',
      type: new _definition.GraphQLNonNull(
        new _definition.GraphQLList(
          new _definition.GraphQLNonNull(__Directive),
        ),
      ),
      resolve: (schema) => schema.getDirectives(),
    },
  }),
});

exports.__Schema = __Schema;

const __Directive = new _definition.GraphQLObjectType({
  name: '__Directive',
  description:
    "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
  fields: () => ({
    name: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),
      resolve: (directive) => directive.name,
    },
    description: {
      type: _scalars.GraphQLString,
      resolve: (directive) => directive.description,
    },
    isRepeatable: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),
      resolve: (directive) => directive.isRepeatable,
    },
    locations: {
      type: new _definition.GraphQLNonNull(
        new _definition.GraphQLList(
          new _definition.GraphQLNonNull(__DirectiveLocation),
        ),
      ),
      resolve: (directive) => directive.locations,
    },
    args: {
      type: new _definition.GraphQLNonNull(
        new _definition.GraphQLList(
          new _definition.GraphQLNonNull(__InputValue),
        ),
      ),
      args: {
        includeDeprecated: {
          type: _scalars.GraphQLBoolean,
          defaultValue: false,
        },
      },

      resolve(field, { includeDeprecated }) {
        return includeDeprecated
          ? field.args
          : field.args.filter((arg) => arg.deprecationReason == null);
      },
    },
  }),
});

exports.__Directive = __Directive;

const __DirectiveLocation = new _definition.GraphQLEnumType({
  name: '__DirectiveLocation',
  description:
    'A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.',
  values: {
    QUERY: {
      value: _directiveLocation.DirectiveLocation.QUERY,
      description: 'Location adjacent to a query operation.',
    },
    MUTATION: {
      value: _directiveLocation.DirectiveLocation.MUTATION,
      description: 'Location adjacent to a mutation operation.',
    },
    SUBSCRIPTION: {
      value: _directiveLocation.DirectiveLocation.SUBSCRIPTION,
      description: 'Location adjacent to a subscription operation.',
    },
    FIELD: {
      value: _directiveLocation.DirectiveLocation.FIELD,
      description: 'Location adjacent to a field.',
    },
    FRAGMENT_DEFINITION: {
      value: _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION,
      description: 'Location adjacent to a fragment definition.',
    },
    FRAGMENT_SPREAD: {
      value: _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD,
      description: 'Location adjacent to a fragment spread.',
    },
    INLINE_FRAGMENT: {
      value: _directiveLocation.DirectiveLocation.INLINE_FRAGMENT,
      description: 'Location adjacent to an inline fragment.',
    },
    VARIABLE_DEFINITION: {
      value: _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION,
      description: 'Location adjacent to a variable definition.',
    },
    SCHEMA: {
      value: _directiveLocation.DirectiveLocation.SCHEMA,
      description: 'Location adjacent to a schema definition.',
    },
    SCALAR: {
      value: _directiveLocation.DirectiveLocation.SCALAR,
      description: 'Location adjacent to a scalar definition.',
    },
    OBJECT: {
      value: _directiveLocation.DirectiveLocation.OBJECT,
      description: 'Location adjacent to an object type definition.',
    },
    FIELD_DEFINITION: {
      value: _directiveLocation.DirectiveLocation.FIELD_DEFINITION,
      description: 'Location adjacent to a field definition.',
    },
    ARGUMENT_DEFINITION: {
      value: _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION,
      description: 'Location adjacent to an argument definition.',
    },
    INTERFACE: {
      value: _directiveLocation.DirectiveLocation.INTERFACE,
      description: 'Location adjacent to an interface definition.',
    },
    UNION: {
      value: _directiveLocation.DirectiveLocation.UNION,
      description: 'Location adjacent to a union definition.',
    },
    ENUM: {
      value: _directiveLocation.DirectiveLocation.ENUM,
      description: 'Location adjacent to an enum definition.',
    },
    ENUM_VALUE: {
      value: _directiveLocation.DirectiveLocation.ENUM_VALUE,
      description: 'Location adjacent to an enum value definition.',
    },
    INPUT_OBJECT: {
      value: _directiveLocation.DirectiveLocation.INPUT_OBJECT,
      description: 'Location adjacent to an input object type definition.',
    },
    INPUT_FIELD_DEFINITION: {
      value: _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION,
      description: 'Location adjacent to an input object field definition.',
    },
  },
});

exports.__DirectiveLocation = __DirectiveLocation;

const __Type = new _definition.GraphQLObjectType({
  name: '__Type',
  description:
    'The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByURL`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.',
  fields: () => ({
    kind: {
      type: new _definition.GraphQLNonNull(__TypeKind),

      resolve(type) {
        if ((0, _definition.isScalarType)(type)) {
          return TypeKind.SCALAR;
        }

        if ((0, _definition.isObjectType)(type)) {
          return TypeKind.OBJECT;
        }

        if ((0, _definition.isInterfaceType)(type)) {
          return TypeKind.INTERFACE;
        }

        if ((0, _definition.isUnionType)(type)) {
          return TypeKind.UNION;
        }

        if ((0, _definition.isEnumType)(type)) {
          return TypeKind.ENUM;
        }

        if ((0, _definition.isInputObjectType)(type)) {
          return TypeKind.INPUT_OBJECT;
        }

        if ((0, _definition.isListType)(type)) {
          return TypeKind.LIST;
        }

        if ((0, _definition.isNonNullType)(type)) {
          return TypeKind.NON_NULL;
        }
        /* c8 ignore next 3 */
        // Not reachable, all possible types have been considered)

         false ||
          (0, _invariant.invariant)(
            false,
            `Unexpected type: "${(0, _inspect.inspect)(type)}".`,
          );
      },
    },
    name: {
      type: _scalars.GraphQLString,
      resolve: (type) => ('name' in type ? type.name : undefined),
    },
    description: {
      type: _scalars.GraphQLString,
      resolve: (
        type, // FIXME: add test case
      ) =>
        /* c8 ignore next */
        'description' in type ? type.description : undefined,
    },
    specifiedByURL: {
      type: _scalars.GraphQLString,
      resolve: (obj) =>
        'specifiedByURL' in obj ? obj.specifiedByURL : undefined,
    },
    fields: {
      type: new _definition.GraphQLList(
        new _definition.GraphQLNonNull(__Field),
      ),
      args: {
        includeDeprecated: {
          type: _scalars.GraphQLBoolean,
          defaultValue: false,
        },
      },

      resolve(type, { includeDeprecated }) {
        if (
          (0, _definition.isObjectType)(type) ||
          (0, _definition.isInterfaceType)(type)
        ) {
          const fields = Object.values(type.getFields());
          return includeDeprecated
            ? fields
            : fields.filter((field) => field.deprecationReason == null);
        }
      },
    },
    interfaces: {
      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),

      resolve(type) {
        if (
          (0, _definition.isObjectType)(type) ||
          (0, _definition.isInterfaceType)(type)
        ) {
          return type.getInterfaces();
        }
      },
    },
    possibleTypes: {
      type: new _definition.GraphQLList(new _definition.GraphQLNonNull(__Type)),

      resolve(type, _args, _context, { schema }) {
        if ((0, _definition.isAbstractType)(type)) {
          return schema.getPossibleTypes(type);
        }
      },
    },
    enumValues: {
      type: new _definition.GraphQLList(
        new _definition.GraphQLNonNull(__EnumValue),
      ),
      args: {
        includeDeprecated: {
          type: _scalars.GraphQLBoolean,
          defaultValue: false,
        },
      },

      resolve(type, { includeDeprecated }) {
        if ((0, _definition.isEnumType)(type)) {
          const values = type.getValues();
          return includeDeprecated
            ? values
            : values.filter((field) => field.deprecationReason == null);
        }
      },
    },
    inputFields: {
      type: new _definition.GraphQLList(
        new _definition.GraphQLNonNull(__InputValue),
      ),
      args: {
        includeDeprecated: {
          type: _scalars.GraphQLBoolean,
          defaultValue: false,
        },
      },

      resolve(type, { includeDeprecated }) {
        if ((0, _definition.isInputObjectType)(type)) {
          const values = Object.values(type.getFields());
          return includeDeprecated
            ? values
            : values.filter((field) => field.deprecationReason == null);
        }
      },
    },
    ofType: {
      type: __Type,
      resolve: (type) => ('ofType' in type ? type.ofType : undefined),
    },
  }),
});

exports.__Type = __Type;

const __Field = new _definition.GraphQLObjectType({
  name: '__Field',
  description:
    'Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.',
  fields: () => ({
    name: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),
      resolve: (field) => field.name,
    },
    description: {
      type: _scalars.GraphQLString,
      resolve: (field) => field.description,
    },
    args: {
      type: new _definition.GraphQLNonNull(
        new _definition.GraphQLList(
          new _definition.GraphQLNonNull(__InputValue),
        ),
      ),
      args: {
        includeDeprecated: {
          type: _scalars.GraphQLBoolean,
          defaultValue: false,
        },
      },

      resolve(field, { includeDeprecated }) {
        return includeDeprecated
          ? field.args
          : field.args.filter((arg) => arg.deprecationReason == null);
      },
    },
    type: {
      type: new _definition.GraphQLNonNull(__Type),
      resolve: (field) => field.type,
    },
    isDeprecated: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),
      resolve: (field) => field.deprecationReason != null,
    },
    deprecationReason: {
      type: _scalars.GraphQLString,
      resolve: (field) => field.deprecationReason,
    },
  }),
});

exports.__Field = __Field;

const __InputValue = new _definition.GraphQLObjectType({
  name: '__InputValue',
  description:
    'Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.',
  fields: () => ({
    name: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),
      resolve: (inputValue) => inputValue.name,
    },
    description: {
      type: _scalars.GraphQLString,
      resolve: (inputValue) => inputValue.description,
    },
    type: {
      type: new _definition.GraphQLNonNull(__Type),
      resolve: (inputValue) => inputValue.type,
    },
    defaultValue: {
      type: _scalars.GraphQLString,
      description:
        'A GraphQL-formatted string representing the default value for this input value.',

      resolve(inputValue) {
        const { type, defaultValue } = inputValue;
        const valueAST = (0, _astFromValue.astFromValue)(defaultValue, type);
        return valueAST ? (0, _printer.print)(valueAST) : null;
      },
    },
    isDeprecated: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),
      resolve: (field) => field.deprecationReason != null,
    },
    deprecationReason: {
      type: _scalars.GraphQLString,
      resolve: (obj) => obj.deprecationReason,
    },
  }),
});

exports.__InputValue = __InputValue;

const __EnumValue = new _definition.GraphQLObjectType({
  name: '__EnumValue',
  description:
    'One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.',
  fields: () => ({
    name: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),
      resolve: (enumValue) => enumValue.name,
    },
    description: {
      type: _scalars.GraphQLString,
      resolve: (enumValue) => enumValue.description,
    },
    isDeprecated: {
      type: new _definition.GraphQLNonNull(_scalars.GraphQLBoolean),
      resolve: (enumValue) => enumValue.deprecationReason != null,
    },
    deprecationReason: {
      type: _scalars.GraphQLString,
      resolve: (enumValue) => enumValue.deprecationReason,
    },
  }),
});

exports.__EnumValue = __EnumValue;
var TypeKind;
exports.TypeKind = TypeKind;

(function (TypeKind) {
  TypeKind['SCALAR'] = 'SCALAR';
  TypeKind['OBJECT'] = 'OBJECT';
  TypeKind['INTERFACE'] = 'INTERFACE';
  TypeKind['UNION'] = 'UNION';
  TypeKind['ENUM'] = 'ENUM';
  TypeKind['INPUT_OBJECT'] = 'INPUT_OBJECT';
  TypeKind['LIST'] = 'LIST';
  TypeKind['NON_NULL'] = 'NON_NULL';
})(TypeKind || (exports.TypeKind = TypeKind = {}));

const __TypeKind = new _definition.GraphQLEnumType({
  name: '__TypeKind',
  description: 'An enum describing what kind of type a given `__Type` is.',
  values: {
    SCALAR: {
      value: TypeKind.SCALAR,
      description: 'Indicates this type is a scalar.',
    },
    OBJECT: {
      value: TypeKind.OBJECT,
      description:
        'Indicates this type is an object. `fields` and `interfaces` are valid fields.',
    },
    INTERFACE: {
      value: TypeKind.INTERFACE,
      description:
        'Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.',
    },
    UNION: {
      value: TypeKind.UNION,
      description:
        'Indicates this type is a union. `possibleTypes` is a valid field.',
    },
    ENUM: {
      value: TypeKind.ENUM,
      description:
        'Indicates this type is an enum. `enumValues` is a valid field.',
    },
    INPUT_OBJECT: {
      value: TypeKind.INPUT_OBJECT,
      description:
        'Indicates this type is an input object. `inputFields` is a valid field.',
    },
    LIST: {
      value: TypeKind.LIST,
      description: 'Indicates this type is a list. `ofType` is a valid field.',
    },
    NON_NULL: {
      value: TypeKind.NON_NULL,
      description:
        'Indicates this type is a non-null. `ofType` is a valid field.',
    },
  },
});
/**
 * Note that these are GraphQLField and not GraphQLFieldConfig,
 * so the format for args is different.
 */

exports.__TypeKind = __TypeKind;
const SchemaMetaFieldDef = {
  name: '__schema',
  type: new _definition.GraphQLNonNull(__Schema),
  description: 'Access the current type schema of this server.',
  args: [],
  resolve: (_source, _args, _context, { schema }) => schema,
  deprecationReason: undefined,
  extensions: Object.create(null),
  astNode: undefined,
};
exports.SchemaMetaFieldDef = SchemaMetaFieldDef;
const TypeMetaFieldDef = {
  name: '__type',
  type: __Type,
  description: 'Request the type information of a single type.',
  args: [
    {
      name: 'name',
      description: undefined,
      type: new _definition.GraphQLNonNull(_scalars.GraphQLString),
      defaultValue: undefined,
      deprecationReason: undefined,
      extensions: Object.create(null),
      astNode: undefined,
    },
  ],
  resolve: (_source, { name }, _context, { schema }) => schema.getType(name),
  deprecationReason: undefined,
  extensions: Object.create(null),
  astNode: undefined,
};
exports.TypeMetaFieldDef = TypeMetaFieldDef;
const TypeNameMetaFieldDef = {
  name: '__typename',
  type: new _definition.GraphQLNonNull(_scalars.GraphQLString),
  description: 'The name of the current Object type at runtime.',
  args: [],
  resolve: (_source, _args, _context, { parentType }) => parentType.name,
  deprecationReason: undefined,
  extensions: Object.create(null),
  astNode: undefined,
};
exports.TypeNameMetaFieldDef = TypeNameMetaFieldDef;
const introspectionTypes = Object.freeze([
  __Schema,
  __Directive,
  __DirectiveLocation,
  __Type,
  __Field,
  __InputValue,
  __EnumValue,
  __TypeKind,
]);
exports.introspectionTypes = introspectionTypes;

function isIntrospectionType(type) {
  return introspectionTypes.some(({ name }) => type.name === name);
}


/***/ }),

/***/ 3145:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.GraphQLString =
  exports.GraphQLInt =
  exports.GraphQLID =
  exports.GraphQLFloat =
  exports.GraphQLBoolean =
  exports.GRAPHQL_MIN_INT =
  exports.GRAPHQL_MAX_INT =
    void 0;
exports.isSpecifiedScalarType = isSpecifiedScalarType;
exports.specifiedScalarTypes = void 0;

var _inspect = __nccwpck_require__(102);

var _isObjectLike = __nccwpck_require__(5865);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

/**
 * Maximum possible Int value as per GraphQL Spec (32-bit signed integer).
 * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe up-to 2^53 - 1
 * */
const GRAPHQL_MAX_INT = 2147483647;
/**
 * Minimum possible Int value as per GraphQL Spec (32-bit signed integer).
 * n.b. This differs from JavaScript's numbers that are IEEE 754 doubles safe starting at -(2^53 - 1)
 * */

exports.GRAPHQL_MAX_INT = GRAPHQL_MAX_INT;
const GRAPHQL_MIN_INT = -2147483648;
exports.GRAPHQL_MIN_INT = GRAPHQL_MIN_INT;
const GraphQLInt = new _definition.GraphQLScalarType({
  name: 'Int',
  description:
    'The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.',

  serialize(outputValue) {
    const coercedValue = serializeObject(outputValue);

    if (typeof coercedValue === 'boolean') {
      return coercedValue ? 1 : 0;
    }

    let num = coercedValue;

    if (typeof coercedValue === 'string' && coercedValue !== '') {
      num = Number(coercedValue);
    }

    if (typeof num !== 'number' || !Number.isInteger(num)) {
      throw new _GraphQLError.GraphQLError(
        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(
          coercedValue,
        )}`,
      );
    }

    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {
      throw new _GraphQLError.GraphQLError(
        'Int cannot represent non 32-bit signed integer value: ' +
          (0, _inspect.inspect)(coercedValue),
      );
    }

    return num;
  },

  parseValue(inputValue) {
    if (typeof inputValue !== 'number' || !Number.isInteger(inputValue)) {
      throw new _GraphQLError.GraphQLError(
        `Int cannot represent non-integer value: ${(0, _inspect.inspect)(
          inputValue,
        )}`,
      );
    }

    if (inputValue > GRAPHQL_MAX_INT || inputValue < GRAPHQL_MIN_INT) {
      throw new _GraphQLError.GraphQLError(
        `Int cannot represent non 32-bit signed integer value: ${inputValue}`,
      );
    }

    return inputValue;
  },

  parseLiteral(valueNode) {
    if (valueNode.kind !== _kinds.Kind.INT) {
      throw new _GraphQLError.GraphQLError(
        `Int cannot represent non-integer value: ${(0, _printer.print)(
          valueNode,
        )}`,
        {
          nodes: valueNode,
        },
      );
    }

    const num = parseInt(valueNode.value, 10);

    if (num > GRAPHQL_MAX_INT || num < GRAPHQL_MIN_INT) {
      throw new _GraphQLError.GraphQLError(
        `Int cannot represent non 32-bit signed integer value: ${valueNode.value}`,
        {
          nodes: valueNode,
        },
      );
    }

    return num;
  },
});
exports.GraphQLInt = GraphQLInt;
const GraphQLFloat = new _definition.GraphQLScalarType({
  name: 'Float',
  description:
    'The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).',

  serialize(outputValue) {
    const coercedValue = serializeObject(outputValue);

    if (typeof coercedValue === 'boolean') {
      return coercedValue ? 1 : 0;
    }

    let num = coercedValue;

    if (typeof coercedValue === 'string' && coercedValue !== '') {
      num = Number(coercedValue);
    }

    if (typeof num !== 'number' || !Number.isFinite(num)) {
      throw new _GraphQLError.GraphQLError(
        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(
          coercedValue,
        )}`,
      );
    }

    return num;
  },

  parseValue(inputValue) {
    if (typeof inputValue !== 'number' || !Number.isFinite(inputValue)) {
      throw new _GraphQLError.GraphQLError(
        `Float cannot represent non numeric value: ${(0, _inspect.inspect)(
          inputValue,
        )}`,
      );
    }

    return inputValue;
  },

  parseLiteral(valueNode) {
    if (
      valueNode.kind !== _kinds.Kind.FLOAT &&
      valueNode.kind !== _kinds.Kind.INT
    ) {
      throw new _GraphQLError.GraphQLError(
        `Float cannot represent non numeric value: ${(0, _printer.print)(
          valueNode,
        )}`,
        valueNode,
      );
    }

    return parseFloat(valueNode.value);
  },
});
exports.GraphQLFloat = GraphQLFloat;
const GraphQLString = new _definition.GraphQLScalarType({
  name: 'String',
  description:
    'The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.',

  serialize(outputValue) {
    const coercedValue = serializeObject(outputValue); // Serialize string, boolean and number values to a string, but do not
    // attempt to coerce object, function, symbol, or other types as strings.

    if (typeof coercedValue === 'string') {
      return coercedValue;
    }

    if (typeof coercedValue === 'boolean') {
      return coercedValue ? 'true' : 'false';
    }

    if (typeof coercedValue === 'number' && Number.isFinite(coercedValue)) {
      return coercedValue.toString();
    }

    throw new _GraphQLError.GraphQLError(
      `String cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,
    );
  },

  parseValue(inputValue) {
    if (typeof inputValue !== 'string') {
      throw new _GraphQLError.GraphQLError(
        `String cannot represent a non string value: ${(0, _inspect.inspect)(
          inputValue,
        )}`,
      );
    }

    return inputValue;
  },

  parseLiteral(valueNode) {
    if (valueNode.kind !== _kinds.Kind.STRING) {
      throw new _GraphQLError.GraphQLError(
        `String cannot represent a non string value: ${(0, _printer.print)(
          valueNode,
        )}`,
        {
          nodes: valueNode,
        },
      );
    }

    return valueNode.value;
  },
});
exports.GraphQLString = GraphQLString;
const GraphQLBoolean = new _definition.GraphQLScalarType({
  name: 'Boolean',
  description: 'The `Boolean` scalar type represents `true` or `false`.',

  serialize(outputValue) {
    const coercedValue = serializeObject(outputValue);

    if (typeof coercedValue === 'boolean') {
      return coercedValue;
    }

    if (Number.isFinite(coercedValue)) {
      return coercedValue !== 0;
    }

    throw new _GraphQLError.GraphQLError(
      `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(
        coercedValue,
      )}`,
    );
  },

  parseValue(inputValue) {
    if (typeof inputValue !== 'boolean') {
      throw new _GraphQLError.GraphQLError(
        `Boolean cannot represent a non boolean value: ${(0, _inspect.inspect)(
          inputValue,
        )}`,
      );
    }

    return inputValue;
  },

  parseLiteral(valueNode) {
    if (valueNode.kind !== _kinds.Kind.BOOLEAN) {
      throw new _GraphQLError.GraphQLError(
        `Boolean cannot represent a non boolean value: ${(0, _printer.print)(
          valueNode,
        )}`,
        {
          nodes: valueNode,
        },
      );
    }

    return valueNode.value;
  },
});
exports.GraphQLBoolean = GraphQLBoolean;
const GraphQLID = new _definition.GraphQLScalarType({
  name: 'ID',
  description:
    'The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `"4"`) or integer (such as `4`) input value will be accepted as an ID.',

  serialize(outputValue) {
    const coercedValue = serializeObject(outputValue);

    if (typeof coercedValue === 'string') {
      return coercedValue;
    }

    if (Number.isInteger(coercedValue)) {
      return String(coercedValue);
    }

    throw new _GraphQLError.GraphQLError(
      `ID cannot represent value: ${(0, _inspect.inspect)(outputValue)}`,
    );
  },

  parseValue(inputValue) {
    if (typeof inputValue === 'string') {
      return inputValue;
    }

    if (typeof inputValue === 'number' && Number.isInteger(inputValue)) {
      return inputValue.toString();
    }

    throw new _GraphQLError.GraphQLError(
      `ID cannot represent value: ${(0, _inspect.inspect)(inputValue)}`,
    );
  },

  parseLiteral(valueNode) {
    if (
      valueNode.kind !== _kinds.Kind.STRING &&
      valueNode.kind !== _kinds.Kind.INT
    ) {
      throw new _GraphQLError.GraphQLError(
        'ID cannot represent a non-string and non-integer value: ' +
          (0, _printer.print)(valueNode),
        {
          nodes: valueNode,
        },
      );
    }

    return valueNode.value;
  },
});
exports.GraphQLID = GraphQLID;
const specifiedScalarTypes = Object.freeze([
  GraphQLString,
  GraphQLInt,
  GraphQLFloat,
  GraphQLBoolean,
  GraphQLID,
]);
exports.specifiedScalarTypes = specifiedScalarTypes;

function isSpecifiedScalarType(type) {
  return specifiedScalarTypes.some(({ name }) => type.name === name);
} // Support serializing objects with custom valueOf() or toJSON() functions -
// a common way to represent a complex value which can be represented as
// a string (ex: MongoDB id objects).

function serializeObject(outputValue) {
  if ((0, _isObjectLike.isObjectLike)(outputValue)) {
    if (typeof outputValue.valueOf === 'function') {
      const valueOfResult = outputValue.valueOf();

      if (!(0, _isObjectLike.isObjectLike)(valueOfResult)) {
        return valueOfResult;
      }
    }

    if (typeof outputValue.toJSON === 'function') {
      return outputValue.toJSON();
    }
  }

  return outputValue;
}


/***/ }),

/***/ 8505:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.GraphQLSchema = void 0;
exports.assertSchema = assertSchema;
exports.isSchema = isSchema;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _instanceOf = __nccwpck_require__(3481);

var _isObjectLike = __nccwpck_require__(5865);

var _toObjMap = __nccwpck_require__(4728);

var _ast = __nccwpck_require__(5494);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _introspection = __nccwpck_require__(8344);

/**
 * Test if the given value is a GraphQL schema.
 */
function isSchema(schema) {
  return (0, _instanceOf.instanceOf)(schema, GraphQLSchema);
}

function assertSchema(schema) {
  if (!isSchema(schema)) {
    throw new Error(
      `Expected ${(0, _inspect.inspect)(schema)} to be a GraphQL schema.`,
    );
  }

  return schema;
}
/**
 * Custom extensions
 *
 * @remarks
 * Use a unique identifier name for your extension, for example the name of
 * your library or project. Do not use a shortened identifier as this increases
 * the risk of conflicts. We recommend you add at most one extension field,
 * an object which can contain all the values you need.
 */

/**
 * Schema Definition
 *
 * A Schema is created by supplying the root types of each type of operation,
 * query and mutation (optional). A schema definition is then supplied to the
 * validator and executor.
 *
 * Example:
 *
 * ```ts
 * const MyAppSchema = new GraphQLSchema({
 *   query: MyAppQueryRootType,
 *   mutation: MyAppMutationRootType,
 * })
 * ```
 *
 * Note: When the schema is constructed, by default only the types that are
 * reachable by traversing the root types are included, other types must be
 * explicitly referenced.
 *
 * Example:
 *
 * ```ts
 * const characterInterface = new GraphQLInterfaceType({
 *   name: 'Character',
 *   ...
 * });
 *
 * const humanType = new GraphQLObjectType({
 *   name: 'Human',
 *   interfaces: [characterInterface],
 *   ...
 * });
 *
 * const droidType = new GraphQLObjectType({
 *   name: 'Droid',
 *   interfaces: [characterInterface],
 *   ...
 * });
 *
 * const schema = new GraphQLSchema({
 *   query: new GraphQLObjectType({
 *     name: 'Query',
 *     fields: {
 *       hero: { type: characterInterface, ... },
 *     }
 *   }),
 *   ...
 *   // Since this schema references only the `Character` interface it's
 *   // necessary to explicitly list the types that implement it if
 *   // you want them to be included in the final schema.
 *   types: [humanType, droidType],
 * })
 * ```
 *
 * Note: If an array of `directives` are provided to GraphQLSchema, that will be
 * the exact list of directives represented and allowed. If `directives` is not
 * provided then a default set of the specified directives (e.g. `@include` and
 * `@skip`) will be used. If you wish to provide *additional* directives to these
 * specified directives, you must explicitly declare them. Example:
 *
 * ```ts
 * const MyAppSchema = new GraphQLSchema({
 *   ...
 *   directives: specifiedDirectives.concat([ myCustomDirective ]),
 * })
 * ```
 */
class GraphQLSchema {
  // Used as a cache for validateSchema().
  constructor(config) {
    var _config$extensionASTN, _config$directives;

    // If this schema was built from a source known to be valid, then it may be
    // marked with assumeValid to avoid an additional type system validation.
    this.__validationErrors = config.assumeValid === true ? [] : undefined; // Check for common mistakes during construction to produce early errors.

    (0, _isObjectLike.isObjectLike)(config) ||
      (0, _devAssert.devAssert)(false, 'Must provide configuration object.');
    !config.types ||
      Array.isArray(config.types) ||
      (0, _devAssert.devAssert)(
        false,
        `"types" must be Array if provided but got: ${(0, _inspect.inspect)(
          config.types,
        )}.`,
      );
    !config.directives ||
      Array.isArray(config.directives) ||
      (0, _devAssert.devAssert)(
        false,
        '"directives" must be Array if provided but got: ' +
          `${(0, _inspect.inspect)(config.directives)}.`,
      );
    this.description = config.description;
    this.extensions = (0, _toObjMap.toObjMap)(config.extensions);
    this.astNode = config.astNode;
    this.extensionASTNodes =
      (_config$extensionASTN = config.extensionASTNodes) !== null &&
      _config$extensionASTN !== void 0
        ? _config$extensionASTN
        : [];
    this._queryType = config.query;
    this._mutationType = config.mutation;
    this._subscriptionType = config.subscription; // Provide specified directives (e.g. @include and @skip) by default.

    this._directives =
      (_config$directives = config.directives) !== null &&
      _config$directives !== void 0
        ? _config$directives
        : _directives.specifiedDirectives; // To preserve order of user-provided types, we add first to add them to
    // the set of "collected" types, so `collectReferencedTypes` ignore them.

    const allReferencedTypes = new Set(config.types);

    if (config.types != null) {
      for (const type of config.types) {
        // When we ready to process this type, we remove it from "collected" types
        // and then add it together with all dependent types in the correct position.
        allReferencedTypes.delete(type);
        collectReferencedTypes(type, allReferencedTypes);
      }
    }

    if (this._queryType != null) {
      collectReferencedTypes(this._queryType, allReferencedTypes);
    }

    if (this._mutationType != null) {
      collectReferencedTypes(this._mutationType, allReferencedTypes);
    }

    if (this._subscriptionType != null) {
      collectReferencedTypes(this._subscriptionType, allReferencedTypes);
    }

    for (const directive of this._directives) {
      // Directives are not validated until validateSchema() is called.
      if ((0, _directives.isDirective)(directive)) {
        for (const arg of directive.args) {
          collectReferencedTypes(arg.type, allReferencedTypes);
        }
      }
    }

    collectReferencedTypes(_introspection.__Schema, allReferencedTypes); // Storing the resulting map for reference by the schema.

    this._typeMap = Object.create(null);
    this._subTypeMap = Object.create(null); // Keep track of all implementations by interface name.

    this._implementationsMap = Object.create(null);

    for (const namedType of allReferencedTypes) {
      if (namedType == null) {
        continue;
      }

      const typeName = namedType.name;
      typeName ||
        (0, _devAssert.devAssert)(
          false,
          'One of the provided types for building the Schema is missing a name.',
        );

      if (this._typeMap[typeName] !== undefined) {
        throw new Error(
          `Schema must contain uniquely named types but contains multiple types named "${typeName}".`,
        );
      }

      this._typeMap[typeName] = namedType;

      if ((0, _definition.isInterfaceType)(namedType)) {
        // Store implementations by interface.
        for (const iface of namedType.getInterfaces()) {
          if ((0, _definition.isInterfaceType)(iface)) {
            let implementations = this._implementationsMap[iface.name];

            if (implementations === undefined) {
              implementations = this._implementationsMap[iface.name] = {
                objects: [],
                interfaces: [],
              };
            }

            implementations.interfaces.push(namedType);
          }
        }
      } else if ((0, _definition.isObjectType)(namedType)) {
        // Store implementations by objects.
        for (const iface of namedType.getInterfaces()) {
          if ((0, _definition.isInterfaceType)(iface)) {
            let implementations = this._implementationsMap[iface.name];

            if (implementations === undefined) {
              implementations = this._implementationsMap[iface.name] = {
                objects: [],
                interfaces: [],
              };
            }

            implementations.objects.push(namedType);
          }
        }
      }
    }
  }

  get [Symbol.toStringTag]() {
    return 'GraphQLSchema';
  }

  getQueryType() {
    return this._queryType;
  }

  getMutationType() {
    return this._mutationType;
  }

  getSubscriptionType() {
    return this._subscriptionType;
  }

  getRootType(operation) {
    switch (operation) {
      case _ast.OperationTypeNode.QUERY:
        return this.getQueryType();

      case _ast.OperationTypeNode.MUTATION:
        return this.getMutationType();

      case _ast.OperationTypeNode.SUBSCRIPTION:
        return this.getSubscriptionType();
    }
  }

  getTypeMap() {
    return this._typeMap;
  }

  getType(name) {
    return this.getTypeMap()[name];
  }

  getPossibleTypes(abstractType) {
    return (0, _definition.isUnionType)(abstractType)
      ? abstractType.getTypes()
      : this.getImplementations(abstractType).objects;
  }

  getImplementations(interfaceType) {
    const implementations = this._implementationsMap[interfaceType.name];
    return implementations !== null && implementations !== void 0
      ? implementations
      : {
          objects: [],
          interfaces: [],
        };
  }

  isSubType(abstractType, maybeSubType) {
    let map = this._subTypeMap[abstractType.name];

    if (map === undefined) {
      map = Object.create(null);

      if ((0, _definition.isUnionType)(abstractType)) {
        for (const type of abstractType.getTypes()) {
          map[type.name] = true;
        }
      } else {
        const implementations = this.getImplementations(abstractType);

        for (const type of implementations.objects) {
          map[type.name] = true;
        }

        for (const type of implementations.interfaces) {
          map[type.name] = true;
        }
      }

      this._subTypeMap[abstractType.name] = map;
    }

    return map[maybeSubType.name] !== undefined;
  }

  getDirectives() {
    return this._directives;
  }

  getDirective(name) {
    return this.getDirectives().find((directive) => directive.name === name);
  }

  toConfig() {
    return {
      description: this.description,
      query: this.getQueryType(),
      mutation: this.getMutationType(),
      subscription: this.getSubscriptionType(),
      types: Object.values(this.getTypeMap()),
      directives: this.getDirectives(),
      extensions: this.extensions,
      astNode: this.astNode,
      extensionASTNodes: this.extensionASTNodes,
      assumeValid: this.__validationErrors !== undefined,
    };
  }
}

exports.GraphQLSchema = GraphQLSchema;

function collectReferencedTypes(type, typeSet) {
  const namedType = (0, _definition.getNamedType)(type);

  if (!typeSet.has(namedType)) {
    typeSet.add(namedType);

    if ((0, _definition.isUnionType)(namedType)) {
      for (const memberType of namedType.getTypes()) {
        collectReferencedTypes(memberType, typeSet);
      }
    } else if (
      (0, _definition.isObjectType)(namedType) ||
      (0, _definition.isInterfaceType)(namedType)
    ) {
      for (const interfaceType of namedType.getInterfaces()) {
        collectReferencedTypes(interfaceType, typeSet);
      }

      for (const field of Object.values(namedType.getFields())) {
        collectReferencedTypes(field.type, typeSet);

        for (const arg of field.args) {
          collectReferencedTypes(arg.type, typeSet);
        }
      }
    } else if ((0, _definition.isInputObjectType)(namedType)) {
      for (const field of Object.values(namedType.getFields())) {
        collectReferencedTypes(field.type, typeSet);
      }
    }
  }

  return typeSet;
}


/***/ }),

/***/ 2430:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.assertValidSchema = assertValidSchema;
exports.validateSchema = validateSchema;

var _inspect = __nccwpck_require__(102);

var _GraphQLError = __nccwpck_require__(4797);

var _ast = __nccwpck_require__(5494);

var _typeComparators = __nccwpck_require__(333);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _introspection = __nccwpck_require__(8344);

var _schema = __nccwpck_require__(8505);

/**
 * Implements the "Type Validation" sub-sections of the specification's
 * "Type System" section.
 *
 * Validation runs synchronously, returning an array of encountered errors, or
 * an empty array if no errors were encountered and the Schema is valid.
 */
function validateSchema(schema) {
  // First check to ensure the provided value is in fact a GraphQLSchema.
  (0, _schema.assertSchema)(schema); // If this Schema has already been validated, return the previous results.

  if (schema.__validationErrors) {
    return schema.__validationErrors;
  } // Validate the schema, producing a list of errors.

  const context = new SchemaValidationContext(schema);
  validateRootTypes(context);
  validateDirectives(context);
  validateTypes(context); // Persist the results of validation before returning to ensure validation
  // does not run multiple times for this schema.

  const errors = context.getErrors();
  schema.__validationErrors = errors;
  return errors;
}
/**
 * Utility function which asserts a schema is valid by throwing an error if
 * it is invalid.
 */

function assertValidSchema(schema) {
  const errors = validateSchema(schema);

  if (errors.length !== 0) {
    throw new Error(errors.map((error) => error.message).join('\n\n'));
  }
}

class SchemaValidationContext {
  constructor(schema) {
    this._errors = [];
    this.schema = schema;
  }

  reportError(message, nodes) {
    const _nodes = Array.isArray(nodes) ? nodes.filter(Boolean) : nodes;

    this._errors.push(
      new _GraphQLError.GraphQLError(message, {
        nodes: _nodes,
      }),
    );
  }

  getErrors() {
    return this._errors;
  }
}

function validateRootTypes(context) {
  const schema = context.schema;
  const queryType = schema.getQueryType();

  if (!queryType) {
    context.reportError('Query root type must be provided.', schema.astNode);
  } else if (!(0, _definition.isObjectType)(queryType)) {
    var _getOperationTypeNode;

    context.reportError(
      `Query root type must be Object type, it cannot be ${(0,
      _inspect.inspect)(queryType)}.`,
      (_getOperationTypeNode = getOperationTypeNode(
        schema,
        _ast.OperationTypeNode.QUERY,
      )) !== null && _getOperationTypeNode !== void 0
        ? _getOperationTypeNode
        : queryType.astNode,
    );
  }

  const mutationType = schema.getMutationType();

  if (mutationType && !(0, _definition.isObjectType)(mutationType)) {
    var _getOperationTypeNode2;

    context.reportError(
      'Mutation root type must be Object type if provided, it cannot be ' +
        `${(0, _inspect.inspect)(mutationType)}.`,
      (_getOperationTypeNode2 = getOperationTypeNode(
        schema,
        _ast.OperationTypeNode.MUTATION,
      )) !== null && _getOperationTypeNode2 !== void 0
        ? _getOperationTypeNode2
        : mutationType.astNode,
    );
  }

  const subscriptionType = schema.getSubscriptionType();

  if (subscriptionType && !(0, _definition.isObjectType)(subscriptionType)) {
    var _getOperationTypeNode3;

    context.reportError(
      'Subscription root type must be Object type if provided, it cannot be ' +
        `${(0, _inspect.inspect)(subscriptionType)}.`,
      (_getOperationTypeNode3 = getOperationTypeNode(
        schema,
        _ast.OperationTypeNode.SUBSCRIPTION,
      )) !== null && _getOperationTypeNode3 !== void 0
        ? _getOperationTypeNode3
        : subscriptionType.astNode,
    );
  }
}

function getOperationTypeNode(schema, operation) {
  var _flatMap$find;

  return (_flatMap$find = [schema.astNode, ...schema.extensionASTNodes]
    .flatMap(
      // FIXME: https://github.com/graphql/graphql-js/issues/2203
      (schemaNode) => {
        var _schemaNode$operation;

        return (
          /* c8 ignore next */
          (_schemaNode$operation =
            schemaNode === null || schemaNode === void 0
              ? void 0
              : schemaNode.operationTypes) !== null &&
            _schemaNode$operation !== void 0
            ? _schemaNode$operation
            : []
        );
      },
    )
    .find((operationNode) => operationNode.operation === operation)) === null ||
    _flatMap$find === void 0
    ? void 0
    : _flatMap$find.type;
}

function validateDirectives(context) {
  for (const directive of context.schema.getDirectives()) {
    // Ensure all directives are in fact GraphQL directives.
    if (!(0, _directives.isDirective)(directive)) {
      context.reportError(
        `Expected directive but got: ${(0, _inspect.inspect)(directive)}.`,
        directive === null || directive === void 0 ? void 0 : directive.astNode,
      );
      continue;
    } // Ensure they are named correctly.

    validateName(context, directive); // TODO: Ensure proper locations.
    // Ensure the arguments are valid.

    for (const arg of directive.args) {
      // Ensure they are named correctly.
      validateName(context, arg); // Ensure the type is an input type.

      if (!(0, _definition.isInputType)(arg.type)) {
        context.reportError(
          `The type of @${directive.name}(${arg.name}:) must be Input Type ` +
            `but got: ${(0, _inspect.inspect)(arg.type)}.`,
          arg.astNode,
        );
      }

      if (
        (0, _definition.isRequiredArgument)(arg) &&
        arg.deprecationReason != null
      ) {
        var _arg$astNode;

        context.reportError(
          `Required argument @${directive.name}(${arg.name}:) cannot be deprecated.`,
          [
            getDeprecatedDirectiveNode(arg.astNode),
            (_arg$astNode = arg.astNode) === null || _arg$astNode === void 0
              ? void 0
              : _arg$astNode.type,
          ],
        );
      }
    }
  }
}

function validateName(context, node) {
  // Ensure names are valid, however introspection types opt out.
  if (node.name.startsWith('__')) {
    context.reportError(
      `Name "${node.name}" must not begin with "__", which is reserved by GraphQL introspection.`,
      node.astNode,
    );
  }
}

function validateTypes(context) {
  const validateInputObjectCircularRefs =
    createInputObjectCircularRefsValidator(context);
  const typeMap = context.schema.getTypeMap();

  for (const type of Object.values(typeMap)) {
    // Ensure all provided types are in fact GraphQL type.
    if (!(0, _definition.isNamedType)(type)) {
      context.reportError(
        `Expected GraphQL named type but got: ${(0, _inspect.inspect)(type)}.`,
        type.astNode,
      );
      continue;
    } // Ensure it is named correctly (excluding introspection types).

    if (!(0, _introspection.isIntrospectionType)(type)) {
      validateName(context, type);
    }

    if ((0, _definition.isObjectType)(type)) {
      // Ensure fields are valid
      validateFields(context, type); // Ensure objects implement the interfaces they claim to.

      validateInterfaces(context, type);
    } else if ((0, _definition.isInterfaceType)(type)) {
      // Ensure fields are valid.
      validateFields(context, type); // Ensure interfaces implement the interfaces they claim to.

      validateInterfaces(context, type);
    } else if ((0, _definition.isUnionType)(type)) {
      // Ensure Unions include valid member types.
      validateUnionMembers(context, type);
    } else if ((0, _definition.isEnumType)(type)) {
      // Ensure Enums have valid values.
      validateEnumValues(context, type);
    } else if ((0, _definition.isInputObjectType)(type)) {
      // Ensure Input Object fields are valid.
      validateInputFields(context, type); // Ensure Input Objects do not contain non-nullable circular references

      validateInputObjectCircularRefs(type);
    }
  }
}

function validateFields(context, type) {
  const fields = Object.values(type.getFields()); // Objects and Interfaces both must define one or more fields.

  if (fields.length === 0) {
    context.reportError(`Type ${type.name} must define one or more fields.`, [
      type.astNode,
      ...type.extensionASTNodes,
    ]);
  }

  for (const field of fields) {
    // Ensure they are named correctly.
    validateName(context, field); // Ensure the type is an output type

    if (!(0, _definition.isOutputType)(field.type)) {
      var _field$astNode;

      context.reportError(
        `The type of ${type.name}.${field.name} must be Output Type ` +
          `but got: ${(0, _inspect.inspect)(field.type)}.`,
        (_field$astNode = field.astNode) === null || _field$astNode === void 0
          ? void 0
          : _field$astNode.type,
      );
    } // Ensure the arguments are valid

    for (const arg of field.args) {
      const argName = arg.name; // Ensure they are named correctly.

      validateName(context, arg); // Ensure the type is an input type

      if (!(0, _definition.isInputType)(arg.type)) {
        var _arg$astNode2;

        context.reportError(
          `The type of ${type.name}.${field.name}(${argName}:) must be Input ` +
            `Type but got: ${(0, _inspect.inspect)(arg.type)}.`,
          (_arg$astNode2 = arg.astNode) === null || _arg$astNode2 === void 0
            ? void 0
            : _arg$astNode2.type,
        );
      }

      if (
        (0, _definition.isRequiredArgument)(arg) &&
        arg.deprecationReason != null
      ) {
        var _arg$astNode3;

        context.reportError(
          `Required argument ${type.name}.${field.name}(${argName}:) cannot be deprecated.`,
          [
            getDeprecatedDirectiveNode(arg.astNode),
            (_arg$astNode3 = arg.astNode) === null || _arg$astNode3 === void 0
              ? void 0
              : _arg$astNode3.type,
          ],
        );
      }
    }
  }
}

function validateInterfaces(context, type) {
  const ifaceTypeNames = Object.create(null);

  for (const iface of type.getInterfaces()) {
    if (!(0, _definition.isInterfaceType)(iface)) {
      context.reportError(
        `Type ${(0, _inspect.inspect)(
          type,
        )} must only implement Interface types, ` +
          `it cannot implement ${(0, _inspect.inspect)(iface)}.`,
        getAllImplementsInterfaceNodes(type, iface),
      );
      continue;
    }

    if (type === iface) {
      context.reportError(
        `Type ${type.name} cannot implement itself because it would create a circular reference.`,
        getAllImplementsInterfaceNodes(type, iface),
      );
      continue;
    }

    if (ifaceTypeNames[iface.name]) {
      context.reportError(
        `Type ${type.name} can only implement ${iface.name} once.`,
        getAllImplementsInterfaceNodes(type, iface),
      );
      continue;
    }

    ifaceTypeNames[iface.name] = true;
    validateTypeImplementsAncestors(context, type, iface);
    validateTypeImplementsInterface(context, type, iface);
  }
}

function validateTypeImplementsInterface(context, type, iface) {
  const typeFieldMap = type.getFields(); // Assert each interface field is implemented.

  for (const ifaceField of Object.values(iface.getFields())) {
    const fieldName = ifaceField.name;
    const typeField = typeFieldMap[fieldName]; // Assert interface field exists on type.

    if (!typeField) {
      context.reportError(
        `Interface field ${iface.name}.${fieldName} expected but ${type.name} does not provide it.`,
        [ifaceField.astNode, type.astNode, ...type.extensionASTNodes],
      );
      continue;
    } // Assert interface field type is satisfied by type field type, by being
    // a valid subtype. (covariant)

    if (
      !(0, _typeComparators.isTypeSubTypeOf)(
        context.schema,
        typeField.type,
        ifaceField.type,
      )
    ) {
      var _ifaceField$astNode, _typeField$astNode;

      context.reportError(
        `Interface field ${iface.name}.${fieldName} expects type ` +
          `${(0, _inspect.inspect)(ifaceField.type)} but ${
            type.name
          }.${fieldName} ` +
          `is type ${(0, _inspect.inspect)(typeField.type)}.`,
        [
          (_ifaceField$astNode = ifaceField.astNode) === null ||
          _ifaceField$astNode === void 0
            ? void 0
            : _ifaceField$astNode.type,
          (_typeField$astNode = typeField.astNode) === null ||
          _typeField$astNode === void 0
            ? void 0
            : _typeField$astNode.type,
        ],
      );
    } // Assert each interface field arg is implemented.

    for (const ifaceArg of ifaceField.args) {
      const argName = ifaceArg.name;
      const typeArg = typeField.args.find((arg) => arg.name === argName); // Assert interface field arg exists on object field.

      if (!typeArg) {
        context.reportError(
          `Interface field argument ${iface.name}.${fieldName}(${argName}:) expected but ${type.name}.${fieldName} does not provide it.`,
          [ifaceArg.astNode, typeField.astNode],
        );
        continue;
      } // Assert interface field arg type matches object field arg type.
      // (invariant)
      // TODO: change to contravariant?

      if (!(0, _typeComparators.isEqualType)(ifaceArg.type, typeArg.type)) {
        var _ifaceArg$astNode, _typeArg$astNode;

        context.reportError(
          `Interface field argument ${iface.name}.${fieldName}(${argName}:) ` +
            `expects type ${(0, _inspect.inspect)(ifaceArg.type)} but ` +
            `${type.name}.${fieldName}(${argName}:) is type ` +
            `${(0, _inspect.inspect)(typeArg.type)}.`,
          [
            (_ifaceArg$astNode = ifaceArg.astNode) === null ||
            _ifaceArg$astNode === void 0
              ? void 0
              : _ifaceArg$astNode.type,
            (_typeArg$astNode = typeArg.astNode) === null ||
            _typeArg$astNode === void 0
              ? void 0
              : _typeArg$astNode.type,
          ],
        );
      } // TODO: validate default values?
    } // Assert additional arguments must not be required.

    for (const typeArg of typeField.args) {
      const argName = typeArg.name;
      const ifaceArg = ifaceField.args.find((arg) => arg.name === argName);

      if (!ifaceArg && (0, _definition.isRequiredArgument)(typeArg)) {
        context.reportError(
          `Object field ${type.name}.${fieldName} includes required argument ${argName} that is missing from the Interface field ${iface.name}.${fieldName}.`,
          [typeArg.astNode, ifaceField.astNode],
        );
      }
    }
  }
}

function validateTypeImplementsAncestors(context, type, iface) {
  const ifaceInterfaces = type.getInterfaces();

  for (const transitive of iface.getInterfaces()) {
    if (!ifaceInterfaces.includes(transitive)) {
      context.reportError(
        transitive === type
          ? `Type ${type.name} cannot implement ${iface.name} because it would create a circular reference.`
          : `Type ${type.name} must implement ${transitive.name} because it is implemented by ${iface.name}.`,
        [
          ...getAllImplementsInterfaceNodes(iface, transitive),
          ...getAllImplementsInterfaceNodes(type, iface),
        ],
      );
    }
  }
}

function validateUnionMembers(context, union) {
  const memberTypes = union.getTypes();

  if (memberTypes.length === 0) {
    context.reportError(
      `Union type ${union.name} must define one or more member types.`,
      [union.astNode, ...union.extensionASTNodes],
    );
  }

  const includedTypeNames = Object.create(null);

  for (const memberType of memberTypes) {
    if (includedTypeNames[memberType.name]) {
      context.reportError(
        `Union type ${union.name} can only include type ${memberType.name} once.`,
        getUnionMemberTypeNodes(union, memberType.name),
      );
      continue;
    }

    includedTypeNames[memberType.name] = true;

    if (!(0, _definition.isObjectType)(memberType)) {
      context.reportError(
        `Union type ${union.name} can only include Object types, ` +
          `it cannot include ${(0, _inspect.inspect)(memberType)}.`,
        getUnionMemberTypeNodes(union, String(memberType)),
      );
    }
  }
}

function validateEnumValues(context, enumType) {
  const enumValues = enumType.getValues();

  if (enumValues.length === 0) {
    context.reportError(
      `Enum type ${enumType.name} must define one or more values.`,
      [enumType.astNode, ...enumType.extensionASTNodes],
    );
  }

  for (const enumValue of enumValues) {
    // Ensure valid name.
    validateName(context, enumValue);
  }
}

function validateInputFields(context, inputObj) {
  const fields = Object.values(inputObj.getFields());

  if (fields.length === 0) {
    context.reportError(
      `Input Object type ${inputObj.name} must define one or more fields.`,
      [inputObj.astNode, ...inputObj.extensionASTNodes],
    );
  } // Ensure the arguments are valid

  for (const field of fields) {
    // Ensure they are named correctly.
    validateName(context, field); // Ensure the type is an input type

    if (!(0, _definition.isInputType)(field.type)) {
      var _field$astNode2;

      context.reportError(
        `The type of ${inputObj.name}.${field.name} must be Input Type ` +
          `but got: ${(0, _inspect.inspect)(field.type)}.`,
        (_field$astNode2 = field.astNode) === null || _field$astNode2 === void 0
          ? void 0
          : _field$astNode2.type,
      );
    }

    if (
      (0, _definition.isRequiredInputField)(field) &&
      field.deprecationReason != null
    ) {
      var _field$astNode3;

      context.reportError(
        `Required input field ${inputObj.name}.${field.name} cannot be deprecated.`,
        [
          getDeprecatedDirectiveNode(field.astNode),
          (_field$astNode3 = field.astNode) === null ||
          _field$astNode3 === void 0
            ? void 0
            : _field$astNode3.type,
        ],
      );
    }
  }
}

function createInputObjectCircularRefsValidator(context) {
  // Modified copy of algorithm from 'src/validation/rules/NoFragmentCycles.js'.
  // Tracks already visited types to maintain O(N) and to ensure that cycles
  // are not redundantly reported.
  const visitedTypes = Object.create(null); // Array of types nodes used to produce meaningful errors

  const fieldPath = []; // Position in the type path

  const fieldPathIndexByTypeName = Object.create(null);
  return detectCycleRecursive; // This does a straight-forward DFS to find cycles.
  // It does not terminate when a cycle was found but continues to explore
  // the graph to find all possible cycles.

  function detectCycleRecursive(inputObj) {
    if (visitedTypes[inputObj.name]) {
      return;
    }

    visitedTypes[inputObj.name] = true;
    fieldPathIndexByTypeName[inputObj.name] = fieldPath.length;
    const fields = Object.values(inputObj.getFields());

    for (const field of fields) {
      if (
        (0, _definition.isNonNullType)(field.type) &&
        (0, _definition.isInputObjectType)(field.type.ofType)
      ) {
        const fieldType = field.type.ofType;
        const cycleIndex = fieldPathIndexByTypeName[fieldType.name];
        fieldPath.push(field);

        if (cycleIndex === undefined) {
          detectCycleRecursive(fieldType);
        } else {
          const cyclePath = fieldPath.slice(cycleIndex);
          const pathStr = cyclePath.map((fieldObj) => fieldObj.name).join('.');
          context.reportError(
            `Cannot reference Input Object "${fieldType.name}" within itself through a series of non-null fields: "${pathStr}".`,
            cyclePath.map((fieldObj) => fieldObj.astNode),
          );
        }

        fieldPath.pop();
      }
    }

    fieldPathIndexByTypeName[inputObj.name] = undefined;
  }
}

function getAllImplementsInterfaceNodes(type, iface) {
  const { astNode, extensionASTNodes } = type;
  const nodes =
    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203

  return nodes
    .flatMap((typeNode) => {
      var _typeNode$interfaces;

      return (
        /* c8 ignore next */
        (_typeNode$interfaces = typeNode.interfaces) !== null &&
          _typeNode$interfaces !== void 0
          ? _typeNode$interfaces
          : []
      );
    })
    .filter((ifaceNode) => ifaceNode.name.value === iface.name);
}

function getUnionMemberTypeNodes(union, typeName) {
  const { astNode, extensionASTNodes } = union;
  const nodes =
    astNode != null ? [astNode, ...extensionASTNodes] : extensionASTNodes; // FIXME: https://github.com/graphql/graphql-js/issues/2203

  return nodes
    .flatMap((unionNode) => {
      var _unionNode$types;

      return (
        /* c8 ignore next */
        (_unionNode$types = unionNode.types) !== null &&
          _unionNode$types !== void 0
          ? _unionNode$types
          : []
      );
    })
    .filter((typeNode) => typeNode.name.value === typeName);
}

function getDeprecatedDirectiveNode(definitionNode) {
  var _definitionNode$direc;

  return definitionNode === null || definitionNode === void 0
    ? void 0
    : (_definitionNode$direc = definitionNode.directives) === null ||
      _definitionNode$direc === void 0
    ? void 0
    : _definitionNode$direc.find(
        (node) =>
          node.name.value === _directives.GraphQLDeprecatedDirective.name,
      );
}


/***/ }),

/***/ 6625:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.TypeInfo = void 0;
exports.visitWithTypeInfo = visitWithTypeInfo;

var _ast = __nccwpck_require__(5494);

var _kinds = __nccwpck_require__(1927);

var _visitor = __nccwpck_require__(5678);

var _definition = __nccwpck_require__(5821);

var _introspection = __nccwpck_require__(8344);

var _typeFromAST = __nccwpck_require__(7664);

/**
 * TypeInfo is a utility class which, given a GraphQL schema, can keep track
 * of the current field and type definitions at any point in a GraphQL document
 * AST during a recursive descent by calling `enter(node)` and `leave(node)`.
 */
class TypeInfo {
  constructor(
    schema,
    /**
     * Initial type may be provided in rare cases to facilitate traversals
     *  beginning somewhere other than documents.
     */
    initialType,
    /** @deprecated will be removed in 17.0.0 */
    getFieldDefFn,
  ) {
    this._schema = schema;
    this._typeStack = [];
    this._parentTypeStack = [];
    this._inputTypeStack = [];
    this._fieldDefStack = [];
    this._defaultValueStack = [];
    this._directive = null;
    this._argument = null;
    this._enumValue = null;
    this._getFieldDef =
      getFieldDefFn !== null && getFieldDefFn !== void 0
        ? getFieldDefFn
        : getFieldDef;

    if (initialType) {
      if ((0, _definition.isInputType)(initialType)) {
        this._inputTypeStack.push(initialType);
      }

      if ((0, _definition.isCompositeType)(initialType)) {
        this._parentTypeStack.push(initialType);
      }

      if ((0, _definition.isOutputType)(initialType)) {
        this._typeStack.push(initialType);
      }
    }
  }

  get [Symbol.toStringTag]() {
    return 'TypeInfo';
  }

  getType() {
    if (this._typeStack.length > 0) {
      return this._typeStack[this._typeStack.length - 1];
    }
  }

  getParentType() {
    if (this._parentTypeStack.length > 0) {
      return this._parentTypeStack[this._parentTypeStack.length - 1];
    }
  }

  getInputType() {
    if (this._inputTypeStack.length > 0) {
      return this._inputTypeStack[this._inputTypeStack.length - 1];
    }
  }

  getParentInputType() {
    if (this._inputTypeStack.length > 1) {
      return this._inputTypeStack[this._inputTypeStack.length - 2];
    }
  }

  getFieldDef() {
    if (this._fieldDefStack.length > 0) {
      return this._fieldDefStack[this._fieldDefStack.length - 1];
    }
  }

  getDefaultValue() {
    if (this._defaultValueStack.length > 0) {
      return this._defaultValueStack[this._defaultValueStack.length - 1];
    }
  }

  getDirective() {
    return this._directive;
  }

  getArgument() {
    return this._argument;
  }

  getEnumValue() {
    return this._enumValue;
  }

  enter(node) {
    const schema = this._schema; // Note: many of the types below are explicitly typed as "unknown" to drop
    // any assumptions of a valid schema to ensure runtime types are properly
    // checked before continuing since TypeInfo is used as part of validation
    // which occurs before guarantees of schema and document validity.

    switch (node.kind) {
      case _kinds.Kind.SELECTION_SET: {
        const namedType = (0, _definition.getNamedType)(this.getType());

        this._parentTypeStack.push(
          (0, _definition.isCompositeType)(namedType) ? namedType : undefined,
        );

        break;
      }

      case _kinds.Kind.FIELD: {
        const parentType = this.getParentType();
        let fieldDef;
        let fieldType;

        if (parentType) {
          fieldDef = this._getFieldDef(schema, parentType, node);

          if (fieldDef) {
            fieldType = fieldDef.type;
          }
        }

        this._fieldDefStack.push(fieldDef);

        this._typeStack.push(
          (0, _definition.isOutputType)(fieldType) ? fieldType : undefined,
        );

        break;
      }

      case _kinds.Kind.DIRECTIVE:
        this._directive = schema.getDirective(node.name.value);
        break;

      case _kinds.Kind.OPERATION_DEFINITION: {
        const rootType = schema.getRootType(node.operation);

        this._typeStack.push(
          (0, _definition.isObjectType)(rootType) ? rootType : undefined,
        );

        break;
      }

      case _kinds.Kind.INLINE_FRAGMENT:
      case _kinds.Kind.FRAGMENT_DEFINITION: {
        const typeConditionAST = node.typeCondition;
        const outputType = typeConditionAST
          ? (0, _typeFromAST.typeFromAST)(schema, typeConditionAST)
          : (0, _definition.getNamedType)(this.getType());

        this._typeStack.push(
          (0, _definition.isOutputType)(outputType) ? outputType : undefined,
        );

        break;
      }

      case _kinds.Kind.VARIABLE_DEFINITION: {
        const inputType = (0, _typeFromAST.typeFromAST)(schema, node.type);

        this._inputTypeStack.push(
          (0, _definition.isInputType)(inputType) ? inputType : undefined,
        );

        break;
      }

      case _kinds.Kind.ARGUMENT: {
        var _this$getDirective;

        let argDef;
        let argType;
        const fieldOrDirective =
          (_this$getDirective = this.getDirective()) !== null &&
          _this$getDirective !== void 0
            ? _this$getDirective
            : this.getFieldDef();

        if (fieldOrDirective) {
          argDef = fieldOrDirective.args.find(
            (arg) => arg.name === node.name.value,
          );

          if (argDef) {
            argType = argDef.type;
          }
        }

        this._argument = argDef;

        this._defaultValueStack.push(argDef ? argDef.defaultValue : undefined);

        this._inputTypeStack.push(
          (0, _definition.isInputType)(argType) ? argType : undefined,
        );

        break;
      }

      case _kinds.Kind.LIST: {
        const listType = (0, _definition.getNullableType)(this.getInputType());
        const itemType = (0, _definition.isListType)(listType)
          ? listType.ofType
          : listType; // List positions never have a default value.

        this._defaultValueStack.push(undefined);

        this._inputTypeStack.push(
          (0, _definition.isInputType)(itemType) ? itemType : undefined,
        );

        break;
      }

      case _kinds.Kind.OBJECT_FIELD: {
        const objectType = (0, _definition.getNamedType)(this.getInputType());
        let inputFieldType;
        let inputField;

        if ((0, _definition.isInputObjectType)(objectType)) {
          inputField = objectType.getFields()[node.name.value];

          if (inputField) {
            inputFieldType = inputField.type;
          }
        }

        this._defaultValueStack.push(
          inputField ? inputField.defaultValue : undefined,
        );

        this._inputTypeStack.push(
          (0, _definition.isInputType)(inputFieldType)
            ? inputFieldType
            : undefined,
        );

        break;
      }

      case _kinds.Kind.ENUM: {
        const enumType = (0, _definition.getNamedType)(this.getInputType());
        let enumValue;

        if ((0, _definition.isEnumType)(enumType)) {
          enumValue = enumType.getValue(node.value);
        }

        this._enumValue = enumValue;
        break;
      }

      default: // Ignore other nodes
    }
  }

  leave(node) {
    switch (node.kind) {
      case _kinds.Kind.SELECTION_SET:
        this._parentTypeStack.pop();

        break;

      case _kinds.Kind.FIELD:
        this._fieldDefStack.pop();

        this._typeStack.pop();

        break;

      case _kinds.Kind.DIRECTIVE:
        this._directive = null;
        break;

      case _kinds.Kind.OPERATION_DEFINITION:
      case _kinds.Kind.INLINE_FRAGMENT:
      case _kinds.Kind.FRAGMENT_DEFINITION:
        this._typeStack.pop();

        break;

      case _kinds.Kind.VARIABLE_DEFINITION:
        this._inputTypeStack.pop();

        break;

      case _kinds.Kind.ARGUMENT:
        this._argument = null;

        this._defaultValueStack.pop();

        this._inputTypeStack.pop();

        break;

      case _kinds.Kind.LIST:
      case _kinds.Kind.OBJECT_FIELD:
        this._defaultValueStack.pop();

        this._inputTypeStack.pop();

        break;

      case _kinds.Kind.ENUM:
        this._enumValue = null;
        break;

      default: // Ignore other nodes
    }
  }
}

exports.TypeInfo = TypeInfo;

/**
 * Not exactly the same as the executor's definition of getFieldDef, in this
 * statically evaluated environment we do not always have an Object type,
 * and need to handle Interface and Union types.
 */
function getFieldDef(schema, parentType, fieldNode) {
  const name = fieldNode.name.value;

  if (
    name === _introspection.SchemaMetaFieldDef.name &&
    schema.getQueryType() === parentType
  ) {
    return _introspection.SchemaMetaFieldDef;
  }

  if (
    name === _introspection.TypeMetaFieldDef.name &&
    schema.getQueryType() === parentType
  ) {
    return _introspection.TypeMetaFieldDef;
  }

  if (
    name === _introspection.TypeNameMetaFieldDef.name &&
    (0, _definition.isCompositeType)(parentType)
  ) {
    return _introspection.TypeNameMetaFieldDef;
  }

  if (
    (0, _definition.isObjectType)(parentType) ||
    (0, _definition.isInterfaceType)(parentType)
  ) {
    return parentType.getFields()[name];
  }
}
/**
 * Creates a new visitor instance which maintains a provided TypeInfo instance
 * along with visiting visitor.
 */

function visitWithTypeInfo(typeInfo, visitor) {
  return {
    enter(...args) {
      const node = args[0];
      typeInfo.enter(node);
      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).enter;

      if (fn) {
        const result = fn.apply(visitor, args);

        if (result !== undefined) {
          typeInfo.leave(node);

          if ((0, _ast.isNode)(result)) {
            typeInfo.enter(result);
          }
        }

        return result;
      }
    },

    leave(...args) {
      const node = args[0];
      const fn = (0, _visitor.getEnterLeaveForKind)(visitor, node.kind).leave;
      let result;

      if (fn) {
        result = fn.apply(visitor, args);
      }

      typeInfo.leave(node);
      return result;
    },
  };
}


/***/ }),

/***/ 5780:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.assertValidName = assertValidName;
exports.isValidNameError = isValidNameError;

var _devAssert = __nccwpck_require__(6514);

var _GraphQLError = __nccwpck_require__(4797);

var _assertName = __nccwpck_require__(4947);

/* c8 ignore start */

/**
 * Upholds the spec rules about naming.
 * @deprecated Please use `assertName` instead. Will be removed in v17
 */
function assertValidName(name) {
  const error = isValidNameError(name);

  if (error) {
    throw error;
  }

  return name;
}
/**
 * Returns an Error if a name is invalid.
 * @deprecated Please use `assertName` instead. Will be removed in v17
 */

function isValidNameError(name) {
  typeof name === 'string' ||
    (0, _devAssert.devAssert)(false, 'Expected name to be a string.');

  if (name.startsWith('__')) {
    return new _GraphQLError.GraphQLError(
      `Name "${name}" must not begin with "__", which is reserved by GraphQL introspection.`,
    );
  }

  try {
    (0, _assertName.assertName)(name);
  } catch (error) {
    return error;
  }
}
/* c8 ignore stop */


/***/ }),

/***/ 2653:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.astFromValue = astFromValue;

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _isIterableObject = __nccwpck_require__(1258);

var _isObjectLike = __nccwpck_require__(5865);

var _kinds = __nccwpck_require__(1927);

var _definition = __nccwpck_require__(5821);

var _scalars = __nccwpck_require__(3145);

/**
 * Produces a GraphQL Value AST given a JavaScript object.
 * Function will match JavaScript/JSON values to GraphQL AST schema format
 * by using suggested GraphQLInputType. For example:
 *
 *     astFromValue("value", GraphQLString)
 *
 * A GraphQL type must be provided, which will be used to interpret different
 * JavaScript values.
 *
 * | JSON Value    | GraphQL Value        |
 * | ------------- | -------------------- |
 * | Object        | Input Object         |
 * | Array         | List                 |
 * | Boolean       | Boolean              |
 * | String        | String / Enum Value  |
 * | Number        | Int / Float          |
 * | Unknown       | Enum Value           |
 * | null          | NullValue            |
 *
 */
function astFromValue(value, type) {
  if ((0, _definition.isNonNullType)(type)) {
    const astValue = astFromValue(value, type.ofType);

    if (
      (astValue === null || astValue === void 0 ? void 0 : astValue.kind) ===
      _kinds.Kind.NULL
    ) {
      return null;
    }

    return astValue;
  } // only explicit null, not undefined, NaN

  if (value === null) {
    return {
      kind: _kinds.Kind.NULL,
    };
  } // undefined

  if (value === undefined) {
    return null;
  } // Convert JavaScript array to GraphQL list. If the GraphQLType is a list, but
  // the value is not an array, convert the value using the list's item type.

  if ((0, _definition.isListType)(type)) {
    const itemType = type.ofType;

    if ((0, _isIterableObject.isIterableObject)(value)) {
      const valuesNodes = [];

      for (const item of value) {
        const itemNode = astFromValue(item, itemType);

        if (itemNode != null) {
          valuesNodes.push(itemNode);
        }
      }

      return {
        kind: _kinds.Kind.LIST,
        values: valuesNodes,
      };
    }

    return astFromValue(value, itemType);
  } // Populate the fields of the input object by creating ASTs from each value
  // in the JavaScript object according to the fields in the input type.

  if ((0, _definition.isInputObjectType)(type)) {
    if (!(0, _isObjectLike.isObjectLike)(value)) {
      return null;
    }

    const fieldNodes = [];

    for (const field of Object.values(type.getFields())) {
      const fieldValue = astFromValue(value[field.name], field.type);

      if (fieldValue) {
        fieldNodes.push({
          kind: _kinds.Kind.OBJECT_FIELD,
          name: {
            kind: _kinds.Kind.NAME,
            value: field.name,
          },
          value: fieldValue,
        });
      }
    }

    return {
      kind: _kinds.Kind.OBJECT,
      fields: fieldNodes,
    };
  }

  if ((0, _definition.isLeafType)(type)) {
    // Since value is an internally represented value, it must be serialized
    // to an externally represented value before converting into an AST.
    const serialized = type.serialize(value);

    if (serialized == null) {
      return null;
    } // Others serialize based on their corresponding JavaScript scalar types.

    if (typeof serialized === 'boolean') {
      return {
        kind: _kinds.Kind.BOOLEAN,
        value: serialized,
      };
    } // JavaScript numbers can be Int or Float values.

    if (typeof serialized === 'number' && Number.isFinite(serialized)) {
      const stringNum = String(serialized);
      return integerStringRegExp.test(stringNum)
        ? {
            kind: _kinds.Kind.INT,
            value: stringNum,
          }
        : {
            kind: _kinds.Kind.FLOAT,
            value: stringNum,
          };
    }

    if (typeof serialized === 'string') {
      // Enum types use Enum literals.
      if ((0, _definition.isEnumType)(type)) {
        return {
          kind: _kinds.Kind.ENUM,
          value: serialized,
        };
      } // ID types can use Int literals.

      if (type === _scalars.GraphQLID && integerStringRegExp.test(serialized)) {
        return {
          kind: _kinds.Kind.INT,
          value: serialized,
        };
      }

      return {
        kind: _kinds.Kind.STRING,
        value: serialized,
      };
    }

    throw new TypeError(
      `Cannot convert value to AST: ${(0, _inspect.inspect)(serialized)}.`,
    );
  }
  /* c8 ignore next 3 */
  // Not reachable, all possible types have been considered.

   false ||
    (0, _invariant.invariant)(
      false,
      'Unexpected input type: ' + (0, _inspect.inspect)(type),
    );
}
/**
 * IntValue:
 *   - NegativeSign? 0
 *   - NegativeSign? NonZeroDigit ( Digit+ )?
 */

const integerStringRegExp = /^-?(?:0|[1-9][0-9]*)$/;


/***/ }),

/***/ 9337:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.buildASTSchema = buildASTSchema;
exports.buildSchema = buildSchema;

var _devAssert = __nccwpck_require__(6514);

var _kinds = __nccwpck_require__(1927);

var _parser = __nccwpck_require__(655);

var _directives = __nccwpck_require__(3614);

var _schema = __nccwpck_require__(8505);

var _validate = __nccwpck_require__(4409);

var _extendSchema = __nccwpck_require__(1832);

/**
 * This takes the ast of a schema document produced by the parse function in
 * src/language/parser.js.
 *
 * If no schema definition is provided, then it will look for types named Query,
 * Mutation and Subscription.
 *
 * Given that AST it constructs a GraphQLSchema. The resulting schema
 * has no resolve methods, so execution will use default resolvers.
 */
function buildASTSchema(documentAST, options) {
  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||
    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');

  if (
    (options === null || options === void 0 ? void 0 : options.assumeValid) !==
      true &&
    (options === null || options === void 0
      ? void 0
      : options.assumeValidSDL) !== true
  ) {
    (0, _validate.assertValidSDL)(documentAST);
  }

  const emptySchemaConfig = {
    description: undefined,
    types: [],
    directives: [],
    extensions: Object.create(null),
    extensionASTNodes: [],
    assumeValid: false,
  };
  const config = (0, _extendSchema.extendSchemaImpl)(
    emptySchemaConfig,
    documentAST,
    options,
  );

  if (config.astNode == null) {
    for (const type of config.types) {
      switch (type.name) {
        // Note: While this could make early assertions to get the correctly
        // typed values below, that would throw immediately while type system
        // validation with validateSchema() will produce more actionable results.
        case 'Query':
          // @ts-expect-error validated in `validateSchema`
          config.query = type;
          break;

        case 'Mutation':
          // @ts-expect-error validated in `validateSchema`
          config.mutation = type;
          break;

        case 'Subscription':
          // @ts-expect-error validated in `validateSchema`
          config.subscription = type;
          break;
      }
    }
  }

  const directives = [
    ...config.directives, // If specified directives were not explicitly declared, add them.
    ..._directives.specifiedDirectives.filter((stdDirective) =>
      config.directives.every(
        (directive) => directive.name !== stdDirective.name,
      ),
    ),
  ];
  return new _schema.GraphQLSchema({ ...config, directives });
}
/**
 * A helper function to build a GraphQLSchema directly from a source
 * document.
 */

function buildSchema(source, options) {
  const document = (0, _parser.parse)(source, {
    noLocation:
      options === null || options === void 0 ? void 0 : options.noLocation,
    allowLegacyFragmentVariables:
      options === null || options === void 0
        ? void 0
        : options.allowLegacyFragmentVariables,
  });
  return buildASTSchema(document, {
    assumeValidSDL:
      options === null || options === void 0 ? void 0 : options.assumeValidSDL,
    assumeValid:
      options === null || options === void 0 ? void 0 : options.assumeValid,
  });
}


/***/ }),

/***/ 9352:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.buildClientSchema = buildClientSchema;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _isObjectLike = __nccwpck_require__(5865);

var _keyValMap = __nccwpck_require__(9268);

var _parser = __nccwpck_require__(655);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _introspection = __nccwpck_require__(8344);

var _scalars = __nccwpck_require__(3145);

var _schema = __nccwpck_require__(8505);

var _valueFromAST = __nccwpck_require__(3181);

/**
 * Build a GraphQLSchema for use by client tools.
 *
 * Given the result of a client running the introspection query, creates and
 * returns a GraphQLSchema instance which can be then used with all graphql-js
 * tools, but cannot be used to execute a query, as introspection does not
 * represent the "resolver", "parse" or "serialize" functions or any other
 * server-internal mechanisms.
 *
 * This function expects a complete introspection result. Don't forget to check
 * the "errors" field of a server response before calling this function.
 */
function buildClientSchema(introspection, options) {
  ((0, _isObjectLike.isObjectLike)(introspection) &&
    (0, _isObjectLike.isObjectLike)(introspection.__schema)) ||
    (0, _devAssert.devAssert)(
      false,
      `Invalid or incomplete introspection result. Ensure that you are passing "data" property of introspection response and no "errors" was returned alongside: ${(0,
      _inspect.inspect)(introspection)}.`,
    ); // Get the schema from the introspection result.

  const schemaIntrospection = introspection.__schema; // Iterate through all types, getting the type definition for each.

  const typeMap = (0, _keyValMap.keyValMap)(
    schemaIntrospection.types,
    (typeIntrospection) => typeIntrospection.name,
    (typeIntrospection) => buildType(typeIntrospection),
  ); // Include standard types only if they are used.

  for (const stdType of [
    ..._scalars.specifiedScalarTypes,
    ..._introspection.introspectionTypes,
  ]) {
    if (typeMap[stdType.name]) {
      typeMap[stdType.name] = stdType;
    }
  } // Get the root Query, Mutation, and Subscription types.

  const queryType = schemaIntrospection.queryType
    ? getObjectType(schemaIntrospection.queryType)
    : null;
  const mutationType = schemaIntrospection.mutationType
    ? getObjectType(schemaIntrospection.mutationType)
    : null;
  const subscriptionType = schemaIntrospection.subscriptionType
    ? getObjectType(schemaIntrospection.subscriptionType)
    : null; // Get the directives supported by Introspection, assuming empty-set if
  // directives were not queried for.

  const directives = schemaIntrospection.directives
    ? schemaIntrospection.directives.map(buildDirective)
    : []; // Then produce and return a Schema with these types.

  return new _schema.GraphQLSchema({
    description: schemaIntrospection.description,
    query: queryType,
    mutation: mutationType,
    subscription: subscriptionType,
    types: Object.values(typeMap),
    directives,
    assumeValid:
      options === null || options === void 0 ? void 0 : options.assumeValid,
  }); // Given a type reference in introspection, return the GraphQLType instance.
  // preferring cached instances before building new instances.

  function getType(typeRef) {
    if (typeRef.kind === _introspection.TypeKind.LIST) {
      const itemRef = typeRef.ofType;

      if (!itemRef) {
        throw new Error('Decorated type deeper than introspection query.');
      }

      return new _definition.GraphQLList(getType(itemRef));
    }

    if (typeRef.kind === _introspection.TypeKind.NON_NULL) {
      const nullableRef = typeRef.ofType;

      if (!nullableRef) {
        throw new Error('Decorated type deeper than introspection query.');
      }

      const nullableType = getType(nullableRef);
      return new _definition.GraphQLNonNull(
        (0, _definition.assertNullableType)(nullableType),
      );
    }

    return getNamedType(typeRef);
  }

  function getNamedType(typeRef) {
    const typeName = typeRef.name;

    if (!typeName) {
      throw new Error(
        `Unknown type reference: ${(0, _inspect.inspect)(typeRef)}.`,
      );
    }

    const type = typeMap[typeName];

    if (!type) {
      throw new Error(
        `Invalid or incomplete schema, unknown type: ${typeName}. Ensure that a full introspection query is used in order to build a client schema.`,
      );
    }

    return type;
  }

  function getObjectType(typeRef) {
    return (0, _definition.assertObjectType)(getNamedType(typeRef));
  }

  function getInterfaceType(typeRef) {
    return (0, _definition.assertInterfaceType)(getNamedType(typeRef));
  } // Given a type's introspection result, construct the correct
  // GraphQLType instance.

  function buildType(type) {
    // eslint-disable-next-line @typescript-eslint/prefer-optional-chain
    if (type != null && type.name != null && type.kind != null) {
      // FIXME: Properly type IntrospectionType, it's a breaking change so fix in v17
      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check
      switch (type.kind) {
        case _introspection.TypeKind.SCALAR:
          return buildScalarDef(type);

        case _introspection.TypeKind.OBJECT:
          return buildObjectDef(type);

        case _introspection.TypeKind.INTERFACE:
          return buildInterfaceDef(type);

        case _introspection.TypeKind.UNION:
          return buildUnionDef(type);

        case _introspection.TypeKind.ENUM:
          return buildEnumDef(type);

        case _introspection.TypeKind.INPUT_OBJECT:
          return buildInputObjectDef(type);
      }
    }

    const typeStr = (0, _inspect.inspect)(type);
    throw new Error(
      `Invalid or incomplete introspection result. Ensure that a full introspection query is used in order to build a client schema: ${typeStr}.`,
    );
  }

  function buildScalarDef(scalarIntrospection) {
    return new _definition.GraphQLScalarType({
      name: scalarIntrospection.name,
      description: scalarIntrospection.description,
      specifiedByURL: scalarIntrospection.specifiedByURL,
    });
  }

  function buildImplementationsList(implementingIntrospection) {
    // TODO: Temporary workaround until GraphQL ecosystem will fully support
    // 'interfaces' on interface types.
    if (
      implementingIntrospection.interfaces === null &&
      implementingIntrospection.kind === _introspection.TypeKind.INTERFACE
    ) {
      return [];
    }

    if (!implementingIntrospection.interfaces) {
      const implementingIntrospectionStr = (0, _inspect.inspect)(
        implementingIntrospection,
      );
      throw new Error(
        `Introspection result missing interfaces: ${implementingIntrospectionStr}.`,
      );
    }

    return implementingIntrospection.interfaces.map(getInterfaceType);
  }

  function buildObjectDef(objectIntrospection) {
    return new _definition.GraphQLObjectType({
      name: objectIntrospection.name,
      description: objectIntrospection.description,
      interfaces: () => buildImplementationsList(objectIntrospection),
      fields: () => buildFieldDefMap(objectIntrospection),
    });
  }

  function buildInterfaceDef(interfaceIntrospection) {
    return new _definition.GraphQLInterfaceType({
      name: interfaceIntrospection.name,
      description: interfaceIntrospection.description,
      interfaces: () => buildImplementationsList(interfaceIntrospection),
      fields: () => buildFieldDefMap(interfaceIntrospection),
    });
  }

  function buildUnionDef(unionIntrospection) {
    if (!unionIntrospection.possibleTypes) {
      const unionIntrospectionStr = (0, _inspect.inspect)(unionIntrospection);
      throw new Error(
        `Introspection result missing possibleTypes: ${unionIntrospectionStr}.`,
      );
    }

    return new _definition.GraphQLUnionType({
      name: unionIntrospection.name,
      description: unionIntrospection.description,
      types: () => unionIntrospection.possibleTypes.map(getObjectType),
    });
  }

  function buildEnumDef(enumIntrospection) {
    if (!enumIntrospection.enumValues) {
      const enumIntrospectionStr = (0, _inspect.inspect)(enumIntrospection);
      throw new Error(
        `Introspection result missing enumValues: ${enumIntrospectionStr}.`,
      );
    }

    return new _definition.GraphQLEnumType({
      name: enumIntrospection.name,
      description: enumIntrospection.description,
      values: (0, _keyValMap.keyValMap)(
        enumIntrospection.enumValues,
        (valueIntrospection) => valueIntrospection.name,
        (valueIntrospection) => ({
          description: valueIntrospection.description,
          deprecationReason: valueIntrospection.deprecationReason,
        }),
      ),
    });
  }

  function buildInputObjectDef(inputObjectIntrospection) {
    if (!inputObjectIntrospection.inputFields) {
      const inputObjectIntrospectionStr = (0, _inspect.inspect)(
        inputObjectIntrospection,
      );
      throw new Error(
        `Introspection result missing inputFields: ${inputObjectIntrospectionStr}.`,
      );
    }

    return new _definition.GraphQLInputObjectType({
      name: inputObjectIntrospection.name,
      description: inputObjectIntrospection.description,
      fields: () => buildInputValueDefMap(inputObjectIntrospection.inputFields),
    });
  }

  function buildFieldDefMap(typeIntrospection) {
    if (!typeIntrospection.fields) {
      throw new Error(
        `Introspection result missing fields: ${(0, _inspect.inspect)(
          typeIntrospection,
        )}.`,
      );
    }

    return (0, _keyValMap.keyValMap)(
      typeIntrospection.fields,
      (fieldIntrospection) => fieldIntrospection.name,
      buildField,
    );
  }

  function buildField(fieldIntrospection) {
    const type = getType(fieldIntrospection.type);

    if (!(0, _definition.isOutputType)(type)) {
      const typeStr = (0, _inspect.inspect)(type);
      throw new Error(
        `Introspection must provide output type for fields, but received: ${typeStr}.`,
      );
    }

    if (!fieldIntrospection.args) {
      const fieldIntrospectionStr = (0, _inspect.inspect)(fieldIntrospection);
      throw new Error(
        `Introspection result missing field args: ${fieldIntrospectionStr}.`,
      );
    }

    return {
      description: fieldIntrospection.description,
      deprecationReason: fieldIntrospection.deprecationReason,
      type,
      args: buildInputValueDefMap(fieldIntrospection.args),
    };
  }

  function buildInputValueDefMap(inputValueIntrospections) {
    return (0, _keyValMap.keyValMap)(
      inputValueIntrospections,
      (inputValue) => inputValue.name,
      buildInputValue,
    );
  }

  function buildInputValue(inputValueIntrospection) {
    const type = getType(inputValueIntrospection.type);

    if (!(0, _definition.isInputType)(type)) {
      const typeStr = (0, _inspect.inspect)(type);
      throw new Error(
        `Introspection must provide input type for arguments, but received: ${typeStr}.`,
      );
    }

    const defaultValue =
      inputValueIntrospection.defaultValue != null
        ? (0, _valueFromAST.valueFromAST)(
            (0, _parser.parseValue)(inputValueIntrospection.defaultValue),
            type,
          )
        : undefined;
    return {
      description: inputValueIntrospection.description,
      type,
      defaultValue,
      deprecationReason: inputValueIntrospection.deprecationReason,
    };
  }

  function buildDirective(directiveIntrospection) {
    if (!directiveIntrospection.args) {
      const directiveIntrospectionStr = (0, _inspect.inspect)(
        directiveIntrospection,
      );
      throw new Error(
        `Introspection result missing directive args: ${directiveIntrospectionStr}.`,
      );
    }

    if (!directiveIntrospection.locations) {
      const directiveIntrospectionStr = (0, _inspect.inspect)(
        directiveIntrospection,
      );
      throw new Error(
        `Introspection result missing directive locations: ${directiveIntrospectionStr}.`,
      );
    }

    return new _directives.GraphQLDirective({
      name: directiveIntrospection.name,
      description: directiveIntrospection.description,
      isRepeatable: directiveIntrospection.isRepeatable,
      locations: directiveIntrospection.locations.slice(),
      args: buildInputValueDefMap(directiveIntrospection.args),
    });
  }
}


/***/ }),

/***/ 4743:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.coerceInputValue = coerceInputValue;

var _didYouMean = __nccwpck_require__(2878);

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _isIterableObject = __nccwpck_require__(1258);

var _isObjectLike = __nccwpck_require__(5865);

var _Path = __nccwpck_require__(1262);

var _printPathArray = __nccwpck_require__(4281);

var _suggestionList = __nccwpck_require__(7704);

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

/**
 * Coerces a JavaScript value given a GraphQL Input Type.
 */
function coerceInputValue(inputValue, type, onError = defaultOnError) {
  return coerceInputValueImpl(inputValue, type, onError, undefined);
}

function defaultOnError(path, invalidValue, error) {
  let errorPrefix = 'Invalid value ' + (0, _inspect.inspect)(invalidValue);

  if (path.length > 0) {
    errorPrefix += ` at "value${(0, _printPathArray.printPathArray)(path)}"`;
  }

  error.message = errorPrefix + ': ' + error.message;
  throw error;
}

function coerceInputValueImpl(inputValue, type, onError, path) {
  if ((0, _definition.isNonNullType)(type)) {
    if (inputValue != null) {
      return coerceInputValueImpl(inputValue, type.ofType, onError, path);
    }

    onError(
      (0, _Path.pathToArray)(path),
      inputValue,
      new _GraphQLError.GraphQLError(
        `Expected non-nullable type "${(0, _inspect.inspect)(
          type,
        )}" not to be null.`,
      ),
    );
    return;
  }

  if (inputValue == null) {
    // Explicitly return the value null.
    return null;
  }

  if ((0, _definition.isListType)(type)) {
    const itemType = type.ofType;

    if ((0, _isIterableObject.isIterableObject)(inputValue)) {
      return Array.from(inputValue, (itemValue, index) => {
        const itemPath = (0, _Path.addPath)(path, index, undefined);
        return coerceInputValueImpl(itemValue, itemType, onError, itemPath);
      });
    } // Lists accept a non-list value as a list of one.

    return [coerceInputValueImpl(inputValue, itemType, onError, path)];
  }

  if ((0, _definition.isInputObjectType)(type)) {
    if (!(0, _isObjectLike.isObjectLike)(inputValue)) {
      onError(
        (0, _Path.pathToArray)(path),
        inputValue,
        new _GraphQLError.GraphQLError(
          `Expected type "${type.name}" to be an object.`,
        ),
      );
      return;
    }

    const coercedValue = {};
    const fieldDefs = type.getFields();

    for (const field of Object.values(fieldDefs)) {
      const fieldValue = inputValue[field.name];

      if (fieldValue === undefined) {
        if (field.defaultValue !== undefined) {
          coercedValue[field.name] = field.defaultValue;
        } else if ((0, _definition.isNonNullType)(field.type)) {
          const typeStr = (0, _inspect.inspect)(field.type);
          onError(
            (0, _Path.pathToArray)(path),
            inputValue,
            new _GraphQLError.GraphQLError(
              `Field "${field.name}" of required type "${typeStr}" was not provided.`,
            ),
          );
        }

        continue;
      }

      coercedValue[field.name] = coerceInputValueImpl(
        fieldValue,
        field.type,
        onError,
        (0, _Path.addPath)(path, field.name, type.name),
      );
    } // Ensure every provided field is defined.

    for (const fieldName of Object.keys(inputValue)) {
      if (!fieldDefs[fieldName]) {
        const suggestions = (0, _suggestionList.suggestionList)(
          fieldName,
          Object.keys(type.getFields()),
        );
        onError(
          (0, _Path.pathToArray)(path),
          inputValue,
          new _GraphQLError.GraphQLError(
            `Field "${fieldName}" is not defined by type "${type.name}".` +
              (0, _didYouMean.didYouMean)(suggestions),
          ),
        );
      }
    }

    return coercedValue;
  }

  if ((0, _definition.isLeafType)(type)) {
    let parseResult; // Scalars and Enums determine if a input value is valid via parseValue(),
    // which can throw to indicate failure. If it throws, maintain a reference
    // to the original error.

    try {
      parseResult = type.parseValue(inputValue);
    } catch (error) {
      if (error instanceof _GraphQLError.GraphQLError) {
        onError((0, _Path.pathToArray)(path), inputValue, error);
      } else {
        onError(
          (0, _Path.pathToArray)(path),
          inputValue,
          new _GraphQLError.GraphQLError(
            `Expected type "${type.name}". ` + error.message,
            {
              originalError: error,
            },
          ),
        );
      }

      return;
    }

    if (parseResult === undefined) {
      onError(
        (0, _Path.pathToArray)(path),
        inputValue,
        new _GraphQLError.GraphQLError(`Expected type "${type.name}".`),
      );
    }

    return parseResult;
  }
  /* c8 ignore next 3 */
  // Not reachable, all possible types have been considered.

   false ||
    (0, _invariant.invariant)(
      false,
      'Unexpected input type: ' + (0, _inspect.inspect)(type),
    );
}


/***/ }),

/***/ 7232:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.concatAST = concatAST;

var _kinds = __nccwpck_require__(1927);

/**
 * Provided a collection of ASTs, presumably each from different files,
 * concatenate the ASTs together into batched AST, useful for validating many
 * GraphQL source files which together represent one conceptual application.
 */
function concatAST(documents) {
  const definitions = [];

  for (const doc of documents) {
    definitions.push(...doc.definitions);
  }

  return {
    kind: _kinds.Kind.DOCUMENT,
    definitions,
  };
}


/***/ }),

/***/ 1832:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.extendSchema = extendSchema;
exports.extendSchemaImpl = extendSchemaImpl;

var _devAssert = __nccwpck_require__(6514);

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _keyMap = __nccwpck_require__(711);

var _mapValue = __nccwpck_require__(2223);

var _kinds = __nccwpck_require__(1927);

var _predicates = __nccwpck_require__(535);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _introspection = __nccwpck_require__(8344);

var _scalars = __nccwpck_require__(3145);

var _schema = __nccwpck_require__(8505);

var _validate = __nccwpck_require__(4409);

var _values = __nccwpck_require__(4834);

var _valueFromAST = __nccwpck_require__(3181);

/**
 * Produces a new schema given an existing schema and a document which may
 * contain GraphQL type extensions and definitions. The original schema will
 * remain unaltered.
 *
 * Because a schema represents a graph of references, a schema cannot be
 * extended without effectively making an entire copy. We do not know until it's
 * too late if subgraphs remain unchanged.
 *
 * This algorithm copies the provided schema, applying extensions while
 * producing the copy. The original schema remains unaltered.
 */
function extendSchema(schema, documentAST, options) {
  (0, _schema.assertSchema)(schema);
  (documentAST != null && documentAST.kind === _kinds.Kind.DOCUMENT) ||
    (0, _devAssert.devAssert)(false, 'Must provide valid Document AST.');

  if (
    (options === null || options === void 0 ? void 0 : options.assumeValid) !==
      true &&
    (options === null || options === void 0
      ? void 0
      : options.assumeValidSDL) !== true
  ) {
    (0, _validate.assertValidSDLExtension)(documentAST, schema);
  }

  const schemaConfig = schema.toConfig();
  const extendedConfig = extendSchemaImpl(schemaConfig, documentAST, options);
  return schemaConfig === extendedConfig
    ? schema
    : new _schema.GraphQLSchema(extendedConfig);
}
/**
 * @internal
 */

function extendSchemaImpl(schemaConfig, documentAST, options) {
  var _schemaDef, _schemaDef$descriptio, _schemaDef2, _options$assumeValid;

  // Collect the type definitions and extensions found in the document.
  const typeDefs = [];
  const typeExtensionsMap = Object.create(null); // New directives and types are separate because a directives and types can
  // have the same name. For example, a type named "skip".

  const directiveDefs = [];
  let schemaDef; // Schema extensions are collected which may add additional operation types.

  const schemaExtensions = [];

  for (const def of documentAST.definitions) {
    if (def.kind === _kinds.Kind.SCHEMA_DEFINITION) {
      schemaDef = def;
    } else if (def.kind === _kinds.Kind.SCHEMA_EXTENSION) {
      schemaExtensions.push(def);
    } else if ((0, _predicates.isTypeDefinitionNode)(def)) {
      typeDefs.push(def);
    } else if ((0, _predicates.isTypeExtensionNode)(def)) {
      const extendedTypeName = def.name.value;
      const existingTypeExtensions = typeExtensionsMap[extendedTypeName];
      typeExtensionsMap[extendedTypeName] = existingTypeExtensions
        ? existingTypeExtensions.concat([def])
        : [def];
    } else if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {
      directiveDefs.push(def);
    }
  } // If this document contains no new types, extensions, or directives then
  // return the same unmodified GraphQLSchema instance.

  if (
    Object.keys(typeExtensionsMap).length === 0 &&
    typeDefs.length === 0 &&
    directiveDefs.length === 0 &&
    schemaExtensions.length === 0 &&
    schemaDef == null
  ) {
    return schemaConfig;
  }

  const typeMap = Object.create(null);

  for (const existingType of schemaConfig.types) {
    typeMap[existingType.name] = extendNamedType(existingType);
  }

  for (const typeNode of typeDefs) {
    var _stdTypeMap$name;

    const name = typeNode.name.value;
    typeMap[name] =
      (_stdTypeMap$name = stdTypeMap[name]) !== null &&
      _stdTypeMap$name !== void 0
        ? _stdTypeMap$name
        : buildType(typeNode);
  }

  const operationTypes = {
    // Get the extended root operation types.
    query: schemaConfig.query && replaceNamedType(schemaConfig.query),
    mutation: schemaConfig.mutation && replaceNamedType(schemaConfig.mutation),
    subscription:
      schemaConfig.subscription && replaceNamedType(schemaConfig.subscription),
    // Then, incorporate schema definition and all schema extensions.
    ...(schemaDef && getOperationTypes([schemaDef])),
    ...getOperationTypes(schemaExtensions),
  }; // Then produce and return a Schema config with these types.

  return {
    description:
      (_schemaDef = schemaDef) === null || _schemaDef === void 0
        ? void 0
        : (_schemaDef$descriptio = _schemaDef.description) === null ||
          _schemaDef$descriptio === void 0
        ? void 0
        : _schemaDef$descriptio.value,
    ...operationTypes,
    types: Object.values(typeMap),
    directives: [
      ...schemaConfig.directives.map(replaceDirective),
      ...directiveDefs.map(buildDirective),
    ],
    extensions: Object.create(null),
    astNode:
      (_schemaDef2 = schemaDef) !== null && _schemaDef2 !== void 0
        ? _schemaDef2
        : schemaConfig.astNode,
    extensionASTNodes: schemaConfig.extensionASTNodes.concat(schemaExtensions),
    assumeValid:
      (_options$assumeValid =
        options === null || options === void 0
          ? void 0
          : options.assumeValid) !== null && _options$assumeValid !== void 0
        ? _options$assumeValid
        : false,
  }; // Below are functions used for producing this schema that have closed over
  // this scope and have access to the schema, cache, and newly defined types.

  function replaceType(type) {
    if ((0, _definition.isListType)(type)) {
      // @ts-expect-error
      return new _definition.GraphQLList(replaceType(type.ofType));
    }

    if ((0, _definition.isNonNullType)(type)) {
      // @ts-expect-error
      return new _definition.GraphQLNonNull(replaceType(type.ofType));
    } // @ts-expect-error FIXME

    return replaceNamedType(type);
  }

  function replaceNamedType(type) {
    // Note: While this could make early assertions to get the correctly
    // typed values, that would throw immediately while type system
    // validation with validateSchema() will produce more actionable results.
    return typeMap[type.name];
  }

  function replaceDirective(directive) {
    const config = directive.toConfig();
    return new _directives.GraphQLDirective({
      ...config,
      args: (0, _mapValue.mapValue)(config.args, extendArg),
    });
  }

  function extendNamedType(type) {
    if (
      (0, _introspection.isIntrospectionType)(type) ||
      (0, _scalars.isSpecifiedScalarType)(type)
    ) {
      // Builtin types are not extended.
      return type;
    }

    if ((0, _definition.isScalarType)(type)) {
      return extendScalarType(type);
    }

    if ((0, _definition.isObjectType)(type)) {
      return extendObjectType(type);
    }

    if ((0, _definition.isInterfaceType)(type)) {
      return extendInterfaceType(type);
    }

    if ((0, _definition.isUnionType)(type)) {
      return extendUnionType(type);
    }

    if ((0, _definition.isEnumType)(type)) {
      return extendEnumType(type);
    }

    if ((0, _definition.isInputObjectType)(type)) {
      return extendInputObjectType(type);
    }
    /* c8 ignore next 3 */
    // Not reachable, all possible type definition nodes have been considered.

     false ||
      (0, _invariant.invariant)(
        false,
        'Unexpected type: ' + (0, _inspect.inspect)(type),
      );
  }

  function extendInputObjectType(type) {
    var _typeExtensionsMap$co;

    const config = type.toConfig();
    const extensions =
      (_typeExtensionsMap$co = typeExtensionsMap[config.name]) !== null &&
      _typeExtensionsMap$co !== void 0
        ? _typeExtensionsMap$co
        : [];
    return new _definition.GraphQLInputObjectType({
      ...config,
      fields: () => ({
        ...(0, _mapValue.mapValue)(config.fields, (field) => ({
          ...field,
          type: replaceType(field.type),
        })),
        ...buildInputFieldMap(extensions),
      }),
      extensionASTNodes: config.extensionASTNodes.concat(extensions),
    });
  }

  function extendEnumType(type) {
    var _typeExtensionsMap$ty;

    const config = type.toConfig();
    const extensions =
      (_typeExtensionsMap$ty = typeExtensionsMap[type.name]) !== null &&
      _typeExtensionsMap$ty !== void 0
        ? _typeExtensionsMap$ty
        : [];
    return new _definition.GraphQLEnumType({
      ...config,
      values: { ...config.values, ...buildEnumValueMap(extensions) },
      extensionASTNodes: config.extensionASTNodes.concat(extensions),
    });
  }

  function extendScalarType(type) {
    var _typeExtensionsMap$co2;

    const config = type.toConfig();
    const extensions =
      (_typeExtensionsMap$co2 = typeExtensionsMap[config.name]) !== null &&
      _typeExtensionsMap$co2 !== void 0
        ? _typeExtensionsMap$co2
        : [];
    let specifiedByURL = config.specifiedByURL;

    for (const extensionNode of extensions) {
      var _getSpecifiedByURL;

      specifiedByURL =
        (_getSpecifiedByURL = getSpecifiedByURL(extensionNode)) !== null &&
        _getSpecifiedByURL !== void 0
          ? _getSpecifiedByURL
          : specifiedByURL;
    }

    return new _definition.GraphQLScalarType({
      ...config,
      specifiedByURL,
      extensionASTNodes: config.extensionASTNodes.concat(extensions),
    });
  }

  function extendObjectType(type) {
    var _typeExtensionsMap$co3;

    const config = type.toConfig();
    const extensions =
      (_typeExtensionsMap$co3 = typeExtensionsMap[config.name]) !== null &&
      _typeExtensionsMap$co3 !== void 0
        ? _typeExtensionsMap$co3
        : [];
    return new _definition.GraphQLObjectType({
      ...config,
      interfaces: () => [
        ...type.getInterfaces().map(replaceNamedType),
        ...buildInterfaces(extensions),
      ],
      fields: () => ({
        ...(0, _mapValue.mapValue)(config.fields, extendField),
        ...buildFieldMap(extensions),
      }),
      extensionASTNodes: config.extensionASTNodes.concat(extensions),
    });
  }

  function extendInterfaceType(type) {
    var _typeExtensionsMap$co4;

    const config = type.toConfig();
    const extensions =
      (_typeExtensionsMap$co4 = typeExtensionsMap[config.name]) !== null &&
      _typeExtensionsMap$co4 !== void 0
        ? _typeExtensionsMap$co4
        : [];
    return new _definition.GraphQLInterfaceType({
      ...config,
      interfaces: () => [
        ...type.getInterfaces().map(replaceNamedType),
        ...buildInterfaces(extensions),
      ],
      fields: () => ({
        ...(0, _mapValue.mapValue)(config.fields, extendField),
        ...buildFieldMap(extensions),
      }),
      extensionASTNodes: config.extensionASTNodes.concat(extensions),
    });
  }

  function extendUnionType(type) {
    var _typeExtensionsMap$co5;

    const config = type.toConfig();
    const extensions =
      (_typeExtensionsMap$co5 = typeExtensionsMap[config.name]) !== null &&
      _typeExtensionsMap$co5 !== void 0
        ? _typeExtensionsMap$co5
        : [];
    return new _definition.GraphQLUnionType({
      ...config,
      types: () => [
        ...type.getTypes().map(replaceNamedType),
        ...buildUnionTypes(extensions),
      ],
      extensionASTNodes: config.extensionASTNodes.concat(extensions),
    });
  }

  function extendField(field) {
    return {
      ...field,
      type: replaceType(field.type),
      args: field.args && (0, _mapValue.mapValue)(field.args, extendArg),
    };
  }

  function extendArg(arg) {
    return { ...arg, type: replaceType(arg.type) };
  }

  function getOperationTypes(nodes) {
    const opTypes = {};

    for (const node of nodes) {
      var _node$operationTypes;

      // FIXME: https://github.com/graphql/graphql-js/issues/2203
      const operationTypesNodes =
        /* c8 ignore next */
        (_node$operationTypes = node.operationTypes) !== null &&
        _node$operationTypes !== void 0
          ? _node$operationTypes
          : [];

      for (const operationType of operationTypesNodes) {
        // Note: While this could make early assertions to get the correctly
        // typed values below, that would throw immediately while type system
        // validation with validateSchema() will produce more actionable results.
        // @ts-expect-error
        opTypes[operationType.operation] = getNamedType(operationType.type);
      }
    }

    return opTypes;
  }

  function getNamedType(node) {
    var _stdTypeMap$name2;

    const name = node.name.value;
    const type =
      (_stdTypeMap$name2 = stdTypeMap[name]) !== null &&
      _stdTypeMap$name2 !== void 0
        ? _stdTypeMap$name2
        : typeMap[name];

    if (type === undefined) {
      throw new Error(`Unknown type: "${name}".`);
    }

    return type;
  }

  function getWrappedType(node) {
    if (node.kind === _kinds.Kind.LIST_TYPE) {
      return new _definition.GraphQLList(getWrappedType(node.type));
    }

    if (node.kind === _kinds.Kind.NON_NULL_TYPE) {
      return new _definition.GraphQLNonNull(getWrappedType(node.type));
    }

    return getNamedType(node);
  }

  function buildDirective(node) {
    var _node$description;

    return new _directives.GraphQLDirective({
      name: node.name.value,
      description:
        (_node$description = node.description) === null ||
        _node$description === void 0
          ? void 0
          : _node$description.value,
      // @ts-expect-error
      locations: node.locations.map(({ value }) => value),
      isRepeatable: node.repeatable,
      args: buildArgumentMap(node.arguments),
      astNode: node,
    });
  }

  function buildFieldMap(nodes) {
    const fieldConfigMap = Object.create(null);

    for (const node of nodes) {
      var _node$fields;

      // FIXME: https://github.com/graphql/graphql-js/issues/2203
      const nodeFields =
        /* c8 ignore next */
        (_node$fields = node.fields) !== null && _node$fields !== void 0
          ? _node$fields
          : [];

      for (const field of nodeFields) {
        var _field$description;

        fieldConfigMap[field.name.value] = {
          // Note: While this could make assertions to get the correctly typed
          // value, that would throw immediately while type system validation
          // with validateSchema() will produce more actionable results.
          type: getWrappedType(field.type),
          description:
            (_field$description = field.description) === null ||
            _field$description === void 0
              ? void 0
              : _field$description.value,
          args: buildArgumentMap(field.arguments),
          deprecationReason: getDeprecationReason(field),
          astNode: field,
        };
      }
    }

    return fieldConfigMap;
  }

  function buildArgumentMap(args) {
    // FIXME: https://github.com/graphql/graphql-js/issues/2203
    const argsNodes =
      /* c8 ignore next */
      args !== null && args !== void 0 ? args : [];
    const argConfigMap = Object.create(null);

    for (const arg of argsNodes) {
      var _arg$description;

      // Note: While this could make assertions to get the correctly typed
      // value, that would throw immediately while type system validation
      // with validateSchema() will produce more actionable results.
      const type = getWrappedType(arg.type);
      argConfigMap[arg.name.value] = {
        type,
        description:
          (_arg$description = arg.description) === null ||
          _arg$description === void 0
            ? void 0
            : _arg$description.value,
        defaultValue: (0, _valueFromAST.valueFromAST)(arg.defaultValue, type),
        deprecationReason: getDeprecationReason(arg),
        astNode: arg,
      };
    }

    return argConfigMap;
  }

  function buildInputFieldMap(nodes) {
    const inputFieldMap = Object.create(null);

    for (const node of nodes) {
      var _node$fields2;

      // FIXME: https://github.com/graphql/graphql-js/issues/2203
      const fieldsNodes =
        /* c8 ignore next */
        (_node$fields2 = node.fields) !== null && _node$fields2 !== void 0
          ? _node$fields2
          : [];

      for (const field of fieldsNodes) {
        var _field$description2;

        // Note: While this could make assertions to get the correctly typed
        // value, that would throw immediately while type system validation
        // with validateSchema() will produce more actionable results.
        const type = getWrappedType(field.type);
        inputFieldMap[field.name.value] = {
          type,
          description:
            (_field$description2 = field.description) === null ||
            _field$description2 === void 0
              ? void 0
              : _field$description2.value,
          defaultValue: (0, _valueFromAST.valueFromAST)(
            field.defaultValue,
            type,
          ),
          deprecationReason: getDeprecationReason(field),
          astNode: field,
        };
      }
    }

    return inputFieldMap;
  }

  function buildEnumValueMap(nodes) {
    const enumValueMap = Object.create(null);

    for (const node of nodes) {
      var _node$values;

      // FIXME: https://github.com/graphql/graphql-js/issues/2203
      const valuesNodes =
        /* c8 ignore next */
        (_node$values = node.values) !== null && _node$values !== void 0
          ? _node$values
          : [];

      for (const value of valuesNodes) {
        var _value$description;

        enumValueMap[value.name.value] = {
          description:
            (_value$description = value.description) === null ||
            _value$description === void 0
              ? void 0
              : _value$description.value,
          deprecationReason: getDeprecationReason(value),
          astNode: value,
        };
      }
    }

    return enumValueMap;
  }

  function buildInterfaces(nodes) {
    // Note: While this could make assertions to get the correctly typed
    // values below, that would throw immediately while type system
    // validation with validateSchema() will produce more actionable results.
    // @ts-expect-error
    return nodes.flatMap(
      // FIXME: https://github.com/graphql/graphql-js/issues/2203
      (node) => {
        var _node$interfaces$map, _node$interfaces;

        return (
          /* c8 ignore next */
          (_node$interfaces$map =
            (_node$interfaces = node.interfaces) === null ||
            _node$interfaces === void 0
              ? void 0
              : _node$interfaces.map(getNamedType)) !== null &&
            _node$interfaces$map !== void 0
            ? _node$interfaces$map
            : []
        );
      },
    );
  }

  function buildUnionTypes(nodes) {
    // Note: While this could make assertions to get the correctly typed
    // values below, that would throw immediately while type system
    // validation with validateSchema() will produce more actionable results.
    // @ts-expect-error
    return nodes.flatMap(
      // FIXME: https://github.com/graphql/graphql-js/issues/2203
      (node) => {
        var _node$types$map, _node$types;

        return (
          /* c8 ignore next */
          (_node$types$map =
            (_node$types = node.types) === null || _node$types === void 0
              ? void 0
              : _node$types.map(getNamedType)) !== null &&
            _node$types$map !== void 0
            ? _node$types$map
            : []
        );
      },
    );
  }

  function buildType(astNode) {
    var _typeExtensionsMap$na;

    const name = astNode.name.value;
    const extensionASTNodes =
      (_typeExtensionsMap$na = typeExtensionsMap[name]) !== null &&
      _typeExtensionsMap$na !== void 0
        ? _typeExtensionsMap$na
        : [];

    switch (astNode.kind) {
      case _kinds.Kind.OBJECT_TYPE_DEFINITION: {
        var _astNode$description;

        const allNodes = [astNode, ...extensionASTNodes];
        return new _definition.GraphQLObjectType({
          name,
          description:
            (_astNode$description = astNode.description) === null ||
            _astNode$description === void 0
              ? void 0
              : _astNode$description.value,
          interfaces: () => buildInterfaces(allNodes),
          fields: () => buildFieldMap(allNodes),
          astNode,
          extensionASTNodes,
        });
      }

      case _kinds.Kind.INTERFACE_TYPE_DEFINITION: {
        var _astNode$description2;

        const allNodes = [astNode, ...extensionASTNodes];
        return new _definition.GraphQLInterfaceType({
          name,
          description:
            (_astNode$description2 = astNode.description) === null ||
            _astNode$description2 === void 0
              ? void 0
              : _astNode$description2.value,
          interfaces: () => buildInterfaces(allNodes),
          fields: () => buildFieldMap(allNodes),
          astNode,
          extensionASTNodes,
        });
      }

      case _kinds.Kind.ENUM_TYPE_DEFINITION: {
        var _astNode$description3;

        const allNodes = [astNode, ...extensionASTNodes];
        return new _definition.GraphQLEnumType({
          name,
          description:
            (_astNode$description3 = astNode.description) === null ||
            _astNode$description3 === void 0
              ? void 0
              : _astNode$description3.value,
          values: buildEnumValueMap(allNodes),
          astNode,
          extensionASTNodes,
        });
      }

      case _kinds.Kind.UNION_TYPE_DEFINITION: {
        var _astNode$description4;

        const allNodes = [astNode, ...extensionASTNodes];
        return new _definition.GraphQLUnionType({
          name,
          description:
            (_astNode$description4 = astNode.description) === null ||
            _astNode$description4 === void 0
              ? void 0
              : _astNode$description4.value,
          types: () => buildUnionTypes(allNodes),
          astNode,
          extensionASTNodes,
        });
      }

      case _kinds.Kind.SCALAR_TYPE_DEFINITION: {
        var _astNode$description5;

        return new _definition.GraphQLScalarType({
          name,
          description:
            (_astNode$description5 = astNode.description) === null ||
            _astNode$description5 === void 0
              ? void 0
              : _astNode$description5.value,
          specifiedByURL: getSpecifiedByURL(astNode),
          astNode,
          extensionASTNodes,
        });
      }

      case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION: {
        var _astNode$description6;

        const allNodes = [astNode, ...extensionASTNodes];
        return new _definition.GraphQLInputObjectType({
          name,
          description:
            (_astNode$description6 = astNode.description) === null ||
            _astNode$description6 === void 0
              ? void 0
              : _astNode$description6.value,
          fields: () => buildInputFieldMap(allNodes),
          astNode,
          extensionASTNodes,
        });
      }
    }
  }
}

const stdTypeMap = (0, _keyMap.keyMap)(
  [..._scalars.specifiedScalarTypes, ..._introspection.introspectionTypes],
  (type) => type.name,
);
/**
 * Given a field or enum value node, returns the string value for the
 * deprecation reason.
 */

function getDeprecationReason(node) {
  const deprecated = (0, _values.getDirectiveValues)(
    _directives.GraphQLDeprecatedDirective,
    node,
  ); // @ts-expect-error validated by `getDirectiveValues`

  return deprecated === null || deprecated === void 0
    ? void 0
    : deprecated.reason;
}
/**
 * Given a scalar node, returns the string value for the specifiedByURL.
 */

function getSpecifiedByURL(node) {
  const specifiedBy = (0, _values.getDirectiveValues)(
    _directives.GraphQLSpecifiedByDirective,
    node,
  ); // @ts-expect-error validated by `getDirectiveValues`

  return specifiedBy === null || specifiedBy === void 0
    ? void 0
    : specifiedBy.url;
}


/***/ }),

/***/ 9366:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.DangerousChangeType = exports.BreakingChangeType = void 0;
exports.findBreakingChanges = findBreakingChanges;
exports.findDangerousChanges = findDangerousChanges;

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _keyMap = __nccwpck_require__(711);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

var _scalars = __nccwpck_require__(3145);

var _astFromValue = __nccwpck_require__(2653);

var _sortValueNode = __nccwpck_require__(2278);

var BreakingChangeType;
exports.BreakingChangeType = BreakingChangeType;

(function (BreakingChangeType) {
  BreakingChangeType['TYPE_REMOVED'] = 'TYPE_REMOVED';
  BreakingChangeType['TYPE_CHANGED_KIND'] = 'TYPE_CHANGED_KIND';
  BreakingChangeType['TYPE_REMOVED_FROM_UNION'] = 'TYPE_REMOVED_FROM_UNION';
  BreakingChangeType['VALUE_REMOVED_FROM_ENUM'] = 'VALUE_REMOVED_FROM_ENUM';
  BreakingChangeType['REQUIRED_INPUT_FIELD_ADDED'] =
    'REQUIRED_INPUT_FIELD_ADDED';
  BreakingChangeType['IMPLEMENTED_INTERFACE_REMOVED'] =
    'IMPLEMENTED_INTERFACE_REMOVED';
  BreakingChangeType['FIELD_REMOVED'] = 'FIELD_REMOVED';
  BreakingChangeType['FIELD_CHANGED_KIND'] = 'FIELD_CHANGED_KIND';
  BreakingChangeType['REQUIRED_ARG_ADDED'] = 'REQUIRED_ARG_ADDED';
  BreakingChangeType['ARG_REMOVED'] = 'ARG_REMOVED';
  BreakingChangeType['ARG_CHANGED_KIND'] = 'ARG_CHANGED_KIND';
  BreakingChangeType['DIRECTIVE_REMOVED'] = 'DIRECTIVE_REMOVED';
  BreakingChangeType['DIRECTIVE_ARG_REMOVED'] = 'DIRECTIVE_ARG_REMOVED';
  BreakingChangeType['REQUIRED_DIRECTIVE_ARG_ADDED'] =
    'REQUIRED_DIRECTIVE_ARG_ADDED';
  BreakingChangeType['DIRECTIVE_REPEATABLE_REMOVED'] =
    'DIRECTIVE_REPEATABLE_REMOVED';
  BreakingChangeType['DIRECTIVE_LOCATION_REMOVED'] =
    'DIRECTIVE_LOCATION_REMOVED';
})(
  BreakingChangeType || (exports.BreakingChangeType = BreakingChangeType = {}),
);

var DangerousChangeType;
exports.DangerousChangeType = DangerousChangeType;

(function (DangerousChangeType) {
  DangerousChangeType['VALUE_ADDED_TO_ENUM'] = 'VALUE_ADDED_TO_ENUM';
  DangerousChangeType['TYPE_ADDED_TO_UNION'] = 'TYPE_ADDED_TO_UNION';
  DangerousChangeType['OPTIONAL_INPUT_FIELD_ADDED'] =
    'OPTIONAL_INPUT_FIELD_ADDED';
  DangerousChangeType['OPTIONAL_ARG_ADDED'] = 'OPTIONAL_ARG_ADDED';
  DangerousChangeType['IMPLEMENTED_INTERFACE_ADDED'] =
    'IMPLEMENTED_INTERFACE_ADDED';
  DangerousChangeType['ARG_DEFAULT_VALUE_CHANGE'] = 'ARG_DEFAULT_VALUE_CHANGE';
})(
  DangerousChangeType ||
    (exports.DangerousChangeType = DangerousChangeType = {}),
);

/**
 * Given two schemas, returns an Array containing descriptions of all the types
 * of breaking changes covered by the other functions down below.
 */
function findBreakingChanges(oldSchema, newSchema) {
  // @ts-expect-error
  return findSchemaChanges(oldSchema, newSchema).filter(
    (change) => change.type in BreakingChangeType,
  );
}
/**
 * Given two schemas, returns an Array containing descriptions of all the types
 * of potentially dangerous changes covered by the other functions down below.
 */

function findDangerousChanges(oldSchema, newSchema) {
  // @ts-expect-error
  return findSchemaChanges(oldSchema, newSchema).filter(
    (change) => change.type in DangerousChangeType,
  );
}

function findSchemaChanges(oldSchema, newSchema) {
  return [
    ...findTypeChanges(oldSchema, newSchema),
    ...findDirectiveChanges(oldSchema, newSchema),
  ];
}

function findDirectiveChanges(oldSchema, newSchema) {
  const schemaChanges = [];
  const directivesDiff = diff(
    oldSchema.getDirectives(),
    newSchema.getDirectives(),
  );

  for (const oldDirective of directivesDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.DIRECTIVE_REMOVED,
      description: `${oldDirective.name} was removed.`,
    });
  }

  for (const [oldDirective, newDirective] of directivesDiff.persisted) {
    const argsDiff = diff(oldDirective.args, newDirective.args);

    for (const newArg of argsDiff.added) {
      if ((0, _definition.isRequiredArgument)(newArg)) {
        schemaChanges.push({
          type: BreakingChangeType.REQUIRED_DIRECTIVE_ARG_ADDED,
          description: `A required arg ${newArg.name} on directive ${oldDirective.name} was added.`,
        });
      }
    }

    for (const oldArg of argsDiff.removed) {
      schemaChanges.push({
        type: BreakingChangeType.DIRECTIVE_ARG_REMOVED,
        description: `${oldArg.name} was removed from ${oldDirective.name}.`,
      });
    }

    if (oldDirective.isRepeatable && !newDirective.isRepeatable) {
      schemaChanges.push({
        type: BreakingChangeType.DIRECTIVE_REPEATABLE_REMOVED,
        description: `Repeatable flag was removed from ${oldDirective.name}.`,
      });
    }

    for (const location of oldDirective.locations) {
      if (!newDirective.locations.includes(location)) {
        schemaChanges.push({
          type: BreakingChangeType.DIRECTIVE_LOCATION_REMOVED,
          description: `${location} was removed from ${oldDirective.name}.`,
        });
      }
    }
  }

  return schemaChanges;
}

function findTypeChanges(oldSchema, newSchema) {
  const schemaChanges = [];
  const typesDiff = diff(
    Object.values(oldSchema.getTypeMap()),
    Object.values(newSchema.getTypeMap()),
  );

  for (const oldType of typesDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.TYPE_REMOVED,
      description: (0, _scalars.isSpecifiedScalarType)(oldType)
        ? `Standard scalar ${oldType.name} was removed because it is not referenced anymore.`
        : `${oldType.name} was removed.`,
    });
  }

  for (const [oldType, newType] of typesDiff.persisted) {
    if (
      (0, _definition.isEnumType)(oldType) &&
      (0, _definition.isEnumType)(newType)
    ) {
      schemaChanges.push(...findEnumTypeChanges(oldType, newType));
    } else if (
      (0, _definition.isUnionType)(oldType) &&
      (0, _definition.isUnionType)(newType)
    ) {
      schemaChanges.push(...findUnionTypeChanges(oldType, newType));
    } else if (
      (0, _definition.isInputObjectType)(oldType) &&
      (0, _definition.isInputObjectType)(newType)
    ) {
      schemaChanges.push(...findInputObjectTypeChanges(oldType, newType));
    } else if (
      (0, _definition.isObjectType)(oldType) &&
      (0, _definition.isObjectType)(newType)
    ) {
      schemaChanges.push(
        ...findFieldChanges(oldType, newType),
        ...findImplementedInterfacesChanges(oldType, newType),
      );
    } else if (
      (0, _definition.isInterfaceType)(oldType) &&
      (0, _definition.isInterfaceType)(newType)
    ) {
      schemaChanges.push(
        ...findFieldChanges(oldType, newType),
        ...findImplementedInterfacesChanges(oldType, newType),
      );
    } else if (oldType.constructor !== newType.constructor) {
      schemaChanges.push({
        type: BreakingChangeType.TYPE_CHANGED_KIND,
        description:
          `${oldType.name} changed from ` +
          `${typeKindName(oldType)} to ${typeKindName(newType)}.`,
      });
    }
  }

  return schemaChanges;
}

function findInputObjectTypeChanges(oldType, newType) {
  const schemaChanges = [];
  const fieldsDiff = diff(
    Object.values(oldType.getFields()),
    Object.values(newType.getFields()),
  );

  for (const newField of fieldsDiff.added) {
    if ((0, _definition.isRequiredInputField)(newField)) {
      schemaChanges.push({
        type: BreakingChangeType.REQUIRED_INPUT_FIELD_ADDED,
        description: `A required field ${newField.name} on input type ${oldType.name} was added.`,
      });
    } else {
      schemaChanges.push({
        type: DangerousChangeType.OPTIONAL_INPUT_FIELD_ADDED,
        description: `An optional field ${newField.name} on input type ${oldType.name} was added.`,
      });
    }
  }

  for (const oldField of fieldsDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.FIELD_REMOVED,
      description: `${oldType.name}.${oldField.name} was removed.`,
    });
  }

  for (const [oldField, newField] of fieldsDiff.persisted) {
    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(
      oldField.type,
      newField.type,
    );

    if (!isSafe) {
      schemaChanges.push({
        type: BreakingChangeType.FIELD_CHANGED_KIND,
        description:
          `${oldType.name}.${oldField.name} changed type from ` +
          `${String(oldField.type)} to ${String(newField.type)}.`,
      });
    }
  }

  return schemaChanges;
}

function findUnionTypeChanges(oldType, newType) {
  const schemaChanges = [];
  const possibleTypesDiff = diff(oldType.getTypes(), newType.getTypes());

  for (const newPossibleType of possibleTypesDiff.added) {
    schemaChanges.push({
      type: DangerousChangeType.TYPE_ADDED_TO_UNION,
      description: `${newPossibleType.name} was added to union type ${oldType.name}.`,
    });
  }

  for (const oldPossibleType of possibleTypesDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.TYPE_REMOVED_FROM_UNION,
      description: `${oldPossibleType.name} was removed from union type ${oldType.name}.`,
    });
  }

  return schemaChanges;
}

function findEnumTypeChanges(oldType, newType) {
  const schemaChanges = [];
  const valuesDiff = diff(oldType.getValues(), newType.getValues());

  for (const newValue of valuesDiff.added) {
    schemaChanges.push({
      type: DangerousChangeType.VALUE_ADDED_TO_ENUM,
      description: `${newValue.name} was added to enum type ${oldType.name}.`,
    });
  }

  for (const oldValue of valuesDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.VALUE_REMOVED_FROM_ENUM,
      description: `${oldValue.name} was removed from enum type ${oldType.name}.`,
    });
  }

  return schemaChanges;
}

function findImplementedInterfacesChanges(oldType, newType) {
  const schemaChanges = [];
  const interfacesDiff = diff(oldType.getInterfaces(), newType.getInterfaces());

  for (const newInterface of interfacesDiff.added) {
    schemaChanges.push({
      type: DangerousChangeType.IMPLEMENTED_INTERFACE_ADDED,
      description: `${newInterface.name} added to interfaces implemented by ${oldType.name}.`,
    });
  }

  for (const oldInterface of interfacesDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.IMPLEMENTED_INTERFACE_REMOVED,
      description: `${oldType.name} no longer implements interface ${oldInterface.name}.`,
    });
  }

  return schemaChanges;
}

function findFieldChanges(oldType, newType) {
  const schemaChanges = [];
  const fieldsDiff = diff(
    Object.values(oldType.getFields()),
    Object.values(newType.getFields()),
  );

  for (const oldField of fieldsDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.FIELD_REMOVED,
      description: `${oldType.name}.${oldField.name} was removed.`,
    });
  }

  for (const [oldField, newField] of fieldsDiff.persisted) {
    schemaChanges.push(...findArgChanges(oldType, oldField, newField));
    const isSafe = isChangeSafeForObjectOrInterfaceField(
      oldField.type,
      newField.type,
    );

    if (!isSafe) {
      schemaChanges.push({
        type: BreakingChangeType.FIELD_CHANGED_KIND,
        description:
          `${oldType.name}.${oldField.name} changed type from ` +
          `${String(oldField.type)} to ${String(newField.type)}.`,
      });
    }
  }

  return schemaChanges;
}

function findArgChanges(oldType, oldField, newField) {
  const schemaChanges = [];
  const argsDiff = diff(oldField.args, newField.args);

  for (const oldArg of argsDiff.removed) {
    schemaChanges.push({
      type: BreakingChangeType.ARG_REMOVED,
      description: `${oldType.name}.${oldField.name} arg ${oldArg.name} was removed.`,
    });
  }

  for (const [oldArg, newArg] of argsDiff.persisted) {
    const isSafe = isChangeSafeForInputObjectFieldOrFieldArg(
      oldArg.type,
      newArg.type,
    );

    if (!isSafe) {
      schemaChanges.push({
        type: BreakingChangeType.ARG_CHANGED_KIND,
        description:
          `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed type from ` +
          `${String(oldArg.type)} to ${String(newArg.type)}.`,
      });
    } else if (oldArg.defaultValue !== undefined) {
      if (newArg.defaultValue === undefined) {
        schemaChanges.push({
          type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,
          description: `${oldType.name}.${oldField.name} arg ${oldArg.name} defaultValue was removed.`,
        });
      } else {
        // Since we looking only for client's observable changes we should
        // compare default values in the same representation as they are
        // represented inside introspection.
        const oldValueStr = stringifyValue(oldArg.defaultValue, oldArg.type);
        const newValueStr = stringifyValue(newArg.defaultValue, newArg.type);

        if (oldValueStr !== newValueStr) {
          schemaChanges.push({
            type: DangerousChangeType.ARG_DEFAULT_VALUE_CHANGE,
            description: `${oldType.name}.${oldField.name} arg ${oldArg.name} has changed defaultValue from ${oldValueStr} to ${newValueStr}.`,
          });
        }
      }
    }
  }

  for (const newArg of argsDiff.added) {
    if ((0, _definition.isRequiredArgument)(newArg)) {
      schemaChanges.push({
        type: BreakingChangeType.REQUIRED_ARG_ADDED,
        description: `A required arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,
      });
    } else {
      schemaChanges.push({
        type: DangerousChangeType.OPTIONAL_ARG_ADDED,
        description: `An optional arg ${newArg.name} on ${oldType.name}.${oldField.name} was added.`,
      });
    }
  }

  return schemaChanges;
}

function isChangeSafeForObjectOrInterfaceField(oldType, newType) {
  if ((0, _definition.isListType)(oldType)) {
    return (
      // if they're both lists, make sure the underlying types are compatible
      ((0, _definition.isListType)(newType) &&
        isChangeSafeForObjectOrInterfaceField(
          oldType.ofType,
          newType.ofType,
        )) || // moving from nullable to non-null of the same underlying type is safe
      ((0, _definition.isNonNullType)(newType) &&
        isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))
    );
  }

  if ((0, _definition.isNonNullType)(oldType)) {
    // if they're both non-null, make sure the underlying types are compatible
    return (
      (0, _definition.isNonNullType)(newType) &&
      isChangeSafeForObjectOrInterfaceField(oldType.ofType, newType.ofType)
    );
  }

  return (
    // if they're both named types, see if their names are equivalent
    ((0, _definition.isNamedType)(newType) && oldType.name === newType.name) || // moving from nullable to non-null of the same underlying type is safe
    ((0, _definition.isNonNullType)(newType) &&
      isChangeSafeForObjectOrInterfaceField(oldType, newType.ofType))
  );
}

function isChangeSafeForInputObjectFieldOrFieldArg(oldType, newType) {
  if ((0, _definition.isListType)(oldType)) {
    // if they're both lists, make sure the underlying types are compatible
    return (
      (0, _definition.isListType)(newType) &&
      isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType.ofType)
    );
  }

  if ((0, _definition.isNonNullType)(oldType)) {
    return (
      // if they're both non-null, make sure the underlying types are
      // compatible
      ((0, _definition.isNonNullType)(newType) &&
        isChangeSafeForInputObjectFieldOrFieldArg(
          oldType.ofType,
          newType.ofType,
        )) || // moving from non-null to nullable of the same underlying type is safe
      (!(0, _definition.isNonNullType)(newType) &&
        isChangeSafeForInputObjectFieldOrFieldArg(oldType.ofType, newType))
    );
  } // if they're both named types, see if their names are equivalent

  return (0, _definition.isNamedType)(newType) && oldType.name === newType.name;
}

function typeKindName(type) {
  if ((0, _definition.isScalarType)(type)) {
    return 'a Scalar type';
  }

  if ((0, _definition.isObjectType)(type)) {
    return 'an Object type';
  }

  if ((0, _definition.isInterfaceType)(type)) {
    return 'an Interface type';
  }

  if ((0, _definition.isUnionType)(type)) {
    return 'a Union type';
  }

  if ((0, _definition.isEnumType)(type)) {
    return 'an Enum type';
  }

  if ((0, _definition.isInputObjectType)(type)) {
    return 'an Input type';
  }
  /* c8 ignore next 3 */
  // Not reachable, all possible types have been considered.

   false ||
    (0, _invariant.invariant)(
      false,
      'Unexpected type: ' + (0, _inspect.inspect)(type),
    );
}

function stringifyValue(value, type) {
  const ast = (0, _astFromValue.astFromValue)(value, type);
  ast != null || (0, _invariant.invariant)(false);
  return (0, _printer.print)((0, _sortValueNode.sortValueNode)(ast));
}

function diff(oldArray, newArray) {
  const added = [];
  const removed = [];
  const persisted = [];
  const oldMap = (0, _keyMap.keyMap)(oldArray, ({ name }) => name);
  const newMap = (0, _keyMap.keyMap)(newArray, ({ name }) => name);

  for (const oldItem of oldArray) {
    const newItem = newMap[oldItem.name];

    if (newItem === undefined) {
      removed.push(oldItem);
    } else {
      persisted.push([oldItem, newItem]);
    }
  }

  for (const newItem of newArray) {
    if (oldMap[newItem.name] === undefined) {
      added.push(newItem);
    }
  }

  return {
    added,
    persisted,
    removed,
  };
}


/***/ }),

/***/ 747:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.getIntrospectionQuery = getIntrospectionQuery;

/**
 * Produce the GraphQL query recommended for a full schema introspection.
 * Accepts optional IntrospectionOptions.
 */
function getIntrospectionQuery(options) {
  const optionsWithDefault = {
    descriptions: true,
    specifiedByUrl: false,
    directiveIsRepeatable: false,
    schemaDescription: false,
    inputValueDeprecation: false,
    ...options,
  };
  const descriptions = optionsWithDefault.descriptions ? 'description' : '';
  const specifiedByUrl = optionsWithDefault.specifiedByUrl
    ? 'specifiedByURL'
    : '';
  const directiveIsRepeatable = optionsWithDefault.directiveIsRepeatable
    ? 'isRepeatable'
    : '';
  const schemaDescription = optionsWithDefault.schemaDescription
    ? descriptions
    : '';

  function inputDeprecation(str) {
    return optionsWithDefault.inputValueDeprecation ? str : '';
  }

  return `
    query IntrospectionQuery {
      __schema {
        ${schemaDescription}
        queryType { name }
        mutationType { name }
        subscriptionType { name }
        types {
          ...FullType
        }
        directives {
          name
          ${descriptions}
          ${directiveIsRepeatable}
          locations
          args${inputDeprecation('(includeDeprecated: true)')} {
            ...InputValue
          }
        }
      }
    }

    fragment FullType on __Type {
      kind
      name
      ${descriptions}
      ${specifiedByUrl}
      fields(includeDeprecated: true) {
        name
        ${descriptions}
        args${inputDeprecation('(includeDeprecated: true)')} {
          ...InputValue
        }
        type {
          ...TypeRef
        }
        isDeprecated
        deprecationReason
      }
      inputFields${inputDeprecation('(includeDeprecated: true)')} {
        ...InputValue
      }
      interfaces {
        ...TypeRef
      }
      enumValues(includeDeprecated: true) {
        name
        ${descriptions}
        isDeprecated
        deprecationReason
      }
      possibleTypes {
        ...TypeRef
      }
    }

    fragment InputValue on __InputValue {
      name
      ${descriptions}
      type { ...TypeRef }
      defaultValue
      ${inputDeprecation('isDeprecated')}
      ${inputDeprecation('deprecationReason')}
    }

    fragment TypeRef on __Type {
      kind
      name
      ofType {
        kind
        name
        ofType {
          kind
          name
          ofType {
            kind
            name
            ofType {
              kind
              name
              ofType {
                kind
                name
                ofType {
                  kind
                  name
                  ofType {
                    kind
                    name
                  }
                }
              }
            }
          }
        }
      }
    }
  `;
}


/***/ }),

/***/ 2854:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.getOperationAST = getOperationAST;

var _kinds = __nccwpck_require__(1927);

/**
 * Returns an operation AST given a document AST and optionally an operation
 * name. If a name is not provided, an operation is only returned if only one is
 * provided in the document.
 */
function getOperationAST(documentAST, operationName) {
  let operation = null;

  for (const definition of documentAST.definitions) {
    if (definition.kind === _kinds.Kind.OPERATION_DEFINITION) {
      var _definition$name;

      if (operationName == null) {
        // If no operation name was provided, only return an Operation if there
        // is one defined in the document. Upon encountering the second, return
        // null.
        if (operation) {
          return null;
        }

        operation = definition;
      } else if (
        ((_definition$name = definition.name) === null ||
        _definition$name === void 0
          ? void 0
          : _definition$name.value) === operationName
      ) {
        return definition;
      }
    }
  }

  return operation;
}


/***/ }),

/***/ 1605:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.getOperationRootType = getOperationRootType;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Extracts the root type of the operation from the schema.
 *
 * @deprecated Please use `GraphQLSchema.getRootType` instead. Will be removed in v17
 */
function getOperationRootType(schema, operation) {
  if (operation.operation === 'query') {
    const queryType = schema.getQueryType();

    if (!queryType) {
      throw new _GraphQLError.GraphQLError(
        'Schema does not define the required query root type.',
        {
          nodes: operation,
        },
      );
    }

    return queryType;
  }

  if (operation.operation === 'mutation') {
    const mutationType = schema.getMutationType();

    if (!mutationType) {
      throw new _GraphQLError.GraphQLError(
        'Schema is not configured for mutations.',
        {
          nodes: operation,
        },
      );
    }

    return mutationType;
  }

  if (operation.operation === 'subscription') {
    const subscriptionType = schema.getSubscriptionType();

    if (!subscriptionType) {
      throw new _GraphQLError.GraphQLError(
        'Schema is not configured for subscriptions.',
        {
          nodes: operation,
        },
      );
    }

    return subscriptionType;
  }

  throw new _GraphQLError.GraphQLError(
    'Can only have query, mutation and subscription operations.',
    {
      nodes: operation,
    },
  );
}


/***/ }),

/***/ 676:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
Object.defineProperty(exports, "BreakingChangeType", ({
  enumerable: true,
  get: function () {
    return _findBreakingChanges.BreakingChangeType;
  },
}));
Object.defineProperty(exports, "DangerousChangeType", ({
  enumerable: true,
  get: function () {
    return _findBreakingChanges.DangerousChangeType;
  },
}));
Object.defineProperty(exports, "TypeInfo", ({
  enumerable: true,
  get: function () {
    return _TypeInfo.TypeInfo;
  },
}));
Object.defineProperty(exports, "assertValidName", ({
  enumerable: true,
  get: function () {
    return _assertValidName.assertValidName;
  },
}));
Object.defineProperty(exports, "astFromValue", ({
  enumerable: true,
  get: function () {
    return _astFromValue.astFromValue;
  },
}));
Object.defineProperty(exports, "buildASTSchema", ({
  enumerable: true,
  get: function () {
    return _buildASTSchema.buildASTSchema;
  },
}));
Object.defineProperty(exports, "buildClientSchema", ({
  enumerable: true,
  get: function () {
    return _buildClientSchema.buildClientSchema;
  },
}));
Object.defineProperty(exports, "buildSchema", ({
  enumerable: true,
  get: function () {
    return _buildASTSchema.buildSchema;
  },
}));
Object.defineProperty(exports, "coerceInputValue", ({
  enumerable: true,
  get: function () {
    return _coerceInputValue.coerceInputValue;
  },
}));
Object.defineProperty(exports, "concatAST", ({
  enumerable: true,
  get: function () {
    return _concatAST.concatAST;
  },
}));
Object.defineProperty(exports, "doTypesOverlap", ({
  enumerable: true,
  get: function () {
    return _typeComparators.doTypesOverlap;
  },
}));
Object.defineProperty(exports, "extendSchema", ({
  enumerable: true,
  get: function () {
    return _extendSchema.extendSchema;
  },
}));
Object.defineProperty(exports, "findBreakingChanges", ({
  enumerable: true,
  get: function () {
    return _findBreakingChanges.findBreakingChanges;
  },
}));
Object.defineProperty(exports, "findDangerousChanges", ({
  enumerable: true,
  get: function () {
    return _findBreakingChanges.findDangerousChanges;
  },
}));
Object.defineProperty(exports, "getIntrospectionQuery", ({
  enumerable: true,
  get: function () {
    return _getIntrospectionQuery.getIntrospectionQuery;
  },
}));
Object.defineProperty(exports, "getOperationAST", ({
  enumerable: true,
  get: function () {
    return _getOperationAST.getOperationAST;
  },
}));
Object.defineProperty(exports, "getOperationRootType", ({
  enumerable: true,
  get: function () {
    return _getOperationRootType.getOperationRootType;
  },
}));
Object.defineProperty(exports, "introspectionFromSchema", ({
  enumerable: true,
  get: function () {
    return _introspectionFromSchema.introspectionFromSchema;
  },
}));
Object.defineProperty(exports, "isEqualType", ({
  enumerable: true,
  get: function () {
    return _typeComparators.isEqualType;
  },
}));
Object.defineProperty(exports, "isTypeSubTypeOf", ({
  enumerable: true,
  get: function () {
    return _typeComparators.isTypeSubTypeOf;
  },
}));
Object.defineProperty(exports, "isValidNameError", ({
  enumerable: true,
  get: function () {
    return _assertValidName.isValidNameError;
  },
}));
Object.defineProperty(exports, "lexicographicSortSchema", ({
  enumerable: true,
  get: function () {
    return _lexicographicSortSchema.lexicographicSortSchema;
  },
}));
Object.defineProperty(exports, "printIntrospectionSchema", ({
  enumerable: true,
  get: function () {
    return _printSchema.printIntrospectionSchema;
  },
}));
Object.defineProperty(exports, "printSchema", ({
  enumerable: true,
  get: function () {
    return _printSchema.printSchema;
  },
}));
Object.defineProperty(exports, "printType", ({
  enumerable: true,
  get: function () {
    return _printSchema.printType;
  },
}));
Object.defineProperty(exports, "separateOperations", ({
  enumerable: true,
  get: function () {
    return _separateOperations.separateOperations;
  },
}));
Object.defineProperty(exports, "stripIgnoredCharacters", ({
  enumerable: true,
  get: function () {
    return _stripIgnoredCharacters.stripIgnoredCharacters;
  },
}));
Object.defineProperty(exports, "typeFromAST", ({
  enumerable: true,
  get: function () {
    return _typeFromAST.typeFromAST;
  },
}));
Object.defineProperty(exports, "valueFromAST", ({
  enumerable: true,
  get: function () {
    return _valueFromAST.valueFromAST;
  },
}));
Object.defineProperty(exports, "valueFromASTUntyped", ({
  enumerable: true,
  get: function () {
    return _valueFromASTUntyped.valueFromASTUntyped;
  },
}));
Object.defineProperty(exports, "visitWithTypeInfo", ({
  enumerable: true,
  get: function () {
    return _TypeInfo.visitWithTypeInfo;
  },
}));

var _getIntrospectionQuery = __nccwpck_require__(747);

var _getOperationAST = __nccwpck_require__(2854);

var _getOperationRootType = __nccwpck_require__(1605);

var _introspectionFromSchema = __nccwpck_require__(7371);

var _buildClientSchema = __nccwpck_require__(9352);

var _buildASTSchema = __nccwpck_require__(9337);

var _extendSchema = __nccwpck_require__(1832);

var _lexicographicSortSchema = __nccwpck_require__(9447);

var _printSchema = __nccwpck_require__(4166);

var _typeFromAST = __nccwpck_require__(7664);

var _valueFromAST = __nccwpck_require__(3181);

var _valueFromASTUntyped = __nccwpck_require__(6699);

var _astFromValue = __nccwpck_require__(2653);

var _TypeInfo = __nccwpck_require__(6625);

var _coerceInputValue = __nccwpck_require__(4743);

var _concatAST = __nccwpck_require__(7232);

var _separateOperations = __nccwpck_require__(9125);

var _stripIgnoredCharacters = __nccwpck_require__(7766);

var _typeComparators = __nccwpck_require__(333);

var _assertValidName = __nccwpck_require__(5780);

var _findBreakingChanges = __nccwpck_require__(9366);


/***/ }),

/***/ 7371:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.introspectionFromSchema = introspectionFromSchema;

var _invariant = __nccwpck_require__(8847);

var _parser = __nccwpck_require__(655);

var _execute = __nccwpck_require__(3677);

var _getIntrospectionQuery = __nccwpck_require__(747);

/**
 * Build an IntrospectionQuery from a GraphQLSchema
 *
 * IntrospectionQuery is useful for utilities that care about type and field
 * relationships, but do not need to traverse through those relationships.
 *
 * This is the inverse of buildClientSchema. The primary use case is outside
 * of the server context, for instance when doing schema comparisons.
 */
function introspectionFromSchema(schema, options) {
  const optionsWithDefaults = {
    specifiedByUrl: true,
    directiveIsRepeatable: true,
    schemaDescription: true,
    inputValueDeprecation: true,
    ...options,
  };
  const document = (0, _parser.parse)(
    (0, _getIntrospectionQuery.getIntrospectionQuery)(optionsWithDefaults),
  );
  const result = (0, _execute.executeSync)({
    schema,
    document,
  });
  (!result.errors && result.data) || (0, _invariant.invariant)(false);
  return result.data;
}


/***/ }),

/***/ 9447:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.lexicographicSortSchema = lexicographicSortSchema;

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _keyValMap = __nccwpck_require__(9268);

var _naturalCompare = __nccwpck_require__(38);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _introspection = __nccwpck_require__(8344);

var _schema = __nccwpck_require__(8505);

/**
 * Sort GraphQLSchema.
 *
 * This function returns a sorted copy of the given GraphQLSchema.
 */
function lexicographicSortSchema(schema) {
  const schemaConfig = schema.toConfig();
  const typeMap = (0, _keyValMap.keyValMap)(
    sortByName(schemaConfig.types),
    (type) => type.name,
    sortNamedType,
  );
  return new _schema.GraphQLSchema({
    ...schemaConfig,
    types: Object.values(typeMap),
    directives: sortByName(schemaConfig.directives).map(sortDirective),
    query: replaceMaybeType(schemaConfig.query),
    mutation: replaceMaybeType(schemaConfig.mutation),
    subscription: replaceMaybeType(schemaConfig.subscription),
  });

  function replaceType(type) {
    if ((0, _definition.isListType)(type)) {
      // @ts-expect-error
      return new _definition.GraphQLList(replaceType(type.ofType));
    } else if ((0, _definition.isNonNullType)(type)) {
      // @ts-expect-error
      return new _definition.GraphQLNonNull(replaceType(type.ofType));
    } // @ts-expect-error FIXME: TS Conversion

    return replaceNamedType(type);
  }

  function replaceNamedType(type) {
    return typeMap[type.name];
  }

  function replaceMaybeType(maybeType) {
    return maybeType && replaceNamedType(maybeType);
  }

  function sortDirective(directive) {
    const config = directive.toConfig();
    return new _directives.GraphQLDirective({
      ...config,
      locations: sortBy(config.locations, (x) => x),
      args: sortArgs(config.args),
    });
  }

  function sortArgs(args) {
    return sortObjMap(args, (arg) => ({ ...arg, type: replaceType(arg.type) }));
  }

  function sortFields(fieldsMap) {
    return sortObjMap(fieldsMap, (field) => ({
      ...field,
      type: replaceType(field.type),
      args: field.args && sortArgs(field.args),
    }));
  }

  function sortInputFields(fieldsMap) {
    return sortObjMap(fieldsMap, (field) => ({
      ...field,
      type: replaceType(field.type),
    }));
  }

  function sortTypes(array) {
    return sortByName(array).map(replaceNamedType);
  }

  function sortNamedType(type) {
    if (
      (0, _definition.isScalarType)(type) ||
      (0, _introspection.isIntrospectionType)(type)
    ) {
      return type;
    }

    if ((0, _definition.isObjectType)(type)) {
      const config = type.toConfig();
      return new _definition.GraphQLObjectType({
        ...config,
        interfaces: () => sortTypes(config.interfaces),
        fields: () => sortFields(config.fields),
      });
    }

    if ((0, _definition.isInterfaceType)(type)) {
      const config = type.toConfig();
      return new _definition.GraphQLInterfaceType({
        ...config,
        interfaces: () => sortTypes(config.interfaces),
        fields: () => sortFields(config.fields),
      });
    }

    if ((0, _definition.isUnionType)(type)) {
      const config = type.toConfig();
      return new _definition.GraphQLUnionType({
        ...config,
        types: () => sortTypes(config.types),
      });
    }

    if ((0, _definition.isEnumType)(type)) {
      const config = type.toConfig();
      return new _definition.GraphQLEnumType({
        ...config,
        values: sortObjMap(config.values, (value) => value),
      });
    }

    if ((0, _definition.isInputObjectType)(type)) {
      const config = type.toConfig();
      return new _definition.GraphQLInputObjectType({
        ...config,
        fields: () => sortInputFields(config.fields),
      });
    }
    /* c8 ignore next 3 */
    // Not reachable, all possible types have been considered.

     false ||
      (0, _invariant.invariant)(
        false,
        'Unexpected type: ' + (0, _inspect.inspect)(type),
      );
  }
}

function sortObjMap(map, sortValueFn) {
  const sortedMap = Object.create(null);

  for (const key of Object.keys(map).sort(_naturalCompare.naturalCompare)) {
    sortedMap[key] = sortValueFn(map[key]);
  }

  return sortedMap;
}

function sortByName(array) {
  return sortBy(array, (obj) => obj.name);
}

function sortBy(array, mapToKey) {
  return array.slice().sort((obj1, obj2) => {
    const key1 = mapToKey(obj1);
    const key2 = mapToKey(obj2);
    return (0, _naturalCompare.naturalCompare)(key1, key2);
  });
}


/***/ }),

/***/ 4166:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.printIntrospectionSchema = printIntrospectionSchema;
exports.printSchema = printSchema;
exports.printType = printType;

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _blockString = __nccwpck_require__(4515);

var _kinds = __nccwpck_require__(1927);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

var _introspection = __nccwpck_require__(8344);

var _scalars = __nccwpck_require__(3145);

var _astFromValue = __nccwpck_require__(2653);

function printSchema(schema) {
  return printFilteredSchema(
    schema,
    (n) => !(0, _directives.isSpecifiedDirective)(n),
    isDefinedType,
  );
}

function printIntrospectionSchema(schema) {
  return printFilteredSchema(
    schema,
    _directives.isSpecifiedDirective,
    _introspection.isIntrospectionType,
  );
}

function isDefinedType(type) {
  return (
    !(0, _scalars.isSpecifiedScalarType)(type) &&
    !(0, _introspection.isIntrospectionType)(type)
  );
}

function printFilteredSchema(schema, directiveFilter, typeFilter) {
  const directives = schema.getDirectives().filter(directiveFilter);
  const types = Object.values(schema.getTypeMap()).filter(typeFilter);
  return [
    printSchemaDefinition(schema),
    ...directives.map((directive) => printDirective(directive)),
    ...types.map((type) => printType(type)),
  ]
    .filter(Boolean)
    .join('\n\n');
}

function printSchemaDefinition(schema) {
  if (schema.description == null && isSchemaOfCommonNames(schema)) {
    return;
  }

  const operationTypes = [];
  const queryType = schema.getQueryType();

  if (queryType) {
    operationTypes.push(`  query: ${queryType.name}`);
  }

  const mutationType = schema.getMutationType();

  if (mutationType) {
    operationTypes.push(`  mutation: ${mutationType.name}`);
  }

  const subscriptionType = schema.getSubscriptionType();

  if (subscriptionType) {
    operationTypes.push(`  subscription: ${subscriptionType.name}`);
  }

  return printDescription(schema) + `schema {\n${operationTypes.join('\n')}\n}`;
}
/**
 * GraphQL schema define root types for each type of operation. These types are
 * the same as any other type and can be named in any manner, however there is
 * a common naming convention:
 *
 * ```graphql
 *   schema {
 *     query: Query
 *     mutation: Mutation
 *     subscription: Subscription
 *   }
 * ```
 *
 * When using this naming convention, the schema description can be omitted.
 */

function isSchemaOfCommonNames(schema) {
  const queryType = schema.getQueryType();

  if (queryType && queryType.name !== 'Query') {
    return false;
  }

  const mutationType = schema.getMutationType();

  if (mutationType && mutationType.name !== 'Mutation') {
    return false;
  }

  const subscriptionType = schema.getSubscriptionType();

  if (subscriptionType && subscriptionType.name !== 'Subscription') {
    return false;
  }

  return true;
}

function printType(type) {
  if ((0, _definition.isScalarType)(type)) {
    return printScalar(type);
  }

  if ((0, _definition.isObjectType)(type)) {
    return printObject(type);
  }

  if ((0, _definition.isInterfaceType)(type)) {
    return printInterface(type);
  }

  if ((0, _definition.isUnionType)(type)) {
    return printUnion(type);
  }

  if ((0, _definition.isEnumType)(type)) {
    return printEnum(type);
  }

  if ((0, _definition.isInputObjectType)(type)) {
    return printInputObject(type);
  }
  /* c8 ignore next 3 */
  // Not reachable, all possible types have been considered.

   false ||
    (0, _invariant.invariant)(
      false,
      'Unexpected type: ' + (0, _inspect.inspect)(type),
    );
}

function printScalar(type) {
  return (
    printDescription(type) + `scalar ${type.name}` + printSpecifiedByURL(type)
  );
}

function printImplementedInterfaces(type) {
  const interfaces = type.getInterfaces();
  return interfaces.length
    ? ' implements ' + interfaces.map((i) => i.name).join(' & ')
    : '';
}

function printObject(type) {
  return (
    printDescription(type) +
    `type ${type.name}` +
    printImplementedInterfaces(type) +
    printFields(type)
  );
}

function printInterface(type) {
  return (
    printDescription(type) +
    `interface ${type.name}` +
    printImplementedInterfaces(type) +
    printFields(type)
  );
}

function printUnion(type) {
  const types = type.getTypes();
  const possibleTypes = types.length ? ' = ' + types.join(' | ') : '';
  return printDescription(type) + 'union ' + type.name + possibleTypes;
}

function printEnum(type) {
  const values = type
    .getValues()
    .map(
      (value, i) =>
        printDescription(value, '  ', !i) +
        '  ' +
        value.name +
        printDeprecated(value.deprecationReason),
    );
  return printDescription(type) + `enum ${type.name}` + printBlock(values);
}

function printInputObject(type) {
  const fields = Object.values(type.getFields()).map(
    (f, i) => printDescription(f, '  ', !i) + '  ' + printInputValue(f),
  );
  return printDescription(type) + `input ${type.name}` + printBlock(fields);
}

function printFields(type) {
  const fields = Object.values(type.getFields()).map(
    (f, i) =>
      printDescription(f, '  ', !i) +
      '  ' +
      f.name +
      printArgs(f.args, '  ') +
      ': ' +
      String(f.type) +
      printDeprecated(f.deprecationReason),
  );
  return printBlock(fields);
}

function printBlock(items) {
  return items.length !== 0 ? ' {\n' + items.join('\n') + '\n}' : '';
}

function printArgs(args, indentation = '') {
  if (args.length === 0) {
    return '';
  } // If every arg does not have a description, print them on one line.

  if (args.every((arg) => !arg.description)) {
    return '(' + args.map(printInputValue).join(', ') + ')';
  }

  return (
    '(\n' +
    args
      .map(
        (arg, i) =>
          printDescription(arg, '  ' + indentation, !i) +
          '  ' +
          indentation +
          printInputValue(arg),
      )
      .join('\n') +
    '\n' +
    indentation +
    ')'
  );
}

function printInputValue(arg) {
  const defaultAST = (0, _astFromValue.astFromValue)(
    arg.defaultValue,
    arg.type,
  );
  let argDecl = arg.name + ': ' + String(arg.type);

  if (defaultAST) {
    argDecl += ` = ${(0, _printer.print)(defaultAST)}`;
  }

  return argDecl + printDeprecated(arg.deprecationReason);
}

function printDirective(directive) {
  return (
    printDescription(directive) +
    'directive @' +
    directive.name +
    printArgs(directive.args) +
    (directive.isRepeatable ? ' repeatable' : '') +
    ' on ' +
    directive.locations.join(' | ')
  );
}

function printDeprecated(reason) {
  if (reason == null) {
    return '';
  }

  if (reason !== _directives.DEFAULT_DEPRECATION_REASON) {
    const astValue = (0, _printer.print)({
      kind: _kinds.Kind.STRING,
      value: reason,
    });
    return ` @deprecated(reason: ${astValue})`;
  }

  return ' @deprecated';
}

function printSpecifiedByURL(scalar) {
  if (scalar.specifiedByURL == null) {
    return '';
  }

  const astValue = (0, _printer.print)({
    kind: _kinds.Kind.STRING,
    value: scalar.specifiedByURL,
  });
  return ` @specifiedBy(url: ${astValue})`;
}

function printDescription(def, indentation = '', firstInBlock = true) {
  const { description } = def;

  if (description == null) {
    return '';
  }

  const blockString = (0, _printer.print)({
    kind: _kinds.Kind.STRING,
    value: description,
    block: (0, _blockString.isPrintableAsBlockString)(description),
  });
  const prefix =
    indentation && !firstInBlock ? '\n' + indentation : indentation;
  return prefix + blockString.replace(/\n/g, '\n' + indentation) + '\n';
}


/***/ }),

/***/ 9125:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.separateOperations = separateOperations;

var _kinds = __nccwpck_require__(1927);

var _visitor = __nccwpck_require__(5678);

/**
 * separateOperations accepts a single AST document which may contain many
 * operations and fragments and returns a collection of AST documents each of
 * which contains a single operation as well the fragment definitions it
 * refers to.
 */
function separateOperations(documentAST) {
  const operations = [];
  const depGraph = Object.create(null); // Populate metadata and build a dependency graph.

  for (const definitionNode of documentAST.definitions) {
    switch (definitionNode.kind) {
      case _kinds.Kind.OPERATION_DEFINITION:
        operations.push(definitionNode);
        break;

      case _kinds.Kind.FRAGMENT_DEFINITION:
        depGraph[definitionNode.name.value] = collectDependencies(
          definitionNode.selectionSet,
        );
        break;

      default: // ignore non-executable definitions
    }
  } // For each operation, produce a new synthesized AST which includes only what
  // is necessary for completing that operation.

  const separatedDocumentASTs = Object.create(null);

  for (const operation of operations) {
    const dependencies = new Set();

    for (const fragmentName of collectDependencies(operation.selectionSet)) {
      collectTransitiveDependencies(dependencies, depGraph, fragmentName);
    } // Provides the empty string for anonymous operations.

    const operationName = operation.name ? operation.name.value : ''; // The list of definition nodes to be included for this operation, sorted
    // to retain the same order as the original document.

    separatedDocumentASTs[operationName] = {
      kind: _kinds.Kind.DOCUMENT,
      definitions: documentAST.definitions.filter(
        (node) =>
          node === operation ||
          (node.kind === _kinds.Kind.FRAGMENT_DEFINITION &&
            dependencies.has(node.name.value)),
      ),
    };
  }

  return separatedDocumentASTs;
}

// From a dependency graph, collects a list of transitive dependencies by
// recursing through a dependency graph.
function collectTransitiveDependencies(collected, depGraph, fromName) {
  if (!collected.has(fromName)) {
    collected.add(fromName);
    const immediateDeps = depGraph[fromName];

    if (immediateDeps !== undefined) {
      for (const toName of immediateDeps) {
        collectTransitiveDependencies(collected, depGraph, toName);
      }
    }
  }
}

function collectDependencies(selectionSet) {
  const dependencies = [];
  (0, _visitor.visit)(selectionSet, {
    FragmentSpread(node) {
      dependencies.push(node.name.value);
    },
  });
  return dependencies;
}


/***/ }),

/***/ 2278:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.sortValueNode = sortValueNode;

var _naturalCompare = __nccwpck_require__(38);

var _kinds = __nccwpck_require__(1927);

/**
 * Sort ValueNode.
 *
 * This function returns a sorted copy of the given ValueNode.
 *
 * @internal
 */
function sortValueNode(valueNode) {
  switch (valueNode.kind) {
    case _kinds.Kind.OBJECT:
      return { ...valueNode, fields: sortFields(valueNode.fields) };

    case _kinds.Kind.LIST:
      return { ...valueNode, values: valueNode.values.map(sortValueNode) };

    case _kinds.Kind.INT:
    case _kinds.Kind.FLOAT:
    case _kinds.Kind.STRING:
    case _kinds.Kind.BOOLEAN:
    case _kinds.Kind.NULL:
    case _kinds.Kind.ENUM:
    case _kinds.Kind.VARIABLE:
      return valueNode;
  }
}

function sortFields(fields) {
  return fields
    .map((fieldNode) => ({
      ...fieldNode,
      value: sortValueNode(fieldNode.value),
    }))
    .sort((fieldA, fieldB) =>
      (0, _naturalCompare.naturalCompare)(fieldA.name.value, fieldB.name.value),
    );
}


/***/ }),

/***/ 7766:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.stripIgnoredCharacters = stripIgnoredCharacters;

var _blockString = __nccwpck_require__(4515);

var _lexer = __nccwpck_require__(4605);

var _source = __nccwpck_require__(5521);

var _tokenKind = __nccwpck_require__(1565);

/**
 * Strips characters that are not significant to the validity or execution
 * of a GraphQL document:
 *   - UnicodeBOM
 *   - WhiteSpace
 *   - LineTerminator
 *   - Comment
 *   - Comma
 *   - BlockString indentation
 *
 * Note: It is required to have a delimiter character between neighboring
 * non-punctuator tokens and this function always uses single space as delimiter.
 *
 * It is guaranteed that both input and output documents if parsed would result
 * in the exact same AST except for nodes location.
 *
 * Warning: It is guaranteed that this function will always produce stable results.
 * However, it's not guaranteed that it will stay the same between different
 * releases due to bugfixes or changes in the GraphQL specification.
 *
 * Query example:
 *
 * ```graphql
 * query SomeQuery($foo: String!, $bar: String) {
 *   someField(foo: $foo, bar: $bar) {
 *     a
 *     b {
 *       c
 *       d
 *     }
 *   }
 * }
 * ```
 *
 * Becomes:
 *
 * ```graphql
 * query SomeQuery($foo:String!$bar:String){someField(foo:$foo bar:$bar){a b{c d}}}
 * ```
 *
 * SDL example:
 *
 * ```graphql
 * """
 * Type description
 * """
 * type Foo {
 *   """
 *   Field description
 *   """
 *   bar: String
 * }
 * ```
 *
 * Becomes:
 *
 * ```graphql
 * """Type description""" type Foo{"""Field description""" bar:String}
 * ```
 */
function stripIgnoredCharacters(source) {
  const sourceObj = (0, _source.isSource)(source)
    ? source
    : new _source.Source(source);
  const body = sourceObj.body;
  const lexer = new _lexer.Lexer(sourceObj);
  let strippedBody = '';
  let wasLastAddedTokenNonPunctuator = false;

  while (lexer.advance().kind !== _tokenKind.TokenKind.EOF) {
    const currentToken = lexer.token;
    const tokenKind = currentToken.kind;
    /**
     * Every two non-punctuator tokens should have space between them.
     * Also prevent case of non-punctuator token following by spread resulting
     * in invalid token (e.g. `1...` is invalid Float token).
     */

    const isNonPunctuator = !(0, _lexer.isPunctuatorTokenKind)(
      currentToken.kind,
    );

    if (wasLastAddedTokenNonPunctuator) {
      if (
        isNonPunctuator ||
        currentToken.kind === _tokenKind.TokenKind.SPREAD
      ) {
        strippedBody += ' ';
      }
    }

    const tokenBody = body.slice(currentToken.start, currentToken.end);

    if (tokenKind === _tokenKind.TokenKind.BLOCK_STRING) {
      strippedBody += (0, _blockString.printBlockString)(currentToken.value, {
        minimize: true,
      });
    } else {
      strippedBody += tokenBody;
    }

    wasLastAddedTokenNonPunctuator = isNonPunctuator;
  }

  return strippedBody;
}


/***/ }),

/***/ 333:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.doTypesOverlap = doTypesOverlap;
exports.isEqualType = isEqualType;
exports.isTypeSubTypeOf = isTypeSubTypeOf;

var _definition = __nccwpck_require__(5821);

/**
 * Provided two types, return true if the types are equal (invariant).
 */
function isEqualType(typeA, typeB) {
  // Equivalent types are equal.
  if (typeA === typeB) {
    return true;
  } // If either type is non-null, the other must also be non-null.

  if (
    (0, _definition.isNonNullType)(typeA) &&
    (0, _definition.isNonNullType)(typeB)
  ) {
    return isEqualType(typeA.ofType, typeB.ofType);
  } // If either type is a list, the other must also be a list.

  if (
    (0, _definition.isListType)(typeA) &&
    (0, _definition.isListType)(typeB)
  ) {
    return isEqualType(typeA.ofType, typeB.ofType);
  } // Otherwise the types are not equal.

  return false;
}
/**
 * Provided a type and a super type, return true if the first type is either
 * equal or a subset of the second super type (covariant).
 */

function isTypeSubTypeOf(schema, maybeSubType, superType) {
  // Equivalent type is a valid subtype
  if (maybeSubType === superType) {
    return true;
  } // If superType is non-null, maybeSubType must also be non-null.

  if ((0, _definition.isNonNullType)(superType)) {
    if ((0, _definition.isNonNullType)(maybeSubType)) {
      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);
    }

    return false;
  }

  if ((0, _definition.isNonNullType)(maybeSubType)) {
    // If superType is nullable, maybeSubType may be non-null or nullable.
    return isTypeSubTypeOf(schema, maybeSubType.ofType, superType);
  } // If superType type is a list, maybeSubType type must also be a list.

  if ((0, _definition.isListType)(superType)) {
    if ((0, _definition.isListType)(maybeSubType)) {
      return isTypeSubTypeOf(schema, maybeSubType.ofType, superType.ofType);
    }

    return false;
  }

  if ((0, _definition.isListType)(maybeSubType)) {
    // If superType is not a list, maybeSubType must also be not a list.
    return false;
  } // If superType type is an abstract type, check if it is super type of maybeSubType.
  // Otherwise, the child type is not a valid subtype of the parent type.

  return (
    (0, _definition.isAbstractType)(superType) &&
    ((0, _definition.isInterfaceType)(maybeSubType) ||
      (0, _definition.isObjectType)(maybeSubType)) &&
    schema.isSubType(superType, maybeSubType)
  );
}
/**
 * Provided two composite types, determine if they "overlap". Two composite
 * types overlap when the Sets of possible concrete types for each intersect.
 *
 * This is often used to determine if a fragment of a given type could possibly
 * be visited in a context of another type.
 *
 * This function is commutative.
 */

function doTypesOverlap(schema, typeA, typeB) {
  // Equivalent types overlap
  if (typeA === typeB) {
    return true;
  }

  if ((0, _definition.isAbstractType)(typeA)) {
    if ((0, _definition.isAbstractType)(typeB)) {
      // If both types are abstract, then determine if there is any intersection
      // between possible concrete types of each.
      return schema
        .getPossibleTypes(typeA)
        .some((type) => schema.isSubType(typeB, type));
    } // Determine if the latter type is a possible concrete type of the former.

    return schema.isSubType(typeA, typeB);
  }

  if ((0, _definition.isAbstractType)(typeB)) {
    // Determine if the former type is a possible concrete type of the latter.
    return schema.isSubType(typeB, typeA);
  } // Otherwise the types do not overlap.

  return false;
}


/***/ }),

/***/ 7664:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.typeFromAST = typeFromAST;

var _kinds = __nccwpck_require__(1927);

var _definition = __nccwpck_require__(5821);

function typeFromAST(schema, typeNode) {
  switch (typeNode.kind) {
    case _kinds.Kind.LIST_TYPE: {
      const innerType = typeFromAST(schema, typeNode.type);
      return innerType && new _definition.GraphQLList(innerType);
    }

    case _kinds.Kind.NON_NULL_TYPE: {
      const innerType = typeFromAST(schema, typeNode.type);
      return innerType && new _definition.GraphQLNonNull(innerType);
    }

    case _kinds.Kind.NAMED_TYPE:
      return schema.getType(typeNode.name.value);
  }
}


/***/ }),

/***/ 3181:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.valueFromAST = valueFromAST;

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _keyMap = __nccwpck_require__(711);

var _kinds = __nccwpck_require__(1927);

var _definition = __nccwpck_require__(5821);

/**
 * Produces a JavaScript value given a GraphQL Value AST.
 *
 * A GraphQL type must be provided, which will be used to interpret different
 * GraphQL Value literals.
 *
 * Returns `undefined` when the value could not be validly coerced according to
 * the provided type.
 *
 * | GraphQL Value        | JSON Value    |
 * | -------------------- | ------------- |
 * | Input Object         | Object        |
 * | List                 | Array         |
 * | Boolean              | Boolean       |
 * | String               | String        |
 * | Int / Float          | Number        |
 * | Enum Value           | Unknown       |
 * | NullValue            | null          |
 *
 */
function valueFromAST(valueNode, type, variables) {
  if (!valueNode) {
    // When there is no node, then there is also no value.
    // Importantly, this is different from returning the value null.
    return;
  }

  if (valueNode.kind === _kinds.Kind.VARIABLE) {
    const variableName = valueNode.name.value;

    if (variables == null || variables[variableName] === undefined) {
      // No valid return value.
      return;
    }

    const variableValue = variables[variableName];

    if (variableValue === null && (0, _definition.isNonNullType)(type)) {
      return; // Invalid: intentionally return no value.
    } // Note: This does no further checking that this variable is correct.
    // This assumes that this query has been validated and the variable
    // usage here is of the correct type.

    return variableValue;
  }

  if ((0, _definition.isNonNullType)(type)) {
    if (valueNode.kind === _kinds.Kind.NULL) {
      return; // Invalid: intentionally return no value.
    }

    return valueFromAST(valueNode, type.ofType, variables);
  }

  if (valueNode.kind === _kinds.Kind.NULL) {
    // This is explicitly returning the value null.
    return null;
  }

  if ((0, _definition.isListType)(type)) {
    const itemType = type.ofType;

    if (valueNode.kind === _kinds.Kind.LIST) {
      const coercedValues = [];

      for (const itemNode of valueNode.values) {
        if (isMissingVariable(itemNode, variables)) {
          // If an array contains a missing variable, it is either coerced to
          // null or if the item type is non-null, it considered invalid.
          if ((0, _definition.isNonNullType)(itemType)) {
            return; // Invalid: intentionally return no value.
          }

          coercedValues.push(null);
        } else {
          const itemValue = valueFromAST(itemNode, itemType, variables);

          if (itemValue === undefined) {
            return; // Invalid: intentionally return no value.
          }

          coercedValues.push(itemValue);
        }
      }

      return coercedValues;
    }

    const coercedValue = valueFromAST(valueNode, itemType, variables);

    if (coercedValue === undefined) {
      return; // Invalid: intentionally return no value.
    }

    return [coercedValue];
  }

  if ((0, _definition.isInputObjectType)(type)) {
    if (valueNode.kind !== _kinds.Kind.OBJECT) {
      return; // Invalid: intentionally return no value.
    }

    const coercedObj = Object.create(null);
    const fieldNodes = (0, _keyMap.keyMap)(
      valueNode.fields,
      (field) => field.name.value,
    );

    for (const field of Object.values(type.getFields())) {
      const fieldNode = fieldNodes[field.name];

      if (!fieldNode || isMissingVariable(fieldNode.value, variables)) {
        if (field.defaultValue !== undefined) {
          coercedObj[field.name] = field.defaultValue;
        } else if ((0, _definition.isNonNullType)(field.type)) {
          return; // Invalid: intentionally return no value.
        }

        continue;
      }

      const fieldValue = valueFromAST(fieldNode.value, field.type, variables);

      if (fieldValue === undefined) {
        return; // Invalid: intentionally return no value.
      }

      coercedObj[field.name] = fieldValue;
    }

    return coercedObj;
  }

  if ((0, _definition.isLeafType)(type)) {
    // Scalars and Enums fulfill parsing a literal value via parseLiteral().
    // Invalid values represent a failure to parse correctly, in which case
    // no value is returned.
    let result;

    try {
      result = type.parseLiteral(valueNode, variables);
    } catch (_error) {
      return; // Invalid: intentionally return no value.
    }

    if (result === undefined) {
      return; // Invalid: intentionally return no value.
    }

    return result;
  }
  /* c8 ignore next 3 */
  // Not reachable, all possible input types have been considered.

   false ||
    (0, _invariant.invariant)(
      false,
      'Unexpected input type: ' + (0, _inspect.inspect)(type),
    );
} // Returns true if the provided valueNode is a variable which is not defined
// in the set of variables.

function isMissingVariable(valueNode, variables) {
  return (
    valueNode.kind === _kinds.Kind.VARIABLE &&
    (variables == null || variables[valueNode.name.value] === undefined)
  );
}


/***/ }),

/***/ 6699:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.valueFromASTUntyped = valueFromASTUntyped;

var _keyValMap = __nccwpck_require__(9268);

var _kinds = __nccwpck_require__(1927);

/**
 * Produces a JavaScript value given a GraphQL Value AST.
 *
 * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value
 * will reflect the provided GraphQL value AST.
 *
 * | GraphQL Value        | JavaScript Value |
 * | -------------------- | ---------------- |
 * | Input Object         | Object           |
 * | List                 | Array            |
 * | Boolean              | Boolean          |
 * | String / Enum        | String           |
 * | Int / Float          | Number           |
 * | Null                 | null             |
 *
 */
function valueFromASTUntyped(valueNode, variables) {
  switch (valueNode.kind) {
    case _kinds.Kind.NULL:
      return null;

    case _kinds.Kind.INT:
      return parseInt(valueNode.value, 10);

    case _kinds.Kind.FLOAT:
      return parseFloat(valueNode.value);

    case _kinds.Kind.STRING:
    case _kinds.Kind.ENUM:
    case _kinds.Kind.BOOLEAN:
      return valueNode.value;

    case _kinds.Kind.LIST:
      return valueNode.values.map((node) =>
        valueFromASTUntyped(node, variables),
      );

    case _kinds.Kind.OBJECT:
      return (0, _keyValMap.keyValMap)(
        valueNode.fields,
        (field) => field.name.value,
        (field) => valueFromASTUntyped(field.value, variables),
      );

    case _kinds.Kind.VARIABLE:
      return variables === null || variables === void 0
        ? void 0
        : variables[valueNode.name.value];
  }
}


/***/ }),

/***/ 8263:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.ValidationContext =
  exports.SDLValidationContext =
  exports.ASTValidationContext =
    void 0;

var _kinds = __nccwpck_require__(1927);

var _visitor = __nccwpck_require__(5678);

var _TypeInfo = __nccwpck_require__(6625);

/**
 * An instance of this class is passed as the "this" context to all validators,
 * allowing access to commonly useful contextual information from within a
 * validation rule.
 */
class ASTValidationContext {
  constructor(ast, onError) {
    this._ast = ast;
    this._fragments = undefined;
    this._fragmentSpreads = new Map();
    this._recursivelyReferencedFragments = new Map();
    this._onError = onError;
  }

  get [Symbol.toStringTag]() {
    return 'ASTValidationContext';
  }

  reportError(error) {
    this._onError(error);
  }

  getDocument() {
    return this._ast;
  }

  getFragment(name) {
    let fragments;

    if (this._fragments) {
      fragments = this._fragments;
    } else {
      fragments = Object.create(null);

      for (const defNode of this.getDocument().definitions) {
        if (defNode.kind === _kinds.Kind.FRAGMENT_DEFINITION) {
          fragments[defNode.name.value] = defNode;
        }
      }

      this._fragments = fragments;
    }

    return fragments[name];
  }

  getFragmentSpreads(node) {
    let spreads = this._fragmentSpreads.get(node);

    if (!spreads) {
      spreads = [];
      const setsToVisit = [node];
      let set;

      while ((set = setsToVisit.pop())) {
        for (const selection of set.selections) {
          if (selection.kind === _kinds.Kind.FRAGMENT_SPREAD) {
            spreads.push(selection);
          } else if (selection.selectionSet) {
            setsToVisit.push(selection.selectionSet);
          }
        }
      }

      this._fragmentSpreads.set(node, spreads);
    }

    return spreads;
  }

  getRecursivelyReferencedFragments(operation) {
    let fragments = this._recursivelyReferencedFragments.get(operation);

    if (!fragments) {
      fragments = [];
      const collectedNames = Object.create(null);
      const nodesToVisit = [operation.selectionSet];
      let node;

      while ((node = nodesToVisit.pop())) {
        for (const spread of this.getFragmentSpreads(node)) {
          const fragName = spread.name.value;

          if (collectedNames[fragName] !== true) {
            collectedNames[fragName] = true;
            const fragment = this.getFragment(fragName);

            if (fragment) {
              fragments.push(fragment);
              nodesToVisit.push(fragment.selectionSet);
            }
          }
        }
      }

      this._recursivelyReferencedFragments.set(operation, fragments);
    }

    return fragments;
  }
}

exports.ASTValidationContext = ASTValidationContext;

class SDLValidationContext extends ASTValidationContext {
  constructor(ast, schema, onError) {
    super(ast, onError);
    this._schema = schema;
  }

  get [Symbol.toStringTag]() {
    return 'SDLValidationContext';
  }

  getSchema() {
    return this._schema;
  }
}

exports.SDLValidationContext = SDLValidationContext;

class ValidationContext extends ASTValidationContext {
  constructor(schema, ast, typeInfo, onError) {
    super(ast, onError);
    this._schema = schema;
    this._typeInfo = typeInfo;
    this._variableUsages = new Map();
    this._recursiveVariableUsages = new Map();
  }

  get [Symbol.toStringTag]() {
    return 'ValidationContext';
  }

  getSchema() {
    return this._schema;
  }

  getVariableUsages(node) {
    let usages = this._variableUsages.get(node);

    if (!usages) {
      const newUsages = [];
      const typeInfo = new _TypeInfo.TypeInfo(this._schema);
      (0, _visitor.visit)(
        node,
        (0, _TypeInfo.visitWithTypeInfo)(typeInfo, {
          VariableDefinition: () => false,

          Variable(variable) {
            newUsages.push({
              node: variable,
              type: typeInfo.getInputType(),
              defaultValue: typeInfo.getDefaultValue(),
            });
          },
        }),
      );
      usages = newUsages;

      this._variableUsages.set(node, usages);
    }

    return usages;
  }

  getRecursiveVariableUsages(operation) {
    let usages = this._recursiveVariableUsages.get(operation);

    if (!usages) {
      usages = this.getVariableUsages(operation);

      for (const frag of this.getRecursivelyReferencedFragments(operation)) {
        usages = usages.concat(this.getVariableUsages(frag));
      }

      this._recursiveVariableUsages.set(operation, usages);
    }

    return usages;
  }

  getType() {
    return this._typeInfo.getType();
  }

  getParentType() {
    return this._typeInfo.getParentType();
  }

  getInputType() {
    return this._typeInfo.getInputType();
  }

  getParentInputType() {
    return this._typeInfo.getParentInputType();
  }

  getFieldDef() {
    return this._typeInfo.getFieldDef();
  }

  getDirective() {
    return this._typeInfo.getDirective();
  }

  getArgument() {
    return this._typeInfo.getArgument();
  }

  getEnumValue() {
    return this._typeInfo.getEnumValue();
  }
}

exports.ValidationContext = ValidationContext;


/***/ }),

/***/ 2201:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
Object.defineProperty(exports, "ExecutableDefinitionsRule", ({
  enumerable: true,
  get: function () {
    return _ExecutableDefinitionsRule.ExecutableDefinitionsRule;
  },
}));
Object.defineProperty(exports, "FieldsOnCorrectTypeRule", ({
  enumerable: true,
  get: function () {
    return _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule;
  },
}));
Object.defineProperty(exports, "FragmentsOnCompositeTypesRule", ({
  enumerable: true,
  get: function () {
    return _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule;
  },
}));
Object.defineProperty(exports, "KnownArgumentNamesRule", ({
  enumerable: true,
  get: function () {
    return _KnownArgumentNamesRule.KnownArgumentNamesRule;
  },
}));
Object.defineProperty(exports, "KnownDirectivesRule", ({
  enumerable: true,
  get: function () {
    return _KnownDirectivesRule.KnownDirectivesRule;
  },
}));
Object.defineProperty(exports, "KnownFragmentNamesRule", ({
  enumerable: true,
  get: function () {
    return _KnownFragmentNamesRule.KnownFragmentNamesRule;
  },
}));
Object.defineProperty(exports, "KnownTypeNamesRule", ({
  enumerable: true,
  get: function () {
    return _KnownTypeNamesRule.KnownTypeNamesRule;
  },
}));
Object.defineProperty(exports, "LoneAnonymousOperationRule", ({
  enumerable: true,
  get: function () {
    return _LoneAnonymousOperationRule.LoneAnonymousOperationRule;
  },
}));
Object.defineProperty(exports, "LoneSchemaDefinitionRule", ({
  enumerable: true,
  get: function () {
    return _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule;
  },
}));
Object.defineProperty(exports, "NoDeprecatedCustomRule", ({
  enumerable: true,
  get: function () {
    return _NoDeprecatedCustomRule.NoDeprecatedCustomRule;
  },
}));
Object.defineProperty(exports, "NoFragmentCyclesRule", ({
  enumerable: true,
  get: function () {
    return _NoFragmentCyclesRule.NoFragmentCyclesRule;
  },
}));
Object.defineProperty(exports, "NoSchemaIntrospectionCustomRule", ({
  enumerable: true,
  get: function () {
    return _NoSchemaIntrospectionCustomRule.NoSchemaIntrospectionCustomRule;
  },
}));
Object.defineProperty(exports, "NoUndefinedVariablesRule", ({
  enumerable: true,
  get: function () {
    return _NoUndefinedVariablesRule.NoUndefinedVariablesRule;
  },
}));
Object.defineProperty(exports, "NoUnusedFragmentsRule", ({
  enumerable: true,
  get: function () {
    return _NoUnusedFragmentsRule.NoUnusedFragmentsRule;
  },
}));
Object.defineProperty(exports, "NoUnusedVariablesRule", ({
  enumerable: true,
  get: function () {
    return _NoUnusedVariablesRule.NoUnusedVariablesRule;
  },
}));
Object.defineProperty(exports, "OverlappingFieldsCanBeMergedRule", ({
  enumerable: true,
  get: function () {
    return _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule;
  },
}));
Object.defineProperty(exports, "PossibleFragmentSpreadsRule", ({
  enumerable: true,
  get: function () {
    return _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule;
  },
}));
Object.defineProperty(exports, "PossibleTypeExtensionsRule", ({
  enumerable: true,
  get: function () {
    return _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule;
  },
}));
Object.defineProperty(exports, "ProvidedRequiredArgumentsRule", ({
  enumerable: true,
  get: function () {
    return _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule;
  },
}));
Object.defineProperty(exports, "ScalarLeafsRule", ({
  enumerable: true,
  get: function () {
    return _ScalarLeafsRule.ScalarLeafsRule;
  },
}));
Object.defineProperty(exports, "SingleFieldSubscriptionsRule", ({
  enumerable: true,
  get: function () {
    return _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule;
  },
}));
Object.defineProperty(exports, "UniqueArgumentDefinitionNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueArgumentNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueArgumentNamesRule.UniqueArgumentNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueDirectiveNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueDirectivesPerLocationRule", ({
  enumerable: true,
  get: function () {
    return _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule;
  },
}));
Object.defineProperty(exports, "UniqueEnumValueNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueFieldDefinitionNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueFragmentNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueFragmentNamesRule.UniqueFragmentNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueInputFieldNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueOperationNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueOperationNamesRule.UniqueOperationNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueOperationTypesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueOperationTypesRule.UniqueOperationTypesRule;
  },
}));
Object.defineProperty(exports, "UniqueTypeNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueTypeNamesRule.UniqueTypeNamesRule;
  },
}));
Object.defineProperty(exports, "UniqueVariableNamesRule", ({
  enumerable: true,
  get: function () {
    return _UniqueVariableNamesRule.UniqueVariableNamesRule;
  },
}));
Object.defineProperty(exports, "ValidationContext", ({
  enumerable: true,
  get: function () {
    return _ValidationContext.ValidationContext;
  },
}));
Object.defineProperty(exports, "ValuesOfCorrectTypeRule", ({
  enumerable: true,
  get: function () {
    return _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule;
  },
}));
Object.defineProperty(exports, "VariablesAreInputTypesRule", ({
  enumerable: true,
  get: function () {
    return _VariablesAreInputTypesRule.VariablesAreInputTypesRule;
  },
}));
Object.defineProperty(exports, "VariablesInAllowedPositionRule", ({
  enumerable: true,
  get: function () {
    return _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule;
  },
}));
Object.defineProperty(exports, "specifiedRules", ({
  enumerable: true,
  get: function () {
    return _specifiedRules.specifiedRules;
  },
}));
Object.defineProperty(exports, "validate", ({
  enumerable: true,
  get: function () {
    return _validate.validate;
  },
}));

var _validate = __nccwpck_require__(4409);

var _ValidationContext = __nccwpck_require__(8263);

var _specifiedRules = __nccwpck_require__(4908);

var _ExecutableDefinitionsRule = __nccwpck_require__(9199);

var _FieldsOnCorrectTypeRule = __nccwpck_require__(3016);

var _FragmentsOnCompositeTypesRule = __nccwpck_require__(381);

var _KnownArgumentNamesRule = __nccwpck_require__(7147);

var _KnownDirectivesRule = __nccwpck_require__(5303);

var _KnownFragmentNamesRule = __nccwpck_require__(5166);

var _KnownTypeNamesRule = __nccwpck_require__(2509);

var _LoneAnonymousOperationRule = __nccwpck_require__(5726);

var _NoFragmentCyclesRule = __nccwpck_require__(2564);

var _NoUndefinedVariablesRule = __nccwpck_require__(1671);

var _NoUnusedFragmentsRule = __nccwpck_require__(192);

var _NoUnusedVariablesRule = __nccwpck_require__(242);

var _OverlappingFieldsCanBeMergedRule = __nccwpck_require__(3577);

var _PossibleFragmentSpreadsRule = __nccwpck_require__(2450);

var _ProvidedRequiredArgumentsRule = __nccwpck_require__(7669);

var _ScalarLeafsRule = __nccwpck_require__(6830);

var _SingleFieldSubscriptionsRule = __nccwpck_require__(4365);

var _UniqueArgumentNamesRule = __nccwpck_require__(5799);

var _UniqueDirectivesPerLocationRule = __nccwpck_require__(1944);

var _UniqueFragmentNamesRule = __nccwpck_require__(9402);

var _UniqueInputFieldNamesRule = __nccwpck_require__(3552);

var _UniqueOperationNamesRule = __nccwpck_require__(4865);

var _UniqueVariableNamesRule = __nccwpck_require__(5931);

var _ValuesOfCorrectTypeRule = __nccwpck_require__(9091);

var _VariablesAreInputTypesRule = __nccwpck_require__(9506);

var _VariablesInAllowedPositionRule = __nccwpck_require__(8815);

var _LoneSchemaDefinitionRule = __nccwpck_require__(8307);

var _UniqueOperationTypesRule = __nccwpck_require__(1492);

var _UniqueTypeNamesRule = __nccwpck_require__(4316);

var _UniqueEnumValueNamesRule = __nccwpck_require__(4437);

var _UniqueFieldDefinitionNamesRule = __nccwpck_require__(9502);

var _UniqueArgumentDefinitionNamesRule = __nccwpck_require__(5104);

var _UniqueDirectiveNamesRule = __nccwpck_require__(7074);

var _PossibleTypeExtensionsRule = __nccwpck_require__(75);

var _NoDeprecatedCustomRule = __nccwpck_require__(3915);

var _NoSchemaIntrospectionCustomRule = __nccwpck_require__(9478);


/***/ }),

/***/ 9199:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.ExecutableDefinitionsRule = ExecutableDefinitionsRule;

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _predicates = __nccwpck_require__(535);

/**
 * Executable definitions
 *
 * A GraphQL document is only valid for execution if all definitions are either
 * operation or fragment definitions.
 *
 * See https://spec.graphql.org/draft/#sec-Executable-Definitions
 */
function ExecutableDefinitionsRule(context) {
  return {
    Document(node) {
      for (const definition of node.definitions) {
        if (!(0, _predicates.isExecutableDefinitionNode)(definition)) {
          const defName =
            definition.kind === _kinds.Kind.SCHEMA_DEFINITION ||
            definition.kind === _kinds.Kind.SCHEMA_EXTENSION
              ? 'schema'
              : '"' + definition.name.value + '"';
          context.reportError(
            new _GraphQLError.GraphQLError(
              `The ${defName} definition is not executable.`,
              {
                nodes: definition,
              },
            ),
          );
        }
      }

      return false;
    },
  };
}


/***/ }),

/***/ 3016:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.FieldsOnCorrectTypeRule = FieldsOnCorrectTypeRule;

var _didYouMean = __nccwpck_require__(2878);

var _naturalCompare = __nccwpck_require__(38);

var _suggestionList = __nccwpck_require__(7704);

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

/**
 * Fields on correct type
 *
 * A GraphQL document is only valid if all fields selected are defined by the
 * parent type, or are an allowed meta field such as __typename.
 *
 * See https://spec.graphql.org/draft/#sec-Field-Selections
 */
function FieldsOnCorrectTypeRule(context) {
  return {
    Field(node) {
      const type = context.getParentType();

      if (type) {
        const fieldDef = context.getFieldDef();

        if (!fieldDef) {
          // This field doesn't exist, lets look for suggestions.
          const schema = context.getSchema();
          const fieldName = node.name.value; // First determine if there are any suggested types to condition on.

          let suggestion = (0, _didYouMean.didYouMean)(
            'to use an inline fragment on',
            getSuggestedTypeNames(schema, type, fieldName),
          ); // If there are no suggested types, then perhaps this was a typo?

          if (suggestion === '') {
            suggestion = (0, _didYouMean.didYouMean)(
              getSuggestedFieldNames(type, fieldName),
            );
          } // Report an error, including helpful suggestions.

          context.reportError(
            new _GraphQLError.GraphQLError(
              `Cannot query field "${fieldName}" on type "${type.name}".` +
                suggestion,
              {
                nodes: node,
              },
            ),
          );
        }
      }
    },
  };
}
/**
 * Go through all of the implementations of type, as well as the interfaces that
 * they implement. If any of those types include the provided field, suggest them,
 * sorted by how often the type is referenced.
 */

function getSuggestedTypeNames(schema, type, fieldName) {
  if (!(0, _definition.isAbstractType)(type)) {
    // Must be an Object type, which does not have possible fields.
    return [];
  }

  const suggestedTypes = new Set();
  const usageCount = Object.create(null);

  for (const possibleType of schema.getPossibleTypes(type)) {
    if (!possibleType.getFields()[fieldName]) {
      continue;
    } // This object type defines this field.

    suggestedTypes.add(possibleType);
    usageCount[possibleType.name] = 1;

    for (const possibleInterface of possibleType.getInterfaces()) {
      var _usageCount$possibleI;

      if (!possibleInterface.getFields()[fieldName]) {
        continue;
      } // This interface type defines this field.

      suggestedTypes.add(possibleInterface);
      usageCount[possibleInterface.name] =
        ((_usageCount$possibleI = usageCount[possibleInterface.name]) !==
          null && _usageCount$possibleI !== void 0
          ? _usageCount$possibleI
          : 0) + 1;
    }
  }

  return [...suggestedTypes]
    .sort((typeA, typeB) => {
      // Suggest both interface and object types based on how common they are.
      const usageCountDiff = usageCount[typeB.name] - usageCount[typeA.name];

      if (usageCountDiff !== 0) {
        return usageCountDiff;
      } // Suggest super types first followed by subtypes

      if (
        (0, _definition.isInterfaceType)(typeA) &&
        schema.isSubType(typeA, typeB)
      ) {
        return -1;
      }

      if (
        (0, _definition.isInterfaceType)(typeB) &&
        schema.isSubType(typeB, typeA)
      ) {
        return 1;
      }

      return (0, _naturalCompare.naturalCompare)(typeA.name, typeB.name);
    })
    .map((x) => x.name);
}
/**
 * For the field name provided, determine if there are any similar field names
 * that may be the result of a typo.
 */

function getSuggestedFieldNames(type, fieldName) {
  if (
    (0, _definition.isObjectType)(type) ||
    (0, _definition.isInterfaceType)(type)
  ) {
    const possibleFieldNames = Object.keys(type.getFields());
    return (0, _suggestionList.suggestionList)(fieldName, possibleFieldNames);
  } // Otherwise, must be a Union type, which does not define fields.

  return [];
}


/***/ }),

/***/ 381:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.FragmentsOnCompositeTypesRule = FragmentsOnCompositeTypesRule;

var _GraphQLError = __nccwpck_require__(4797);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

var _typeFromAST = __nccwpck_require__(7664);

/**
 * Fragments on composite type
 *
 * Fragments use a type condition to determine if they apply, since fragments
 * can only be spread into a composite type (object, interface, or union), the
 * type condition must also be a composite type.
 *
 * See https://spec.graphql.org/draft/#sec-Fragments-On-Composite-Types
 */
function FragmentsOnCompositeTypesRule(context) {
  return {
    InlineFragment(node) {
      const typeCondition = node.typeCondition;

      if (typeCondition) {
        const type = (0, _typeFromAST.typeFromAST)(
          context.getSchema(),
          typeCondition,
        );

        if (type && !(0, _definition.isCompositeType)(type)) {
          const typeStr = (0, _printer.print)(typeCondition);
          context.reportError(
            new _GraphQLError.GraphQLError(
              `Fragment cannot condition on non composite type "${typeStr}".`,
              {
                nodes: typeCondition,
              },
            ),
          );
        }
      }
    },

    FragmentDefinition(node) {
      const type = (0, _typeFromAST.typeFromAST)(
        context.getSchema(),
        node.typeCondition,
      );

      if (type && !(0, _definition.isCompositeType)(type)) {
        const typeStr = (0, _printer.print)(node.typeCondition);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Fragment "${node.name.value}" cannot condition on non composite type "${typeStr}".`,
            {
              nodes: node.typeCondition,
            },
          ),
        );
      }
    },
  };
}


/***/ }),

/***/ 7147:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.KnownArgumentNamesOnDirectivesRule = KnownArgumentNamesOnDirectivesRule;
exports.KnownArgumentNamesRule = KnownArgumentNamesRule;

var _didYouMean = __nccwpck_require__(2878);

var _suggestionList = __nccwpck_require__(7704);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _directives = __nccwpck_require__(3614);

/**
 * Known argument names
 *
 * A GraphQL field is only valid if all supplied arguments are defined by
 * that field.
 *
 * See https://spec.graphql.org/draft/#sec-Argument-Names
 * See https://spec.graphql.org/draft/#sec-Directives-Are-In-Valid-Locations
 */
function KnownArgumentNamesRule(context) {
  return {
    // eslint-disable-next-line new-cap
    ...KnownArgumentNamesOnDirectivesRule(context),

    Argument(argNode) {
      const argDef = context.getArgument();
      const fieldDef = context.getFieldDef();
      const parentType = context.getParentType();

      if (!argDef && fieldDef && parentType) {
        const argName = argNode.name.value;
        const knownArgsNames = fieldDef.args.map((arg) => arg.name);
        const suggestions = (0, _suggestionList.suggestionList)(
          argName,
          knownArgsNames,
        );
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Unknown argument "${argName}" on field "${parentType.name}.${fieldDef.name}".` +
              (0, _didYouMean.didYouMean)(suggestions),
            {
              nodes: argNode,
            },
          ),
        );
      }
    },
  };
}
/**
 * @internal
 */

function KnownArgumentNamesOnDirectivesRule(context) {
  const directiveArgs = Object.create(null);
  const schema = context.getSchema();
  const definedDirectives = schema
    ? schema.getDirectives()
    : _directives.specifiedDirectives;

  for (const directive of definedDirectives) {
    directiveArgs[directive.name] = directive.args.map((arg) => arg.name);
  }

  const astDefinitions = context.getDocument().definitions;

  for (const def of astDefinitions) {
    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {
      var _def$arguments;

      // FIXME: https://github.com/graphql/graphql-js/issues/2203

      /* c8 ignore next */
      const argsNodes =
        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0
          ? _def$arguments
          : [];
      directiveArgs[def.name.value] = argsNodes.map((arg) => arg.name.value);
    }
  }

  return {
    Directive(directiveNode) {
      const directiveName = directiveNode.name.value;
      const knownArgs = directiveArgs[directiveName];

      if (directiveNode.arguments && knownArgs) {
        for (const argNode of directiveNode.arguments) {
          const argName = argNode.name.value;

          if (!knownArgs.includes(argName)) {
            const suggestions = (0, _suggestionList.suggestionList)(
              argName,
              knownArgs,
            );
            context.reportError(
              new _GraphQLError.GraphQLError(
                `Unknown argument "${argName}" on directive "@${directiveName}".` +
                  (0, _didYouMean.didYouMean)(suggestions),
                {
                  nodes: argNode,
                },
              ),
            );
          }
        }
      }

      return false;
    },
  };
}


/***/ }),

/***/ 5303:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.KnownDirectivesRule = KnownDirectivesRule;

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _GraphQLError = __nccwpck_require__(4797);

var _ast = __nccwpck_require__(5494);

var _directiveLocation = __nccwpck_require__(1553);

var _kinds = __nccwpck_require__(1927);

var _directives = __nccwpck_require__(3614);

/**
 * Known directives
 *
 * A GraphQL document is only valid if all `@directives` are known by the
 * schema and legally positioned.
 *
 * See https://spec.graphql.org/draft/#sec-Directives-Are-Defined
 */
function KnownDirectivesRule(context) {
  const locationsMap = Object.create(null);
  const schema = context.getSchema();
  const definedDirectives = schema
    ? schema.getDirectives()
    : _directives.specifiedDirectives;

  for (const directive of definedDirectives) {
    locationsMap[directive.name] = directive.locations;
  }

  const astDefinitions = context.getDocument().definitions;

  for (const def of astDefinitions) {
    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {
      locationsMap[def.name.value] = def.locations.map((name) => name.value);
    }
  }

  return {
    Directive(node, _key, _parent, _path, ancestors) {
      const name = node.name.value;
      const locations = locationsMap[name];

      if (!locations) {
        context.reportError(
          new _GraphQLError.GraphQLError(`Unknown directive "@${name}".`, {
            nodes: node,
          }),
        );
        return;
      }

      const candidateLocation = getDirectiveLocationForASTPath(ancestors);

      if (candidateLocation && !locations.includes(candidateLocation)) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Directive "@${name}" may not be used on ${candidateLocation}.`,
            {
              nodes: node,
            },
          ),
        );
      }
    },
  };
}

function getDirectiveLocationForASTPath(ancestors) {
  const appliedTo = ancestors[ancestors.length - 1];
  'kind' in appliedTo || (0, _invariant.invariant)(false);

  switch (appliedTo.kind) {
    case _kinds.Kind.OPERATION_DEFINITION:
      return getDirectiveLocationForOperation(appliedTo.operation);

    case _kinds.Kind.FIELD:
      return _directiveLocation.DirectiveLocation.FIELD;

    case _kinds.Kind.FRAGMENT_SPREAD:
      return _directiveLocation.DirectiveLocation.FRAGMENT_SPREAD;

    case _kinds.Kind.INLINE_FRAGMENT:
      return _directiveLocation.DirectiveLocation.INLINE_FRAGMENT;

    case _kinds.Kind.FRAGMENT_DEFINITION:
      return _directiveLocation.DirectiveLocation.FRAGMENT_DEFINITION;

    case _kinds.Kind.VARIABLE_DEFINITION:
      return _directiveLocation.DirectiveLocation.VARIABLE_DEFINITION;

    case _kinds.Kind.SCHEMA_DEFINITION:
    case _kinds.Kind.SCHEMA_EXTENSION:
      return _directiveLocation.DirectiveLocation.SCHEMA;

    case _kinds.Kind.SCALAR_TYPE_DEFINITION:
    case _kinds.Kind.SCALAR_TYPE_EXTENSION:
      return _directiveLocation.DirectiveLocation.SCALAR;

    case _kinds.Kind.OBJECT_TYPE_DEFINITION:
    case _kinds.Kind.OBJECT_TYPE_EXTENSION:
      return _directiveLocation.DirectiveLocation.OBJECT;

    case _kinds.Kind.FIELD_DEFINITION:
      return _directiveLocation.DirectiveLocation.FIELD_DEFINITION;

    case _kinds.Kind.INTERFACE_TYPE_DEFINITION:
    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:
      return _directiveLocation.DirectiveLocation.INTERFACE;

    case _kinds.Kind.UNION_TYPE_DEFINITION:
    case _kinds.Kind.UNION_TYPE_EXTENSION:
      return _directiveLocation.DirectiveLocation.UNION;

    case _kinds.Kind.ENUM_TYPE_DEFINITION:
    case _kinds.Kind.ENUM_TYPE_EXTENSION:
      return _directiveLocation.DirectiveLocation.ENUM;

    case _kinds.Kind.ENUM_VALUE_DEFINITION:
      return _directiveLocation.DirectiveLocation.ENUM_VALUE;

    case _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION:
    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:
      return _directiveLocation.DirectiveLocation.INPUT_OBJECT;

    case _kinds.Kind.INPUT_VALUE_DEFINITION: {
      const parentNode = ancestors[ancestors.length - 3];
      'kind' in parentNode || (0, _invariant.invariant)(false);
      return parentNode.kind === _kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION
        ? _directiveLocation.DirectiveLocation.INPUT_FIELD_DEFINITION
        : _directiveLocation.DirectiveLocation.ARGUMENT_DEFINITION;
    }
    // Not reachable, all possible types have been considered.

    /* c8 ignore next */

    default:
       false ||
        (0, _invariant.invariant)(
          false,
          'Unexpected kind: ' + (0, _inspect.inspect)(appliedTo.kind),
        );
  }
}

function getDirectiveLocationForOperation(operation) {
  switch (operation) {
    case _ast.OperationTypeNode.QUERY:
      return _directiveLocation.DirectiveLocation.QUERY;

    case _ast.OperationTypeNode.MUTATION:
      return _directiveLocation.DirectiveLocation.MUTATION;

    case _ast.OperationTypeNode.SUBSCRIPTION:
      return _directiveLocation.DirectiveLocation.SUBSCRIPTION;
  }
}


/***/ }),

/***/ 5166:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.KnownFragmentNamesRule = KnownFragmentNamesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Known fragment names
 *
 * A GraphQL document is only valid if all `...Fragment` fragment spreads refer
 * to fragments defined in the same document.
 *
 * See https://spec.graphql.org/draft/#sec-Fragment-spread-target-defined
 */
function KnownFragmentNamesRule(context) {
  return {
    FragmentSpread(node) {
      const fragmentName = node.name.value;
      const fragment = context.getFragment(fragmentName);

      if (!fragment) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Unknown fragment "${fragmentName}".`,
            {
              nodes: node.name,
            },
          ),
        );
      }
    },
  };
}


/***/ }),

/***/ 2509:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.KnownTypeNamesRule = KnownTypeNamesRule;

var _didYouMean = __nccwpck_require__(2878);

var _suggestionList = __nccwpck_require__(7704);

var _GraphQLError = __nccwpck_require__(4797);

var _predicates = __nccwpck_require__(535);

var _introspection = __nccwpck_require__(8344);

var _scalars = __nccwpck_require__(3145);

/**
 * Known type names
 *
 * A GraphQL document is only valid if referenced types (specifically
 * variable definitions and fragment conditions) are defined by the type schema.
 *
 * See https://spec.graphql.org/draft/#sec-Fragment-Spread-Type-Existence
 */
function KnownTypeNamesRule(context) {
  const schema = context.getSchema();
  const existingTypesMap = schema ? schema.getTypeMap() : Object.create(null);
  const definedTypes = Object.create(null);

  for (const def of context.getDocument().definitions) {
    if ((0, _predicates.isTypeDefinitionNode)(def)) {
      definedTypes[def.name.value] = true;
    }
  }

  const typeNames = [
    ...Object.keys(existingTypesMap),
    ...Object.keys(definedTypes),
  ];
  return {
    NamedType(node, _1, parent, _2, ancestors) {
      const typeName = node.name.value;

      if (!existingTypesMap[typeName] && !definedTypes[typeName]) {
        var _ancestors$;

        const definitionNode =
          (_ancestors$ = ancestors[2]) !== null && _ancestors$ !== void 0
            ? _ancestors$
            : parent;
        const isSDL = definitionNode != null && isSDLNode(definitionNode);

        if (isSDL && standardTypeNames.includes(typeName)) {
          return;
        }

        const suggestedTypes = (0, _suggestionList.suggestionList)(
          typeName,
          isSDL ? standardTypeNames.concat(typeNames) : typeNames,
        );
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Unknown type "${typeName}".` +
              (0, _didYouMean.didYouMean)(suggestedTypes),
            {
              nodes: node,
            },
          ),
        );
      }
    },
  };
}

const standardTypeNames = [
  ..._scalars.specifiedScalarTypes,
  ..._introspection.introspectionTypes,
].map((type) => type.name);

function isSDLNode(value) {
  return (
    'kind' in value &&
    ((0, _predicates.isTypeSystemDefinitionNode)(value) ||
      (0, _predicates.isTypeSystemExtensionNode)(value))
  );
}


/***/ }),

/***/ 5726:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.LoneAnonymousOperationRule = LoneAnonymousOperationRule;

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

/**
 * Lone anonymous operation
 *
 * A GraphQL document is only valid if when it contains an anonymous operation
 * (the query short-hand) that it contains only that one operation definition.
 *
 * See https://spec.graphql.org/draft/#sec-Lone-Anonymous-Operation
 */
function LoneAnonymousOperationRule(context) {
  let operationCount = 0;
  return {
    Document(node) {
      operationCount = node.definitions.filter(
        (definition) => definition.kind === _kinds.Kind.OPERATION_DEFINITION,
      ).length;
    },

    OperationDefinition(node) {
      if (!node.name && operationCount > 1) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            'This anonymous operation must be the only defined operation.',
            {
              nodes: node,
            },
          ),
        );
      }
    },
  };
}


/***/ }),

/***/ 8307:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.LoneSchemaDefinitionRule = LoneSchemaDefinitionRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Lone Schema definition
 *
 * A GraphQL document is only valid if it contains only one schema definition.
 */
function LoneSchemaDefinitionRule(context) {
  var _ref, _ref2, _oldSchema$astNode;

  const oldSchema = context.getSchema();
  const alreadyDefined =
    (_ref =
      (_ref2 =
        (_oldSchema$astNode =
          oldSchema === null || oldSchema === void 0
            ? void 0
            : oldSchema.astNode) !== null && _oldSchema$astNode !== void 0
          ? _oldSchema$astNode
          : oldSchema === null || oldSchema === void 0
          ? void 0
          : oldSchema.getQueryType()) !== null && _ref2 !== void 0
        ? _ref2
        : oldSchema === null || oldSchema === void 0
        ? void 0
        : oldSchema.getMutationType()) !== null && _ref !== void 0
      ? _ref
      : oldSchema === null || oldSchema === void 0
      ? void 0
      : oldSchema.getSubscriptionType();
  let schemaDefinitionsCount = 0;
  return {
    SchemaDefinition(node) {
      if (alreadyDefined) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            'Cannot define a new schema within a schema extension.',
            {
              nodes: node,
            },
          ),
        );
        return;
      }

      if (schemaDefinitionsCount > 0) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            'Must provide only one schema definition.',
            {
              nodes: node,
            },
          ),
        );
      }

      ++schemaDefinitionsCount;
    },
  };
}


/***/ }),

/***/ 2564:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.NoFragmentCyclesRule = NoFragmentCyclesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * No fragment cycles
 *
 * The graph of fragment spreads must not form any cycles including spreading itself.
 * Otherwise an operation could infinitely spread or infinitely execute on cycles in the underlying data.
 *
 * See https://spec.graphql.org/draft/#sec-Fragment-spreads-must-not-form-cycles
 */
function NoFragmentCyclesRule(context) {
  // Tracks already visited fragments to maintain O(N) and to ensure that cycles
  // are not redundantly reported.
  const visitedFrags = Object.create(null); // Array of AST nodes used to produce meaningful errors

  const spreadPath = []; // Position in the spread path

  const spreadPathIndexByName = Object.create(null);
  return {
    OperationDefinition: () => false,

    FragmentDefinition(node) {
      detectCycleRecursive(node);
      return false;
    },
  }; // This does a straight-forward DFS to find cycles.
  // It does not terminate when a cycle was found but continues to explore
  // the graph to find all possible cycles.

  function detectCycleRecursive(fragment) {
    if (visitedFrags[fragment.name.value]) {
      return;
    }

    const fragmentName = fragment.name.value;
    visitedFrags[fragmentName] = true;
    const spreadNodes = context.getFragmentSpreads(fragment.selectionSet);

    if (spreadNodes.length === 0) {
      return;
    }

    spreadPathIndexByName[fragmentName] = spreadPath.length;

    for (const spreadNode of spreadNodes) {
      const spreadName = spreadNode.name.value;
      const cycleIndex = spreadPathIndexByName[spreadName];
      spreadPath.push(spreadNode);

      if (cycleIndex === undefined) {
        const spreadFragment = context.getFragment(spreadName);

        if (spreadFragment) {
          detectCycleRecursive(spreadFragment);
        }
      } else {
        const cyclePath = spreadPath.slice(cycleIndex);
        const viaPath = cyclePath
          .slice(0, -1)
          .map((s) => '"' + s.name.value + '"')
          .join(', ');
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Cannot spread fragment "${spreadName}" within itself` +
              (viaPath !== '' ? ` via ${viaPath}.` : '.'),
            {
              nodes: cyclePath,
            },
          ),
        );
      }

      spreadPath.pop();
    }

    spreadPathIndexByName[fragmentName] = undefined;
  }
}


/***/ }),

/***/ 1671:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.NoUndefinedVariablesRule = NoUndefinedVariablesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * No undefined variables
 *
 * A GraphQL operation is only valid if all variables encountered, both directly
 * and via fragment spreads, are defined by that operation.
 *
 * See https://spec.graphql.org/draft/#sec-All-Variable-Uses-Defined
 */
function NoUndefinedVariablesRule(context) {
  let variableNameDefined = Object.create(null);
  return {
    OperationDefinition: {
      enter() {
        variableNameDefined = Object.create(null);
      },

      leave(operation) {
        const usages = context.getRecursiveVariableUsages(operation);

        for (const { node } of usages) {
          const varName = node.name.value;

          if (variableNameDefined[varName] !== true) {
            context.reportError(
              new _GraphQLError.GraphQLError(
                operation.name
                  ? `Variable "$${varName}" is not defined by operation "${operation.name.value}".`
                  : `Variable "$${varName}" is not defined.`,
                {
                  nodes: [node, operation],
                },
              ),
            );
          }
        }
      },
    },

    VariableDefinition(node) {
      variableNameDefined[node.variable.name.value] = true;
    },
  };
}


/***/ }),

/***/ 192:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.NoUnusedFragmentsRule = NoUnusedFragmentsRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * No unused fragments
 *
 * A GraphQL document is only valid if all fragment definitions are spread
 * within operations, or spread within other fragments spread within operations.
 *
 * See https://spec.graphql.org/draft/#sec-Fragments-Must-Be-Used
 */
function NoUnusedFragmentsRule(context) {
  const operationDefs = [];
  const fragmentDefs = [];
  return {
    OperationDefinition(node) {
      operationDefs.push(node);
      return false;
    },

    FragmentDefinition(node) {
      fragmentDefs.push(node);
      return false;
    },

    Document: {
      leave() {
        const fragmentNameUsed = Object.create(null);

        for (const operation of operationDefs) {
          for (const fragment of context.getRecursivelyReferencedFragments(
            operation,
          )) {
            fragmentNameUsed[fragment.name.value] = true;
          }
        }

        for (const fragmentDef of fragmentDefs) {
          const fragName = fragmentDef.name.value;

          if (fragmentNameUsed[fragName] !== true) {
            context.reportError(
              new _GraphQLError.GraphQLError(
                `Fragment "${fragName}" is never used.`,
                {
                  nodes: fragmentDef,
                },
              ),
            );
          }
        }
      },
    },
  };
}


/***/ }),

/***/ 242:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.NoUnusedVariablesRule = NoUnusedVariablesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * No unused variables
 *
 * A GraphQL operation is only valid if all variables defined by an operation
 * are used, either directly or within a spread fragment.
 *
 * See https://spec.graphql.org/draft/#sec-All-Variables-Used
 */
function NoUnusedVariablesRule(context) {
  let variableDefs = [];
  return {
    OperationDefinition: {
      enter() {
        variableDefs = [];
      },

      leave(operation) {
        const variableNameUsed = Object.create(null);
        const usages = context.getRecursiveVariableUsages(operation);

        for (const { node } of usages) {
          variableNameUsed[node.name.value] = true;
        }

        for (const variableDef of variableDefs) {
          const variableName = variableDef.variable.name.value;

          if (variableNameUsed[variableName] !== true) {
            context.reportError(
              new _GraphQLError.GraphQLError(
                operation.name
                  ? `Variable "$${variableName}" is never used in operation "${operation.name.value}".`
                  : `Variable "$${variableName}" is never used.`,
                {
                  nodes: variableDef,
                },
              ),
            );
          }
        }
      },
    },

    VariableDefinition(def) {
      variableDefs.push(def);
    },
  };
}


/***/ }),

/***/ 3577:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.OverlappingFieldsCanBeMergedRule = OverlappingFieldsCanBeMergedRule;

var _inspect = __nccwpck_require__(102);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

var _sortValueNode = __nccwpck_require__(2278);

var _typeFromAST = __nccwpck_require__(7664);

function reasonMessage(reason) {
  if (Array.isArray(reason)) {
    return reason
      .map(
        ([responseName, subReason]) =>
          `subfields "${responseName}" conflict because ` +
          reasonMessage(subReason),
      )
      .join(' and ');
  }

  return reason;
}
/**
 * Overlapping fields can be merged
 *
 * A selection set is only valid if all fields (including spreading any
 * fragments) either correspond to distinct response names or can be merged
 * without ambiguity.
 *
 * See https://spec.graphql.org/draft/#sec-Field-Selection-Merging
 */

function OverlappingFieldsCanBeMergedRule(context) {
  // A memoization for when two fragments are compared "between" each other for
  // conflicts. Two fragments may be compared many times, so memoizing this can
  // dramatically improve the performance of this validator.
  const comparedFragmentPairs = new PairSet(); // A cache for the "field map" and list of fragment names found in any given
  // selection set. Selection sets may be asked for this information multiple
  // times, so this improves the performance of this validator.

  const cachedFieldsAndFragmentNames = new Map();
  return {
    SelectionSet(selectionSet) {
      const conflicts = findConflictsWithinSelectionSet(
        context,
        cachedFieldsAndFragmentNames,
        comparedFragmentPairs,
        context.getParentType(),
        selectionSet,
      );

      for (const [[responseName, reason], fields1, fields2] of conflicts) {
        const reasonMsg = reasonMessage(reason);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Fields "${responseName}" conflict because ${reasonMsg}. Use different aliases on the fields to fetch both if this was intentional.`,
            {
              nodes: fields1.concat(fields2),
            },
          ),
        );
      }
    },
  };
}

/**
 * Algorithm:
 *
 * Conflicts occur when two fields exist in a query which will produce the same
 * response name, but represent differing values, thus creating a conflict.
 * The algorithm below finds all conflicts via making a series of comparisons
 * between fields. In order to compare as few fields as possible, this makes
 * a series of comparisons "within" sets of fields and "between" sets of fields.
 *
 * Given any selection set, a collection produces both a set of fields by
 * also including all inline fragments, as well as a list of fragments
 * referenced by fragment spreads.
 *
 * A) Each selection set represented in the document first compares "within" its
 * collected set of fields, finding any conflicts between every pair of
 * overlapping fields.
 * Note: This is the *only time* that a the fields "within" a set are compared
 * to each other. After this only fields "between" sets are compared.
 *
 * B) Also, if any fragment is referenced in a selection set, then a
 * comparison is made "between" the original set of fields and the
 * referenced fragment.
 *
 * C) Also, if multiple fragments are referenced, then comparisons
 * are made "between" each referenced fragment.
 *
 * D) When comparing "between" a set of fields and a referenced fragment, first
 * a comparison is made between each field in the original set of fields and
 * each field in the the referenced set of fields.
 *
 * E) Also, if any fragment is referenced in the referenced selection set,
 * then a comparison is made "between" the original set of fields and the
 * referenced fragment (recursively referring to step D).
 *
 * F) When comparing "between" two fragments, first a comparison is made between
 * each field in the first referenced set of fields and each field in the the
 * second referenced set of fields.
 *
 * G) Also, any fragments referenced by the first must be compared to the
 * second, and any fragments referenced by the second must be compared to the
 * first (recursively referring to step F).
 *
 * H) When comparing two fields, if both have selection sets, then a comparison
 * is made "between" both selection sets, first comparing the set of fields in
 * the first selection set with the set of fields in the second.
 *
 * I) Also, if any fragment is referenced in either selection set, then a
 * comparison is made "between" the other set of fields and the
 * referenced fragment.
 *
 * J) Also, if two fragments are referenced in both selection sets, then a
 * comparison is made "between" the two fragments.
 *
 */
// Find all conflicts found "within" a selection set, including those found
// via spreading in fragments. Called when visiting each SelectionSet in the
// GraphQL Document.
function findConflictsWithinSelectionSet(
  context,
  cachedFieldsAndFragmentNames,
  comparedFragmentPairs,
  parentType,
  selectionSet,
) {
  const conflicts = [];
  const [fieldMap, fragmentNames] = getFieldsAndFragmentNames(
    context,
    cachedFieldsAndFragmentNames,
    parentType,
    selectionSet,
  ); // (A) Find find all conflicts "within" the fields of this selection set.
  // Note: this is the *only place* `collectConflictsWithin` is called.

  collectConflictsWithin(
    context,
    conflicts,
    cachedFieldsAndFragmentNames,
    comparedFragmentPairs,
    fieldMap,
  );

  if (fragmentNames.length !== 0) {
    // (B) Then collect conflicts between these fields and those represented by
    // each spread fragment name found.
    for (let i = 0; i < fragmentNames.length; i++) {
      collectConflictsBetweenFieldsAndFragment(
        context,
        conflicts,
        cachedFieldsAndFragmentNames,
        comparedFragmentPairs,
        false,
        fieldMap,
        fragmentNames[i],
      ); // (C) Then compare this fragment with all other fragments found in this
      // selection set to collect conflicts between fragments spread together.
      // This compares each item in the list of fragment names to every other
      // item in that same list (except for itself).

      for (let j = i + 1; j < fragmentNames.length; j++) {
        collectConflictsBetweenFragments(
          context,
          conflicts,
          cachedFieldsAndFragmentNames,
          comparedFragmentPairs,
          false,
          fragmentNames[i],
          fragmentNames[j],
        );
      }
    }
  }

  return conflicts;
} // Collect all conflicts found between a set of fields and a fragment reference
// including via spreading in any nested fragments.

function collectConflictsBetweenFieldsAndFragment(
  context,
  conflicts,
  cachedFieldsAndFragmentNames,
  comparedFragmentPairs,
  areMutuallyExclusive,
  fieldMap,
  fragmentName,
) {
  const fragment = context.getFragment(fragmentName);

  if (!fragment) {
    return;
  }

  const [fieldMap2, referencedFragmentNames] =
    getReferencedFieldsAndFragmentNames(
      context,
      cachedFieldsAndFragmentNames,
      fragment,
    ); // Do not compare a fragment's fieldMap to itself.

  if (fieldMap === fieldMap2) {
    return;
  } // (D) First collect any conflicts between the provided collection of fields
  // and the collection of fields represented by the given fragment.

  collectConflictsBetween(
    context,
    conflicts,
    cachedFieldsAndFragmentNames,
    comparedFragmentPairs,
    areMutuallyExclusive,
    fieldMap,
    fieldMap2,
  ); // (E) Then collect any conflicts between the provided collection of fields
  // and any fragment names found in the given fragment.

  for (const referencedFragmentName of referencedFragmentNames) {
    // Memoize so two fragments are not compared for conflicts more than once.
    if (
      comparedFragmentPairs.has(
        referencedFragmentName,
        fragmentName,
        areMutuallyExclusive,
      )
    ) {
      continue;
    }

    comparedFragmentPairs.add(
      referencedFragmentName,
      fragmentName,
      areMutuallyExclusive,
    );
    collectConflictsBetweenFieldsAndFragment(
      context,
      conflicts,
      cachedFieldsAndFragmentNames,
      comparedFragmentPairs,
      areMutuallyExclusive,
      fieldMap,
      referencedFragmentName,
    );
  }
} // Collect all conflicts found between two fragments, including via spreading in
// any nested fragments.

function collectConflictsBetweenFragments(
  context,
  conflicts,
  cachedFieldsAndFragmentNames,
  comparedFragmentPairs,
  areMutuallyExclusive,
  fragmentName1,
  fragmentName2,
) {
  // No need to compare a fragment to itself.
  if (fragmentName1 === fragmentName2) {
    return;
  } // Memoize so two fragments are not compared for conflicts more than once.

  if (
    comparedFragmentPairs.has(
      fragmentName1,
      fragmentName2,
      areMutuallyExclusive,
    )
  ) {
    return;
  }

  comparedFragmentPairs.add(fragmentName1, fragmentName2, areMutuallyExclusive);
  const fragment1 = context.getFragment(fragmentName1);
  const fragment2 = context.getFragment(fragmentName2);

  if (!fragment1 || !fragment2) {
    return;
  }

  const [fieldMap1, referencedFragmentNames1] =
    getReferencedFieldsAndFragmentNames(
      context,
      cachedFieldsAndFragmentNames,
      fragment1,
    );
  const [fieldMap2, referencedFragmentNames2] =
    getReferencedFieldsAndFragmentNames(
      context,
      cachedFieldsAndFragmentNames,
      fragment2,
    ); // (F) First, collect all conflicts between these two collections of fields
  // (not including any nested fragments).

  collectConflictsBetween(
    context,
    conflicts,
    cachedFieldsAndFragmentNames,
    comparedFragmentPairs,
    areMutuallyExclusive,
    fieldMap1,
    fieldMap2,
  ); // (G) Then collect conflicts between the first fragment and any nested
  // fragments spread in the second fragment.

  for (const referencedFragmentName2 of referencedFragmentNames2) {
    collectConflictsBetweenFragments(
      context,
      conflicts,
      cachedFieldsAndFragmentNames,
      comparedFragmentPairs,
      areMutuallyExclusive,
      fragmentName1,
      referencedFragmentName2,
    );
  } // (G) Then collect conflicts between the second fragment and any nested
  // fragments spread in the first fragment.

  for (const referencedFragmentName1 of referencedFragmentNames1) {
    collectConflictsBetweenFragments(
      context,
      conflicts,
      cachedFieldsAndFragmentNames,
      comparedFragmentPairs,
      areMutuallyExclusive,
      referencedFragmentName1,
      fragmentName2,
    );
  }
} // Find all conflicts found between two selection sets, including those found
// via spreading in fragments. Called when determining if conflicts exist
// between the sub-fields of two overlapping fields.

function findConflictsBetweenSubSelectionSets(
  context,
  cachedFieldsAndFragmentNames,
  comparedFragmentPairs,
  areMutuallyExclusive,
  parentType1,
  selectionSet1,
  parentType2,
  selectionSet2,
) {
  const conflicts = [];
  const [fieldMap1, fragmentNames1] = getFieldsAndFragmentNames(
    context,
    cachedFieldsAndFragmentNames,
    parentType1,
    selectionSet1,
  );
  const [fieldMap2, fragmentNames2] = getFieldsAndFragmentNames(
    context,
    cachedFieldsAndFragmentNames,
    parentType2,
    selectionSet2,
  ); // (H) First, collect all conflicts between these two collections of field.

  collectConflictsBetween(
    context,
    conflicts,
    cachedFieldsAndFragmentNames,
    comparedFragmentPairs,
    areMutuallyExclusive,
    fieldMap1,
    fieldMap2,
  ); // (I) Then collect conflicts between the first collection of fields and
  // those referenced by each fragment name associated with the second.

  for (const fragmentName2 of fragmentNames2) {
    collectConflictsBetweenFieldsAndFragment(
      context,
      conflicts,
      cachedFieldsAndFragmentNames,
      comparedFragmentPairs,
      areMutuallyExclusive,
      fieldMap1,
      fragmentName2,
    );
  } // (I) Then collect conflicts between the second collection of fields and
  // those referenced by each fragment name associated with the first.

  for (const fragmentName1 of fragmentNames1) {
    collectConflictsBetweenFieldsAndFragment(
      context,
      conflicts,
      cachedFieldsAndFragmentNames,
      comparedFragmentPairs,
      areMutuallyExclusive,
      fieldMap2,
      fragmentName1,
    );
  } // (J) Also collect conflicts between any fragment names by the first and
  // fragment names by the second. This compares each item in the first set of
  // names to each item in the second set of names.

  for (const fragmentName1 of fragmentNames1) {
    for (const fragmentName2 of fragmentNames2) {
      collectConflictsBetweenFragments(
        context,
        conflicts,
        cachedFieldsAndFragmentNames,
        comparedFragmentPairs,
        areMutuallyExclusive,
        fragmentName1,
        fragmentName2,
      );
    }
  }

  return conflicts;
} // Collect all Conflicts "within" one collection of fields.

function collectConflictsWithin(
  context,
  conflicts,
  cachedFieldsAndFragmentNames,
  comparedFragmentPairs,
  fieldMap,
) {
  // A field map is a keyed collection, where each key represents a response
  // name and the value at that key is a list of all fields which provide that
  // response name. For every response name, if there are multiple fields, they
  // must be compared to find a potential conflict.
  for (const [responseName, fields] of Object.entries(fieldMap)) {
    // This compares every field in the list to every other field in this list
    // (except to itself). If the list only has one item, nothing needs to
    // be compared.
    if (fields.length > 1) {
      for (let i = 0; i < fields.length; i++) {
        for (let j = i + 1; j < fields.length; j++) {
          const conflict = findConflict(
            context,
            cachedFieldsAndFragmentNames,
            comparedFragmentPairs,
            false, // within one collection is never mutually exclusive
            responseName,
            fields[i],
            fields[j],
          );

          if (conflict) {
            conflicts.push(conflict);
          }
        }
      }
    }
  }
} // Collect all Conflicts between two collections of fields. This is similar to,
// but different from the `collectConflictsWithin` function above. This check
// assumes that `collectConflictsWithin` has already been called on each
// provided collection of fields. This is true because this validator traverses
// each individual selection set.

function collectConflictsBetween(
  context,
  conflicts,
  cachedFieldsAndFragmentNames,
  comparedFragmentPairs,
  parentFieldsAreMutuallyExclusive,
  fieldMap1,
  fieldMap2,
) {
  // A field map is a keyed collection, where each key represents a response
  // name and the value at that key is a list of all fields which provide that
  // response name. For any response name which appears in both provided field
  // maps, each field from the first field map must be compared to every field
  // in the second field map to find potential conflicts.
  for (const [responseName, fields1] of Object.entries(fieldMap1)) {
    const fields2 = fieldMap2[responseName];

    if (fields2) {
      for (const field1 of fields1) {
        for (const field2 of fields2) {
          const conflict = findConflict(
            context,
            cachedFieldsAndFragmentNames,
            comparedFragmentPairs,
            parentFieldsAreMutuallyExclusive,
            responseName,
            field1,
            field2,
          );

          if (conflict) {
            conflicts.push(conflict);
          }
        }
      }
    }
  }
} // Determines if there is a conflict between two particular fields, including
// comparing their sub-fields.

function findConflict(
  context,
  cachedFieldsAndFragmentNames,
  comparedFragmentPairs,
  parentFieldsAreMutuallyExclusive,
  responseName,
  field1,
  field2,
) {
  const [parentType1, node1, def1] = field1;
  const [parentType2, node2, def2] = field2; // If it is known that two fields could not possibly apply at the same
  // time, due to the parent types, then it is safe to permit them to diverge
  // in aliased field or arguments used as they will not present any ambiguity
  // by differing.
  // It is known that two parent types could never overlap if they are
  // different Object types. Interface or Union types might overlap - if not
  // in the current state of the schema, then perhaps in some future version,
  // thus may not safely diverge.

  const areMutuallyExclusive =
    parentFieldsAreMutuallyExclusive ||
    (parentType1 !== parentType2 &&
      (0, _definition.isObjectType)(parentType1) &&
      (0, _definition.isObjectType)(parentType2));

  if (!areMutuallyExclusive) {
    // Two aliases must refer to the same field.
    const name1 = node1.name.value;
    const name2 = node2.name.value;

    if (name1 !== name2) {
      return [
        [responseName, `"${name1}" and "${name2}" are different fields`],
        [node1],
        [node2],
      ];
    } // Two field calls must have the same arguments.

    if (stringifyArguments(node1) !== stringifyArguments(node2)) {
      return [
        [responseName, 'they have differing arguments'],
        [node1],
        [node2],
      ];
    }
  } // The return type for each field.

  const type1 = def1 === null || def1 === void 0 ? void 0 : def1.type;
  const type2 = def2 === null || def2 === void 0 ? void 0 : def2.type;

  if (type1 && type2 && doTypesConflict(type1, type2)) {
    return [
      [
        responseName,
        `they return conflicting types "${(0, _inspect.inspect)(
          type1,
        )}" and "${(0, _inspect.inspect)(type2)}"`,
      ],
      [node1],
      [node2],
    ];
  } // Collect and compare sub-fields. Use the same "visited fragment names" list
  // for both collections so fields in a fragment reference are never
  // compared to themselves.

  const selectionSet1 = node1.selectionSet;
  const selectionSet2 = node2.selectionSet;

  if (selectionSet1 && selectionSet2) {
    const conflicts = findConflictsBetweenSubSelectionSets(
      context,
      cachedFieldsAndFragmentNames,
      comparedFragmentPairs,
      areMutuallyExclusive,
      (0, _definition.getNamedType)(type1),
      selectionSet1,
      (0, _definition.getNamedType)(type2),
      selectionSet2,
    );
    return subfieldConflicts(conflicts, responseName, node1, node2);
  }
}

function stringifyArguments(fieldNode) {
  var _fieldNode$arguments;

  // FIXME https://github.com/graphql/graphql-js/issues/2203
  const args =
    /* c8 ignore next */
    (_fieldNode$arguments = fieldNode.arguments) !== null &&
    _fieldNode$arguments !== void 0
      ? _fieldNode$arguments
      : [];
  const inputObjectWithArgs = {
    kind: _kinds.Kind.OBJECT,
    fields: args.map((argNode) => ({
      kind: _kinds.Kind.OBJECT_FIELD,
      name: argNode.name,
      value: argNode.value,
    })),
  };
  return (0, _printer.print)(
    (0, _sortValueNode.sortValueNode)(inputObjectWithArgs),
  );
} // Two types conflict if both types could not apply to a value simultaneously.
// Composite types are ignored as their individual field types will be compared
// later recursively. However List and Non-Null types must match.

function doTypesConflict(type1, type2) {
  if ((0, _definition.isListType)(type1)) {
    return (0, _definition.isListType)(type2)
      ? doTypesConflict(type1.ofType, type2.ofType)
      : true;
  }

  if ((0, _definition.isListType)(type2)) {
    return true;
  }

  if ((0, _definition.isNonNullType)(type1)) {
    return (0, _definition.isNonNullType)(type2)
      ? doTypesConflict(type1.ofType, type2.ofType)
      : true;
  }

  if ((0, _definition.isNonNullType)(type2)) {
    return true;
  }

  if (
    (0, _definition.isLeafType)(type1) ||
    (0, _definition.isLeafType)(type2)
  ) {
    return type1 !== type2;
  }

  return false;
} // Given a selection set, return the collection of fields (a mapping of response
// name to field nodes and definitions) as well as a list of fragment names
// referenced via fragment spreads.

function getFieldsAndFragmentNames(
  context,
  cachedFieldsAndFragmentNames,
  parentType,
  selectionSet,
) {
  const cached = cachedFieldsAndFragmentNames.get(selectionSet);

  if (cached) {
    return cached;
  }

  const nodeAndDefs = Object.create(null);
  const fragmentNames = Object.create(null);

  _collectFieldsAndFragmentNames(
    context,
    parentType,
    selectionSet,
    nodeAndDefs,
    fragmentNames,
  );

  const result = [nodeAndDefs, Object.keys(fragmentNames)];
  cachedFieldsAndFragmentNames.set(selectionSet, result);
  return result;
} // Given a reference to a fragment, return the represented collection of fields
// as well as a list of nested fragment names referenced via fragment spreads.

function getReferencedFieldsAndFragmentNames(
  context,
  cachedFieldsAndFragmentNames,
  fragment,
) {
  // Short-circuit building a type from the node if possible.
  const cached = cachedFieldsAndFragmentNames.get(fragment.selectionSet);

  if (cached) {
    return cached;
  }

  const fragmentType = (0, _typeFromAST.typeFromAST)(
    context.getSchema(),
    fragment.typeCondition,
  );
  return getFieldsAndFragmentNames(
    context,
    cachedFieldsAndFragmentNames,
    fragmentType,
    fragment.selectionSet,
  );
}

function _collectFieldsAndFragmentNames(
  context,
  parentType,
  selectionSet,
  nodeAndDefs,
  fragmentNames,
) {
  for (const selection of selectionSet.selections) {
    switch (selection.kind) {
      case _kinds.Kind.FIELD: {
        const fieldName = selection.name.value;
        let fieldDef;

        if (
          (0, _definition.isObjectType)(parentType) ||
          (0, _definition.isInterfaceType)(parentType)
        ) {
          fieldDef = parentType.getFields()[fieldName];
        }

        const responseName = selection.alias
          ? selection.alias.value
          : fieldName;

        if (!nodeAndDefs[responseName]) {
          nodeAndDefs[responseName] = [];
        }

        nodeAndDefs[responseName].push([parentType, selection, fieldDef]);
        break;
      }

      case _kinds.Kind.FRAGMENT_SPREAD:
        fragmentNames[selection.name.value] = true;
        break;

      case _kinds.Kind.INLINE_FRAGMENT: {
        const typeCondition = selection.typeCondition;
        const inlineFragmentType = typeCondition
          ? (0, _typeFromAST.typeFromAST)(context.getSchema(), typeCondition)
          : parentType;

        _collectFieldsAndFragmentNames(
          context,
          inlineFragmentType,
          selection.selectionSet,
          nodeAndDefs,
          fragmentNames,
        );

        break;
      }
    }
  }
} // Given a series of Conflicts which occurred between two sub-fields, generate
// a single Conflict.

function subfieldConflicts(conflicts, responseName, node1, node2) {
  if (conflicts.length > 0) {
    return [
      [responseName, conflicts.map(([reason]) => reason)],
      [node1, ...conflicts.map(([, fields1]) => fields1).flat()],
      [node2, ...conflicts.map(([, , fields2]) => fields2).flat()],
    ];
  }
}
/**
 * A way to keep track of pairs of things when the ordering of the pair does not matter.
 */

class PairSet {
  constructor() {
    this._data = new Map();
  }

  has(a, b, areMutuallyExclusive) {
    var _this$_data$get;

    const [key1, key2] = a < b ? [a, b] : [b, a];
    const result =
      (_this$_data$get = this._data.get(key1)) === null ||
      _this$_data$get === void 0
        ? void 0
        : _this$_data$get.get(key2);

    if (result === undefined) {
      return false;
    } // areMutuallyExclusive being false is a superset of being true, hence if
    // we want to know if this PairSet "has" these two with no exclusivity,
    // we have to ensure it was added as such.

    return areMutuallyExclusive ? true : areMutuallyExclusive === result;
  }

  add(a, b, areMutuallyExclusive) {
    const [key1, key2] = a < b ? [a, b] : [b, a];

    const map = this._data.get(key1);

    if (map === undefined) {
      this._data.set(key1, new Map([[key2, areMutuallyExclusive]]));
    } else {
      map.set(key2, areMutuallyExclusive);
    }
  }
}


/***/ }),

/***/ 2450:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.PossibleFragmentSpreadsRule = PossibleFragmentSpreadsRule;

var _inspect = __nccwpck_require__(102);

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

var _typeComparators = __nccwpck_require__(333);

var _typeFromAST = __nccwpck_require__(7664);

/**
 * Possible fragment spread
 *
 * A fragment spread is only valid if the type condition could ever possibly
 * be true: if there is a non-empty intersection of the possible parent types,
 * and possible types which pass the type condition.
 */
function PossibleFragmentSpreadsRule(context) {
  return {
    InlineFragment(node) {
      const fragType = context.getType();
      const parentType = context.getParentType();

      if (
        (0, _definition.isCompositeType)(fragType) &&
        (0, _definition.isCompositeType)(parentType) &&
        !(0, _typeComparators.doTypesOverlap)(
          context.getSchema(),
          fragType,
          parentType,
        )
      ) {
        const parentTypeStr = (0, _inspect.inspect)(parentType);
        const fragTypeStr = (0, _inspect.inspect)(fragType);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Fragment cannot be spread here as objects of type "${parentTypeStr}" can never be of type "${fragTypeStr}".`,
            {
              nodes: node,
            },
          ),
        );
      }
    },

    FragmentSpread(node) {
      const fragName = node.name.value;
      const fragType = getFragmentType(context, fragName);
      const parentType = context.getParentType();

      if (
        fragType &&
        parentType &&
        !(0, _typeComparators.doTypesOverlap)(
          context.getSchema(),
          fragType,
          parentType,
        )
      ) {
        const parentTypeStr = (0, _inspect.inspect)(parentType);
        const fragTypeStr = (0, _inspect.inspect)(fragType);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Fragment "${fragName}" cannot be spread here as objects of type "${parentTypeStr}" can never be of type "${fragTypeStr}".`,
            {
              nodes: node,
            },
          ),
        );
      }
    },
  };
}

function getFragmentType(context, name) {
  const frag = context.getFragment(name);

  if (frag) {
    const type = (0, _typeFromAST.typeFromAST)(
      context.getSchema(),
      frag.typeCondition,
    );

    if ((0, _definition.isCompositeType)(type)) {
      return type;
    }
  }
}


/***/ }),

/***/ 75:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.PossibleTypeExtensionsRule = PossibleTypeExtensionsRule;

var _didYouMean = __nccwpck_require__(2878);

var _inspect = __nccwpck_require__(102);

var _invariant = __nccwpck_require__(8847);

var _suggestionList = __nccwpck_require__(7704);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _predicates = __nccwpck_require__(535);

var _definition = __nccwpck_require__(5821);

/**
 * Possible type extension
 *
 * A type extension is only valid if the type is defined and has the same kind.
 */
function PossibleTypeExtensionsRule(context) {
  const schema = context.getSchema();
  const definedTypes = Object.create(null);

  for (const def of context.getDocument().definitions) {
    if ((0, _predicates.isTypeDefinitionNode)(def)) {
      definedTypes[def.name.value] = def;
    }
  }

  return {
    ScalarTypeExtension: checkExtension,
    ObjectTypeExtension: checkExtension,
    InterfaceTypeExtension: checkExtension,
    UnionTypeExtension: checkExtension,
    EnumTypeExtension: checkExtension,
    InputObjectTypeExtension: checkExtension,
  };

  function checkExtension(node) {
    const typeName = node.name.value;
    const defNode = definedTypes[typeName];
    const existingType =
      schema === null || schema === void 0 ? void 0 : schema.getType(typeName);
    let expectedKind;

    if (defNode) {
      expectedKind = defKindToExtKind[defNode.kind];
    } else if (existingType) {
      expectedKind = typeToExtKind(existingType);
    }

    if (expectedKind) {
      if (expectedKind !== node.kind) {
        const kindStr = extensionKindToTypeName(node.kind);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Cannot extend non-${kindStr} type "${typeName}".`,
            {
              nodes: defNode ? [defNode, node] : node,
            },
          ),
        );
      }
    } else {
      const allTypeNames = Object.keys({
        ...definedTypes,
        ...(schema === null || schema === void 0
          ? void 0
          : schema.getTypeMap()),
      });
      const suggestedTypes = (0, _suggestionList.suggestionList)(
        typeName,
        allTypeNames,
      );
      context.reportError(
        new _GraphQLError.GraphQLError(
          `Cannot extend type "${typeName}" because it is not defined.` +
            (0, _didYouMean.didYouMean)(suggestedTypes),
          {
            nodes: node.name,
          },
        ),
      );
    }
  }
}

const defKindToExtKind = {
  [_kinds.Kind.SCALAR_TYPE_DEFINITION]: _kinds.Kind.SCALAR_TYPE_EXTENSION,
  [_kinds.Kind.OBJECT_TYPE_DEFINITION]: _kinds.Kind.OBJECT_TYPE_EXTENSION,
  [_kinds.Kind.INTERFACE_TYPE_DEFINITION]: _kinds.Kind.INTERFACE_TYPE_EXTENSION,
  [_kinds.Kind.UNION_TYPE_DEFINITION]: _kinds.Kind.UNION_TYPE_EXTENSION,
  [_kinds.Kind.ENUM_TYPE_DEFINITION]: _kinds.Kind.ENUM_TYPE_EXTENSION,
  [_kinds.Kind.INPUT_OBJECT_TYPE_DEFINITION]:
    _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION,
};

function typeToExtKind(type) {
  if ((0, _definition.isScalarType)(type)) {
    return _kinds.Kind.SCALAR_TYPE_EXTENSION;
  }

  if ((0, _definition.isObjectType)(type)) {
    return _kinds.Kind.OBJECT_TYPE_EXTENSION;
  }

  if ((0, _definition.isInterfaceType)(type)) {
    return _kinds.Kind.INTERFACE_TYPE_EXTENSION;
  }

  if ((0, _definition.isUnionType)(type)) {
    return _kinds.Kind.UNION_TYPE_EXTENSION;
  }

  if ((0, _definition.isEnumType)(type)) {
    return _kinds.Kind.ENUM_TYPE_EXTENSION;
  }

  if ((0, _definition.isInputObjectType)(type)) {
    return _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION;
  }
  /* c8 ignore next 3 */
  // Not reachable. All possible types have been considered

   false ||
    (0, _invariant.invariant)(
      false,
      'Unexpected type: ' + (0, _inspect.inspect)(type),
    );
}

function extensionKindToTypeName(kind) {
  switch (kind) {
    case _kinds.Kind.SCALAR_TYPE_EXTENSION:
      return 'scalar';

    case _kinds.Kind.OBJECT_TYPE_EXTENSION:
      return 'object';

    case _kinds.Kind.INTERFACE_TYPE_EXTENSION:
      return 'interface';

    case _kinds.Kind.UNION_TYPE_EXTENSION:
      return 'union';

    case _kinds.Kind.ENUM_TYPE_EXTENSION:
      return 'enum';

    case _kinds.Kind.INPUT_OBJECT_TYPE_EXTENSION:
      return 'input object';
    // Not reachable. All possible types have been considered

    /* c8 ignore next */

    default:
       false ||
        (0, _invariant.invariant)(
          false,
          'Unexpected kind: ' + (0, _inspect.inspect)(kind),
        );
  }
}


/***/ }),

/***/ 7669:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.ProvidedRequiredArgumentsOnDirectivesRule =
  ProvidedRequiredArgumentsOnDirectivesRule;
exports.ProvidedRequiredArgumentsRule = ProvidedRequiredArgumentsRule;

var _inspect = __nccwpck_require__(102);

var _keyMap = __nccwpck_require__(711);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

var _directives = __nccwpck_require__(3614);

/**
 * Provided required arguments
 *
 * A field or directive is only valid if all required (non-null without a
 * default value) field arguments have been provided.
 */
function ProvidedRequiredArgumentsRule(context) {
  return {
    // eslint-disable-next-line new-cap
    ...ProvidedRequiredArgumentsOnDirectivesRule(context),
    Field: {
      // Validate on leave to allow for deeper errors to appear first.
      leave(fieldNode) {
        var _fieldNode$arguments;

        const fieldDef = context.getFieldDef();

        if (!fieldDef) {
          return false;
        }

        const providedArgs = new Set( // FIXME: https://github.com/graphql/graphql-js/issues/2203
          /* c8 ignore next */
          (_fieldNode$arguments = fieldNode.arguments) === null ||
          _fieldNode$arguments === void 0
            ? void 0
            : _fieldNode$arguments.map((arg) => arg.name.value),
        );

        for (const argDef of fieldDef.args) {
          if (
            !providedArgs.has(argDef.name) &&
            (0, _definition.isRequiredArgument)(argDef)
          ) {
            const argTypeStr = (0, _inspect.inspect)(argDef.type);
            context.reportError(
              new _GraphQLError.GraphQLError(
                `Field "${fieldDef.name}" argument "${argDef.name}" of type "${argTypeStr}" is required, but it was not provided.`,
                {
                  nodes: fieldNode,
                },
              ),
            );
          }
        }
      },
    },
  };
}
/**
 * @internal
 */

function ProvidedRequiredArgumentsOnDirectivesRule(context) {
  var _schema$getDirectives;

  const requiredArgsMap = Object.create(null);
  const schema = context.getSchema();
  const definedDirectives =
    (_schema$getDirectives =
      schema === null || schema === void 0
        ? void 0
        : schema.getDirectives()) !== null && _schema$getDirectives !== void 0
      ? _schema$getDirectives
      : _directives.specifiedDirectives;

  for (const directive of definedDirectives) {
    requiredArgsMap[directive.name] = (0, _keyMap.keyMap)(
      directive.args.filter(_definition.isRequiredArgument),
      (arg) => arg.name,
    );
  }

  const astDefinitions = context.getDocument().definitions;

  for (const def of astDefinitions) {
    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {
      var _def$arguments;

      // FIXME: https://github.com/graphql/graphql-js/issues/2203

      /* c8 ignore next */
      const argNodes =
        (_def$arguments = def.arguments) !== null && _def$arguments !== void 0
          ? _def$arguments
          : [];
      requiredArgsMap[def.name.value] = (0, _keyMap.keyMap)(
        argNodes.filter(isRequiredArgumentNode),
        (arg) => arg.name.value,
      );
    }
  }

  return {
    Directive: {
      // Validate on leave to allow for deeper errors to appear first.
      leave(directiveNode) {
        const directiveName = directiveNode.name.value;
        const requiredArgs = requiredArgsMap[directiveName];

        if (requiredArgs) {
          var _directiveNode$argume;

          // FIXME: https://github.com/graphql/graphql-js/issues/2203

          /* c8 ignore next */
          const argNodes =
            (_directiveNode$argume = directiveNode.arguments) !== null &&
            _directiveNode$argume !== void 0
              ? _directiveNode$argume
              : [];
          const argNodeMap = new Set(argNodes.map((arg) => arg.name.value));

          for (const [argName, argDef] of Object.entries(requiredArgs)) {
            if (!argNodeMap.has(argName)) {
              const argType = (0, _definition.isType)(argDef.type)
                ? (0, _inspect.inspect)(argDef.type)
                : (0, _printer.print)(argDef.type);
              context.reportError(
                new _GraphQLError.GraphQLError(
                  `Directive "@${directiveName}" argument "${argName}" of type "${argType}" is required, but it was not provided.`,
                  {
                    nodes: directiveNode,
                  },
                ),
              );
            }
          }
        }
      },
    },
  };
}

function isRequiredArgumentNode(arg) {
  return (
    arg.type.kind === _kinds.Kind.NON_NULL_TYPE && arg.defaultValue == null
  );
}


/***/ }),

/***/ 6830:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.ScalarLeafsRule = ScalarLeafsRule;

var _inspect = __nccwpck_require__(102);

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

/**
 * Scalar leafs
 *
 * A GraphQL document is valid only if all leaf fields (fields without
 * sub selections) are of scalar or enum types.
 */
function ScalarLeafsRule(context) {
  return {
    Field(node) {
      const type = context.getType();
      const selectionSet = node.selectionSet;

      if (type) {
        if ((0, _definition.isLeafType)((0, _definition.getNamedType)(type))) {
          if (selectionSet) {
            const fieldName = node.name.value;
            const typeStr = (0, _inspect.inspect)(type);
            context.reportError(
              new _GraphQLError.GraphQLError(
                `Field "${fieldName}" must not have a selection since type "${typeStr}" has no subfields.`,
                {
                  nodes: selectionSet,
                },
              ),
            );
          }
        } else if (!selectionSet) {
          const fieldName = node.name.value;
          const typeStr = (0, _inspect.inspect)(type);
          context.reportError(
            new _GraphQLError.GraphQLError(
              `Field "${fieldName}" of type "${typeStr}" must have a selection of subfields. Did you mean "${fieldName} { ... }"?`,
              {
                nodes: node,
              },
            ),
          );
        }
      }
    },
  };
}


/***/ }),

/***/ 4365:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.SingleFieldSubscriptionsRule = SingleFieldSubscriptionsRule;

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _collectFields = __nccwpck_require__(9942);

/**
 * Subscriptions must only include a non-introspection field.
 *
 * A GraphQL subscription is valid only if it contains a single root field and
 * that root field is not an introspection field.
 *
 * See https://spec.graphql.org/draft/#sec-Single-root-field
 */
function SingleFieldSubscriptionsRule(context) {
  return {
    OperationDefinition(node) {
      if (node.operation === 'subscription') {
        const schema = context.getSchema();
        const subscriptionType = schema.getSubscriptionType();

        if (subscriptionType) {
          const operationName = node.name ? node.name.value : null;
          const variableValues = Object.create(null);
          const document = context.getDocument();
          const fragments = Object.create(null);

          for (const definition of document.definitions) {
            if (definition.kind === _kinds.Kind.FRAGMENT_DEFINITION) {
              fragments[definition.name.value] = definition;
            }
          }

          const fields = (0, _collectFields.collectFields)(
            schema,
            fragments,
            variableValues,
            subscriptionType,
            node.selectionSet,
          );

          if (fields.size > 1) {
            const fieldSelectionLists = [...fields.values()];
            const extraFieldSelectionLists = fieldSelectionLists.slice(1);
            const extraFieldSelections = extraFieldSelectionLists.flat();
            context.reportError(
              new _GraphQLError.GraphQLError(
                operationName != null
                  ? `Subscription "${operationName}" must select only one top level field.`
                  : 'Anonymous Subscription must select only one top level field.',
                {
                  nodes: extraFieldSelections,
                },
              ),
            );
          }

          for (const fieldNodes of fields.values()) {
            const field = fieldNodes[0];
            const fieldName = field.name.value;

            if (fieldName.startsWith('__')) {
              context.reportError(
                new _GraphQLError.GraphQLError(
                  operationName != null
                    ? `Subscription "${operationName}" must not select an introspection top level field.`
                    : 'Anonymous Subscription must not select an introspection top level field.',
                  {
                    nodes: fieldNodes,
                  },
                ),
              );
            }
          }
        }
      }
    },
  };
}


/***/ }),

/***/ 5104:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueArgumentDefinitionNamesRule = UniqueArgumentDefinitionNamesRule;

var _groupBy = __nccwpck_require__(3173);

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique argument definition names
 *
 * A GraphQL Object or Interface type is only valid if all its fields have uniquely named arguments.
 * A GraphQL Directive is only valid if all its arguments are uniquely named.
 */
function UniqueArgumentDefinitionNamesRule(context) {
  return {
    DirectiveDefinition(directiveNode) {
      var _directiveNode$argume;

      // FIXME: https://github.com/graphql/graphql-js/issues/2203

      /* c8 ignore next */
      const argumentNodes =
        (_directiveNode$argume = directiveNode.arguments) !== null &&
        _directiveNode$argume !== void 0
          ? _directiveNode$argume
          : [];
      return checkArgUniqueness(`@${directiveNode.name.value}`, argumentNodes);
    },

    InterfaceTypeDefinition: checkArgUniquenessPerField,
    InterfaceTypeExtension: checkArgUniquenessPerField,
    ObjectTypeDefinition: checkArgUniquenessPerField,
    ObjectTypeExtension: checkArgUniquenessPerField,
  };

  function checkArgUniquenessPerField(typeNode) {
    var _typeNode$fields;

    const typeName = typeNode.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203

    /* c8 ignore next */

    const fieldNodes =
      (_typeNode$fields = typeNode.fields) !== null &&
      _typeNode$fields !== void 0
        ? _typeNode$fields
        : [];

    for (const fieldDef of fieldNodes) {
      var _fieldDef$arguments;

      const fieldName = fieldDef.name.value; // FIXME: https://github.com/graphql/graphql-js/issues/2203

      /* c8 ignore next */

      const argumentNodes =
        (_fieldDef$arguments = fieldDef.arguments) !== null &&
        _fieldDef$arguments !== void 0
          ? _fieldDef$arguments
          : [];
      checkArgUniqueness(`${typeName}.${fieldName}`, argumentNodes);
    }

    return false;
  }

  function checkArgUniqueness(parentName, argumentNodes) {
    const seenArgs = (0, _groupBy.groupBy)(
      argumentNodes,
      (arg) => arg.name.value,
    );

    for (const [argName, argNodes] of seenArgs) {
      if (argNodes.length > 1) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Argument "${parentName}(${argName}:)" can only be defined once.`,
            {
              nodes: argNodes.map((node) => node.name),
            },
          ),
        );
      }
    }

    return false;
  }
}


/***/ }),

/***/ 5799:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueArgumentNamesRule = UniqueArgumentNamesRule;

var _groupBy = __nccwpck_require__(3173);

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique argument names
 *
 * A GraphQL field or directive is only valid if all supplied arguments are
 * uniquely named.
 *
 * See https://spec.graphql.org/draft/#sec-Argument-Names
 */
function UniqueArgumentNamesRule(context) {
  return {
    Field: checkArgUniqueness,
    Directive: checkArgUniqueness,
  };

  function checkArgUniqueness(parentNode) {
    var _parentNode$arguments;

    // FIXME: https://github.com/graphql/graphql-js/issues/2203

    /* c8 ignore next */
    const argumentNodes =
      (_parentNode$arguments = parentNode.arguments) !== null &&
      _parentNode$arguments !== void 0
        ? _parentNode$arguments
        : [];
    const seenArgs = (0, _groupBy.groupBy)(
      argumentNodes,
      (arg) => arg.name.value,
    );

    for (const [argName, argNodes] of seenArgs) {
      if (argNodes.length > 1) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `There can be only one argument named "${argName}".`,
            {
              nodes: argNodes.map((node) => node.name),
            },
          ),
        );
      }
    }
  }
}


/***/ }),

/***/ 7074:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueDirectiveNamesRule = UniqueDirectiveNamesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique directive names
 *
 * A GraphQL document is only valid if all defined directives have unique names.
 */
function UniqueDirectiveNamesRule(context) {
  const knownDirectiveNames = Object.create(null);
  const schema = context.getSchema();
  return {
    DirectiveDefinition(node) {
      const directiveName = node.name.value;

      if (
        schema !== null &&
        schema !== void 0 &&
        schema.getDirective(directiveName)
      ) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Directive "@${directiveName}" already exists in the schema. It cannot be redefined.`,
            {
              nodes: node.name,
            },
          ),
        );
        return;
      }

      if (knownDirectiveNames[directiveName]) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `There can be only one directive named "@${directiveName}".`,
            {
              nodes: [knownDirectiveNames[directiveName], node.name],
            },
          ),
        );
      } else {
        knownDirectiveNames[directiveName] = node.name;
      }

      return false;
    },
  };
}


/***/ }),

/***/ 1944:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueDirectivesPerLocationRule = UniqueDirectivesPerLocationRule;

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _predicates = __nccwpck_require__(535);

var _directives = __nccwpck_require__(3614);

/**
 * Unique directive names per location
 *
 * A GraphQL document is only valid if all non-repeatable directives at
 * a given location are uniquely named.
 *
 * See https://spec.graphql.org/draft/#sec-Directives-Are-Unique-Per-Location
 */
function UniqueDirectivesPerLocationRule(context) {
  const uniqueDirectiveMap = Object.create(null);
  const schema = context.getSchema();
  const definedDirectives = schema
    ? schema.getDirectives()
    : _directives.specifiedDirectives;

  for (const directive of definedDirectives) {
    uniqueDirectiveMap[directive.name] = !directive.isRepeatable;
  }

  const astDefinitions = context.getDocument().definitions;

  for (const def of astDefinitions) {
    if (def.kind === _kinds.Kind.DIRECTIVE_DEFINITION) {
      uniqueDirectiveMap[def.name.value] = !def.repeatable;
    }
  }

  const schemaDirectives = Object.create(null);
  const typeDirectivesMap = Object.create(null);
  return {
    // Many different AST nodes may contain directives. Rather than listing
    // them all, just listen for entering any node, and check to see if it
    // defines any directives.
    enter(node) {
      if (!('directives' in node) || !node.directives) {
        return;
      }

      let seenDirectives;

      if (
        node.kind === _kinds.Kind.SCHEMA_DEFINITION ||
        node.kind === _kinds.Kind.SCHEMA_EXTENSION
      ) {
        seenDirectives = schemaDirectives;
      } else if (
        (0, _predicates.isTypeDefinitionNode)(node) ||
        (0, _predicates.isTypeExtensionNode)(node)
      ) {
        const typeName = node.name.value;
        seenDirectives = typeDirectivesMap[typeName];

        if (seenDirectives === undefined) {
          typeDirectivesMap[typeName] = seenDirectives = Object.create(null);
        }
      } else {
        seenDirectives = Object.create(null);
      }

      for (const directive of node.directives) {
        const directiveName = directive.name.value;

        if (uniqueDirectiveMap[directiveName]) {
          if (seenDirectives[directiveName]) {
            context.reportError(
              new _GraphQLError.GraphQLError(
                `The directive "@${directiveName}" can only be used once at this location.`,
                {
                  nodes: [seenDirectives[directiveName], directive],
                },
              ),
            );
          } else {
            seenDirectives[directiveName] = directive;
          }
        }
      }
    },
  };
}


/***/ }),

/***/ 4437:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueEnumValueNamesRule = UniqueEnumValueNamesRule;

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

/**
 * Unique enum value names
 *
 * A GraphQL enum type is only valid if all its values are uniquely named.
 */
function UniqueEnumValueNamesRule(context) {
  const schema = context.getSchema();
  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);
  const knownValueNames = Object.create(null);
  return {
    EnumTypeDefinition: checkValueUniqueness,
    EnumTypeExtension: checkValueUniqueness,
  };

  function checkValueUniqueness(node) {
    var _node$values;

    const typeName = node.name.value;

    if (!knownValueNames[typeName]) {
      knownValueNames[typeName] = Object.create(null);
    } // FIXME: https://github.com/graphql/graphql-js/issues/2203

    /* c8 ignore next */

    const valueNodes =
      (_node$values = node.values) !== null && _node$values !== void 0
        ? _node$values
        : [];
    const valueNames = knownValueNames[typeName];

    for (const valueDef of valueNodes) {
      const valueName = valueDef.name.value;
      const existingType = existingTypeMap[typeName];

      if (
        (0, _definition.isEnumType)(existingType) &&
        existingType.getValue(valueName)
      ) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Enum value "${typeName}.${valueName}" already exists in the schema. It cannot also be defined in this type extension.`,
            {
              nodes: valueDef.name,
            },
          ),
        );
      } else if (valueNames[valueName]) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Enum value "${typeName}.${valueName}" can only be defined once.`,
            {
              nodes: [valueNames[valueName], valueDef.name],
            },
          ),
        );
      } else {
        valueNames[valueName] = valueDef.name;
      }
    }

    return false;
  }
}


/***/ }),

/***/ 9502:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueFieldDefinitionNamesRule = UniqueFieldDefinitionNamesRule;

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

/**
 * Unique field definition names
 *
 * A GraphQL complex type is only valid if all its fields are uniquely named.
 */
function UniqueFieldDefinitionNamesRule(context) {
  const schema = context.getSchema();
  const existingTypeMap = schema ? schema.getTypeMap() : Object.create(null);
  const knownFieldNames = Object.create(null);
  return {
    InputObjectTypeDefinition: checkFieldUniqueness,
    InputObjectTypeExtension: checkFieldUniqueness,
    InterfaceTypeDefinition: checkFieldUniqueness,
    InterfaceTypeExtension: checkFieldUniqueness,
    ObjectTypeDefinition: checkFieldUniqueness,
    ObjectTypeExtension: checkFieldUniqueness,
  };

  function checkFieldUniqueness(node) {
    var _node$fields;

    const typeName = node.name.value;

    if (!knownFieldNames[typeName]) {
      knownFieldNames[typeName] = Object.create(null);
    } // FIXME: https://github.com/graphql/graphql-js/issues/2203

    /* c8 ignore next */

    const fieldNodes =
      (_node$fields = node.fields) !== null && _node$fields !== void 0
        ? _node$fields
        : [];
    const fieldNames = knownFieldNames[typeName];

    for (const fieldDef of fieldNodes) {
      const fieldName = fieldDef.name.value;

      if (hasField(existingTypeMap[typeName], fieldName)) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Field "${typeName}.${fieldName}" already exists in the schema. It cannot also be defined in this type extension.`,
            {
              nodes: fieldDef.name,
            },
          ),
        );
      } else if (fieldNames[fieldName]) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Field "${typeName}.${fieldName}" can only be defined once.`,
            {
              nodes: [fieldNames[fieldName], fieldDef.name],
            },
          ),
        );
      } else {
        fieldNames[fieldName] = fieldDef.name;
      }
    }

    return false;
  }
}

function hasField(type, fieldName) {
  if (
    (0, _definition.isObjectType)(type) ||
    (0, _definition.isInterfaceType)(type) ||
    (0, _definition.isInputObjectType)(type)
  ) {
    return type.getFields()[fieldName] != null;
  }

  return false;
}


/***/ }),

/***/ 9402:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueFragmentNamesRule = UniqueFragmentNamesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique fragment names
 *
 * A GraphQL document is only valid if all defined fragments have unique names.
 *
 * See https://spec.graphql.org/draft/#sec-Fragment-Name-Uniqueness
 */
function UniqueFragmentNamesRule(context) {
  const knownFragmentNames = Object.create(null);
  return {
    OperationDefinition: () => false,

    FragmentDefinition(node) {
      const fragmentName = node.name.value;

      if (knownFragmentNames[fragmentName]) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `There can be only one fragment named "${fragmentName}".`,
            {
              nodes: [knownFragmentNames[fragmentName], node.name],
            },
          ),
        );
      } else {
        knownFragmentNames[fragmentName] = node.name;
      }

      return false;
    },
  };
}


/***/ }),

/***/ 3552:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueInputFieldNamesRule = UniqueInputFieldNamesRule;

var _invariant = __nccwpck_require__(8847);

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique input field names
 *
 * A GraphQL input object value is only valid if all supplied fields are
 * uniquely named.
 *
 * See https://spec.graphql.org/draft/#sec-Input-Object-Field-Uniqueness
 */
function UniqueInputFieldNamesRule(context) {
  const knownNameStack = [];
  let knownNames = Object.create(null);
  return {
    ObjectValue: {
      enter() {
        knownNameStack.push(knownNames);
        knownNames = Object.create(null);
      },

      leave() {
        const prevKnownNames = knownNameStack.pop();
        prevKnownNames || (0, _invariant.invariant)(false);
        knownNames = prevKnownNames;
      },
    },

    ObjectField(node) {
      const fieldName = node.name.value;

      if (knownNames[fieldName]) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `There can be only one input field named "${fieldName}".`,
            {
              nodes: [knownNames[fieldName], node.name],
            },
          ),
        );
      } else {
        knownNames[fieldName] = node.name;
      }
    },
  };
}


/***/ }),

/***/ 4865:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueOperationNamesRule = UniqueOperationNamesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique operation names
 *
 * A GraphQL document is only valid if all defined operations have unique names.
 *
 * See https://spec.graphql.org/draft/#sec-Operation-Name-Uniqueness
 */
function UniqueOperationNamesRule(context) {
  const knownOperationNames = Object.create(null);
  return {
    OperationDefinition(node) {
      const operationName = node.name;

      if (operationName) {
        if (knownOperationNames[operationName.value]) {
          context.reportError(
            new _GraphQLError.GraphQLError(
              `There can be only one operation named "${operationName.value}".`,
              {
                nodes: [
                  knownOperationNames[operationName.value],
                  operationName,
                ],
              },
            ),
          );
        } else {
          knownOperationNames[operationName.value] = operationName;
        }
      }

      return false;
    },

    FragmentDefinition: () => false,
  };
}


/***/ }),

/***/ 1492:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueOperationTypesRule = UniqueOperationTypesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique operation types
 *
 * A GraphQL document is only valid if it has only one type per operation.
 */
function UniqueOperationTypesRule(context) {
  const schema = context.getSchema();
  const definedOperationTypes = Object.create(null);
  const existingOperationTypes = schema
    ? {
        query: schema.getQueryType(),
        mutation: schema.getMutationType(),
        subscription: schema.getSubscriptionType(),
      }
    : {};
  return {
    SchemaDefinition: checkOperationTypes,
    SchemaExtension: checkOperationTypes,
  };

  function checkOperationTypes(node) {
    var _node$operationTypes;

    // See: https://github.com/graphql/graphql-js/issues/2203

    /* c8 ignore next */
    const operationTypesNodes =
      (_node$operationTypes = node.operationTypes) !== null &&
      _node$operationTypes !== void 0
        ? _node$operationTypes
        : [];

    for (const operationType of operationTypesNodes) {
      const operation = operationType.operation;
      const alreadyDefinedOperationType = definedOperationTypes[operation];

      if (existingOperationTypes[operation]) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Type for ${operation} already defined in the schema. It cannot be redefined.`,
            {
              nodes: operationType,
            },
          ),
        );
      } else if (alreadyDefinedOperationType) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `There can be only one ${operation} type in schema.`,
            {
              nodes: [alreadyDefinedOperationType, operationType],
            },
          ),
        );
      } else {
        definedOperationTypes[operation] = operationType;
      }
    }

    return false;
  }
}


/***/ }),

/***/ 4316:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueTypeNamesRule = UniqueTypeNamesRule;

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique type names
 *
 * A GraphQL document is only valid if all defined types have unique names.
 */
function UniqueTypeNamesRule(context) {
  const knownTypeNames = Object.create(null);
  const schema = context.getSchema();
  return {
    ScalarTypeDefinition: checkTypeName,
    ObjectTypeDefinition: checkTypeName,
    InterfaceTypeDefinition: checkTypeName,
    UnionTypeDefinition: checkTypeName,
    EnumTypeDefinition: checkTypeName,
    InputObjectTypeDefinition: checkTypeName,
  };

  function checkTypeName(node) {
    const typeName = node.name.value;

    if (schema !== null && schema !== void 0 && schema.getType(typeName)) {
      context.reportError(
        new _GraphQLError.GraphQLError(
          `Type "${typeName}" already exists in the schema. It cannot also be defined in this type definition.`,
          {
            nodes: node.name,
          },
        ),
      );
      return;
    }

    if (knownTypeNames[typeName]) {
      context.reportError(
        new _GraphQLError.GraphQLError(
          `There can be only one type named "${typeName}".`,
          {
            nodes: [knownTypeNames[typeName], node.name],
          },
        ),
      );
    } else {
      knownTypeNames[typeName] = node.name;
    }

    return false;
  }
}


/***/ }),

/***/ 5931:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.UniqueVariableNamesRule = UniqueVariableNamesRule;

var _groupBy = __nccwpck_require__(3173);

var _GraphQLError = __nccwpck_require__(4797);

/**
 * Unique variable names
 *
 * A GraphQL operation is only valid if all its variables are uniquely named.
 */
function UniqueVariableNamesRule(context) {
  return {
    OperationDefinition(operationNode) {
      var _operationNode$variab;

      // See: https://github.com/graphql/graphql-js/issues/2203

      /* c8 ignore next */
      const variableDefinitions =
        (_operationNode$variab = operationNode.variableDefinitions) !== null &&
        _operationNode$variab !== void 0
          ? _operationNode$variab
          : [];
      const seenVariableDefinitions = (0, _groupBy.groupBy)(
        variableDefinitions,
        (node) => node.variable.name.value,
      );

      for (const [variableName, variableNodes] of seenVariableDefinitions) {
        if (variableNodes.length > 1) {
          context.reportError(
            new _GraphQLError.GraphQLError(
              `There can be only one variable named "$${variableName}".`,
              {
                nodes: variableNodes.map((node) => node.variable.name),
              },
            ),
          );
        }
      }
    },
  };
}


/***/ }),

/***/ 9091:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.ValuesOfCorrectTypeRule = ValuesOfCorrectTypeRule;

var _didYouMean = __nccwpck_require__(2878);

var _inspect = __nccwpck_require__(102);

var _keyMap = __nccwpck_require__(711);

var _suggestionList = __nccwpck_require__(7704);

var _GraphQLError = __nccwpck_require__(4797);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

/**
 * Value literals of correct type
 *
 * A GraphQL document is only valid if all value literals are of the type
 * expected at their position.
 *
 * See https://spec.graphql.org/draft/#sec-Values-of-Correct-Type
 */
function ValuesOfCorrectTypeRule(context) {
  return {
    ListValue(node) {
      // Note: TypeInfo will traverse into a list's item type, so look to the
      // parent input type to check if it is a list.
      const type = (0, _definition.getNullableType)(
        context.getParentInputType(),
      );

      if (!(0, _definition.isListType)(type)) {
        isValidValueNode(context, node);
        return false; // Don't traverse further.
      }
    },

    ObjectValue(node) {
      const type = (0, _definition.getNamedType)(context.getInputType());

      if (!(0, _definition.isInputObjectType)(type)) {
        isValidValueNode(context, node);
        return false; // Don't traverse further.
      } // Ensure every required field exists.

      const fieldNodeMap = (0, _keyMap.keyMap)(
        node.fields,
        (field) => field.name.value,
      );

      for (const fieldDef of Object.values(type.getFields())) {
        const fieldNode = fieldNodeMap[fieldDef.name];

        if (!fieldNode && (0, _definition.isRequiredInputField)(fieldDef)) {
          const typeStr = (0, _inspect.inspect)(fieldDef.type);
          context.reportError(
            new _GraphQLError.GraphQLError(
              `Field "${type.name}.${fieldDef.name}" of required type "${typeStr}" was not provided.`,
              {
                nodes: node,
              },
            ),
          );
        }
      }
    },

    ObjectField(node) {
      const parentType = (0, _definition.getNamedType)(
        context.getParentInputType(),
      );
      const fieldType = context.getInputType();

      if (!fieldType && (0, _definition.isInputObjectType)(parentType)) {
        const suggestions = (0, _suggestionList.suggestionList)(
          node.name.value,
          Object.keys(parentType.getFields()),
        );
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Field "${node.name.value}" is not defined by type "${parentType.name}".` +
              (0, _didYouMean.didYouMean)(suggestions),
            {
              nodes: node,
            },
          ),
        );
      }
    },

    NullValue(node) {
      const type = context.getInputType();

      if ((0, _definition.isNonNullType)(type)) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Expected value of type "${(0, _inspect.inspect)(
              type,
            )}", found ${(0, _printer.print)(node)}.`,
            {
              nodes: node,
            },
          ),
        );
      }
    },

    EnumValue: (node) => isValidValueNode(context, node),
    IntValue: (node) => isValidValueNode(context, node),
    FloatValue: (node) => isValidValueNode(context, node),
    StringValue: (node) => isValidValueNode(context, node),
    BooleanValue: (node) => isValidValueNode(context, node),
  };
}
/**
 * Any value literal may be a valid representation of a Scalar, depending on
 * that scalar type.
 */

function isValidValueNode(context, node) {
  // Report any error at the full type expected by the location.
  const locationType = context.getInputType();

  if (!locationType) {
    return;
  }

  const type = (0, _definition.getNamedType)(locationType);

  if (!(0, _definition.isLeafType)(type)) {
    const typeStr = (0, _inspect.inspect)(locationType);
    context.reportError(
      new _GraphQLError.GraphQLError(
        `Expected value of type "${typeStr}", found ${(0, _printer.print)(
          node,
        )}.`,
        {
          nodes: node,
        },
      ),
    );
    return;
  } // Scalars and Enums determine if a literal value is valid via parseLiteral(),
  // which may throw or return an invalid value to indicate failure.

  try {
    const parseResult = type.parseLiteral(
      node,
      undefined,
      /* variables */
    );

    if (parseResult === undefined) {
      const typeStr = (0, _inspect.inspect)(locationType);
      context.reportError(
        new _GraphQLError.GraphQLError(
          `Expected value of type "${typeStr}", found ${(0, _printer.print)(
            node,
          )}.`,
          {
            nodes: node,
          },
        ),
      );
    }
  } catch (error) {
    const typeStr = (0, _inspect.inspect)(locationType);

    if (error instanceof _GraphQLError.GraphQLError) {
      context.reportError(error);
    } else {
      context.reportError(
        new _GraphQLError.GraphQLError(
          `Expected value of type "${typeStr}", found ${(0, _printer.print)(
            node,
          )}; ` + error.message,
          {
            nodes: node,
            originalError: error,
          },
        ),
      );
    }
  }
}


/***/ }),

/***/ 9506:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.VariablesAreInputTypesRule = VariablesAreInputTypesRule;

var _GraphQLError = __nccwpck_require__(4797);

var _printer = __nccwpck_require__(8203);

var _definition = __nccwpck_require__(5821);

var _typeFromAST = __nccwpck_require__(7664);

/**
 * Variables are input types
 *
 * A GraphQL operation is only valid if all the variables it defines are of
 * input types (scalar, enum, or input object).
 *
 * See https://spec.graphql.org/draft/#sec-Variables-Are-Input-Types
 */
function VariablesAreInputTypesRule(context) {
  return {
    VariableDefinition(node) {
      const type = (0, _typeFromAST.typeFromAST)(
        context.getSchema(),
        node.type,
      );

      if (type !== undefined && !(0, _definition.isInputType)(type)) {
        const variableName = node.variable.name.value;
        const typeName = (0, _printer.print)(node.type);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `Variable "$${variableName}" cannot be non-input type "${typeName}".`,
            {
              nodes: node.type,
            },
          ),
        );
      }
    },
  };
}


/***/ }),

/***/ 8815:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.VariablesInAllowedPositionRule = VariablesInAllowedPositionRule;

var _inspect = __nccwpck_require__(102);

var _GraphQLError = __nccwpck_require__(4797);

var _kinds = __nccwpck_require__(1927);

var _definition = __nccwpck_require__(5821);

var _typeComparators = __nccwpck_require__(333);

var _typeFromAST = __nccwpck_require__(7664);

/**
 * Variables in allowed position
 *
 * Variable usages must be compatible with the arguments they are passed to.
 *
 * See https://spec.graphql.org/draft/#sec-All-Variable-Usages-are-Allowed
 */
function VariablesInAllowedPositionRule(context) {
  let varDefMap = Object.create(null);
  return {
    OperationDefinition: {
      enter() {
        varDefMap = Object.create(null);
      },

      leave(operation) {
        const usages = context.getRecursiveVariableUsages(operation);

        for (const { node, type, defaultValue } of usages) {
          const varName = node.name.value;
          const varDef = varDefMap[varName];

          if (varDef && type) {
            // A var type is allowed if it is the same or more strict (e.g. is
            // a subtype of) than the expected type. It can be more strict if
            // the variable type is non-null when the expected type is nullable.
            // If both are list types, the variable item type can be more strict
            // than the expected item type (contravariant).
            const schema = context.getSchema();
            const varType = (0, _typeFromAST.typeFromAST)(schema, varDef.type);

            if (
              varType &&
              !allowedVariableUsage(
                schema,
                varType,
                varDef.defaultValue,
                type,
                defaultValue,
              )
            ) {
              const varTypeStr = (0, _inspect.inspect)(varType);
              const typeStr = (0, _inspect.inspect)(type);
              context.reportError(
                new _GraphQLError.GraphQLError(
                  `Variable "$${varName}" of type "${varTypeStr}" used in position expecting type "${typeStr}".`,
                  {
                    nodes: [varDef, node],
                  },
                ),
              );
            }
          }
        }
      },
    },

    VariableDefinition(node) {
      varDefMap[node.variable.name.value] = node;
    },
  };
}
/**
 * Returns true if the variable is allowed in the location it was found,
 * which includes considering if default values exist for either the variable
 * or the location at which it is located.
 */

function allowedVariableUsage(
  schema,
  varType,
  varDefaultValue,
  locationType,
  locationDefaultValue,
) {
  if (
    (0, _definition.isNonNullType)(locationType) &&
    !(0, _definition.isNonNullType)(varType)
  ) {
    const hasNonNullVariableDefaultValue =
      varDefaultValue != null && varDefaultValue.kind !== _kinds.Kind.NULL;
    const hasLocationDefaultValue = locationDefaultValue !== undefined;

    if (!hasNonNullVariableDefaultValue && !hasLocationDefaultValue) {
      return false;
    }

    const nullableLocationType = locationType.ofType;
    return (0, _typeComparators.isTypeSubTypeOf)(
      schema,
      varType,
      nullableLocationType,
    );
  }

  return (0, _typeComparators.isTypeSubTypeOf)(schema, varType, locationType);
}


/***/ }),

/***/ 3915:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.NoDeprecatedCustomRule = NoDeprecatedCustomRule;

var _invariant = __nccwpck_require__(8847);

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

/**
 * No deprecated
 *
 * A GraphQL document is only valid if all selected fields and all used enum values have not been
 * deprecated.
 *
 * Note: This rule is optional and is not part of the Validation section of the GraphQL
 * Specification. The main purpose of this rule is detection of deprecated usages and not
 * necessarily to forbid their use when querying a service.
 */
function NoDeprecatedCustomRule(context) {
  return {
    Field(node) {
      const fieldDef = context.getFieldDef();
      const deprecationReason =
        fieldDef === null || fieldDef === void 0
          ? void 0
          : fieldDef.deprecationReason;

      if (fieldDef && deprecationReason != null) {
        const parentType = context.getParentType();
        parentType != null || (0, _invariant.invariant)(false);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `The field ${parentType.name}.${fieldDef.name} is deprecated. ${deprecationReason}`,
            {
              nodes: node,
            },
          ),
        );
      }
    },

    Argument(node) {
      const argDef = context.getArgument();
      const deprecationReason =
        argDef === null || argDef === void 0
          ? void 0
          : argDef.deprecationReason;

      if (argDef && deprecationReason != null) {
        const directiveDef = context.getDirective();

        if (directiveDef != null) {
          context.reportError(
            new _GraphQLError.GraphQLError(
              `Directive "@${directiveDef.name}" argument "${argDef.name}" is deprecated. ${deprecationReason}`,
              {
                nodes: node,
              },
            ),
          );
        } else {
          const parentType = context.getParentType();
          const fieldDef = context.getFieldDef();
          (parentType != null && fieldDef != null) ||
            (0, _invariant.invariant)(false);
          context.reportError(
            new _GraphQLError.GraphQLError(
              `Field "${parentType.name}.${fieldDef.name}" argument "${argDef.name}" is deprecated. ${deprecationReason}`,
              {
                nodes: node,
              },
            ),
          );
        }
      }
    },

    ObjectField(node) {
      const inputObjectDef = (0, _definition.getNamedType)(
        context.getParentInputType(),
      );

      if ((0, _definition.isInputObjectType)(inputObjectDef)) {
        const inputFieldDef = inputObjectDef.getFields()[node.name.value];
        const deprecationReason =
          inputFieldDef === null || inputFieldDef === void 0
            ? void 0
            : inputFieldDef.deprecationReason;

        if (deprecationReason != null) {
          context.reportError(
            new _GraphQLError.GraphQLError(
              `The input field ${inputObjectDef.name}.${inputFieldDef.name} is deprecated. ${deprecationReason}`,
              {
                nodes: node,
              },
            ),
          );
        }
      }
    },

    EnumValue(node) {
      const enumValueDef = context.getEnumValue();
      const deprecationReason =
        enumValueDef === null || enumValueDef === void 0
          ? void 0
          : enumValueDef.deprecationReason;

      if (enumValueDef && deprecationReason != null) {
        const enumTypeDef = (0, _definition.getNamedType)(
          context.getInputType(),
        );
        enumTypeDef != null || (0, _invariant.invariant)(false);
        context.reportError(
          new _GraphQLError.GraphQLError(
            `The enum value "${enumTypeDef.name}.${enumValueDef.name}" is deprecated. ${deprecationReason}`,
            {
              nodes: node,
            },
          ),
        );
      }
    },
  };
}


/***/ }),

/***/ 9478:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.NoSchemaIntrospectionCustomRule = NoSchemaIntrospectionCustomRule;

var _GraphQLError = __nccwpck_require__(4797);

var _definition = __nccwpck_require__(5821);

var _introspection = __nccwpck_require__(8344);

/**
 * Prohibit introspection queries
 *
 * A GraphQL document is only valid if all fields selected are not fields that
 * return an introspection type.
 *
 * Note: This rule is optional and is not part of the Validation section of the
 * GraphQL Specification. This rule effectively disables introspection, which
 * does not reflect best practices and should only be done if absolutely necessary.
 */
function NoSchemaIntrospectionCustomRule(context) {
  return {
    Field(node) {
      const type = (0, _definition.getNamedType)(context.getType());

      if (type && (0, _introspection.isIntrospectionType)(type)) {
        context.reportError(
          new _GraphQLError.GraphQLError(
            `GraphQL introspection has been disabled, but the requested query contained the field "${node.name.value}".`,
            {
              nodes: node,
            },
          ),
        );
      }
    },
  };
}


/***/ }),

/***/ 4908:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.specifiedSDLRules = exports.specifiedRules = void 0;

var _ExecutableDefinitionsRule = __nccwpck_require__(9199);

var _FieldsOnCorrectTypeRule = __nccwpck_require__(3016);

var _FragmentsOnCompositeTypesRule = __nccwpck_require__(381);

var _KnownArgumentNamesRule = __nccwpck_require__(7147);

var _KnownDirectivesRule = __nccwpck_require__(5303);

var _KnownFragmentNamesRule = __nccwpck_require__(5166);

var _KnownTypeNamesRule = __nccwpck_require__(2509);

var _LoneAnonymousOperationRule = __nccwpck_require__(5726);

var _LoneSchemaDefinitionRule = __nccwpck_require__(8307);

var _NoFragmentCyclesRule = __nccwpck_require__(2564);

var _NoUndefinedVariablesRule = __nccwpck_require__(1671);

var _NoUnusedFragmentsRule = __nccwpck_require__(192);

var _NoUnusedVariablesRule = __nccwpck_require__(242);

var _OverlappingFieldsCanBeMergedRule = __nccwpck_require__(3577);

var _PossibleFragmentSpreadsRule = __nccwpck_require__(2450);

var _PossibleTypeExtensionsRule = __nccwpck_require__(75);

var _ProvidedRequiredArgumentsRule = __nccwpck_require__(7669);

var _ScalarLeafsRule = __nccwpck_require__(6830);

var _SingleFieldSubscriptionsRule = __nccwpck_require__(4365);

var _UniqueArgumentDefinitionNamesRule = __nccwpck_require__(5104);

var _UniqueArgumentNamesRule = __nccwpck_require__(5799);

var _UniqueDirectiveNamesRule = __nccwpck_require__(7074);

var _UniqueDirectivesPerLocationRule = __nccwpck_require__(1944);

var _UniqueEnumValueNamesRule = __nccwpck_require__(4437);

var _UniqueFieldDefinitionNamesRule = __nccwpck_require__(9502);

var _UniqueFragmentNamesRule = __nccwpck_require__(9402);

var _UniqueInputFieldNamesRule = __nccwpck_require__(3552);

var _UniqueOperationNamesRule = __nccwpck_require__(4865);

var _UniqueOperationTypesRule = __nccwpck_require__(1492);

var _UniqueTypeNamesRule = __nccwpck_require__(4316);

var _UniqueVariableNamesRule = __nccwpck_require__(5931);

var _ValuesOfCorrectTypeRule = __nccwpck_require__(9091);

var _VariablesAreInputTypesRule = __nccwpck_require__(9506);

var _VariablesInAllowedPositionRule = __nccwpck_require__(8815);

// Spec Section: "Executable Definitions"
// Spec Section: "Field Selections on Objects, Interfaces, and Unions Types"
// Spec Section: "Fragments on Composite Types"
// Spec Section: "Argument Names"
// Spec Section: "Directives Are Defined"
// Spec Section: "Fragment spread target defined"
// Spec Section: "Fragment Spread Type Existence"
// Spec Section: "Lone Anonymous Operation"
// SDL-specific validation rules
// Spec Section: "Fragments must not form cycles"
// Spec Section: "All Variable Used Defined"
// Spec Section: "Fragments must be used"
// Spec Section: "All Variables Used"
// Spec Section: "Field Selection Merging"
// Spec Section: "Fragment spread is possible"
// Spec Section: "Argument Optionality"
// Spec Section: "Leaf Field Selections"
// Spec Section: "Subscriptions with Single Root Field"
// Spec Section: "Argument Uniqueness"
// Spec Section: "Directives Are Unique Per Location"
// Spec Section: "Fragment Name Uniqueness"
// Spec Section: "Input Object Field Uniqueness"
// Spec Section: "Operation Name Uniqueness"
// Spec Section: "Variable Uniqueness"
// Spec Section: "Value Type Correctness"
// Spec Section: "Variables are Input Types"
// Spec Section: "All Variable Usages Are Allowed"

/**
 * This set includes all validation rules defined by the GraphQL spec.
 *
 * The order of the rules in this list has been adjusted to lead to the
 * most clear output when encountering multiple validation errors.
 */
const specifiedRules = Object.freeze([
  _ExecutableDefinitionsRule.ExecutableDefinitionsRule,
  _UniqueOperationNamesRule.UniqueOperationNamesRule,
  _LoneAnonymousOperationRule.LoneAnonymousOperationRule,
  _SingleFieldSubscriptionsRule.SingleFieldSubscriptionsRule,
  _KnownTypeNamesRule.KnownTypeNamesRule,
  _FragmentsOnCompositeTypesRule.FragmentsOnCompositeTypesRule,
  _VariablesAreInputTypesRule.VariablesAreInputTypesRule,
  _ScalarLeafsRule.ScalarLeafsRule,
  _FieldsOnCorrectTypeRule.FieldsOnCorrectTypeRule,
  _UniqueFragmentNamesRule.UniqueFragmentNamesRule,
  _KnownFragmentNamesRule.KnownFragmentNamesRule,
  _NoUnusedFragmentsRule.NoUnusedFragmentsRule,
  _PossibleFragmentSpreadsRule.PossibleFragmentSpreadsRule,
  _NoFragmentCyclesRule.NoFragmentCyclesRule,
  _UniqueVariableNamesRule.UniqueVariableNamesRule,
  _NoUndefinedVariablesRule.NoUndefinedVariablesRule,
  _NoUnusedVariablesRule.NoUnusedVariablesRule,
  _KnownDirectivesRule.KnownDirectivesRule,
  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,
  _KnownArgumentNamesRule.KnownArgumentNamesRule,
  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,
  _ValuesOfCorrectTypeRule.ValuesOfCorrectTypeRule,
  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsRule,
  _VariablesInAllowedPositionRule.VariablesInAllowedPositionRule,
  _OverlappingFieldsCanBeMergedRule.OverlappingFieldsCanBeMergedRule,
  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,
]);
/**
 * @internal
 */

exports.specifiedRules = specifiedRules;
const specifiedSDLRules = Object.freeze([
  _LoneSchemaDefinitionRule.LoneSchemaDefinitionRule,
  _UniqueOperationTypesRule.UniqueOperationTypesRule,
  _UniqueTypeNamesRule.UniqueTypeNamesRule,
  _UniqueEnumValueNamesRule.UniqueEnumValueNamesRule,
  _UniqueFieldDefinitionNamesRule.UniqueFieldDefinitionNamesRule,
  _UniqueArgumentDefinitionNamesRule.UniqueArgumentDefinitionNamesRule,
  _UniqueDirectiveNamesRule.UniqueDirectiveNamesRule,
  _KnownTypeNamesRule.KnownTypeNamesRule,
  _KnownDirectivesRule.KnownDirectivesRule,
  _UniqueDirectivesPerLocationRule.UniqueDirectivesPerLocationRule,
  _PossibleTypeExtensionsRule.PossibleTypeExtensionsRule,
  _KnownArgumentNamesRule.KnownArgumentNamesOnDirectivesRule,
  _UniqueArgumentNamesRule.UniqueArgumentNamesRule,
  _UniqueInputFieldNamesRule.UniqueInputFieldNamesRule,
  _ProvidedRequiredArgumentsRule.ProvidedRequiredArgumentsOnDirectivesRule,
]);
exports.specifiedSDLRules = specifiedSDLRules;


/***/ }),

/***/ 4409:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.assertValidSDL = assertValidSDL;
exports.assertValidSDLExtension = assertValidSDLExtension;
exports.validate = validate;
exports.validateSDL = validateSDL;

var _devAssert = __nccwpck_require__(6514);

var _GraphQLError = __nccwpck_require__(4797);

var _visitor = __nccwpck_require__(5678);

var _validate = __nccwpck_require__(2430);

var _TypeInfo = __nccwpck_require__(6625);

var _specifiedRules = __nccwpck_require__(4908);

var _ValidationContext = __nccwpck_require__(8263);

/**
 * Implements the "Validation" section of the spec.
 *
 * Validation runs synchronously, returning an array of encountered errors, or
 * an empty array if no errors were encountered and the document is valid.
 *
 * A list of specific validation rules may be provided. If not provided, the
 * default list of rules defined by the GraphQL specification will be used.
 *
 * Each validation rules is a function which returns a visitor
 * (see the language/visitor API). Visitor methods are expected to return
 * GraphQLErrors, or Arrays of GraphQLErrors when invalid.
 *
 * Validate will stop validation after a `maxErrors` limit has been reached.
 * Attackers can send pathologically invalid queries to induce a DoS attack,
 * so by default `maxErrors` set to 100 errors.
 *
 * Optionally a custom TypeInfo instance may be provided. If not provided, one
 * will be created from the provided schema.
 */
function validate(
  schema,
  documentAST,
  rules = _specifiedRules.specifiedRules,
  options,
  /** @deprecated will be removed in 17.0.0 */
  typeInfo = new _TypeInfo.TypeInfo(schema),
) {
  var _options$maxErrors;

  const maxErrors =
    (_options$maxErrors =
      options === null || options === void 0 ? void 0 : options.maxErrors) !==
      null && _options$maxErrors !== void 0
      ? _options$maxErrors
      : 100;
  documentAST || (0, _devAssert.devAssert)(false, 'Must provide document.'); // If the schema used for validation is invalid, throw an error.

  (0, _validate.assertValidSchema)(schema);
  const abortObj = Object.freeze({});
  const errors = [];
  const context = new _ValidationContext.ValidationContext(
    schema,
    documentAST,
    typeInfo,
    (error) => {
      if (errors.length >= maxErrors) {
        errors.push(
          new _GraphQLError.GraphQLError(
            'Too many validation errors, error limit reached. Validation aborted.',
          ),
        ); // eslint-disable-next-line @typescript-eslint/no-throw-literal

        throw abortObj;
      }

      errors.push(error);
    },
  ); // This uses a specialized visitor which runs multiple visitors in parallel,
  // while maintaining the visitor skip and break API.

  const visitor = (0, _visitor.visitInParallel)(
    rules.map((rule) => rule(context)),
  ); // Visit the whole document with each instance of all provided rules.

  try {
    (0, _visitor.visit)(
      documentAST,
      (0, _TypeInfo.visitWithTypeInfo)(typeInfo, visitor),
    );
  } catch (e) {
    if (e !== abortObj) {
      throw e;
    }
  }

  return errors;
}
/**
 * @internal
 */

function validateSDL(
  documentAST,
  schemaToExtend,
  rules = _specifiedRules.specifiedSDLRules,
) {
  const errors = [];
  const context = new _ValidationContext.SDLValidationContext(
    documentAST,
    schemaToExtend,
    (error) => {
      errors.push(error);
    },
  );
  const visitors = rules.map((rule) => rule(context));
  (0, _visitor.visit)(documentAST, (0, _visitor.visitInParallel)(visitors));
  return errors;
}
/**
 * Utility function which asserts a SDL document is valid by throwing an error
 * if it is invalid.
 *
 * @internal
 */

function assertValidSDL(documentAST) {
  const errors = validateSDL(documentAST);

  if (errors.length !== 0) {
    throw new Error(errors.map((error) => error.message).join('\n\n'));
  }
}
/**
 * Utility function which asserts a SDL document is valid by throwing an error
 * if it is invalid.
 *
 * @internal
 */

function assertValidSDLExtension(documentAST, schema) {
  const errors = validateSDL(documentAST, schema);

  if (errors.length !== 0) {
    throw new Error(errors.map((error) => error.message).join('\n\n'));
  }
}


/***/ }),

/***/ 1923:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({
  value: true,
}));
exports.versionInfo = exports.version = void 0;
// Note: This file is autogenerated using "resources/gen-version.js" script and
// automatically updated by "npm version" command.

/**
 * A string containing the version of the GraphQL.js library
 */
const version = '16.6.0';
/**
 * An object containing the components of the GraphQL.js version string
 */

exports.version = version;
const versionInfo = Object.freeze({
  major: 16,
  minor: 6,
  patch: 0,
  preReleaseTag: null,
});
exports.versionInfo = versionInfo;


/***/ }),

/***/ 3287:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

/*!
 * is-plain-object <https://github.com/jonschlinkert/is-plain-object>
 *
 * Copyright (c) 2014-2017, Jon Schlinkert.
 * Released under the MIT License.
 */

function isObject(o) {
  return Object.prototype.toString.call(o) === '[object Object]';
}

function isPlainObject(o) {
  var ctor,prot;

  if (isObject(o) === false) return false;

  // If has modified constructor
  ctor = o.constructor;
  if (ctor === undefined) return true;

  // If has modified prototype
  prot = ctor.prototype;
  if (isObject(prot) === false) return false;

  // If constructor does not have an Object-specific method
  if (prot.hasOwnProperty('isPrototypeOf') === false) {
    return false;
  }

  // Most likely a plain Object
  return true;
}

exports.isPlainObject = isPlainObject;


/***/ }),

/***/ 1554:
/***/ ((module) => {

"use strict";


var isStream = module.exports = function (stream) {
	return stream !== null && typeof stream === 'object' && typeof stream.pipe === 'function';
};

isStream.writable = function (stream) {
	return isStream(stream) && stream.writable !== false && typeof stream._write === 'function' && typeof stream._writableState === 'object';
};

isStream.readable = function (stream) {
	return isStream(stream) && stream.readable !== false && typeof stream._read === 'function' && typeof stream._readableState === 'object';
};

isStream.duplex = function (stream) {
	return isStream.writable(stream) && isStream.readable(stream);
};

isStream.transform = function (stream) {
	return isStream.duplex(stream) && typeof stream._transform === 'function' && typeof stream._transformState === 'object';
};


/***/ }),

/***/ 7126:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var fs = __nccwpck_require__(5747)
var core
if (process.platform === 'win32' || global.TESTING_WINDOWS) {
  core = __nccwpck_require__(2001)
} else {
  core = __nccwpck_require__(9728)
}

module.exports = isexe
isexe.sync = sync

function isexe (path, options, cb) {
  if (typeof options === 'function') {
    cb = options
    options = {}
  }

  if (!cb) {
    if (typeof Promise !== 'function') {
      throw new TypeError('callback not provided')
    }

    return new Promise(function (resolve, reject) {
      isexe(path, options || {}, function (er, is) {
        if (er) {
          reject(er)
        } else {
          resolve(is)
        }
      })
    })
  }

  core(path, options || {}, function (er, is) {
    // ignore EACCES because that just means we aren't allowed to run it
    if (er) {
      if (er.code === 'EACCES' || options && options.ignoreErrors) {
        er = null
        is = false
      }
    }
    cb(er, is)
  })
}

function sync (path, options) {
  // my kingdom for a filtered catch
  try {
    return core.sync(path, options || {})
  } catch (er) {
    if (options && options.ignoreErrors || er.code === 'EACCES') {
      return false
    } else {
      throw er
    }
  }
}


/***/ }),

/***/ 9728:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __nccwpck_require__(5747)

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), options)
}

function checkStat (stat, options) {
  return stat.isFile() && checkMode(stat, options)
}

function checkMode (stat, options) {
  var mod = stat.mode
  var uid = stat.uid
  var gid = stat.gid

  var myUid = options.uid !== undefined ?
    options.uid : process.getuid && process.getuid()
  var myGid = options.gid !== undefined ?
    options.gid : process.getgid && process.getgid()

  var u = parseInt('100', 8)
  var g = parseInt('010', 8)
  var o = parseInt('001', 8)
  var ug = u | g

  var ret = (mod & o) ||
    (mod & g) && gid === myGid ||
    (mod & u) && uid === myUid ||
    (mod & ug) && myUid === 0

  return ret
}


/***/ }),

/***/ 2001:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = isexe
isexe.sync = sync

var fs = __nccwpck_require__(5747)

function checkPathExt (path, options) {
  var pathext = options.pathExt !== undefined ?
    options.pathExt : process.env.PATHEXT

  if (!pathext) {
    return true
  }

  pathext = pathext.split(';')
  if (pathext.indexOf('') !== -1) {
    return true
  }
  for (var i = 0; i < pathext.length; i++) {
    var p = pathext[i].toLowerCase()
    if (p && path.substr(-p.length).toLowerCase() === p) {
      return true
    }
  }
  return false
}

function checkStat (stat, path, options) {
  if (!stat.isSymbolicLink() && !stat.isFile()) {
    return false
  }
  return checkPathExt(path, options)
}

function isexe (path, options, cb) {
  fs.stat(path, function (er, stat) {
    cb(er, er ? false : checkStat(stat, path, options))
  })
}

function sync (path, options) {
  return checkStat(fs.statSync(path), path, options)
}


/***/ }),

/***/ 9197:
/***/ ((module) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    symbolTag = '[object Symbol]';

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/,
    reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.get` without support for default values.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @returns {*} Returns the resolved value.
 */
function baseGet(object, path) {
  path = isKey(path, object) ? [path] : castPath(path);

  var index = 0,
      length = path.length;

  while (object != null && index < length) {
    object = object[toKey(path[index++])];
  }
  return (index && index == length) ? object : undefined;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value) {
  return isArray(value) ? value : stringToPath(value);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoize(function(string) {
  string = toString(string);

  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Gets the value at `path` of `object`. If the resolved value is
 * `undefined`, the `defaultValue` is returned in its place.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to query.
 * @param {Array|string} path The path of the property to get.
 * @param {*} [defaultValue] The value returned for `undefined` resolved values.
 * @returns {*} Returns the resolved value.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.get(object, 'a[0].b.c');
 * // => 3
 *
 * _.get(object, ['a', '0', 'b', 'c']);
 * // => 3
 *
 * _.get(object, 'a.b.c', 'default');
 * // => 'default'
 */
function get(object, path, defaultValue) {
  var result = object == null ? undefined : baseGet(object, path);
  return result === undefined ? defaultValue : result;
}

module.exports = get;


/***/ }),

/***/ 1552:
/***/ ((module) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the `TypeError` message for "Functions" methods. */
var FUNC_ERROR_TEXT = 'Expected a function';

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0,
    MAX_SAFE_INTEGER = 9007199254740991;

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]',
    symbolTag = '[object Symbol]';

/** Used to match property names within property paths. */
var reIsDeepProp = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
    reIsPlainProp = /^\w*$/,
    reLeadingDot = /^\./,
    rePropName = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g;

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to match backslashes in property paths. */
var reEscapeChar = /\\(\\)?/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Used to detect unsigned integer values. */
var reIsUint = /^(?:0|[1-9]\d*)$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var Symbol = root.Symbol,
    splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    nativeCreate = getNative(Object, 'create');

/** Used to convert symbols to primitives and strings. */
var symbolProto = Symbol ? Symbol.prototype : undefined,
    symbolToString = symbolProto ? symbolProto.toString : undefined;

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 * Assigns `value` to `key` of `object` if the existing value is not equivalent
 * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {string} key The key of the property to assign.
 * @param {*} value The value to assign.
 */
function assignValue(object, key, value) {
  var objValue = object[key];
  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||
      (value === undefined && !(key in object))) {
    object[key] = value;
  }
}

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.set`.
 *
 * @private
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @param {Function} [customizer] The function to customize path creation.
 * @returns {Object} Returns `object`.
 */
function baseSet(object, path, value, customizer) {
  if (!isObject(object)) {
    return object;
  }
  path = isKey(path, object) ? [path] : castPath(path);

  var index = -1,
      length = path.length,
      lastIndex = length - 1,
      nested = object;

  while (nested != null && ++index < length) {
    var key = toKey(path[index]),
        newValue = value;

    if (index != lastIndex) {
      var objValue = nested[key];
      newValue = customizer ? customizer(objValue, key, nested) : undefined;
      if (newValue === undefined) {
        newValue = isObject(objValue)
          ? objValue
          : (isIndex(path[index + 1]) ? [] : {});
      }
    }
    assignValue(nested, key, newValue);
    nested = nested[key];
  }
  return object;
}

/**
 * The base implementation of `_.toString` which doesn't convert nullish
 * values to empty strings.
 *
 * @private
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 */
function baseToString(value) {
  // Exit early for strings to avoid a performance hit in some environments.
  if (typeof value == 'string') {
    return value;
  }
  if (isSymbol(value)) {
    return symbolToString ? symbolToString.call(value) : '';
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Casts `value` to a path array if it's not one.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {Array} Returns the cast property path array.
 */
function castPath(value) {
  return isArray(value) ? value : stringToPath(value);
}

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is a valid array-like index.
 *
 * @private
 * @param {*} value The value to check.
 * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.
 * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.
 */
function isIndex(value, length) {
  length = length == null ? MAX_SAFE_INTEGER : length;
  return !!length &&
    (typeof value == 'number' || reIsUint.test(value)) &&
    (value > -1 && value % 1 == 0 && value < length);
}

/**
 * Checks if `value` is a property name and not a property path.
 *
 * @private
 * @param {*} value The value to check.
 * @param {Object} [object] The object to query keys on.
 * @returns {boolean} Returns `true` if `value` is a property name, else `false`.
 */
function isKey(value, object) {
  if (isArray(value)) {
    return false;
  }
  var type = typeof value;
  if (type == 'number' || type == 'symbol' || type == 'boolean' ||
      value == null || isSymbol(value)) {
    return true;
  }
  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||
    (object != null && value in Object(object));
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `string` to a property path array.
 *
 * @private
 * @param {string} string The string to convert.
 * @returns {Array} Returns the property path array.
 */
var stringToPath = memoize(function(string) {
  string = toString(string);

  var result = [];
  if (reLeadingDot.test(string)) {
    result.push('');
  }
  string.replace(rePropName, function(match, number, quote, string) {
    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));
  });
  return result;
});

/**
 * Converts `value` to a string key if it's not a string or symbol.
 *
 * @private
 * @param {*} value The value to inspect.
 * @returns {string|symbol} Returns the key.
 */
function toKey(value) {
  if (typeof value == 'string' || isSymbol(value)) {
    return value;
  }
  var result = (value + '');
  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a function that memoizes the result of `func`. If `resolver` is
 * provided, it determines the cache key for storing the result based on the
 * arguments provided to the memoized function. By default, the first argument
 * provided to the memoized function is used as the map cache key. The `func`
 * is invoked with the `this` binding of the memoized function.
 *
 * **Note:** The cache is exposed as the `cache` property on the memoized
 * function. Its creation may be customized by replacing the `_.memoize.Cache`
 * constructor with one whose instances implement the
 * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)
 * method interface of `delete`, `get`, `has`, and `set`.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Function
 * @param {Function} func The function to have its output memoized.
 * @param {Function} [resolver] The function to resolve the cache key.
 * @returns {Function} Returns the new memoized function.
 * @example
 *
 * var object = { 'a': 1, 'b': 2 };
 * var other = { 'c': 3, 'd': 4 };
 *
 * var values = _.memoize(_.values);
 * values(object);
 * // => [1, 2]
 *
 * values(other);
 * // => [3, 4]
 *
 * object.a = 2;
 * values(object);
 * // => [1, 2]
 *
 * // Modify the result cache.
 * values.cache.set(object, ['a', 'b']);
 * values(object);
 * // => ['a', 'b']
 *
 * // Replace `_.memoize.Cache`.
 * _.memoize.Cache = WeakMap;
 */
function memoize(func, resolver) {
  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {
    throw new TypeError(FUNC_ERROR_TEXT);
  }
  var memoized = function() {
    var args = arguments,
        key = resolver ? resolver.apply(this, args) : args[0],
        cache = memoized.cache;

    if (cache.has(key)) {
      return cache.get(key);
    }
    var result = func.apply(this, args);
    memoized.cache = cache.set(key, result);
    return result;
  };
  memoized.cache = new (memoize.Cache || MapCache);
  return memoized;
}

// Assign cache to `_.memoize`.
memoize.Cache = MapCache;

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */
var isArray = Array.isArray;

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */
function isObjectLike(value) {
  return !!value && typeof value == 'object';
}

/**
 * Checks if `value` is classified as a `Symbol` primitive or object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.
 * @example
 *
 * _.isSymbol(Symbol.iterator);
 * // => true
 *
 * _.isSymbol('abc');
 * // => false
 */
function isSymbol(value) {
  return typeof value == 'symbol' ||
    (isObjectLike(value) && objectToString.call(value) == symbolTag);
}

/**
 * Converts `value` to a string. An empty string is returned for `null`
 * and `undefined` values. The sign of `-0` is preserved.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to process.
 * @returns {string} Returns the string.
 * @example
 *
 * _.toString(null);
 * // => ''
 *
 * _.toString(-0);
 * // => '-0'
 *
 * _.toString([1, 2, 3]);
 * // => '1,2,3'
 */
function toString(value) {
  return value == null ? '' : baseToString(value);
}

/**
 * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,
 * it's created. Arrays are created for missing index properties while objects
 * are created for all other missing properties. Use `_.setWith` to customize
 * `path` creation.
 *
 * **Note:** This method mutates `object`.
 *
 * @static
 * @memberOf _
 * @since 3.7.0
 * @category Object
 * @param {Object} object The object to modify.
 * @param {Array|string} path The path of the property to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns `object`.
 * @example
 *
 * var object = { 'a': [{ 'b': { 'c': 3 } }] };
 *
 * _.set(object, 'a[0].b.c', 4);
 * console.log(object.a[0].b.c);
 * // => 4
 *
 * _.set(object, ['x', '0', 'y', 'z'], 5);
 * console.log(object.x[0].y.z);
 * // => 5
 */
function set(object, path, value) {
  return object == null ? object : baseSet(object, path, value);
}

module.exports = set;


/***/ }),

/***/ 8216:
/***/ ((module) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */

/** Used as the size to enable large array optimizations. */
var LARGE_ARRAY_SIZE = 200;

/** Used to stand-in for `undefined` hash values. */
var HASH_UNDEFINED = '__lodash_hash_undefined__';

/** Used as references for various `Number` constants. */
var INFINITY = 1 / 0;

/** `Object#toString` result references. */
var funcTag = '[object Function]',
    genTag = '[object GeneratorFunction]';

/**
 * Used to match `RegExp`
 * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).
 */
var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;

/** Used to detect host constructors (Safari). */
var reIsHostCtor = /^\[object .+?Constructor\]$/;

/** Detect free variable `global` from Node.js. */
var freeGlobal = typeof global == 'object' && global && global.Object === Object && global;

/** Detect free variable `self`. */
var freeSelf = typeof self == 'object' && self && self.Object === Object && self;

/** Used as a reference to the global object. */
var root = freeGlobal || freeSelf || Function('return this')();

/**
 * A specialized version of `_.includes` for arrays without support for
 * specifying an index to search from.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludes(array, value) {
  var length = array ? array.length : 0;
  return !!length && baseIndexOf(array, value, 0) > -1;
}

/**
 * This function is like `arrayIncludes` except that it accepts a comparator.
 *
 * @private
 * @param {Array} [array] The array to inspect.
 * @param {*} target The value to search for.
 * @param {Function} comparator The comparator invoked per element.
 * @returns {boolean} Returns `true` if `target` is found, else `false`.
 */
function arrayIncludesWith(array, value, comparator) {
  var index = -1,
      length = array ? array.length : 0;

  while (++index < length) {
    if (comparator(value, array[index])) {
      return true;
    }
  }
  return false;
}

/**
 * The base implementation of `_.findIndex` and `_.findLastIndex` without
 * support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} predicate The function invoked per iteration.
 * @param {number} fromIndex The index to search from.
 * @param {boolean} [fromRight] Specify iterating from right to left.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseFindIndex(array, predicate, fromIndex, fromRight) {
  var length = array.length,
      index = fromIndex + (fromRight ? 1 : -1);

  while ((fromRight ? index-- : ++index < length)) {
    if (predicate(array[index], index, array)) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.indexOf` without `fromIndex` bounds checks.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} value The value to search for.
 * @param {number} fromIndex The index to search from.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function baseIndexOf(array, value, fromIndex) {
  if (value !== value) {
    return baseFindIndex(array, baseIsNaN, fromIndex);
  }
  var index = fromIndex - 1,
      length = array.length;

  while (++index < length) {
    if (array[index] === value) {
      return index;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNaN` without support for number objects.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.
 */
function baseIsNaN(value) {
  return value !== value;
}

/**
 * Checks if a cache value for `key` exists.
 *
 * @private
 * @param {Object} cache The cache to query.
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function cacheHas(cache, key) {
  return cache.has(key);
}

/**
 * Gets the value at `key` of `object`.
 *
 * @private
 * @param {Object} [object] The object to query.
 * @param {string} key The key of the property to get.
 * @returns {*} Returns the property value.
 */
function getValue(object, key) {
  return object == null ? undefined : object[key];
}

/**
 * Checks if `value` is a host object in IE < 9.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a host object, else `false`.
 */
function isHostObject(value) {
  // Many host objects are `Object` objects that can coerce to strings
  // despite having improperly defined `toString` methods.
  var result = false;
  if (value != null && typeof value.toString != 'function') {
    try {
      result = !!(value + '');
    } catch (e) {}
  }
  return result;
}

/**
 * Converts `set` to an array of its values.
 *
 * @private
 * @param {Object} set The set to convert.
 * @returns {Array} Returns the values.
 */
function setToArray(set) {
  var index = -1,
      result = Array(set.size);

  set.forEach(function(value) {
    result[++index] = value;
  });
  return result;
}

/** Used for built-in method references. */
var arrayProto = Array.prototype,
    funcProto = Function.prototype,
    objectProto = Object.prototype;

/** Used to detect overreaching core-js shims. */
var coreJsData = root['__core-js_shared__'];

/** Used to detect methods masquerading as native. */
var maskSrcKey = (function() {
  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');
  return uid ? ('Symbol(src)_1.' + uid) : '';
}());

/** Used to resolve the decompiled source of functions. */
var funcToString = funcProto.toString;

/** Used to check objects for own properties. */
var hasOwnProperty = objectProto.hasOwnProperty;

/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */
var objectToString = objectProto.toString;

/** Used to detect if a method is native. */
var reIsNative = RegExp('^' +
  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\$&')
  .replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, '$1.*?') + '$'
);

/** Built-in value references. */
var splice = arrayProto.splice;

/* Built-in method references that are verified to be native. */
var Map = getNative(root, 'Map'),
    Set = getNative(root, 'Set'),
    nativeCreate = getNative(Object, 'create');

/**
 * Creates a hash object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function Hash(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the hash.
 *
 * @private
 * @name clear
 * @memberOf Hash
 */
function hashClear() {
  this.__data__ = nativeCreate ? nativeCreate(null) : {};
}

/**
 * Removes `key` and its value from the hash.
 *
 * @private
 * @name delete
 * @memberOf Hash
 * @param {Object} hash The hash to modify.
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function hashDelete(key) {
  return this.has(key) && delete this.__data__[key];
}

/**
 * Gets the hash value for `key`.
 *
 * @private
 * @name get
 * @memberOf Hash
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function hashGet(key) {
  var data = this.__data__;
  if (nativeCreate) {
    var result = data[key];
    return result === HASH_UNDEFINED ? undefined : result;
  }
  return hasOwnProperty.call(data, key) ? data[key] : undefined;
}

/**
 * Checks if a hash value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf Hash
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function hashHas(key) {
  var data = this.__data__;
  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);
}

/**
 * Sets the hash `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf Hash
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the hash instance.
 */
function hashSet(key, value) {
  var data = this.__data__;
  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;
  return this;
}

// Add methods to `Hash`.
Hash.prototype.clear = hashClear;
Hash.prototype['delete'] = hashDelete;
Hash.prototype.get = hashGet;
Hash.prototype.has = hashHas;
Hash.prototype.set = hashSet;

/**
 * Creates an list cache object.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function ListCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the list cache.
 *
 * @private
 * @name clear
 * @memberOf ListCache
 */
function listCacheClear() {
  this.__data__ = [];
}

/**
 * Removes `key` and its value from the list cache.
 *
 * @private
 * @name delete
 * @memberOf ListCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function listCacheDelete(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    return false;
  }
  var lastIndex = data.length - 1;
  if (index == lastIndex) {
    data.pop();
  } else {
    splice.call(data, index, 1);
  }
  return true;
}

/**
 * Gets the list cache value for `key`.
 *
 * @private
 * @name get
 * @memberOf ListCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function listCacheGet(key) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  return index < 0 ? undefined : data[index][1];
}

/**
 * Checks if a list cache value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf ListCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function listCacheHas(key) {
  return assocIndexOf(this.__data__, key) > -1;
}

/**
 * Sets the list cache `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf ListCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the list cache instance.
 */
function listCacheSet(key, value) {
  var data = this.__data__,
      index = assocIndexOf(data, key);

  if (index < 0) {
    data.push([key, value]);
  } else {
    data[index][1] = value;
  }
  return this;
}

// Add methods to `ListCache`.
ListCache.prototype.clear = listCacheClear;
ListCache.prototype['delete'] = listCacheDelete;
ListCache.prototype.get = listCacheGet;
ListCache.prototype.has = listCacheHas;
ListCache.prototype.set = listCacheSet;

/**
 * Creates a map cache object to store key-value pairs.
 *
 * @private
 * @constructor
 * @param {Array} [entries] The key-value pairs to cache.
 */
function MapCache(entries) {
  var index = -1,
      length = entries ? entries.length : 0;

  this.clear();
  while (++index < length) {
    var entry = entries[index];
    this.set(entry[0], entry[1]);
  }
}

/**
 * Removes all key-value entries from the map.
 *
 * @private
 * @name clear
 * @memberOf MapCache
 */
function mapCacheClear() {
  this.__data__ = {
    'hash': new Hash,
    'map': new (Map || ListCache),
    'string': new Hash
  };
}

/**
 * Removes `key` and its value from the map.
 *
 * @private
 * @name delete
 * @memberOf MapCache
 * @param {string} key The key of the value to remove.
 * @returns {boolean} Returns `true` if the entry was removed, else `false`.
 */
function mapCacheDelete(key) {
  return getMapData(this, key)['delete'](key);
}

/**
 * Gets the map value for `key`.
 *
 * @private
 * @name get
 * @memberOf MapCache
 * @param {string} key The key of the value to get.
 * @returns {*} Returns the entry value.
 */
function mapCacheGet(key) {
  return getMapData(this, key).get(key);
}

/**
 * Checks if a map value for `key` exists.
 *
 * @private
 * @name has
 * @memberOf MapCache
 * @param {string} key The key of the entry to check.
 * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.
 */
function mapCacheHas(key) {
  return getMapData(this, key).has(key);
}

/**
 * Sets the map `key` to `value`.
 *
 * @private
 * @name set
 * @memberOf MapCache
 * @param {string} key The key of the value to set.
 * @param {*} value The value to set.
 * @returns {Object} Returns the map cache instance.
 */
function mapCacheSet(key, value) {
  getMapData(this, key).set(key, value);
  return this;
}

// Add methods to `MapCache`.
MapCache.prototype.clear = mapCacheClear;
MapCache.prototype['delete'] = mapCacheDelete;
MapCache.prototype.get = mapCacheGet;
MapCache.prototype.has = mapCacheHas;
MapCache.prototype.set = mapCacheSet;

/**
 *
 * Creates an array cache object to store unique values.
 *
 * @private
 * @constructor
 * @param {Array} [values] The values to cache.
 */
function SetCache(values) {
  var index = -1,
      length = values ? values.length : 0;

  this.__data__ = new MapCache;
  while (++index < length) {
    this.add(values[index]);
  }
}

/**
 * Adds `value` to the array cache.
 *
 * @private
 * @name add
 * @memberOf SetCache
 * @alias push
 * @param {*} value The value to cache.
 * @returns {Object} Returns the cache instance.
 */
function setCacheAdd(value) {
  this.__data__.set(value, HASH_UNDEFINED);
  return this;
}

/**
 * Checks if `value` is in the array cache.
 *
 * @private
 * @name has
 * @memberOf SetCache
 * @param {*} value The value to search for.
 * @returns {number} Returns `true` if `value` is found, else `false`.
 */
function setCacheHas(value) {
  return this.__data__.has(value);
}

// Add methods to `SetCache`.
SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
SetCache.prototype.has = setCacheHas;

/**
 * Gets the index at which the `key` is found in `array` of key-value pairs.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {*} key The key to search for.
 * @returns {number} Returns the index of the matched value, else `-1`.
 */
function assocIndexOf(array, key) {
  var length = array.length;
  while (length--) {
    if (eq(array[length][0], key)) {
      return length;
    }
  }
  return -1;
}

/**
 * The base implementation of `_.isNative` without bad shim checks.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a native function,
 *  else `false`.
 */
function baseIsNative(value) {
  if (!isObject(value) || isMasked(value)) {
    return false;
  }
  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;
  return pattern.test(toSource(value));
}

/**
 * The base implementation of `_.uniqBy` without support for iteratee shorthands.
 *
 * @private
 * @param {Array} array The array to inspect.
 * @param {Function} [iteratee] The iteratee invoked per element.
 * @param {Function} [comparator] The comparator invoked per element.
 * @returns {Array} Returns the new duplicate free array.
 */
function baseUniq(array, iteratee, comparator) {
  var index = -1,
      includes = arrayIncludes,
      length = array.length,
      isCommon = true,
      result = [],
      seen = result;

  if (comparator) {
    isCommon = false;
    includes = arrayIncludesWith;
  }
  else if (length >= LARGE_ARRAY_SIZE) {
    var set = iteratee ? null : createSet(array);
    if (set) {
      return setToArray(set);
    }
    isCommon = false;
    includes = cacheHas;
    seen = new SetCache;
  }
  else {
    seen = iteratee ? [] : result;
  }
  outer:
  while (++index < length) {
    var value = array[index],
        computed = iteratee ? iteratee(value) : value;

    value = (comparator || value !== 0) ? value : 0;
    if (isCommon && computed === computed) {
      var seenIndex = seen.length;
      while (seenIndex--) {
        if (seen[seenIndex] === computed) {
          continue outer;
        }
      }
      if (iteratee) {
        seen.push(computed);
      }
      result.push(value);
    }
    else if (!includes(seen, computed, comparator)) {
      if (seen !== result) {
        seen.push(computed);
      }
      result.push(value);
    }
  }
  return result;
}

/**
 * Creates a set object of `values`.
 *
 * @private
 * @param {Array} values The values to add to the set.
 * @returns {Object} Returns the new set.
 */
var createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {
  return new Set(values);
};

/**
 * Gets the data for `map`.
 *
 * @private
 * @param {Object} map The map to query.
 * @param {string} key The reference key.
 * @returns {*} Returns the map data.
 */
function getMapData(map, key) {
  var data = map.__data__;
  return isKeyable(key)
    ? data[typeof key == 'string' ? 'string' : 'hash']
    : data.map;
}

/**
 * Gets the native function at `key` of `object`.
 *
 * @private
 * @param {Object} object The object to query.
 * @param {string} key The key of the method to get.
 * @returns {*} Returns the function if it's native, else `undefined`.
 */
function getNative(object, key) {
  var value = getValue(object, key);
  return baseIsNative(value) ? value : undefined;
}

/**
 * Checks if `value` is suitable for use as unique object key.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is suitable, else `false`.
 */
function isKeyable(value) {
  var type = typeof value;
  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')
    ? (value !== '__proto__')
    : (value === null);
}

/**
 * Checks if `func` has its source masked.
 *
 * @private
 * @param {Function} func The function to check.
 * @returns {boolean} Returns `true` if `func` is masked, else `false`.
 */
function isMasked(func) {
  return !!maskSrcKey && (maskSrcKey in func);
}

/**
 * Converts `func` to its source code.
 *
 * @private
 * @param {Function} func The function to process.
 * @returns {string} Returns the source code.
 */
function toSource(func) {
  if (func != null) {
    try {
      return funcToString.call(func);
    } catch (e) {}
    try {
      return (func + '');
    } catch (e) {}
  }
  return '';
}

/**
 * Creates a duplicate-free version of an array, using
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * for equality comparisons, in which only the first occurrence of each
 * element is kept.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to inspect.
 * @returns {Array} Returns the new duplicate free array.
 * @example
 *
 * _.uniq([2, 1, 2]);
 * // => [2, 1]
 */
function uniq(array) {
  return (array && array.length)
    ? baseUniq(array)
    : [];
}

/**
 * Performs a
 * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)
 * comparison between two values to determine if they are equivalent.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to compare.
 * @param {*} other The other value to compare.
 * @returns {boolean} Returns `true` if the values are equivalent, else `false`.
 * @example
 *
 * var object = { 'a': 1 };
 * var other = { 'a': 1 };
 *
 * _.eq(object, object);
 * // => true
 *
 * _.eq(object, other);
 * // => false
 *
 * _.eq('a', 'a');
 * // => true
 *
 * _.eq('a', Object('a'));
 * // => false
 *
 * _.eq(NaN, NaN);
 * // => true
 */
function eq(value, other) {
  return value === other || (value !== value && other !== other);
}

/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */
function isFunction(value) {
  // The use of `Object#toString` avoids issues with the `typeof` operator
  // in Safari 8-9 which returns 'object' for typed array and other constructors.
  var tag = isObject(value) ? objectToString.call(value) : '';
  return tag == funcTag || tag == genTag;
}

/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */
function isObject(value) {
  var type = typeof value;
  return !!value && (type == 'object' || type == 'function');
}

/**
 * This method returns `undefined`.
 *
 * @static
 * @memberOf _
 * @since 2.3.0
 * @category Util
 * @example
 *
 * _.times(2, _.noop);
 * // => [undefined, undefined]
 */
function noop() {
  // No operation performed.
}

module.exports = uniq;


/***/ }),

/***/ 7493:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const os = __nccwpck_require__(2087);

const nameMap = new Map([
	[20, ['Big Sur', '11']],
	[19, ['Catalina', '10.15']],
	[18, ['Mojave', '10.14']],
	[17, ['High Sierra', '10.13']],
	[16, ['Sierra', '10.12']],
	[15, ['El Capitan', '10.11']],
	[14, ['Yosemite', '10.10']],
	[13, ['Mavericks', '10.9']],
	[12, ['Mountain Lion', '10.8']],
	[11, ['Lion', '10.7']],
	[10, ['Snow Leopard', '10.6']],
	[9, ['Leopard', '10.5']],
	[8, ['Tiger', '10.4']],
	[7, ['Panther', '10.3']],
	[6, ['Jaguar', '10.2']],
	[5, ['Puma', '10.1']]
]);

const macosRelease = release => {
	release = Number((release || os.release()).split('.')[0]);

	const [name, version] = nameMap.get(release);

	return {
		name,
		version
	};
};

module.exports = macosRelease;
// TODO: remove this in the next major version
module.exports.default = macosRelease;


/***/ }),

/***/ 8560:
/***/ ((module) => {

"use strict";


/**
 * Tries to execute a function and discards any error that occurs.
 * @param {Function} fn - Function that might or might not throw an error.
 * @returns {?*} Return-value of the function when no error occurred.
 */
module.exports = function(fn) {

	try { return fn() } catch (e) {}

}

/***/ }),

/***/ 467:
/***/ ((module, exports, __nccwpck_require__) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var Stream = _interopDefault(__nccwpck_require__(2413));
var http = _interopDefault(__nccwpck_require__(8605));
var Url = _interopDefault(__nccwpck_require__(8835));
var https = _interopDefault(__nccwpck_require__(7211));
var zlib = _interopDefault(__nccwpck_require__(8761));

// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js

// fix for "Readable" isn't a named export issue
const Readable = Stream.Readable;

const BUFFER = Symbol('buffer');
const TYPE = Symbol('type');

class Blob {
	constructor() {
		this[TYPE] = '';

		const blobParts = arguments[0];
		const options = arguments[1];

		const buffers = [];
		let size = 0;

		if (blobParts) {
			const a = blobParts;
			const length = Number(a.length);
			for (let i = 0; i < length; i++) {
				const element = a[i];
				let buffer;
				if (element instanceof Buffer) {
					buffer = element;
				} else if (ArrayBuffer.isView(element)) {
					buffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);
				} else if (element instanceof ArrayBuffer) {
					buffer = Buffer.from(element);
				} else if (element instanceof Blob) {
					buffer = element[BUFFER];
				} else {
					buffer = Buffer.from(typeof element === 'string' ? element : String(element));
				}
				size += buffer.length;
				buffers.push(buffer);
			}
		}

		this[BUFFER] = Buffer.concat(buffers);

		let type = options && options.type !== undefined && String(options.type).toLowerCase();
		if (type && !/[^\u0020-\u007E]/.test(type)) {
			this[TYPE] = type;
		}
	}
	get size() {
		return this[BUFFER].length;
	}
	get type() {
		return this[TYPE];
	}
	text() {
		return Promise.resolve(this[BUFFER].toString());
	}
	arrayBuffer() {
		const buf = this[BUFFER];
		const ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		return Promise.resolve(ab);
	}
	stream() {
		const readable = new Readable();
		readable._read = function () {};
		readable.push(this[BUFFER]);
		readable.push(null);
		return readable;
	}
	toString() {
		return '[object Blob]';
	}
	slice() {
		const size = this.size;

		const start = arguments[0];
		const end = arguments[1];
		let relativeStart, relativeEnd;
		if (start === undefined) {
			relativeStart = 0;
		} else if (start < 0) {
			relativeStart = Math.max(size + start, 0);
		} else {
			relativeStart = Math.min(start, size);
		}
		if (end === undefined) {
			relativeEnd = size;
		} else if (end < 0) {
			relativeEnd = Math.max(size + end, 0);
		} else {
			relativeEnd = Math.min(end, size);
		}
		const span = Math.max(relativeEnd - relativeStart, 0);

		const buffer = this[BUFFER];
		const slicedBuffer = buffer.slice(relativeStart, relativeStart + span);
		const blob = new Blob([], { type: arguments[2] });
		blob[BUFFER] = slicedBuffer;
		return blob;
	}
}

Object.defineProperties(Blob.prototype, {
	size: { enumerable: true },
	type: { enumerable: true },
	slice: { enumerable: true }
});

Object.defineProperty(Blob.prototype, Symbol.toStringTag, {
	value: 'Blob',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * fetch-error.js
 *
 * FetchError interface for operational errors
 */

/**
 * Create FetchError instance
 *
 * @param   String      message      Error message for human
 * @param   String      type         Error type for machine
 * @param   String      systemError  For Node.js system error
 * @return  FetchError
 */
function FetchError(message, type, systemError) {
  Error.call(this, message);

  this.message = message;
  this.type = type;

  // when err.type is `system`, err.code contains system error code
  if (systemError) {
    this.code = this.errno = systemError.code;
  }

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

FetchError.prototype = Object.create(Error.prototype);
FetchError.prototype.constructor = FetchError;
FetchError.prototype.name = 'FetchError';

let convert;
try {
	convert = __nccwpck_require__(2877).convert;
} catch (e) {}

const INTERNALS = Symbol('Body internals');

// fix an issue where "PassThrough" isn't a named export for node <10
const PassThrough = Stream.PassThrough;

/**
 * Body mixin
 *
 * Ref: https://fetch.spec.whatwg.org/#body
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
function Body(body) {
	var _this = this;

	var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
	    _ref$size = _ref.size;

	let size = _ref$size === undefined ? 0 : _ref$size;
	var _ref$timeout = _ref.timeout;
	let timeout = _ref$timeout === undefined ? 0 : _ref$timeout;

	if (body == null) {
		// body is undefined or null
		body = null;
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		body = Buffer.from(body.toString());
	} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		body = Buffer.from(body);
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		body = Buffer.from(body.buffer, body.byteOffset, body.byteLength);
	} else if (body instanceof Stream) ; else {
		// none of the above
		// coerce to string then buffer
		body = Buffer.from(String(body));
	}
	this[INTERNALS] = {
		body,
		disturbed: false,
		error: null
	};
	this.size = size;
	this.timeout = timeout;

	if (body instanceof Stream) {
		body.on('error', function (err) {
			const error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);
			_this[INTERNALS].error = error;
		});
	}
}

Body.prototype = {
	get body() {
		return this[INTERNALS].body;
	},

	get bodyUsed() {
		return this[INTERNALS].disturbed;
	},

	/**
  * Decode response as ArrayBuffer
  *
  * @return  Promise
  */
	arrayBuffer() {
		return consumeBody.call(this).then(function (buf) {
			return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);
		});
	},

	/**
  * Return raw response as Blob
  *
  * @return Promise
  */
	blob() {
		let ct = this.headers && this.headers.get('content-type') || '';
		return consumeBody.call(this).then(function (buf) {
			return Object.assign(
			// Prevent copying
			new Blob([], {
				type: ct.toLowerCase()
			}), {
				[BUFFER]: buf
			});
		});
	},

	/**
  * Decode response as json
  *
  * @return  Promise
  */
	json() {
		var _this2 = this;

		return consumeBody.call(this).then(function (buffer) {
			try {
				return JSON.parse(buffer.toString());
			} catch (err) {
				return Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));
			}
		});
	},

	/**
  * Decode response as text
  *
  * @return  Promise
  */
	text() {
		return consumeBody.call(this).then(function (buffer) {
			return buffer.toString();
		});
	},

	/**
  * Decode response as buffer (non-spec api)
  *
  * @return  Promise
  */
	buffer() {
		return consumeBody.call(this);
	},

	/**
  * Decode response as text, while automatically detecting the encoding and
  * trying to decode to UTF-8 (non-spec api)
  *
  * @return  Promise
  */
	textConverted() {
		var _this3 = this;

		return consumeBody.call(this).then(function (buffer) {
			return convertBody(buffer, _this3.headers);
		});
	}
};

// In browsers, all properties are enumerable.
Object.defineProperties(Body.prototype, {
	body: { enumerable: true },
	bodyUsed: { enumerable: true },
	arrayBuffer: { enumerable: true },
	blob: { enumerable: true },
	json: { enumerable: true },
	text: { enumerable: true }
});

Body.mixIn = function (proto) {
	for (const name of Object.getOwnPropertyNames(Body.prototype)) {
		// istanbul ignore else: future proof
		if (!(name in proto)) {
			const desc = Object.getOwnPropertyDescriptor(Body.prototype, name);
			Object.defineProperty(proto, name, desc);
		}
	}
};

/**
 * Consume and convert an entire Body to a Buffer.
 *
 * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body
 *
 * @return  Promise
 */
function consumeBody() {
	var _this4 = this;

	if (this[INTERNALS].disturbed) {
		return Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));
	}

	this[INTERNALS].disturbed = true;

	if (this[INTERNALS].error) {
		return Body.Promise.reject(this[INTERNALS].error);
	}

	let body = this.body;

	// body is null
	if (body === null) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is blob
	if (isBlob(body)) {
		body = body.stream();
	}

	// body is buffer
	if (Buffer.isBuffer(body)) {
		return Body.Promise.resolve(body);
	}

	// istanbul ignore if: should never happen
	if (!(body instanceof Stream)) {
		return Body.Promise.resolve(Buffer.alloc(0));
	}

	// body is stream
	// get ready to actually consume the body
	let accum = [];
	let accumBytes = 0;
	let abort = false;

	return new Body.Promise(function (resolve, reject) {
		let resTimeout;

		// allow timeout on slow response body
		if (_this4.timeout) {
			resTimeout = setTimeout(function () {
				abort = true;
				reject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));
			}, _this4.timeout);
		}

		// handle stream errors
		body.on('error', function (err) {
			if (err.name === 'AbortError') {
				// if the request was aborted, reject with this Error
				abort = true;
				reject(err);
			} else {
				// other errors, such as incorrect content-encoding
				reject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));
			}
		});

		body.on('data', function (chunk) {
			if (abort || chunk === null) {
				return;
			}

			if (_this4.size && accumBytes + chunk.length > _this4.size) {
				abort = true;
				reject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));
				return;
			}

			accumBytes += chunk.length;
			accum.push(chunk);
		});

		body.on('end', function () {
			if (abort) {
				return;
			}

			clearTimeout(resTimeout);

			try {
				resolve(Buffer.concat(accum, accumBytes));
			} catch (err) {
				// handle streams that have accumulated too much data (issue #414)
				reject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));
			}
		});
	});
}

/**
 * Detect buffer encoding and convert to target encoding
 * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding
 *
 * @param   Buffer  buffer    Incoming buffer
 * @param   String  encoding  Target encoding
 * @return  String
 */
function convertBody(buffer, headers) {
	if (typeof convert !== 'function') {
		throw new Error('The package `encoding` must be installed to use the textConverted() function');
	}

	const ct = headers.get('content-type');
	let charset = 'utf-8';
	let res, str;

	// header
	if (ct) {
		res = /charset=([^;]*)/i.exec(ct);
	}

	// no charset in content type, peek at response body for at most 1024 bytes
	str = buffer.slice(0, 1024).toString();

	// html5
	if (!res && str) {
		res = /<meta.+?charset=(['"])(.+?)\1/i.exec(str);
	}

	// html4
	if (!res && str) {
		res = /<meta[\s]+?http-equiv=(['"])content-type\1[\s]+?content=(['"])(.+?)\2/i.exec(str);
		if (!res) {
			res = /<meta[\s]+?content=(['"])(.+?)\1[\s]+?http-equiv=(['"])content-type\3/i.exec(str);
			if (res) {
				res.pop(); // drop last quote
			}
		}

		if (res) {
			res = /charset=(.*)/i.exec(res.pop());
		}
	}

	// xml
	if (!res && str) {
		res = /<\?xml.+?encoding=(['"])(.+?)\1/i.exec(str);
	}

	// found charset
	if (res) {
		charset = res.pop();

		// prevent decode issues when sites use incorrect encoding
		// ref: https://hsivonen.fi/encoding-menu/
		if (charset === 'gb2312' || charset === 'gbk') {
			charset = 'gb18030';
		}
	}

	// turn raw buffers into a single utf-8 buffer
	return convert(buffer, 'UTF-8', charset).toString();
}

/**
 * Detect a URLSearchParams object
 * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143
 *
 * @param   Object  obj     Object to detect by type or brand
 * @return  String
 */
function isURLSearchParams(obj) {
	// Duck-typing as a necessary condition.
	if (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {
		return false;
	}

	// Brand-checking and more duck-typing as optional condition.
	return obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';
}

/**
 * Check if `obj` is a W3C `Blob` object (which `File` inherits from)
 * @param  {*} obj
 * @return {boolean}
 */
function isBlob(obj) {
	return typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);
}

/**
 * Clone body given Res/Req instance
 *
 * @param   Mixed  instance  Response or Request instance
 * @return  Mixed
 */
function clone(instance) {
	let p1, p2;
	let body = instance.body;

	// don't allow cloning a used body
	if (instance.bodyUsed) {
		throw new Error('cannot clone body after it is used');
	}

	// check that body is a stream and not form-data object
	// note: we can't clone the form-data object without having it as a dependency
	if (body instanceof Stream && typeof body.getBoundary !== 'function') {
		// tee instance body
		p1 = new PassThrough();
		p2 = new PassThrough();
		body.pipe(p1);
		body.pipe(p2);
		// set instance body to teed body and return the other teed body
		instance[INTERNALS].body = p1;
		body = p2;
	}

	return body;
}

/**
 * Performs the operation "extract a `Content-Type` value from |object|" as
 * specified in the specification:
 * https://fetch.spec.whatwg.org/#concept-bodyinit-extract
 *
 * This function assumes that instance.body is present.
 *
 * @param   Mixed  instance  Any options.body input
 */
function extractContentType(body) {
	if (body === null) {
		// body is null
		return null;
	} else if (typeof body === 'string') {
		// body is string
		return 'text/plain;charset=UTF-8';
	} else if (isURLSearchParams(body)) {
		// body is a URLSearchParams
		return 'application/x-www-form-urlencoded;charset=UTF-8';
	} else if (isBlob(body)) {
		// body is blob
		return body.type || null;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return null;
	} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {
		// body is ArrayBuffer
		return null;
	} else if (ArrayBuffer.isView(body)) {
		// body is ArrayBufferView
		return null;
	} else if (typeof body.getBoundary === 'function') {
		// detect form data input from form-data module
		return `multipart/form-data;boundary=${body.getBoundary()}`;
	} else if (body instanceof Stream) {
		// body is stream
		// can't really do much about this
		return null;
	} else {
		// Body constructor defaults other things to string
		return 'text/plain;charset=UTF-8';
	}
}

/**
 * The Fetch Standard treats this as if "total bytes" is a property on the body.
 * For us, we have to explicitly get it with a function.
 *
 * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes
 *
 * @param   Body    instance   Instance of Body
 * @return  Number?            Number of bytes, or null if not possible
 */
function getTotalBytes(instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		return 0;
	} else if (isBlob(body)) {
		return body.size;
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		return body.length;
	} else if (body && typeof body.getLengthSync === 'function') {
		// detect form data input from form-data module
		if (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x
		body.hasKnownLength && body.hasKnownLength()) {
			// 2.x
			return body.getLengthSync();
		}
		return null;
	} else {
		// body is stream
		return null;
	}
}

/**
 * Write a Body to a Node.js WritableStream (e.g. http.Request) object.
 *
 * @param   Body    instance   Instance of Body
 * @return  Void
 */
function writeToStream(dest, instance) {
	const body = instance.body;


	if (body === null) {
		// body is null
		dest.end();
	} else if (isBlob(body)) {
		body.stream().pipe(dest);
	} else if (Buffer.isBuffer(body)) {
		// body is buffer
		dest.write(body);
		dest.end();
	} else {
		// body is stream
		body.pipe(dest);
	}
}

// expose Promise
Body.Promise = global.Promise;

/**
 * headers.js
 *
 * Headers class offers convenient helpers
 */

const invalidTokenRegex = /[^\^_`a-zA-Z\-0-9!#$%&'*+.|~]/;
const invalidHeaderCharRegex = /[^\t\x20-\x7e\x80-\xff]/;

function validateName(name) {
	name = `${name}`;
	if (invalidTokenRegex.test(name) || name === '') {
		throw new TypeError(`${name} is not a legal HTTP header name`);
	}
}

function validateValue(value) {
	value = `${value}`;
	if (invalidHeaderCharRegex.test(value)) {
		throw new TypeError(`${value} is not a legal HTTP header value`);
	}
}

/**
 * Find the key in the map object given a header name.
 *
 * Returns undefined if not found.
 *
 * @param   String  name  Header name
 * @return  String|Undefined
 */
function find(map, name) {
	name = name.toLowerCase();
	for (const key in map) {
		if (key.toLowerCase() === name) {
			return key;
		}
	}
	return undefined;
}

const MAP = Symbol('map');
class Headers {
	/**
  * Headers class
  *
  * @param   Object  headers  Response headers
  * @return  Void
  */
	constructor() {
		let init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;

		this[MAP] = Object.create(null);

		if (init instanceof Headers) {
			const rawHeaders = init.raw();
			const headerNames = Object.keys(rawHeaders);

			for (const headerName of headerNames) {
				for (const value of rawHeaders[headerName]) {
					this.append(headerName, value);
				}
			}

			return;
		}

		// We don't worry about converting prop to ByteString here as append()
		// will handle it.
		if (init == null) ; else if (typeof init === 'object') {
			const method = init[Symbol.iterator];
			if (method != null) {
				if (typeof method !== 'function') {
					throw new TypeError('Header pairs must be iterable');
				}

				// sequence<sequence<ByteString>>
				// Note: per spec we have to first exhaust the lists then process them
				const pairs = [];
				for (const pair of init) {
					if (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {
						throw new TypeError('Each header pair must be iterable');
					}
					pairs.push(Array.from(pair));
				}

				for (const pair of pairs) {
					if (pair.length !== 2) {
						throw new TypeError('Each header pair must be a name/value tuple');
					}
					this.append(pair[0], pair[1]);
				}
			} else {
				// record<ByteString, ByteString>
				for (const key of Object.keys(init)) {
					const value = init[key];
					this.append(key, value);
				}
			}
		} else {
			throw new TypeError('Provided initializer must be an object');
		}
	}

	/**
  * Return combined header value given name
  *
  * @param   String  name  Header name
  * @return  Mixed
  */
	get(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key === undefined) {
			return null;
		}

		return this[MAP][key].join(', ');
	}

	/**
  * Iterate over all headers
  *
  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)
  * @param   Boolean   thisArg   `this` context for callback function
  * @return  Void
  */
	forEach(callback) {
		let thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;

		let pairs = getHeaders(this);
		let i = 0;
		while (i < pairs.length) {
			var _pairs$i = pairs[i];
			const name = _pairs$i[0],
			      value = _pairs$i[1];

			callback.call(thisArg, value, name, this);
			pairs = getHeaders(this);
			i++;
		}
	}

	/**
  * Overwrite header values given name
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	set(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		this[MAP][key !== undefined ? key : name] = [value];
	}

	/**
  * Append a value onto existing header
  *
  * @param   String  name   Header name
  * @param   String  value  Header value
  * @return  Void
  */
	append(name, value) {
		name = `${name}`;
		value = `${value}`;
		validateName(name);
		validateValue(value);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			this[MAP][key].push(value);
		} else {
			this[MAP][name] = [value];
		}
	}

	/**
  * Check for header name existence
  *
  * @param   String   name  Header name
  * @return  Boolean
  */
	has(name) {
		name = `${name}`;
		validateName(name);
		return find(this[MAP], name) !== undefined;
	}

	/**
  * Delete all header values given name
  *
  * @param   String  name  Header name
  * @return  Void
  */
	delete(name) {
		name = `${name}`;
		validateName(name);
		const key = find(this[MAP], name);
		if (key !== undefined) {
			delete this[MAP][key];
		}
	}

	/**
  * Return raw headers (non-spec api)
  *
  * @return  Object
  */
	raw() {
		return this[MAP];
	}

	/**
  * Get an iterator on keys.
  *
  * @return  Iterator
  */
	keys() {
		return createHeadersIterator(this, 'key');
	}

	/**
  * Get an iterator on values.
  *
  * @return  Iterator
  */
	values() {
		return createHeadersIterator(this, 'value');
	}

	/**
  * Get an iterator on entries.
  *
  * This is the default iterator of the Headers object.
  *
  * @return  Iterator
  */
	[Symbol.iterator]() {
		return createHeadersIterator(this, 'key+value');
	}
}
Headers.prototype.entries = Headers.prototype[Symbol.iterator];

Object.defineProperty(Headers.prototype, Symbol.toStringTag, {
	value: 'Headers',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Headers.prototype, {
	get: { enumerable: true },
	forEach: { enumerable: true },
	set: { enumerable: true },
	append: { enumerable: true },
	has: { enumerable: true },
	delete: { enumerable: true },
	keys: { enumerable: true },
	values: { enumerable: true },
	entries: { enumerable: true }
});

function getHeaders(headers) {
	let kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';

	const keys = Object.keys(headers[MAP]).sort();
	return keys.map(kind === 'key' ? function (k) {
		return k.toLowerCase();
	} : kind === 'value' ? function (k) {
		return headers[MAP][k].join(', ');
	} : function (k) {
		return [k.toLowerCase(), headers[MAP][k].join(', ')];
	});
}

const INTERNAL = Symbol('internal');

function createHeadersIterator(target, kind) {
	const iterator = Object.create(HeadersIteratorPrototype);
	iterator[INTERNAL] = {
		target,
		kind,
		index: 0
	};
	return iterator;
}

const HeadersIteratorPrototype = Object.setPrototypeOf({
	next() {
		// istanbul ignore if
		if (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {
			throw new TypeError('Value of `this` is not a HeadersIterator');
		}

		var _INTERNAL = this[INTERNAL];
		const target = _INTERNAL.target,
		      kind = _INTERNAL.kind,
		      index = _INTERNAL.index;

		const values = getHeaders(target, kind);
		const len = values.length;
		if (index >= len) {
			return {
				value: undefined,
				done: true
			};
		}

		this[INTERNAL].index = index + 1;

		return {
			value: values[index],
			done: false
		};
	}
}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));

Object.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {
	value: 'HeadersIterator',
	writable: false,
	enumerable: false,
	configurable: true
});

/**
 * Export the Headers object in a form that Node.js can consume.
 *
 * @param   Headers  headers
 * @return  Object
 */
function exportNodeCompatibleHeaders(headers) {
	const obj = Object.assign({ __proto__: null }, headers[MAP]);

	// http.request() only supports string as Host header. This hack makes
	// specifying custom Host header possible.
	const hostHeaderKey = find(headers[MAP], 'Host');
	if (hostHeaderKey !== undefined) {
		obj[hostHeaderKey] = obj[hostHeaderKey][0];
	}

	return obj;
}

/**
 * Create a Headers object from an object of headers, ignoring those that do
 * not conform to HTTP grammar productions.
 *
 * @param   Object  obj  Object of headers
 * @return  Headers
 */
function createHeadersLenient(obj) {
	const headers = new Headers();
	for (const name of Object.keys(obj)) {
		if (invalidTokenRegex.test(name)) {
			continue;
		}
		if (Array.isArray(obj[name])) {
			for (const val of obj[name]) {
				if (invalidHeaderCharRegex.test(val)) {
					continue;
				}
				if (headers[MAP][name] === undefined) {
					headers[MAP][name] = [val];
				} else {
					headers[MAP][name].push(val);
				}
			}
		} else if (!invalidHeaderCharRegex.test(obj[name])) {
			headers[MAP][name] = [obj[name]];
		}
	}
	return headers;
}

const INTERNALS$1 = Symbol('Response internals');

// fix an issue where "STATUS_CODES" aren't a named export for node <10
const STATUS_CODES = http.STATUS_CODES;

/**
 * Response class
 *
 * @param   Stream  body  Readable stream
 * @param   Object  opts  Response options
 * @return  Void
 */
class Response {
	constructor() {
		let body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
		let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		Body.call(this, body, opts);

		const status = opts.status || 200;
		const headers = new Headers(opts.headers);

		if (body != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(body);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		this[INTERNALS$1] = {
			url: opts.url,
			status,
			statusText: opts.statusText || STATUS_CODES[status],
			headers,
			counter: opts.counter
		};
	}

	get url() {
		return this[INTERNALS$1].url || '';
	}

	get status() {
		return this[INTERNALS$1].status;
	}

	/**
  * Convenience property representing if the request ended normally
  */
	get ok() {
		return this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;
	}

	get redirected() {
		return this[INTERNALS$1].counter > 0;
	}

	get statusText() {
		return this[INTERNALS$1].statusText;
	}

	get headers() {
		return this[INTERNALS$1].headers;
	}

	/**
  * Clone this response
  *
  * @return  Response
  */
	clone() {
		return new Response(clone(this), {
			url: this.url,
			status: this.status,
			statusText: this.statusText,
			headers: this.headers,
			ok: this.ok,
			redirected: this.redirected
		});
	}
}

Body.mixIn(Response.prototype);

Object.defineProperties(Response.prototype, {
	url: { enumerable: true },
	status: { enumerable: true },
	ok: { enumerable: true },
	redirected: { enumerable: true },
	statusText: { enumerable: true },
	headers: { enumerable: true },
	clone: { enumerable: true }
});

Object.defineProperty(Response.prototype, Symbol.toStringTag, {
	value: 'Response',
	writable: false,
	enumerable: false,
	configurable: true
});

const INTERNALS$2 = Symbol('Request internals');

// fix an issue where "format", "parse" aren't a named export for node <10
const parse_url = Url.parse;
const format_url = Url.format;

const streamDestructionSupported = 'destroy' in Stream.Readable.prototype;

/**
 * Check if a value is an instance of Request.
 *
 * @param   Mixed   input
 * @return  Boolean
 */
function isRequest(input) {
	return typeof input === 'object' && typeof input[INTERNALS$2] === 'object';
}

function isAbortSignal(signal) {
	const proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);
	return !!(proto && proto.constructor.name === 'AbortSignal');
}

/**
 * Request class
 *
 * @param   Mixed   input  Url or Request instance
 * @param   Object  init   Custom options
 * @return  Void
 */
class Request {
	constructor(input) {
		let init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

		let parsedURL;

		// normalize input
		if (!isRequest(input)) {
			if (input && input.href) {
				// in order to support Node.js' Url objects; though WHATWG's URL objects
				// will fall into this branch also (since their `toString()` will return
				// `href` property anyway)
				parsedURL = parse_url(input.href);
			} else {
				// coerce input to a string before attempting to parse
				parsedURL = parse_url(`${input}`);
			}
			input = {};
		} else {
			parsedURL = parse_url(input.url);
		}

		let method = init.method || input.method || 'GET';
		method = method.toUpperCase();

		if ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {
			throw new TypeError('Request with GET/HEAD method cannot have body');
		}

		let inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;

		Body.call(this, inputBody, {
			timeout: init.timeout || input.timeout || 0,
			size: init.size || input.size || 0
		});

		const headers = new Headers(init.headers || input.headers || {});

		if (inputBody != null && !headers.has('Content-Type')) {
			const contentType = extractContentType(inputBody);
			if (contentType) {
				headers.append('Content-Type', contentType);
			}
		}

		let signal = isRequest(input) ? input.signal : null;
		if ('signal' in init) signal = init.signal;

		if (signal != null && !isAbortSignal(signal)) {
			throw new TypeError('Expected signal to be an instanceof AbortSignal');
		}

		this[INTERNALS$2] = {
			method,
			redirect: init.redirect || input.redirect || 'follow',
			headers,
			parsedURL,
			signal
		};

		// node-fetch-only options
		this.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;
		this.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;
		this.counter = init.counter || input.counter || 0;
		this.agent = init.agent || input.agent;
	}

	get method() {
		return this[INTERNALS$2].method;
	}

	get url() {
		return format_url(this[INTERNALS$2].parsedURL);
	}

	get headers() {
		return this[INTERNALS$2].headers;
	}

	get redirect() {
		return this[INTERNALS$2].redirect;
	}

	get signal() {
		return this[INTERNALS$2].signal;
	}

	/**
  * Clone this request
  *
  * @return  Request
  */
	clone() {
		return new Request(this);
	}
}

Body.mixIn(Request.prototype);

Object.defineProperty(Request.prototype, Symbol.toStringTag, {
	value: 'Request',
	writable: false,
	enumerable: false,
	configurable: true
});

Object.defineProperties(Request.prototype, {
	method: { enumerable: true },
	url: { enumerable: true },
	headers: { enumerable: true },
	redirect: { enumerable: true },
	clone: { enumerable: true },
	signal: { enumerable: true }
});

/**
 * Convert a Request to Node.js http request options.
 *
 * @param   Request  A Request instance
 * @return  Object   The options object to be passed to http.request
 */
function getNodeRequestOptions(request) {
	const parsedURL = request[INTERNALS$2].parsedURL;
	const headers = new Headers(request[INTERNALS$2].headers);

	// fetch step 1.3
	if (!headers.has('Accept')) {
		headers.set('Accept', '*/*');
	}

	// Basic fetch
	if (!parsedURL.protocol || !parsedURL.hostname) {
		throw new TypeError('Only absolute URLs are supported');
	}

	if (!/^https?:$/.test(parsedURL.protocol)) {
		throw new TypeError('Only HTTP(S) protocols are supported');
	}

	if (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {
		throw new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');
	}

	// HTTP-network-or-cache fetch steps 2.4-2.7
	let contentLengthValue = null;
	if (request.body == null && /^(POST|PUT)$/i.test(request.method)) {
		contentLengthValue = '0';
	}
	if (request.body != null) {
		const totalBytes = getTotalBytes(request);
		if (typeof totalBytes === 'number') {
			contentLengthValue = String(totalBytes);
		}
	}
	if (contentLengthValue) {
		headers.set('Content-Length', contentLengthValue);
	}

	// HTTP-network-or-cache fetch step 2.11
	if (!headers.has('User-Agent')) {
		headers.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');
	}

	// HTTP-network-or-cache fetch step 2.15
	if (request.compress && !headers.has('Accept-Encoding')) {
		headers.set('Accept-Encoding', 'gzip,deflate');
	}

	let agent = request.agent;
	if (typeof agent === 'function') {
		agent = agent(parsedURL);
	}

	if (!headers.has('Connection') && !agent) {
		headers.set('Connection', 'close');
	}

	// HTTP-network fetch step 4.2
	// chunked encoding is handled by Node.js

	return Object.assign({}, parsedURL, {
		method: request.method,
		headers: exportNodeCompatibleHeaders(headers),
		agent
	});
}

/**
 * abort-error.js
 *
 * AbortError interface for cancelled requests
 */

/**
 * Create AbortError instance
 *
 * @param   String      message      Error message for human
 * @return  AbortError
 */
function AbortError(message) {
  Error.call(this, message);

  this.type = 'aborted';
  this.message = message;

  // hide custom error implementation details from end-users
  Error.captureStackTrace(this, this.constructor);
}

AbortError.prototype = Object.create(Error.prototype);
AbortError.prototype.constructor = AbortError;
AbortError.prototype.name = 'AbortError';

// fix an issue where "PassThrough", "resolve" aren't a named export for node <10
const PassThrough$1 = Stream.PassThrough;
const resolve_url = Url.resolve;

/**
 * Fetch function
 *
 * @param   Mixed    url   Absolute url or Request instance
 * @param   Object   opts  Fetch options
 * @return  Promise
 */
function fetch(url, opts) {

	// allow custom promise
	if (!fetch.Promise) {
		throw new Error('native promise missing, set fetch.Promise to your favorite alternative');
	}

	Body.Promise = fetch.Promise;

	// wrap http.request into fetch
	return new fetch.Promise(function (resolve, reject) {
		// build request object
		const request = new Request(url, opts);
		const options = getNodeRequestOptions(request);

		const send = (options.protocol === 'https:' ? https : http).request;
		const signal = request.signal;

		let response = null;

		const abort = function abort() {
			let error = new AbortError('The user aborted a request.');
			reject(error);
			if (request.body && request.body instanceof Stream.Readable) {
				request.body.destroy(error);
			}
			if (!response || !response.body) return;
			response.body.emit('error', error);
		};

		if (signal && signal.aborted) {
			abort();
			return;
		}

		const abortAndFinalize = function abortAndFinalize() {
			abort();
			finalize();
		};

		// send request
		const req = send(options);
		let reqTimeout;

		if (signal) {
			signal.addEventListener('abort', abortAndFinalize);
		}

		function finalize() {
			req.abort();
			if (signal) signal.removeEventListener('abort', abortAndFinalize);
			clearTimeout(reqTimeout);
		}

		if (request.timeout) {
			req.once('socket', function (socket) {
				reqTimeout = setTimeout(function () {
					reject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));
					finalize();
				}, request.timeout);
			});
		}

		req.on('error', function (err) {
			reject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));
			finalize();
		});

		req.on('response', function (res) {
			clearTimeout(reqTimeout);

			const headers = createHeadersLenient(res.headers);

			// HTTP fetch step 5
			if (fetch.isRedirect(res.statusCode)) {
				// HTTP fetch step 5.2
				const location = headers.get('Location');

				// HTTP fetch step 5.3
				const locationURL = location === null ? null : resolve_url(request.url, location);

				// HTTP fetch step 5.5
				switch (request.redirect) {
					case 'error':
						reject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));
						finalize();
						return;
					case 'manual':
						// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.
						if (locationURL !== null) {
							// handle corrupted header
							try {
								headers.set('Location', locationURL);
							} catch (err) {
								// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request
								reject(err);
							}
						}
						break;
					case 'follow':
						// HTTP-redirect fetch step 2
						if (locationURL === null) {
							break;
						}

						// HTTP-redirect fetch step 5
						if (request.counter >= request.follow) {
							reject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 6 (counter increment)
						// Create a new Request object.
						const requestOpts = {
							headers: new Headers(request.headers),
							follow: request.follow,
							counter: request.counter + 1,
							agent: request.agent,
							compress: request.compress,
							method: request.method,
							body: request.body,
							signal: request.signal,
							timeout: request.timeout,
							size: request.size
						};

						// HTTP-redirect fetch step 9
						if (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {
							reject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));
							finalize();
							return;
						}

						// HTTP-redirect fetch step 11
						if (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {
							requestOpts.method = 'GET';
							requestOpts.body = undefined;
							requestOpts.headers.delete('content-length');
						}

						// HTTP-redirect fetch step 15
						resolve(fetch(new Request(locationURL, requestOpts)));
						finalize();
						return;
				}
			}

			// prepare response
			res.once('end', function () {
				if (signal) signal.removeEventListener('abort', abortAndFinalize);
			});
			let body = res.pipe(new PassThrough$1());

			const response_options = {
				url: request.url,
				status: res.statusCode,
				statusText: res.statusMessage,
				headers: headers,
				size: request.size,
				timeout: request.timeout,
				counter: request.counter
			};

			// HTTP-network fetch step 12.1.1.3
			const codings = headers.get('Content-Encoding');

			// HTTP-network fetch step 12.1.1.4: handle content codings

			// in following scenarios we ignore compression support
			// 1. compression support is disabled
			// 2. HEAD request
			// 3. no Content-Encoding header
			// 4. no content response (204)
			// 5. content not modified response (304)
			if (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// For Node v6+
			// Be less strict when decoding compressed responses, since sometimes
			// servers send slightly invalid responses that are still accepted
			// by common browsers.
			// Always using Z_SYNC_FLUSH is what cURL does.
			const zlibOptions = {
				flush: zlib.Z_SYNC_FLUSH,
				finishFlush: zlib.Z_SYNC_FLUSH
			};

			// for gzip
			if (codings == 'gzip' || codings == 'x-gzip') {
				body = body.pipe(zlib.createGunzip(zlibOptions));
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// for deflate
			if (codings == 'deflate' || codings == 'x-deflate') {
				// handle the infamous raw deflate response from old servers
				// a hack for old IIS and Apache servers
				const raw = res.pipe(new PassThrough$1());
				raw.once('data', function (chunk) {
					// see http://stackoverflow.com/questions/37519828
					if ((chunk[0] & 0x0F) === 0x08) {
						body = body.pipe(zlib.createInflate());
					} else {
						body = body.pipe(zlib.createInflateRaw());
					}
					response = new Response(body, response_options);
					resolve(response);
				});
				return;
			}

			// for br
			if (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {
				body = body.pipe(zlib.createBrotliDecompress());
				response = new Response(body, response_options);
				resolve(response);
				return;
			}

			// otherwise, use response as-is
			response = new Response(body, response_options);
			resolve(response);
		});

		writeToStream(req, request);
	});
}
/**
 * Redirect code matching
 *
 * @param   Number   code  Status code
 * @return  Boolean
 */
fetch.isRedirect = function (code) {
	return code === 301 || code === 302 || code === 303 || code === 307 || code === 308;
};

// expose Promise
fetch.Promise = global.Promise;

module.exports = exports = fetch;
Object.defineProperty(exports, "__esModule", ({ value: true }));
exports.default = exports;
exports.Headers = Headers;
exports.Request = Request;
exports.Response = Response;
exports.FetchError = FetchError;


/***/ }),

/***/ 502:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const path = __nccwpck_require__(5622);
const pathKey = __nccwpck_require__(539);

module.exports = opts => {
	opts = Object.assign({
		cwd: process.cwd(),
		path: process.env[pathKey()]
	}, opts);

	let prev;
	let pth = path.resolve(opts.cwd);
	const ret = [];

	while (prev !== pth) {
		ret.push(path.join(pth, 'node_modules/.bin'));
		prev = pth;
		pth = path.resolve(pth, '..');
	}

	// ensure the running `node` binary is used
	ret.push(path.dirname(process.execPath));

	return ret.concat(opts.path).join(path.delimiter);
};

module.exports.env = opts => {
	opts = Object.assign({
		env: process.env
	}, opts);

	const env = Object.assign({}, opts.env);
	const path = pathKey({env});

	opts.path = env[path];
	env[path] = module.exports(opts);

	return env;
};


/***/ }),

/***/ 2072:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = paginationMethodsPlugin

function paginationMethodsPlugin (octokit) {
  octokit.getFirstPage = __nccwpck_require__(9555).bind(null, octokit)
  octokit.getLastPage = __nccwpck_require__(2203).bind(null, octokit)
  octokit.getNextPage = __nccwpck_require__(6655).bind(null, octokit)
  octokit.getPreviousPage = __nccwpck_require__(3032).bind(null, octokit)
  octokit.hasFirstPage = __nccwpck_require__(9631)
  octokit.hasLastPage = __nccwpck_require__(4286)
  octokit.hasNextPage = __nccwpck_require__(500)
  octokit.hasPreviousPage = __nccwpck_require__(5996)
}


/***/ }),

/***/ 191:
/***/ ((module) => {

module.exports = deprecate

const loggedMessages = {}

function deprecate (message) {
  if (loggedMessages[message]) {
    return
  }

  console.warn(`DEPRECATED (@octokit/rest): ${message}`)
  loggedMessages[message] = 1
}


/***/ }),

/***/ 9555:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = getFirstPage

const getPage = __nccwpck_require__(8604)

function getFirstPage (octokit, link, headers) {
  return getPage(octokit, link, 'first', headers)
}


/***/ }),

/***/ 2203:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = getLastPage

const getPage = __nccwpck_require__(8604)

function getLastPage (octokit, link, headers) {
  return getPage(octokit, link, 'last', headers)
}


/***/ }),

/***/ 6655:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = getNextPage

const getPage = __nccwpck_require__(8604)

function getNextPage (octokit, link, headers) {
  return getPage(octokit, link, 'next', headers)
}


/***/ }),

/***/ 7889:
/***/ ((module) => {

module.exports = getPageLinks

function getPageLinks (link) {
  link = link.link || link.headers.link || ''

  const links = {}

  // link format:
  // '<https://api.github.com/users/aseemk/followers?page=2>; rel="next", <https://api.github.com/users/aseemk/followers?page=2>; rel="last"'
  link.replace(/<([^>]*)>;\s*rel="([\w]*)"/g, (m, uri, type) => {
    links[type] = uri
  })

  return links
}


/***/ }),

/***/ 8604:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = getPage

const deprecate = __nccwpck_require__(191)
const getPageLinks = __nccwpck_require__(7889)
const HttpError = __nccwpck_require__(6058)

function getPage (octokit, link, which, headers) {
  deprecate(`octokit.get${which.charAt(0).toUpperCase() + which.slice(1)}Page() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`)
  const url = getPageLinks(link)[which]

  if (!url) {
    const urlError = new HttpError(`No ${which} page found`, 404)
    return Promise.reject(urlError)
  }

  const requestOptions = {
    url,
    headers: applyAcceptHeader(link, headers)
  }

  const promise = octokit.request(requestOptions)

  return promise
}

function applyAcceptHeader (res, headers) {
  const previous = res.headers && res.headers['x-github-media-type']

  if (!previous || (headers && headers.accept)) {
    return headers
  }
  headers = headers || {}
  headers.accept = 'application/vnd.' + previous
    .replace('; param=', '.')
    .replace('; format=', '+')

  return headers
}


/***/ }),

/***/ 3032:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = getPreviousPage

const getPage = __nccwpck_require__(8604)

function getPreviousPage (octokit, link, headers) {
  return getPage(octokit, link, 'prev', headers)
}


/***/ }),

/***/ 9631:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = hasFirstPage

const deprecate = __nccwpck_require__(191)
const getPageLinks = __nccwpck_require__(7889)

function hasFirstPage (link) {
  deprecate(`octokit.hasFirstPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`)
  return getPageLinks(link).first
}


/***/ }),

/***/ 4286:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = hasLastPage

const deprecate = __nccwpck_require__(191)
const getPageLinks = __nccwpck_require__(7889)

function hasLastPage (link) {
  deprecate(`octokit.hasLastPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`)
  return getPageLinks(link).last
}


/***/ }),

/***/ 500:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = hasNextPage

const deprecate = __nccwpck_require__(191)
const getPageLinks = __nccwpck_require__(7889)

function hasNextPage (link) {
  deprecate(`octokit.hasNextPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`)
  return getPageLinks(link).next
}


/***/ }),

/***/ 5996:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = hasPreviousPage

const deprecate = __nccwpck_require__(191)
const getPageLinks = __nccwpck_require__(7889)

function hasPreviousPage (link) {
  deprecate(`octokit.hasPreviousPage() – You can use octokit.paginate or async iterators instead: https://github.com/octokit/rest.js#pagination.`)
  return getPageLinks(link).prev
}


/***/ }),

/***/ 6058:
/***/ ((module) => {

module.exports = class HttpError extends Error {
  constructor (message, code, headers) {
    super(message)

    // Maintains proper stack trace (only available on V8)
    /* istanbul ignore next */
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, this.constructor)
    }

    this.name = 'HttpError'
    this.code = code
    this.headers = headers
  }
}


/***/ }),

/***/ 1223:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var wrappy = __nccwpck_require__(2940)
module.exports = wrappy(once)
module.exports.strict = wrappy(onceStrict)

once.proto = once(function () {
  Object.defineProperty(Function.prototype, 'once', {
    value: function () {
      return once(this)
    },
    configurable: true
  })

  Object.defineProperty(Function.prototype, 'onceStrict', {
    value: function () {
      return onceStrict(this)
    },
    configurable: true
  })
})

function once (fn) {
  var f = function () {
    if (f.called) return f.value
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  f.called = false
  return f
}

function onceStrict (fn) {
  var f = function () {
    if (f.called)
      throw new Error(f.onceError)
    f.called = true
    return f.value = fn.apply(this, arguments)
  }
  var name = fn.name || 'Function wrapped with `once`'
  f.onceError = name + " shouldn't be called more than once"
  f.called = false
  return f
}


/***/ }),

/***/ 4824:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const os = __nccwpck_require__(2087);
const macosRelease = __nccwpck_require__(7493);
const winRelease = __nccwpck_require__(3515);

const osName = (platform, release) => {
	if (!platform && release) {
		throw new Error('You can\'t specify a `release` without specifying `platform`');
	}

	platform = platform || os.platform();

	let id;

	if (platform === 'darwin') {
		if (!release && os.platform() === 'darwin') {
			release = os.release();
		}

		const prefix = release ? (Number(release.split('.')[0]) > 15 ? 'macOS' : 'OS X') : 'macOS';
		id = release ? macosRelease(release).name : '';
		return prefix + (id ? ' ' + id : '');
	}

	if (platform === 'linux') {
		if (!release && os.platform() === 'linux') {
			release = os.release();
		}

		id = release ? release.replace(/^(\d+\.\d+).*/, '$1') : '';
		return 'Linux' + (id ? ' ' + id : '');
	}

	if (platform === 'win32') {
		if (!release && os.platform() === 'win32') {
			release = os.release();
		}

		id = release ? winRelease(release) : '';
		return 'Windows' + (id ? ' ' + id : '');
	}

	return platform;
};

module.exports = osName;


/***/ }),

/***/ 1330:
/***/ ((module) => {

"use strict";

module.exports = (promise, onFinally) => {
	onFinally = onFinally || (() => {});

	return promise.then(
		val => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => val),
		err => new Promise(resolve => {
			resolve(onFinally());
		}).then(() => {
			throw err;
		})
	);
};


/***/ }),

/***/ 539:
/***/ ((module) => {

"use strict";

module.exports = opts => {
	opts = opts || {};

	const env = opts.env || process.env;
	const platform = opts.platform || process.platform;

	if (platform !== 'win32') {
		return 'PATH';
	}

	return Object.keys(env).find(x => x.toUpperCase() === 'PATH') || 'Path';
};


/***/ }),

/***/ 8341:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

var once = __nccwpck_require__(1223)
var eos = __nccwpck_require__(1205)
var fs = __nccwpck_require__(5747) // we only need fs to get the ReadStream and WriteStream prototypes

var noop = function () {}
var ancient = /^v?\.0/.test(process.version)

var isFn = function (fn) {
  return typeof fn === 'function'
}

var isFS = function (stream) {
  if (!ancient) return false // newer node version do not need to care about fs is a special way
  if (!fs) return false // browser
  return (stream instanceof (fs.ReadStream || noop) || stream instanceof (fs.WriteStream || noop)) && isFn(stream.close)
}

var isRequest = function (stream) {
  return stream.setHeader && isFn(stream.abort)
}

var destroyer = function (stream, reading, writing, callback) {
  callback = once(callback)

  var closed = false
  stream.on('close', function () {
    closed = true
  })

  eos(stream, {readable: reading, writable: writing}, function (err) {
    if (err) return callback(err)
    closed = true
    callback()
  })

  var destroyed = false
  return function (err) {
    if (closed) return
    if (destroyed) return
    destroyed = true

    if (isFS(stream)) return stream.close(noop) // use close for fs streams to avoid fd leaks
    if (isRequest(stream)) return stream.abort() // request.destroy just do .end - .abort is what we want

    if (isFn(stream.destroy)) return stream.destroy()

    callback(err || new Error('stream was destroyed'))
  }
}

var call = function (fn) {
  fn()
}

var pipe = function (from, to) {
  return from.pipe(to)
}

var pump = function () {
  var streams = Array.prototype.slice.call(arguments)
  var callback = isFn(streams[streams.length - 1] || noop) && streams.pop() || noop

  if (Array.isArray(streams[0])) streams = streams[0]
  if (streams.length < 2) throw new Error('pump requires two streams per minimum')

  var error
  var destroys = streams.map(function (stream, i) {
    var reading = i < streams.length - 1
    var writing = i > 0
    return destroyer(stream, reading, writing, function (err) {
      if (!error) error = err
      if (err) destroys.forEach(call)
      if (reading) return
      destroys.forEach(call)
      callback(error)
    })
  })

  return streams.reduce(pipe)
}

module.exports = pump


/***/ }),

/***/ 5911:
/***/ ((module, exports) => {

exports = module.exports = SemVer

var debug
/* istanbul ignore next */
if (typeof process === 'object' &&
    process.env &&
    process.env.NODE_DEBUG &&
    /\bsemver\b/i.test(process.env.NODE_DEBUG)) {
  debug = function () {
    var args = Array.prototype.slice.call(arguments, 0)
    args.unshift('SEMVER')
    console.log.apply(console, args)
  }
} else {
  debug = function () {}
}

// Note: this is the semver.org version of the spec that it implements
// Not necessarily the package version of this code.
exports.SEMVER_SPEC_VERSION = '2.0.0'

var MAX_LENGTH = 256
var MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||
  /* istanbul ignore next */ 9007199254740991

// Max safe segment length for coercion.
var MAX_SAFE_COMPONENT_LENGTH = 16

// The actual regexps go on exports.re
var re = exports.re = []
var src = exports.src = []
var R = 0

// The following Regular Expressions can be used for tokenizing,
// validating, and parsing SemVer version strings.

// ## Numeric Identifier
// A single `0`, or a non-zero digit followed by zero or more digits.

var NUMERICIDENTIFIER = R++
src[NUMERICIDENTIFIER] = '0|[1-9]\\d*'
var NUMERICIDENTIFIERLOOSE = R++
src[NUMERICIDENTIFIERLOOSE] = '[0-9]+'

// ## Non-numeric Identifier
// Zero or more digits, followed by a letter or hyphen, and then zero or
// more letters, digits, or hyphens.

var NONNUMERICIDENTIFIER = R++
src[NONNUMERICIDENTIFIER] = '\\d*[a-zA-Z-][a-zA-Z0-9-]*'

// ## Main Version
// Three dot-separated numeric identifiers.

var MAINVERSION = R++
src[MAINVERSION] = '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')\\.' +
                   '(' + src[NUMERICIDENTIFIER] + ')'

var MAINVERSIONLOOSE = R++
src[MAINVERSIONLOOSE] = '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')\\.' +
                        '(' + src[NUMERICIDENTIFIERLOOSE] + ')'

// ## Pre-release Version Identifier
// A numeric identifier, or a non-numeric identifier.

var PRERELEASEIDENTIFIER = R++
src[PRERELEASEIDENTIFIER] = '(?:' + src[NUMERICIDENTIFIER] +
                            '|' + src[NONNUMERICIDENTIFIER] + ')'

var PRERELEASEIDENTIFIERLOOSE = R++
src[PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[NUMERICIDENTIFIERLOOSE] +
                                 '|' + src[NONNUMERICIDENTIFIER] + ')'

// ## Pre-release Version
// Hyphen, followed by one or more dot-separated pre-release version
// identifiers.

var PRERELEASE = R++
src[PRERELEASE] = '(?:-(' + src[PRERELEASEIDENTIFIER] +
                  '(?:\\.' + src[PRERELEASEIDENTIFIER] + ')*))'

var PRERELEASELOOSE = R++
src[PRERELEASELOOSE] = '(?:-?(' + src[PRERELEASEIDENTIFIERLOOSE] +
                       '(?:\\.' + src[PRERELEASEIDENTIFIERLOOSE] + ')*))'

// ## Build Metadata Identifier
// Any combination of digits, letters, or hyphens.

var BUILDIDENTIFIER = R++
src[BUILDIDENTIFIER] = '[0-9A-Za-z-]+'

// ## Build Metadata
// Plus sign, followed by one or more period-separated build metadata
// identifiers.

var BUILD = R++
src[BUILD] = '(?:\\+(' + src[BUILDIDENTIFIER] +
             '(?:\\.' + src[BUILDIDENTIFIER] + ')*))'

// ## Full Version String
// A main version, followed optionally by a pre-release version and
// build metadata.

// Note that the only major, minor, patch, and pre-release sections of
// the version string are capturing groups.  The build metadata is not a
// capturing group, because it should not ever be used in version
// comparison.

var FULL = R++
var FULLPLAIN = 'v?' + src[MAINVERSION] +
                src[PRERELEASE] + '?' +
                src[BUILD] + '?'

src[FULL] = '^' + FULLPLAIN + '$'

// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.
// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty
// common in the npm registry.
var LOOSEPLAIN = '[v=\\s]*' + src[MAINVERSIONLOOSE] +
                 src[PRERELEASELOOSE] + '?' +
                 src[BUILD] + '?'

var LOOSE = R++
src[LOOSE] = '^' + LOOSEPLAIN + '$'

var GTLT = R++
src[GTLT] = '((?:<|>)?=?)'

// Something like "2.*" or "1.2.x".
// Note that "x.x" is a valid xRange identifer, meaning "any version"
// Only the first item is strictly required.
var XRANGEIDENTIFIERLOOSE = R++
src[XRANGEIDENTIFIERLOOSE] = src[NUMERICIDENTIFIERLOOSE] + '|x|X|\\*'
var XRANGEIDENTIFIER = R++
src[XRANGEIDENTIFIER] = src[NUMERICIDENTIFIER] + '|x|X|\\*'

var XRANGEPLAIN = R++
src[XRANGEPLAIN] = '[v=\\s]*(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:\\.(' + src[XRANGEIDENTIFIER] + ')' +
                   '(?:' + src[PRERELEASE] + ')?' +
                   src[BUILD] + '?' +
                   ')?)?'

var XRANGEPLAINLOOSE = R++
src[XRANGEPLAINLOOSE] = '[v=\\s]*(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:\\.(' + src[XRANGEIDENTIFIERLOOSE] + ')' +
                        '(?:' + src[PRERELEASELOOSE] + ')?' +
                        src[BUILD] + '?' +
                        ')?)?'

var XRANGE = R++
src[XRANGE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAIN] + '$'
var XRANGELOOSE = R++
src[XRANGELOOSE] = '^' + src[GTLT] + '\\s*' + src[XRANGEPLAINLOOSE] + '$'

// Coercion.
// Extract anything that could conceivably be a part of a valid semver
var COERCE = R++
src[COERCE] = '(?:^|[^\\d])' +
              '(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:\\.(\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +
              '(?:$|[^\\d])'

// Tilde ranges.
// Meaning is "reasonably at or greater than"
var LONETILDE = R++
src[LONETILDE] = '(?:~>?)'

var TILDETRIM = R++
src[TILDETRIM] = '(\\s*)' + src[LONETILDE] + '\\s+'
re[TILDETRIM] = new RegExp(src[TILDETRIM], 'g')
var tildeTrimReplace = '$1~'

var TILDE = R++
src[TILDE] = '^' + src[LONETILDE] + src[XRANGEPLAIN] + '$'
var TILDELOOSE = R++
src[TILDELOOSE] = '^' + src[LONETILDE] + src[XRANGEPLAINLOOSE] + '$'

// Caret ranges.
// Meaning is "at least and backwards compatible with"
var LONECARET = R++
src[LONECARET] = '(?:\\^)'

var CARETTRIM = R++
src[CARETTRIM] = '(\\s*)' + src[LONECARET] + '\\s+'
re[CARETTRIM] = new RegExp(src[CARETTRIM], 'g')
var caretTrimReplace = '$1^'

var CARET = R++
src[CARET] = '^' + src[LONECARET] + src[XRANGEPLAIN] + '$'
var CARETLOOSE = R++
src[CARETLOOSE] = '^' + src[LONECARET] + src[XRANGEPLAINLOOSE] + '$'

// A simple gt/lt/eq thing, or just "" to indicate "any version"
var COMPARATORLOOSE = R++
src[COMPARATORLOOSE] = '^' + src[GTLT] + '\\s*(' + LOOSEPLAIN + ')$|^$'
var COMPARATOR = R++
src[COMPARATOR] = '^' + src[GTLT] + '\\s*(' + FULLPLAIN + ')$|^$'

// An expression to strip any whitespace between the gtlt and the thing
// it modifies, so that `> 1.2.3` ==> `>1.2.3`
var COMPARATORTRIM = R++
src[COMPARATORTRIM] = '(\\s*)' + src[GTLT] +
                      '\\s*(' + LOOSEPLAIN + '|' + src[XRANGEPLAIN] + ')'

// this one has to use the /g flag
re[COMPARATORTRIM] = new RegExp(src[COMPARATORTRIM], 'g')
var comparatorTrimReplace = '$1$2$3'

// Something like `1.2.3 - 1.2.4`
// Note that these all use the loose form, because they'll be
// checked against either the strict or loose comparator form
// later.
var HYPHENRANGE = R++
src[HYPHENRANGE] = '^\\s*(' + src[XRANGEPLAIN] + ')' +
                   '\\s+-\\s+' +
                   '(' + src[XRANGEPLAIN] + ')' +
                   '\\s*$'

var HYPHENRANGELOOSE = R++
src[HYPHENRANGELOOSE] = '^\\s*(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s+-\\s+' +
                        '(' + src[XRANGEPLAINLOOSE] + ')' +
                        '\\s*$'

// Star ranges basically just allow anything at all.
var STAR = R++
src[STAR] = '(<|>)?=?\\s*\\*'

// Compile to actual regexp objects.
// All are flag-free, unless they were created above with a flag.
for (var i = 0; i < R; i++) {
  debug(i, src[i])
  if (!re[i]) {
    re[i] = new RegExp(src[i])
  }
}

exports.parse = parse
function parse (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  if (version.length > MAX_LENGTH) {
    return null
  }

  var r = options.loose ? re[LOOSE] : re[FULL]
  if (!r.test(version)) {
    return null
  }

  try {
    return new SemVer(version, options)
  } catch (er) {
    return null
  }
}

exports.valid = valid
function valid (version, options) {
  var v = parse(version, options)
  return v ? v.version : null
}

exports.clean = clean
function clean (version, options) {
  var s = parse(version.trim().replace(/^[=v]+/, ''), options)
  return s ? s.version : null
}

exports.SemVer = SemVer

function SemVer (version, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }
  if (version instanceof SemVer) {
    if (version.loose === options.loose) {
      return version
    } else {
      version = version.version
    }
  } else if (typeof version !== 'string') {
    throw new TypeError('Invalid Version: ' + version)
  }

  if (version.length > MAX_LENGTH) {
    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')
  }

  if (!(this instanceof SemVer)) {
    return new SemVer(version, options)
  }

  debug('SemVer', version, options)
  this.options = options
  this.loose = !!options.loose

  var m = version.trim().match(options.loose ? re[LOOSE] : re[FULL])

  if (!m) {
    throw new TypeError('Invalid Version: ' + version)
  }

  this.raw = version

  // these are actually numbers
  this.major = +m[1]
  this.minor = +m[2]
  this.patch = +m[3]

  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {
    throw new TypeError('Invalid major version')
  }

  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {
    throw new TypeError('Invalid minor version')
  }

  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {
    throw new TypeError('Invalid patch version')
  }

  // numberify any prerelease numeric ids
  if (!m[4]) {
    this.prerelease = []
  } else {
    this.prerelease = m[4].split('.').map(function (id) {
      if (/^[0-9]+$/.test(id)) {
        var num = +id
        if (num >= 0 && num < MAX_SAFE_INTEGER) {
          return num
        }
      }
      return id
    })
  }

  this.build = m[5] ? m[5].split('.') : []
  this.format()
}

SemVer.prototype.format = function () {
  this.version = this.major + '.' + this.minor + '.' + this.patch
  if (this.prerelease.length) {
    this.version += '-' + this.prerelease.join('.')
  }
  return this.version
}

SemVer.prototype.toString = function () {
  return this.version
}

SemVer.prototype.compare = function (other) {
  debug('SemVer.compare', this.version, this.options, other)
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return this.compareMain(other) || this.comparePre(other)
}

SemVer.prototype.compareMain = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  return compareIdentifiers(this.major, other.major) ||
         compareIdentifiers(this.minor, other.minor) ||
         compareIdentifiers(this.patch, other.patch)
}

SemVer.prototype.comparePre = function (other) {
  if (!(other instanceof SemVer)) {
    other = new SemVer(other, this.options)
  }

  // NOT having a prerelease is > having one
  if (this.prerelease.length && !other.prerelease.length) {
    return -1
  } else if (!this.prerelease.length && other.prerelease.length) {
    return 1
  } else if (!this.prerelease.length && !other.prerelease.length) {
    return 0
  }

  var i = 0
  do {
    var a = this.prerelease[i]
    var b = other.prerelease[i]
    debug('prerelease compare', i, a, b)
    if (a === undefined && b === undefined) {
      return 0
    } else if (b === undefined) {
      return 1
    } else if (a === undefined) {
      return -1
    } else if (a === b) {
      continue
    } else {
      return compareIdentifiers(a, b)
    }
  } while (++i)
}

// preminor will bump the version up to the next minor release, and immediately
// down to pre-release. premajor and prepatch work the same way.
SemVer.prototype.inc = function (release, identifier) {
  switch (release) {
    case 'premajor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor = 0
      this.major++
      this.inc('pre', identifier)
      break
    case 'preminor':
      this.prerelease.length = 0
      this.patch = 0
      this.minor++
      this.inc('pre', identifier)
      break
    case 'prepatch':
      // If this is already a prerelease, it will bump to the next version
      // drop any prereleases that might already exist, since they are not
      // relevant at this point.
      this.prerelease.length = 0
      this.inc('patch', identifier)
      this.inc('pre', identifier)
      break
    // If the input is a non-prerelease version, this acts the same as
    // prepatch.
    case 'prerelease':
      if (this.prerelease.length === 0) {
        this.inc('patch', identifier)
      }
      this.inc('pre', identifier)
      break

    case 'major':
      // If this is a pre-major version, bump up to the same major version.
      // Otherwise increment major.
      // 1.0.0-5 bumps to 1.0.0
      // 1.1.0 bumps to 2.0.0
      if (this.minor !== 0 ||
          this.patch !== 0 ||
          this.prerelease.length === 0) {
        this.major++
      }
      this.minor = 0
      this.patch = 0
      this.prerelease = []
      break
    case 'minor':
      // If this is a pre-minor version, bump up to the same minor version.
      // Otherwise increment minor.
      // 1.2.0-5 bumps to 1.2.0
      // 1.2.1 bumps to 1.3.0
      if (this.patch !== 0 || this.prerelease.length === 0) {
        this.minor++
      }
      this.patch = 0
      this.prerelease = []
      break
    case 'patch':
      // If this is not a pre-release version, it will increment the patch.
      // If it is a pre-release it will bump up to the same patch version.
      // 1.2.0-5 patches to 1.2.0
      // 1.2.0 patches to 1.2.1
      if (this.prerelease.length === 0) {
        this.patch++
      }
      this.prerelease = []
      break
    // This probably shouldn't be used publicly.
    // 1.0.0 "pre" would become 1.0.0-0 which is the wrong direction.
    case 'pre':
      if (this.prerelease.length === 0) {
        this.prerelease = [0]
      } else {
        var i = this.prerelease.length
        while (--i >= 0) {
          if (typeof this.prerelease[i] === 'number') {
            this.prerelease[i]++
            i = -2
          }
        }
        if (i === -1) {
          // didn't increment anything
          this.prerelease.push(0)
        }
      }
      if (identifier) {
        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,
        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0
        if (this.prerelease[0] === identifier) {
          if (isNaN(this.prerelease[1])) {
            this.prerelease = [identifier, 0]
          }
        } else {
          this.prerelease = [identifier, 0]
        }
      }
      break

    default:
      throw new Error('invalid increment argument: ' + release)
  }
  this.format()
  this.raw = this.version
  return this
}

exports.inc = inc
function inc (version, release, loose, identifier) {
  if (typeof (loose) === 'string') {
    identifier = loose
    loose = undefined
  }

  try {
    return new SemVer(version, loose).inc(release, identifier).version
  } catch (er) {
    return null
  }
}

exports.diff = diff
function diff (version1, version2) {
  if (eq(version1, version2)) {
    return null
  } else {
    var v1 = parse(version1)
    var v2 = parse(version2)
    var prefix = ''
    if (v1.prerelease.length || v2.prerelease.length) {
      prefix = 'pre'
      var defaultResult = 'prerelease'
    }
    for (var key in v1) {
      if (key === 'major' || key === 'minor' || key === 'patch') {
        if (v1[key] !== v2[key]) {
          return prefix + key
        }
      }
    }
    return defaultResult // may be undefined
  }
}

exports.compareIdentifiers = compareIdentifiers

var numeric = /^[0-9]+$/
function compareIdentifiers (a, b) {
  var anum = numeric.test(a)
  var bnum = numeric.test(b)

  if (anum && bnum) {
    a = +a
    b = +b
  }

  return a === b ? 0
    : (anum && !bnum) ? -1
    : (bnum && !anum) ? 1
    : a < b ? -1
    : 1
}

exports.rcompareIdentifiers = rcompareIdentifiers
function rcompareIdentifiers (a, b) {
  return compareIdentifiers(b, a)
}

exports.major = major
function major (a, loose) {
  return new SemVer(a, loose).major
}

exports.minor = minor
function minor (a, loose) {
  return new SemVer(a, loose).minor
}

exports.patch = patch
function patch (a, loose) {
  return new SemVer(a, loose).patch
}

exports.compare = compare
function compare (a, b, loose) {
  return new SemVer(a, loose).compare(new SemVer(b, loose))
}

exports.compareLoose = compareLoose
function compareLoose (a, b) {
  return compare(a, b, true)
}

exports.rcompare = rcompare
function rcompare (a, b, loose) {
  return compare(b, a, loose)
}

exports.sort = sort
function sort (list, loose) {
  return list.sort(function (a, b) {
    return exports.compare(a, b, loose)
  })
}

exports.rsort = rsort
function rsort (list, loose) {
  return list.sort(function (a, b) {
    return exports.rcompare(a, b, loose)
  })
}

exports.gt = gt
function gt (a, b, loose) {
  return compare(a, b, loose) > 0
}

exports.lt = lt
function lt (a, b, loose) {
  return compare(a, b, loose) < 0
}

exports.eq = eq
function eq (a, b, loose) {
  return compare(a, b, loose) === 0
}

exports.neq = neq
function neq (a, b, loose) {
  return compare(a, b, loose) !== 0
}

exports.gte = gte
function gte (a, b, loose) {
  return compare(a, b, loose) >= 0
}

exports.lte = lte
function lte (a, b, loose) {
  return compare(a, b, loose) <= 0
}

exports.cmp = cmp
function cmp (a, op, b, loose) {
  switch (op) {
    case '===':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a === b

    case '!==':
      if (typeof a === 'object')
        a = a.version
      if (typeof b === 'object')
        b = b.version
      return a !== b

    case '':
    case '=':
    case '==':
      return eq(a, b, loose)

    case '!=':
      return neq(a, b, loose)

    case '>':
      return gt(a, b, loose)

    case '>=':
      return gte(a, b, loose)

    case '<':
      return lt(a, b, loose)

    case '<=':
      return lte(a, b, loose)

    default:
      throw new TypeError('Invalid operator: ' + op)
  }
}

exports.Comparator = Comparator
function Comparator (comp, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (comp instanceof Comparator) {
    if (comp.loose === !!options.loose) {
      return comp
    } else {
      comp = comp.value
    }
  }

  if (!(this instanceof Comparator)) {
    return new Comparator(comp, options)
  }

  debug('comparator', comp, options)
  this.options = options
  this.loose = !!options.loose
  this.parse(comp)

  if (this.semver === ANY) {
    this.value = ''
  } else {
    this.value = this.operator + this.semver.version
  }

  debug('comp', this)
}

var ANY = {}
Comparator.prototype.parse = function (comp) {
  var r = this.options.loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
  var m = comp.match(r)

  if (!m) {
    throw new TypeError('Invalid comparator: ' + comp)
  }

  this.operator = m[1]
  if (this.operator === '=') {
    this.operator = ''
  }

  // if it literally is just '>' or '' then allow anything.
  if (!m[2]) {
    this.semver = ANY
  } else {
    this.semver = new SemVer(m[2], this.options.loose)
  }
}

Comparator.prototype.toString = function () {
  return this.value
}

Comparator.prototype.test = function (version) {
  debug('Comparator.test', version, this.options.loose)

  if (this.semver === ANY) {
    return true
  }

  if (typeof version === 'string') {
    version = new SemVer(version, this.options)
  }

  return cmp(version, this.operator, this.semver, this.options)
}

Comparator.prototype.intersects = function (comp, options) {
  if (!(comp instanceof Comparator)) {
    throw new TypeError('a Comparator is required')
  }

  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  var rangeTmp

  if (this.operator === '') {
    rangeTmp = new Range(comp.value, options)
    return satisfies(this.value, rangeTmp, options)
  } else if (comp.operator === '') {
    rangeTmp = new Range(this.value, options)
    return satisfies(comp.semver, rangeTmp, options)
  }

  var sameDirectionIncreasing =
    (this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '>=' || comp.operator === '>')
  var sameDirectionDecreasing =
    (this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '<=' || comp.operator === '<')
  var sameSemVer = this.semver.version === comp.semver.version
  var differentDirectionsInclusive =
    (this.operator === '>=' || this.operator === '<=') &&
    (comp.operator === '>=' || comp.operator === '<=')
  var oppositeDirectionsLessThan =
    cmp(this.semver, '<', comp.semver, options) &&
    ((this.operator === '>=' || this.operator === '>') &&
    (comp.operator === '<=' || comp.operator === '<'))
  var oppositeDirectionsGreaterThan =
    cmp(this.semver, '>', comp.semver, options) &&
    ((this.operator === '<=' || this.operator === '<') &&
    (comp.operator === '>=' || comp.operator === '>'))

  return sameDirectionIncreasing || sameDirectionDecreasing ||
    (sameSemVer && differentDirectionsInclusive) ||
    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan
}

exports.Range = Range
function Range (range, options) {
  if (!options || typeof options !== 'object') {
    options = {
      loose: !!options,
      includePrerelease: false
    }
  }

  if (range instanceof Range) {
    if (range.loose === !!options.loose &&
        range.includePrerelease === !!options.includePrerelease) {
      return range
    } else {
      return new Range(range.raw, options)
    }
  }

  if (range instanceof Comparator) {
    return new Range(range.value, options)
  }

  if (!(this instanceof Range)) {
    return new Range(range, options)
  }

  this.options = options
  this.loose = !!options.loose
  this.includePrerelease = !!options.includePrerelease

  // First, split based on boolean or ||
  this.raw = range
  this.set = range.split(/\s*\|\|\s*/).map(function (range) {
    return this.parseRange(range.trim())
  }, this).filter(function (c) {
    // throw out any that are not relevant for whatever reason
    return c.length
  })

  if (!this.set.length) {
    throw new TypeError('Invalid SemVer Range: ' + range)
  }

  this.format()
}

Range.prototype.format = function () {
  this.range = this.set.map(function (comps) {
    return comps.join(' ').trim()
  }).join('||').trim()
  return this.range
}

Range.prototype.toString = function () {
  return this.range
}

Range.prototype.parseRange = function (range) {
  var loose = this.options.loose
  range = range.trim()
  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`
  var hr = loose ? re[HYPHENRANGELOOSE] : re[HYPHENRANGE]
  range = range.replace(hr, hyphenReplace)
  debug('hyphen replace', range)
  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`
  range = range.replace(re[COMPARATORTRIM], comparatorTrimReplace)
  debug('comparator trim', range, re[COMPARATORTRIM])

  // `~ 1.2.3` => `~1.2.3`
  range = range.replace(re[TILDETRIM], tildeTrimReplace)

  // `^ 1.2.3` => `^1.2.3`
  range = range.replace(re[CARETTRIM], caretTrimReplace)

  // normalize spaces
  range = range.split(/\s+/).join(' ')

  // At this point, the range is completely trimmed and
  // ready to be split into comparators.

  var compRe = loose ? re[COMPARATORLOOSE] : re[COMPARATOR]
  var set = range.split(' ').map(function (comp) {
    return parseComparator(comp, this.options)
  }, this).join(' ').split(/\s+/)
  if (this.options.loose) {
    // in loose mode, throw out any that are not valid comparators
    set = set.filter(function (comp) {
      return !!comp.match(compRe)
    })
  }
  set = set.map(function (comp) {
    return new Comparator(comp, this.options)
  }, this)

  return set
}

Range.prototype.intersects = function (range, options) {
  if (!(range instanceof Range)) {
    throw new TypeError('a Range is required')
  }

  return this.set.some(function (thisComparators) {
    return thisComparators.every(function (thisComparator) {
      return range.set.some(function (rangeComparators) {
        return rangeComparators.every(function (rangeComparator) {
          return thisComparator.intersects(rangeComparator, options)
        })
      })
    })
  })
}

// Mostly just for testing and legacy API reasons
exports.toComparators = toComparators
function toComparators (range, options) {
  return new Range(range, options).set.map(function (comp) {
    return comp.map(function (c) {
      return c.value
    }).join(' ').trim().split(' ')
  })
}

// comprised of xranges, tildes, stars, and gtlt's at this point.
// already replaced the hyphen ranges
// turn into a set of JUST comparators.
function parseComparator (comp, options) {
  debug('comp', comp, options)
  comp = replaceCarets(comp, options)
  debug('caret', comp)
  comp = replaceTildes(comp, options)
  debug('tildes', comp)
  comp = replaceXRanges(comp, options)
  debug('xrange', comp)
  comp = replaceStars(comp, options)
  debug('stars', comp)
  return comp
}

function isX (id) {
  return !id || id.toLowerCase() === 'x' || id === '*'
}

// ~, ~> --> * (any, kinda silly)
// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0
// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0
// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0
// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0
// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0
function replaceTildes (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceTilde(comp, options)
  }).join(' ')
}

function replaceTilde (comp, options) {
  var r = options.loose ? re[TILDELOOSE] : re[TILDE]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('tilde', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      // ~1.2 == >=1.2.0 <1.3.0
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    } else if (pr) {
      debug('replaceTilde pr', pr)
      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
            ' <' + M + '.' + (+m + 1) + '.0'
    } else {
      // ~1.2.3 == >=1.2.3 <1.3.0
      ret = '>=' + M + '.' + m + '.' + p +
            ' <' + M + '.' + (+m + 1) + '.0'
    }

    debug('tilde return', ret)
    return ret
  })
}

// ^ --> * (any, kinda silly)
// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0
// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0
// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0
// ^1.2.3 --> >=1.2.3 <2.0.0
// ^1.2.0 --> >=1.2.0 <2.0.0
function replaceCarets (comp, options) {
  return comp.trim().split(/\s+/).map(function (comp) {
    return replaceCaret(comp, options)
  }).join(' ')
}

function replaceCaret (comp, options) {
  debug('caret', comp, options)
  var r = options.loose ? re[CARETLOOSE] : re[CARET]
  return comp.replace(r, function (_, M, m, p, pr) {
    debug('caret', comp, _, M, m, p, pr)
    var ret

    if (isX(M)) {
      ret = ''
    } else if (isX(m)) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (isX(p)) {
      if (M === '0') {
        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
      } else {
        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'
      }
    } else if (pr) {
      debug('replaceCaret pr', pr)
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +
              ' <' + (+M + 1) + '.0.0'
      }
    } else {
      debug('no pr')
      if (M === '0') {
        if (m === '0') {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + m + '.' + (+p + 1)
        } else {
          ret = '>=' + M + '.' + m + '.' + p +
                ' <' + M + '.' + (+m + 1) + '.0'
        }
      } else {
        ret = '>=' + M + '.' + m + '.' + p +
              ' <' + (+M + 1) + '.0.0'
      }
    }

    debug('caret return', ret)
    return ret
  })
}

function replaceXRanges (comp, options) {
  debug('replaceXRanges', comp, options)
  return comp.split(/\s+/).map(function (comp) {
    return replaceXRange(comp, options)
  }).join(' ')
}

function replaceXRange (comp, options) {
  comp = comp.trim()
  var r = options.loose ? re[XRANGELOOSE] : re[XRANGE]
  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {
    debug('xRange', comp, ret, gtlt, M, m, p, pr)
    var xM = isX(M)
    var xm = xM || isX(m)
    var xp = xm || isX(p)
    var anyX = xp

    if (gtlt === '=' && anyX) {
      gtlt = ''
    }

    if (xM) {
      if (gtlt === '>' || gtlt === '<') {
        // nothing is allowed
        ret = '<0.0.0'
      } else {
        // nothing is forbidden
        ret = '*'
      }
    } else if (gtlt && anyX) {
      // we know patch is an x, because we have any x at all.
      // replace X with 0
      if (xm) {
        m = 0
      }
      p = 0

      if (gtlt === '>') {
        // >1 => >=2.0.0
        // >1.2 => >=1.3.0
        // >1.2.3 => >= 1.2.4
        gtlt = '>='
        if (xm) {
          M = +M + 1
          m = 0
          p = 0
        } else {
          m = +m + 1
          p = 0
        }
      } else if (gtlt === '<=') {
        // <=0.7.x is actually <0.8.0, since any 0.7.x should
        // pass.  Similarly, <=7.x is actually <8.0.0, etc.
        gtlt = '<'
        if (xm) {
          M = +M + 1
        } else {
          m = +m + 1
        }
      }

      ret = gtlt + M + '.' + m + '.' + p
    } else if (xm) {
      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'
    } else if (xp) {
      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'
    }

    debug('xRange return', ret)

    return ret
  })
}

// Because * is AND-ed with everything else in the comparator,
// and '' means "any version", just remove the *s entirely.
function replaceStars (comp, options) {
  debug('replaceStars', comp, options)
  // Looseness is ignored here.  star is always as loose as it gets!
  return comp.trim().replace(re[STAR], '')
}

// This function is passed to string.replace(re[HYPHENRANGE])
// M, m, patch, prerelease, build
// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5
// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do
// 1.2 - 3.4 => >=1.2.0 <3.5.0
function hyphenReplace ($0,
  from, fM, fm, fp, fpr, fb,
  to, tM, tm, tp, tpr, tb) {
  if (isX(fM)) {
    from = ''
  } else if (isX(fm)) {
    from = '>=' + fM + '.0.0'
  } else if (isX(fp)) {
    from = '>=' + fM + '.' + fm + '.0'
  } else {
    from = '>=' + from
  }

  if (isX(tM)) {
    to = ''
  } else if (isX(tm)) {
    to = '<' + (+tM + 1) + '.0.0'
  } else if (isX(tp)) {
    to = '<' + tM + '.' + (+tm + 1) + '.0'
  } else if (tpr) {
    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr
  } else {
    to = '<=' + to
  }

  return (from + ' ' + to).trim()
}

// if ANY of the sets match ALL of its comparators, then pass
Range.prototype.test = function (version) {
  if (!version) {
    return false
  }

  if (typeof version === 'string') {
    version = new SemVer(version, this.options)
  }

  for (var i = 0; i < this.set.length; i++) {
    if (testSet(this.set[i], version, this.options)) {
      return true
    }
  }
  return false
}

function testSet (set, version, options) {
  for (var i = 0; i < set.length; i++) {
    if (!set[i].test(version)) {
      return false
    }
  }

  if (version.prerelease.length && !options.includePrerelease) {
    // Find the set of versions that are allowed to have prereleases
    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0
    // That should allow `1.2.3-pr.2` to pass.
    // However, `1.2.4-alpha.notready` should NOT be allowed,
    // even though it's within the range set by the comparators.
    for (i = 0; i < set.length; i++) {
      debug(set[i].semver)
      if (set[i].semver === ANY) {
        continue
      }

      if (set[i].semver.prerelease.length > 0) {
        var allowed = set[i].semver
        if (allowed.major === version.major &&
            allowed.minor === version.minor &&
            allowed.patch === version.patch) {
          return true
        }
      }
    }

    // Version has a -pre, but it's not one of the ones we like.
    return false
  }

  return true
}

exports.satisfies = satisfies
function satisfies (version, range, options) {
  try {
    range = new Range(range, options)
  } catch (er) {
    return false
  }
  return range.test(version)
}

exports.maxSatisfying = maxSatisfying
function maxSatisfying (versions, range, options) {
  var max = null
  var maxSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!max || maxSV.compare(v) === -1) {
        // compare(max, v, true)
        max = v
        maxSV = new SemVer(max, options)
      }
    }
  })
  return max
}

exports.minSatisfying = minSatisfying
function minSatisfying (versions, range, options) {
  var min = null
  var minSV = null
  try {
    var rangeObj = new Range(range, options)
  } catch (er) {
    return null
  }
  versions.forEach(function (v) {
    if (rangeObj.test(v)) {
      // satisfies(v, range, options)
      if (!min || minSV.compare(v) === 1) {
        // compare(min, v, true)
        min = v
        minSV = new SemVer(min, options)
      }
    }
  })
  return min
}

exports.minVersion = minVersion
function minVersion (range, loose) {
  range = new Range(range, loose)

  var minver = new SemVer('0.0.0')
  if (range.test(minver)) {
    return minver
  }

  minver = new SemVer('0.0.0-0')
  if (range.test(minver)) {
    return minver
  }

  minver = null
  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    comparators.forEach(function (comparator) {
      // Clone to avoid manipulating the comparator's semver object.
      var compver = new SemVer(comparator.semver.version)
      switch (comparator.operator) {
        case '>':
          if (compver.prerelease.length === 0) {
            compver.patch++
          } else {
            compver.prerelease.push(0)
          }
          compver.raw = compver.format()
          /* fallthrough */
        case '':
        case '>=':
          if (!minver || gt(minver, compver)) {
            minver = compver
          }
          break
        case '<':
        case '<=':
          /* Ignore maximum versions */
          break
        /* istanbul ignore next */
        default:
          throw new Error('Unexpected operation: ' + comparator.operator)
      }
    })
  }

  if (minver && range.test(minver)) {
    return minver
  }

  return null
}

exports.validRange = validRange
function validRange (range, options) {
  try {
    // Return '*' instead of '' so that truthiness works.
    // This will throw if it's invalid anyway
    return new Range(range, options).range || '*'
  } catch (er) {
    return null
  }
}

// Determine if version is less than all the versions possible in the range
exports.ltr = ltr
function ltr (version, range, options) {
  return outside(version, range, '<', options)
}

// Determine if version is greater than all the versions possible in the range.
exports.gtr = gtr
function gtr (version, range, options) {
  return outside(version, range, '>', options)
}

exports.outside = outside
function outside (version, range, hilo, options) {
  version = new SemVer(version, options)
  range = new Range(range, options)

  var gtfn, ltefn, ltfn, comp, ecomp
  switch (hilo) {
    case '>':
      gtfn = gt
      ltefn = lte
      ltfn = lt
      comp = '>'
      ecomp = '>='
      break
    case '<':
      gtfn = lt
      ltefn = gte
      ltfn = gt
      comp = '<'
      ecomp = '<='
      break
    default:
      throw new TypeError('Must provide a hilo val of "<" or ">"')
  }

  // If it satisifes the range it is not outside
  if (satisfies(version, range, options)) {
    return false
  }

  // From now on, variable terms are as if we're in "gtr" mode.
  // but note that everything is flipped for the "ltr" function.

  for (var i = 0; i < range.set.length; ++i) {
    var comparators = range.set[i]

    var high = null
    var low = null

    comparators.forEach(function (comparator) {
      if (comparator.semver === ANY) {
        comparator = new Comparator('>=0.0.0')
      }
      high = high || comparator
      low = low || comparator
      if (gtfn(comparator.semver, high.semver, options)) {
        high = comparator
      } else if (ltfn(comparator.semver, low.semver, options)) {
        low = comparator
      }
    })

    // If the edge version comparator has a operator then our version
    // isn't outside it
    if (high.operator === comp || high.operator === ecomp) {
      return false
    }

    // If the lowest version comparator has an operator and our version
    // is less than it then it isn't higher than the range
    if ((!low.operator || low.operator === comp) &&
        ltefn(version, low.semver)) {
      return false
    } else if (low.operator === ecomp && ltfn(version, low.semver)) {
      return false
    }
  }
  return true
}

exports.prerelease = prerelease
function prerelease (version, options) {
  var parsed = parse(version, options)
  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null
}

exports.intersects = intersects
function intersects (r1, r2, options) {
  r1 = new Range(r1, options)
  r2 = new Range(r2, options)
  return r1.intersects(r2)
}

exports.coerce = coerce
function coerce (version) {
  if (version instanceof SemVer) {
    return version
  }

  if (typeof version !== 'string') {
    return null
  }

  var match = version.match(re[COERCE])

  if (match == null) {
    return null
  }

  return parse(match[1] +
    '.' + (match[2] || '0') +
    '.' + (match[3] || '0'))
}


/***/ }),

/***/ 7032:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

var shebangRegex = __nccwpck_require__(2638);

module.exports = function (str) {
	var match = str.match(shebangRegex);

	if (!match) {
		return null;
	}

	var arr = match[0].replace(/#! ?/, '').split(' ');
	var bin = arr[0].split('/').pop();
	var arg = arr[1];

	return (bin === 'env' ?
		arg :
		bin + (arg ? ' ' + arg : '')
	);
};


/***/ }),

/***/ 2638:
/***/ ((module) => {

"use strict";

module.exports = /^#!.*/;


/***/ }),

/***/ 4931:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

// Note: since nyc uses this module to output coverage, any lines
// that are in the direct sync flow of nyc's outputCoverage are
// ignored, since we can never get coverage for them.
var assert = __nccwpck_require__(2357)
var signals = __nccwpck_require__(3710)
var isWin = /^win/i.test(process.platform)

var EE = __nccwpck_require__(8614)
/* istanbul ignore if */
if (typeof EE !== 'function') {
  EE = EE.EventEmitter
}

var emitter
if (process.__signal_exit_emitter__) {
  emitter = process.__signal_exit_emitter__
} else {
  emitter = process.__signal_exit_emitter__ = new EE()
  emitter.count = 0
  emitter.emitted = {}
}

// Because this emitter is a global, we have to check to see if a
// previous version of this library failed to enable infinite listeners.
// I know what you're about to say.  But literally everything about
// signal-exit is a compromise with evil.  Get used to it.
if (!emitter.infinite) {
  emitter.setMaxListeners(Infinity)
  emitter.infinite = true
}

module.exports = function (cb, opts) {
  assert.equal(typeof cb, 'function', 'a callback must be provided for exit handler')

  if (loaded === false) {
    load()
  }

  var ev = 'exit'
  if (opts && opts.alwaysLast) {
    ev = 'afterexit'
  }

  var remove = function () {
    emitter.removeListener(ev, cb)
    if (emitter.listeners('exit').length === 0 &&
        emitter.listeners('afterexit').length === 0) {
      unload()
    }
  }
  emitter.on(ev, cb)

  return remove
}

module.exports.unload = unload
function unload () {
  if (!loaded) {
    return
  }
  loaded = false

  signals.forEach(function (sig) {
    try {
      process.removeListener(sig, sigListeners[sig])
    } catch (er) {}
  })
  process.emit = originalProcessEmit
  process.reallyExit = originalProcessReallyExit
  emitter.count -= 1
}

function emit (event, code, signal) {
  if (emitter.emitted[event]) {
    return
  }
  emitter.emitted[event] = true
  emitter.emit(event, code, signal)
}

// { <signal>: <listener fn>, ... }
var sigListeners = {}
signals.forEach(function (sig) {
  sigListeners[sig] = function listener () {
    // If there are no other listeners, an exit is coming!
    // Simplest way: remove us and then re-send the signal.
    // We know that this will kill the process, so we can
    // safely emit now.
    var listeners = process.listeners(sig)
    if (listeners.length === emitter.count) {
      unload()
      emit('exit', null, sig)
      /* istanbul ignore next */
      emit('afterexit', null, sig)
      /* istanbul ignore next */
      if (isWin && sig === 'SIGHUP') {
        // "SIGHUP" throws an `ENOSYS` error on Windows,
        // so use a supported signal instead
        sig = 'SIGINT'
      }
      process.kill(process.pid, sig)
    }
  }
})

module.exports.signals = function () {
  return signals
}

module.exports.load = load

var loaded = false

function load () {
  if (loaded) {
    return
  }
  loaded = true

  // This is the number of onSignalExit's that are in play.
  // It's important so that we can count the correct number of
  // listeners on signals, and don't wait for the other one to
  // handle it instead of us.
  emitter.count += 1

  signals = signals.filter(function (sig) {
    try {
      process.on(sig, sigListeners[sig])
      return true
    } catch (er) {
      return false
    }
  })

  process.emit = processEmit
  process.reallyExit = processReallyExit
}

var originalProcessReallyExit = process.reallyExit
function processReallyExit (code) {
  process.exitCode = code || 0
  emit('exit', process.exitCode, null)
  /* istanbul ignore next */
  emit('afterexit', process.exitCode, null)
  /* istanbul ignore next */
  originalProcessReallyExit.call(process, process.exitCode)
}

var originalProcessEmit = process.emit
function processEmit (ev, arg) {
  if (ev === 'exit') {
    if (arg !== undefined) {
      process.exitCode = arg
    }
    var ret = originalProcessEmit.apply(this, arguments)
    emit('exit', process.exitCode, null)
    /* istanbul ignore next */
    emit('afterexit', process.exitCode, null)
    return ret
  } else {
    return originalProcessEmit.apply(this, arguments)
  }
}


/***/ }),

/***/ 3710:
/***/ ((module) => {

// This is not the set of all possible signals.
//
// It IS, however, the set of all signals that trigger
// an exit on either Linux or BSD systems.  Linux is a
// superset of the signal names supported on BSD, and
// the unknown signals just fail to register, so we can
// catch that easily enough.
//
// Don't bother with SIGKILL.  It's uncatchable, which
// means that we can't fire any callbacks anyway.
//
// If a user does happen to register a handler on a non-
// fatal signal like SIGWINCH or something, and then
// exit, it'll end up firing `process.emit('exit')`, so
// the handler will be fired anyway.
//
// SIGBUS, SIGFPE, SIGSEGV and SIGILL, when not raised
// artificially, inherently leave the process in a
// state from which it is not safe to try and enter JS
// listeners.
module.exports = [
  'SIGABRT',
  'SIGALRM',
  'SIGHUP',
  'SIGINT',
  'SIGTERM'
]

if (process.platform !== 'win32') {
  module.exports.push(
    'SIGVTALRM',
    'SIGXCPU',
    'SIGXFSZ',
    'SIGUSR2',
    'SIGTRAP',
    'SIGSYS',
    'SIGQUIT',
    'SIGIOT'
    // should detect profiler and enable/disable accordingly.
    // see #21
    // 'SIGPROF'
  )
}

if (process.platform === 'linux') {
  module.exports.push(
    'SIGIO',
    'SIGPOLL',
    'SIGPWR',
    'SIGSTKFLT',
    'SIGUNUSED'
  )
}


/***/ }),

/***/ 5515:
/***/ ((module) => {

"use strict";

module.exports = function (x) {
	var lf = typeof x === 'string' ? '\n' : '\n'.charCodeAt();
	var cr = typeof x === 'string' ? '\r' : '\r'.charCodeAt();

	if (x[x.length - 1] === lf) {
		x = x.slice(0, x.length - 1);
	}

	if (x[x.length - 1] === cr) {
		x = x.slice(0, x.length - 1);
	}

	return x;
};


/***/ }),

/***/ 4256:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


var punycode = __nccwpck_require__(4213);
var mappingTable = __nccwpck_require__(68);

var PROCESSING_OPTIONS = {
  TRANSITIONAL: 0,
  NONTRANSITIONAL: 1
};

function normalize(str) { // fix bug in v8
  return str.split('\u0000').map(function (s) { return s.normalize('NFC'); }).join('\u0000');
}

function findStatus(val) {
  var start = 0;
  var end = mappingTable.length - 1;

  while (start <= end) {
    var mid = Math.floor((start + end) / 2);

    var target = mappingTable[mid];
    if (target[0][0] <= val && target[0][1] >= val) {
      return target;
    } else if (target[0][0] > val) {
      end = mid - 1;
    } else {
      start = mid + 1;
    }
  }

  return null;
}

var regexAstralSymbols = /[\uD800-\uDBFF][\uDC00-\uDFFF]/g;

function countSymbols(string) {
  return string
    // replace every surrogate pair with a BMP symbol
    .replace(regexAstralSymbols, '_')
    // then get the length
    .length;
}

function mapChars(domain_name, useSTD3, processing_option) {
  var hasError = false;
  var processed = "";

  var len = countSymbols(domain_name);
  for (var i = 0; i < len; ++i) {
    var codePoint = domain_name.codePointAt(i);
    var status = findStatus(codePoint);

    switch (status[1]) {
      case "disallowed":
        hasError = true;
        processed += String.fromCodePoint(codePoint);
        break;
      case "ignored":
        break;
      case "mapped":
        processed += String.fromCodePoint.apply(String, status[2]);
        break;
      case "deviation":
        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {
          processed += String.fromCodePoint.apply(String, status[2]);
        } else {
          processed += String.fromCodePoint(codePoint);
        }
        break;
      case "valid":
        processed += String.fromCodePoint(codePoint);
        break;
      case "disallowed_STD3_mapped":
        if (useSTD3) {
          hasError = true;
          processed += String.fromCodePoint(codePoint);
        } else {
          processed += String.fromCodePoint.apply(String, status[2]);
        }
        break;
      case "disallowed_STD3_valid":
        if (useSTD3) {
          hasError = true;
        }

        processed += String.fromCodePoint(codePoint);
        break;
    }
  }

  return {
    string: processed,
    error: hasError
  };
}

var combiningMarksRegex = /[\u0300-\u036F\u0483-\u0489\u0591-\u05BD\u05BF\u05C1\u05C2\u05C4\u05C5\u05C7\u0610-\u061A\u064B-\u065F\u0670\u06D6-\u06DC\u06DF-\u06E4\u06E7\u06E8\u06EA-\u06ED\u0711\u0730-\u074A\u07A6-\u07B0\u07EB-\u07F3\u0816-\u0819\u081B-\u0823\u0825-\u0827\u0829-\u082D\u0859-\u085B\u08E4-\u0903\u093A-\u093C\u093E-\u094F\u0951-\u0957\u0962\u0963\u0981-\u0983\u09BC\u09BE-\u09C4\u09C7\u09C8\u09CB-\u09CD\u09D7\u09E2\u09E3\u0A01-\u0A03\u0A3C\u0A3E-\u0A42\u0A47\u0A48\u0A4B-\u0A4D\u0A51\u0A70\u0A71\u0A75\u0A81-\u0A83\u0ABC\u0ABE-\u0AC5\u0AC7-\u0AC9\u0ACB-\u0ACD\u0AE2\u0AE3\u0B01-\u0B03\u0B3C\u0B3E-\u0B44\u0B47\u0B48\u0B4B-\u0B4D\u0B56\u0B57\u0B62\u0B63\u0B82\u0BBE-\u0BC2\u0BC6-\u0BC8\u0BCA-\u0BCD\u0BD7\u0C00-\u0C03\u0C3E-\u0C44\u0C46-\u0C48\u0C4A-\u0C4D\u0C55\u0C56\u0C62\u0C63\u0C81-\u0C83\u0CBC\u0CBE-\u0CC4\u0CC6-\u0CC8\u0CCA-\u0CCD\u0CD5\u0CD6\u0CE2\u0CE3\u0D01-\u0D03\u0D3E-\u0D44\u0D46-\u0D48\u0D4A-\u0D4D\u0D57\u0D62\u0D63\u0D82\u0D83\u0DCA\u0DCF-\u0DD4\u0DD6\u0DD8-\u0DDF\u0DF2\u0DF3\u0E31\u0E34-\u0E3A\u0E47-\u0E4E\u0EB1\u0EB4-\u0EB9\u0EBB\u0EBC\u0EC8-\u0ECD\u0F18\u0F19\u0F35\u0F37\u0F39\u0F3E\u0F3F\u0F71-\u0F84\u0F86\u0F87\u0F8D-\u0F97\u0F99-\u0FBC\u0FC6\u102B-\u103E\u1056-\u1059\u105E-\u1060\u1062-\u1064\u1067-\u106D\u1071-\u1074\u1082-\u108D\u108F\u109A-\u109D\u135D-\u135F\u1712-\u1714\u1732-\u1734\u1752\u1753\u1772\u1773\u17B4-\u17D3\u17DD\u180B-\u180D\u18A9\u1920-\u192B\u1930-\u193B\u19B0-\u19C0\u19C8\u19C9\u1A17-\u1A1B\u1A55-\u1A5E\u1A60-\u1A7C\u1A7F\u1AB0-\u1ABE\u1B00-\u1B04\u1B34-\u1B44\u1B6B-\u1B73\u1B80-\u1B82\u1BA1-\u1BAD\u1BE6-\u1BF3\u1C24-\u1C37\u1CD0-\u1CD2\u1CD4-\u1CE8\u1CED\u1CF2-\u1CF4\u1CF8\u1CF9\u1DC0-\u1DF5\u1DFC-\u1DFF\u20D0-\u20F0\u2CEF-\u2CF1\u2D7F\u2DE0-\u2DFF\u302A-\u302F\u3099\u309A\uA66F-\uA672\uA674-\uA67D\uA69F\uA6F0\uA6F1\uA802\uA806\uA80B\uA823-\uA827\uA880\uA881\uA8B4-\uA8C4\uA8E0-\uA8F1\uA926-\uA92D\uA947-\uA953\uA980-\uA983\uA9B3-\uA9C0\uA9E5\uAA29-\uAA36\uAA43\uAA4C\uAA4D\uAA7B-\uAA7D\uAAB0\uAAB2-\uAAB4\uAAB7\uAAB8\uAABE\uAABF\uAAC1\uAAEB-\uAAEF\uAAF5\uAAF6\uABE3-\uABEA\uABEC\uABED\uFB1E\uFE00-\uFE0F\uFE20-\uFE2D]|\uD800[\uDDFD\uDEE0\uDF76-\uDF7A]|\uD802[\uDE01-\uDE03\uDE05\uDE06\uDE0C-\uDE0F\uDE38-\uDE3A\uDE3F\uDEE5\uDEE6]|\uD804[\uDC00-\uDC02\uDC38-\uDC46\uDC7F-\uDC82\uDCB0-\uDCBA\uDD00-\uDD02\uDD27-\uDD34\uDD73\uDD80-\uDD82\uDDB3-\uDDC0\uDE2C-\uDE37\uDEDF-\uDEEA\uDF01-\uDF03\uDF3C\uDF3E-\uDF44\uDF47\uDF48\uDF4B-\uDF4D\uDF57\uDF62\uDF63\uDF66-\uDF6C\uDF70-\uDF74]|\uD805[\uDCB0-\uDCC3\uDDAF-\uDDB5\uDDB8-\uDDC0\uDE30-\uDE40\uDEAB-\uDEB7]|\uD81A[\uDEF0-\uDEF4\uDF30-\uDF36]|\uD81B[\uDF51-\uDF7E\uDF8F-\uDF92]|\uD82F[\uDC9D\uDC9E]|\uD834[\uDD65-\uDD69\uDD6D-\uDD72\uDD7B-\uDD82\uDD85-\uDD8B\uDDAA-\uDDAD\uDE42-\uDE44]|\uD83A[\uDCD0-\uDCD6]|\uDB40[\uDD00-\uDDEF]/;

function validateLabel(label, processing_option) {
  if (label.substr(0, 4) === "xn--") {
    label = punycode.toUnicode(label);
    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;
  }

  var error = false;

  if (normalize(label) !== label ||
      (label[3] === "-" && label[4] === "-") ||
      label[0] === "-" || label[label.length - 1] === "-" ||
      label.indexOf(".") !== -1 ||
      label.search(combiningMarksRegex) === 0) {
    error = true;
  }

  var len = countSymbols(label);
  for (var i = 0; i < len; ++i) {
    var status = findStatus(label.codePointAt(i));
    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== "valid") ||
        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&
         status[1] !== "valid" && status[1] !== "deviation")) {
      error = true;
      break;
    }
  }

  return {
    label: label,
    error: error
  };
}

function processing(domain_name, useSTD3, processing_option) {
  var result = mapChars(domain_name, useSTD3, processing_option);
  result.string = normalize(result.string);

  var labels = result.string.split(".");
  for (var i = 0; i < labels.length; ++i) {
    try {
      var validation = validateLabel(labels[i]);
      labels[i] = validation.label;
      result.error = result.error || validation.error;
    } catch(e) {
      result.error = true;
    }
  }

  return {
    string: labels.join("."),
    error: result.error
  };
}

module.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {
  var result = processing(domain_name, useSTD3, processing_option);
  var labels = result.string.split(".");
  labels = labels.map(function(l) {
    try {
      return punycode.toASCII(l);
    } catch(e) {
      result.error = true;
      return l;
    }
  });

  if (verifyDnsLength) {
    var total = labels.slice(0, labels.length - 1).join(".").length;
    if (total.length > 253 || total.length === 0) {
      result.error = true;
    }

    for (var i=0; i < labels.length; ++i) {
      if (labels.length > 63 || labels.length === 0) {
        result.error = true;
        break;
      }
    }
  }

  if (result.error) return null;
  return labels.join(".");
};

module.exports.toUnicode = function(domain_name, useSTD3) {
  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);

  return {
    domain: result.string,
    error: result.error
  };
};

module.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;


/***/ }),

/***/ 4351:
/***/ ((module) => {

/******************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/* global global, define, System, Reflect, Promise */
var __extends;
var __assign;
var __rest;
var __decorate;
var __param;
var __esDecorate;
var __runInitializers;
var __propKey;
var __setFunctionName;
var __metadata;
var __awaiter;
var __generator;
var __exportStar;
var __values;
var __read;
var __spread;
var __spreadArrays;
var __spreadArray;
var __await;
var __asyncGenerator;
var __asyncDelegator;
var __asyncValues;
var __makeTemplateObject;
var __importStar;
var __importDefault;
var __classPrivateFieldGet;
var __classPrivateFieldSet;
var __classPrivateFieldIn;
var __createBinding;
(function (factory) {
    var root = typeof global === "object" ? global : typeof self === "object" ? self : typeof this === "object" ? this : {};
    if (typeof define === "function" && define.amd) {
        define("tslib", ["exports"], function (exports) { factory(createExporter(root, createExporter(exports))); });
    }
    else if ( true && typeof module.exports === "object") {
        factory(createExporter(root, createExporter(module.exports)));
    }
    else {
        factory(createExporter(root));
    }
    function createExporter(exports, previous) {
        if (exports !== root) {
            if (typeof Object.create === "function") {
                Object.defineProperty(exports, "__esModule", { value: true });
            }
            else {
                exports.__esModule = true;
            }
        }
        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };
    }
})
(function (exporter) {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };

    __extends = function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };

    __assign = Object.assign || function (t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
        return t;
    };

    __rest = function (s, e) {
        var t = {};
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
            t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    };

    __decorate = function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };

    __param = function (paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); }
    };

    __esDecorate = function (ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {
        function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }
        var kind = contextIn.kind, key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";
        var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;
        var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});
        var _, done = false;
        for (var i = decorators.length - 1; i >= 0; i--) {
            var context = {};
            for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];
            for (var p in contextIn.access) context.access[p] = contextIn.access[p];
            context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };
            var result = (0, decorators[i])(kind === "accessor" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);
            if (kind === "accessor") {
                if (result === void 0) continue;
                if (result === null || typeof result !== "object") throw new TypeError("Object expected");
                if (_ = accept(result.get)) descriptor.get = _;
                if (_ = accept(result.set)) descriptor.set = _;
                if (_ = accept(result.init)) initializers.push(_);
            }
            else if (_ = accept(result)) {
                if (kind === "field") initializers.push(_);
                else descriptor[key] = _;
            }
        }
        if (target) Object.defineProperty(target, contextIn.name, descriptor);
        done = true;
    };

    __runInitializers = function (thisArg, initializers, value) {
        var useValue = arguments.length > 2;
        for (var i = 0; i < initializers.length; i++) {
            value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);
        }
        return useValue ? value : void 0;
    };

    __propKey = function (x) {
        return typeof x === "symbol" ? x : "".concat(x);
    };

    __setFunctionName = function (f, name, prefix) {
        if (typeof name === "symbol") name = name.description ? "[".concat(name.description, "]") : "";
        return Object.defineProperty(f, "name", { configurable: true, value: prefix ? "".concat(prefix, " ", name) : name });
    };

    __metadata = function (metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
    };

    __awaiter = function (thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
            function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    };

    __generator = function (thisArg, body) {
        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f) throw new TypeError("Generator is already executing.");
            while (g && (g = 0, op[0] && (_ = 0)), _) try {
                if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
                if (y = 0, t) op = [op[0] & 2, t.value];
                switch (op[0]) {
                    case 0: case 1: t = op; break;
                    case 4: _.label++; return { value: op[1], done: false };
                    case 5: _.label++; y = op[1]; op = [0]; continue;
                    case 7: op = _.ops.pop(); _.trys.pop(); continue;
                    default:
                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                        if (t[2]) _.ops.pop();
                        _.trys.pop(); continue;
                }
                op = body.call(thisArg, _);
            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
        }
    };

    __exportStar = function(m, o) {
        for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);
    };

    __createBinding = Object.create ? (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        var desc = Object.getOwnPropertyDescriptor(m, k);
        if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
            desc = { enumerable: true, get: function() { return m[k]; } };
        }
        Object.defineProperty(o, k2, desc);
    }) : (function(o, m, k, k2) {
        if (k2 === undefined) k2 = k;
        o[k2] = m[k];
    });

    __values = function (o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m) return m.call(o);
        if (o && typeof o.length === "number") return {
            next: function () {
                if (o && i >= o.length) o = void 0;
                return { value: o && o[i++], done: !o };
            }
        };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    };

    __read = function (o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m) return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
        }
        catch (error) { e = { error: error }; }
        finally {
            try {
                if (r && !r.done && (m = i["return"])) m.call(i);
            }
            finally { if (e) throw e.error; }
        }
        return ar;
    };

    /** @deprecated */
    __spread = function () {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    };

    /** @deprecated */
    __spreadArrays = function () {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    };

    __spreadArray = function (to, from, pack) {
        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
            if (ar || !(i in from)) {
                if (!ar) ar = Array.prototype.slice.call(from, 0, i);
                ar[i] = from[i];
            }
        }
        return to.concat(ar || Array.prototype.slice.call(from));
    };

    __await = function (v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    };

    __asyncGenerator = function (thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }
    };

    __asyncDelegator = function (o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }
    };

    __asyncValues = function (o) {
        if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }
    };

    __makeTemplateObject = function (cooked, raw) {
        if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
        return cooked;
    };

    var __setModuleDefault = Object.create ? (function(o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function(o, v) {
        o["default"] = v;
    };

    __importStar = function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    };

    __importDefault = function (mod) {
        return (mod && mod.__esModule) ? mod : { "default": mod };
    };

    __classPrivateFieldGet = function (receiver, state, kind, f) {
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    };

    __classPrivateFieldSet = function (receiver, state, value, kind, f) {
        if (kind === "m") throw new TypeError("Private method is not writable");
        if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    };

    __classPrivateFieldIn = function (state, receiver) {
        if (receiver === null || (typeof receiver !== "object" && typeof receiver !== "function")) throw new TypeError("Cannot use 'in' operator on non-object");
        return typeof state === "function" ? receiver === state : state.has(receiver);
    };

    exporter("__extends", __extends);
    exporter("__assign", __assign);
    exporter("__rest", __rest);
    exporter("__decorate", __decorate);
    exporter("__param", __param);
    exporter("__esDecorate", __esDecorate);
    exporter("__runInitializers", __runInitializers);
    exporter("__propKey", __propKey);
    exporter("__setFunctionName", __setFunctionName);
    exporter("__metadata", __metadata);
    exporter("__awaiter", __awaiter);
    exporter("__generator", __generator);
    exporter("__exportStar", __exportStar);
    exporter("__createBinding", __createBinding);
    exporter("__values", __values);
    exporter("__read", __read);
    exporter("__spread", __spread);
    exporter("__spreadArrays", __spreadArrays);
    exporter("__spreadArray", __spreadArray);
    exporter("__await", __await);
    exporter("__asyncGenerator", __asyncGenerator);
    exporter("__asyncDelegator", __asyncDelegator);
    exporter("__asyncValues", __asyncValues);
    exporter("__makeTemplateObject", __makeTemplateObject);
    exporter("__importStar", __importStar);
    exporter("__importDefault", __importDefault);
    exporter("__classPrivateFieldGet", __classPrivateFieldGet);
    exporter("__classPrivateFieldSet", __classPrivateFieldSet);
    exporter("__classPrivateFieldIn", __classPrivateFieldIn);
});


/***/ }),

/***/ 4294:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = __nccwpck_require__(4219);


/***/ }),

/***/ 4219:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


var net = __nccwpck_require__(1631);
var tls = __nccwpck_require__(4016);
var http = __nccwpck_require__(8605);
var https = __nccwpck_require__(7211);
var events = __nccwpck_require__(8614);
var assert = __nccwpck_require__(2357);
var util = __nccwpck_require__(1669);


exports.httpOverHttp = httpOverHttp;
exports.httpsOverHttp = httpsOverHttp;
exports.httpOverHttps = httpOverHttps;
exports.httpsOverHttps = httpsOverHttps;


function httpOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  return agent;
}

function httpsOverHttp(options) {
  var agent = new TunnelingAgent(options);
  agent.request = http.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}

function httpOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  return agent;
}

function httpsOverHttps(options) {
  var agent = new TunnelingAgent(options);
  agent.request = https.request;
  agent.createSocket = createSecureSocket;
  agent.defaultPort = 443;
  return agent;
}


function TunnelingAgent(options) {
  var self = this;
  self.options = options || {};
  self.proxyOptions = self.options.proxy || {};
  self.maxSockets = self.options.maxSockets || http.Agent.defaultMaxSockets;
  self.requests = [];
  self.sockets = [];

  self.on('free', function onFree(socket, host, port, localAddress) {
    var options = toOptions(host, port, localAddress);
    for (var i = 0, len = self.requests.length; i < len; ++i) {
      var pending = self.requests[i];
      if (pending.host === options.host && pending.port === options.port) {
        // Detect the request to connect same origin server,
        // reuse the connection.
        self.requests.splice(i, 1);
        pending.request.onSocket(socket);
        return;
      }
    }
    socket.destroy();
    self.removeSocket(socket);
  });
}
util.inherits(TunnelingAgent, events.EventEmitter);

TunnelingAgent.prototype.addRequest = function addRequest(req, host, port, localAddress) {
  var self = this;
  var options = mergeOptions({request: req}, self.options, toOptions(host, port, localAddress));

  if (self.sockets.length >= this.maxSockets) {
    // We are over limit so we'll add it to the queue.
    self.requests.push(options);
    return;
  }

  // If we are under maxSockets create a new one.
  self.createSocket(options, function(socket) {
    socket.on('free', onFree);
    socket.on('close', onCloseOrRemove);
    socket.on('agentRemove', onCloseOrRemove);
    req.onSocket(socket);

    function onFree() {
      self.emit('free', socket, options);
    }

    function onCloseOrRemove(err) {
      self.removeSocket(socket);
      socket.removeListener('free', onFree);
      socket.removeListener('close', onCloseOrRemove);
      socket.removeListener('agentRemove', onCloseOrRemove);
    }
  });
};

TunnelingAgent.prototype.createSocket = function createSocket(options, cb) {
  var self = this;
  var placeholder = {};
  self.sockets.push(placeholder);

  var connectOptions = mergeOptions({}, self.proxyOptions, {
    method: 'CONNECT',
    path: options.host + ':' + options.port,
    agent: false,
    headers: {
      host: options.host + ':' + options.port
    }
  });
  if (options.localAddress) {
    connectOptions.localAddress = options.localAddress;
  }
  if (connectOptions.proxyAuth) {
    connectOptions.headers = connectOptions.headers || {};
    connectOptions.headers['Proxy-Authorization'] = 'Basic ' +
        new Buffer(connectOptions.proxyAuth).toString('base64');
  }

  debug('making CONNECT request');
  var connectReq = self.request(connectOptions);
  connectReq.useChunkedEncodingByDefault = false; // for v0.6
  connectReq.once('response', onResponse); // for v0.6
  connectReq.once('upgrade', onUpgrade);   // for v0.6
  connectReq.once('connect', onConnect);   // for v0.7 or later
  connectReq.once('error', onError);
  connectReq.end();

  function onResponse(res) {
    // Very hacky. This is necessary to avoid http-parser leaks.
    res.upgrade = true;
  }

  function onUpgrade(res, socket, head) {
    // Hacky.
    process.nextTick(function() {
      onConnect(res, socket, head);
    });
  }

  function onConnect(res, socket, head) {
    connectReq.removeAllListeners();
    socket.removeAllListeners();

    if (res.statusCode !== 200) {
      debug('tunneling socket could not be established, statusCode=%d',
        res.statusCode);
      socket.destroy();
      var error = new Error('tunneling socket could not be established, ' +
        'statusCode=' + res.statusCode);
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    if (head.length > 0) {
      debug('got illegal response body from proxy');
      socket.destroy();
      var error = new Error('got illegal response body from proxy');
      error.code = 'ECONNRESET';
      options.request.emit('error', error);
      self.removeSocket(placeholder);
      return;
    }
    debug('tunneling connection has established');
    self.sockets[self.sockets.indexOf(placeholder)] = socket;
    return cb(socket);
  }

  function onError(cause) {
    connectReq.removeAllListeners();

    debug('tunneling socket could not be established, cause=%s\n',
          cause.message, cause.stack);
    var error = new Error('tunneling socket could not be established, ' +
                          'cause=' + cause.message);
    error.code = 'ECONNRESET';
    options.request.emit('error', error);
    self.removeSocket(placeholder);
  }
};

TunnelingAgent.prototype.removeSocket = function removeSocket(socket) {
  var pos = this.sockets.indexOf(socket)
  if (pos === -1) {
    return;
  }
  this.sockets.splice(pos, 1);

  var pending = this.requests.shift();
  if (pending) {
    // If we have pending requests and a socket gets closed a new one
    // needs to be created to take over in the pool for the one that closed.
    this.createSocket(pending, function(socket) {
      pending.request.onSocket(socket);
    });
  }
};

function createSecureSocket(options, cb) {
  var self = this;
  TunnelingAgent.prototype.createSocket.call(self, options, function(socket) {
    var hostHeader = options.request.getHeader('host');
    var tlsOptions = mergeOptions({}, self.options, {
      socket: socket,
      servername: hostHeader ? hostHeader.replace(/:.*$/, '') : options.host
    });

    // 0 is dummy port for v0.6
    var secureSocket = tls.connect(0, tlsOptions);
    self.sockets[self.sockets.indexOf(socket)] = secureSocket;
    cb(secureSocket);
  });
}


function toOptions(host, port, localAddress) {
  if (typeof host === 'string') { // since v0.10
    return {
      host: host,
      port: port,
      localAddress: localAddress
    };
  }
  return host; // for v0.11 or later
}

function mergeOptions(target) {
  for (var i = 1, len = arguments.length; i < len; ++i) {
    var overrides = arguments[i];
    if (typeof overrides === 'object') {
      var keys = Object.keys(overrides);
      for (var j = 0, keyLen = keys.length; j < keyLen; ++j) {
        var k = keys[j];
        if (overrides[k] !== undefined) {
          target[k] = overrides[k];
        }
      }
    }
  }
  return target;
}


var debug;
if (process.env.NODE_DEBUG && /\btunnel\b/.test(process.env.NODE_DEBUG)) {
  debug = function() {
    var args = Array.prototype.slice.call(arguments);
    if (typeof args[0] === 'string') {
      args[0] = 'TUNNEL: ' + args[0];
    } else {
      args.unshift('TUNNEL:');
    }
    console.error.apply(console, args);
  }
} else {
  debug = function() {};
}
exports.debug = debug; // for test


/***/ }),

/***/ 5030:
/***/ ((__unused_webpack_module, exports) => {

"use strict";


Object.defineProperty(exports, "__esModule", ({ value: true }));

function getUserAgent() {
  if (typeof navigator === "object" && "userAgent" in navigator) {
    return navigator.userAgent;
  }

  if (typeof process === "object" && "version" in process) {
    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;
  }

  return "<environment undetectable>";
}

exports.getUserAgent = getUserAgent;
//# sourceMappingURL=index.js.map


/***/ }),

/***/ 4886:
/***/ ((module) => {

"use strict";


var conversions = {};
module.exports = conversions;

function sign(x) {
    return x < 0 ? -1 : 1;
}

function evenRound(x) {
    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.
    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)
        return Math.floor(x);
    } else {
        return Math.round(x);
    }
}

function createNumberConversion(bitLength, typeOpts) {
    if (!typeOpts.unsigned) {
        --bitLength;
    }
    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);
    const upperBound = Math.pow(2, bitLength) - 1;

    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);
    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);

    return function(V, opts) {
        if (!opts) opts = {};

        let x = +V;

        if (opts.enforceRange) {
            if (!Number.isFinite(x)) {
                throw new TypeError("Argument is not a finite number");
            }

            x = sign(x) * Math.floor(Math.abs(x));
            if (x < lowerBound || x > upperBound) {
                throw new TypeError("Argument is not in byte range");
            }

            return x;
        }

        if (!isNaN(x) && opts.clamp) {
            x = evenRound(x);

            if (x < lowerBound) x = lowerBound;
            if (x > upperBound) x = upperBound;
            return x;
        }

        if (!Number.isFinite(x) || x === 0) {
            return 0;
        }

        x = sign(x) * Math.floor(Math.abs(x));
        x = x % moduloVal;

        if (!typeOpts.unsigned && x >= moduloBound) {
            return x - moduloVal;
        } else if (typeOpts.unsigned) {
            if (x < 0) {
              x += moduloVal;
            } else if (x === -0) { // don't return negative zero
              return 0;
            }
        }

        return x;
    }
}

conversions["void"] = function () {
    return undefined;
};

conversions["boolean"] = function (val) {
    return !!val;
};

conversions["byte"] = createNumberConversion(8, { unsigned: false });
conversions["octet"] = createNumberConversion(8, { unsigned: true });

conversions["short"] = createNumberConversion(16, { unsigned: false });
conversions["unsigned short"] = createNumberConversion(16, { unsigned: true });

conversions["long"] = createNumberConversion(32, { unsigned: false });
conversions["unsigned long"] = createNumberConversion(32, { unsigned: true });

conversions["long long"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });
conversions["unsigned long long"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });

conversions["double"] = function (V) {
    const x = +V;

    if (!Number.isFinite(x)) {
        throw new TypeError("Argument is not a finite floating-point value");
    }

    return x;
};

conversions["unrestricted double"] = function (V) {
    const x = +V;

    if (isNaN(x)) {
        throw new TypeError("Argument is NaN");
    }

    return x;
};

// not quite valid, but good enough for JS
conversions["float"] = conversions["double"];
conversions["unrestricted float"] = conversions["unrestricted double"];

conversions["DOMString"] = function (V, opts) {
    if (!opts) opts = {};

    if (opts.treatNullAsEmptyString && V === null) {
        return "";
    }

    return String(V);
};

conversions["ByteString"] = function (V, opts) {
    const x = String(V);
    let c = undefined;
    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {
        if (c > 255) {
            throw new TypeError("Argument is not a valid bytestring");
        }
    }

    return x;
};

conversions["USVString"] = function (V) {
    const S = String(V);
    const n = S.length;
    const U = [];
    for (let i = 0; i < n; ++i) {
        const c = S.charCodeAt(i);
        if (c < 0xD800 || c > 0xDFFF) {
            U.push(String.fromCodePoint(c));
        } else if (0xDC00 <= c && c <= 0xDFFF) {
            U.push(String.fromCodePoint(0xFFFD));
        } else {
            if (i === n - 1) {
                U.push(String.fromCodePoint(0xFFFD));
            } else {
                const d = S.charCodeAt(i + 1);
                if (0xDC00 <= d && d <= 0xDFFF) {
                    const a = c & 0x3FF;
                    const b = d & 0x3FF;
                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));
                    ++i;
                } else {
                    U.push(String.fromCodePoint(0xFFFD));
                }
            }
        }
    }

    return U.join('');
};

conversions["Date"] = function (V, opts) {
    if (!(V instanceof Date)) {
        throw new TypeError("Argument is not a Date object");
    }
    if (isNaN(V)) {
        return undefined;
    }

    return V;
};

conversions["RegExp"] = function (V, opts) {
    if (!(V instanceof RegExp)) {
        V = new RegExp(V);
    }

    return V;
};


/***/ }),

/***/ 7537:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";

const usm = __nccwpck_require__(2158);

exports.implementation = class URLImpl {
  constructor(constructorArgs) {
    const url = constructorArgs[0];
    const base = constructorArgs[1];

    let parsedBase = null;
    if (base !== undefined) {
      parsedBase = usm.basicURLParse(base);
      if (parsedBase === "failure") {
        throw new TypeError("Invalid base URL");
      }
    }

    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });
    if (parsedURL === "failure") {
      throw new TypeError("Invalid URL");
    }

    this._url = parsedURL;

    // TODO: query stuff
  }

  get href() {
    return usm.serializeURL(this._url);
  }

  set href(v) {
    const parsedURL = usm.basicURLParse(v);
    if (parsedURL === "failure") {
      throw new TypeError("Invalid URL");
    }

    this._url = parsedURL;
  }

  get origin() {
    return usm.serializeURLOrigin(this._url);
  }

  get protocol() {
    return this._url.scheme + ":";
  }

  set protocol(v) {
    usm.basicURLParse(v + ":", { url: this._url, stateOverride: "scheme start" });
  }

  get username() {
    return this._url.username;
  }

  set username(v) {
    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
      return;
    }

    usm.setTheUsername(this._url, v);
  }

  get password() {
    return this._url.password;
  }

  set password(v) {
    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
      return;
    }

    usm.setThePassword(this._url, v);
  }

  get host() {
    const url = this._url;

    if (url.host === null) {
      return "";
    }

    if (url.port === null) {
      return usm.serializeHost(url.host);
    }

    return usm.serializeHost(url.host) + ":" + usm.serializeInteger(url.port);
  }

  set host(v) {
    if (this._url.cannotBeABaseURL) {
      return;
    }

    usm.basicURLParse(v, { url: this._url, stateOverride: "host" });
  }

  get hostname() {
    if (this._url.host === null) {
      return "";
    }

    return usm.serializeHost(this._url.host);
  }

  set hostname(v) {
    if (this._url.cannotBeABaseURL) {
      return;
    }

    usm.basicURLParse(v, { url: this._url, stateOverride: "hostname" });
  }

  get port() {
    if (this._url.port === null) {
      return "";
    }

    return usm.serializeInteger(this._url.port);
  }

  set port(v) {
    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {
      return;
    }

    if (v === "") {
      this._url.port = null;
    } else {
      usm.basicURLParse(v, { url: this._url, stateOverride: "port" });
    }
  }

  get pathname() {
    if (this._url.cannotBeABaseURL) {
      return this._url.path[0];
    }

    if (this._url.path.length === 0) {
      return "";
    }

    return "/" + this._url.path.join("/");
  }

  set pathname(v) {
    if (this._url.cannotBeABaseURL) {
      return;
    }

    this._url.path = [];
    usm.basicURLParse(v, { url: this._url, stateOverride: "path start" });
  }

  get search() {
    if (this._url.query === null || this._url.query === "") {
      return "";
    }

    return "?" + this._url.query;
  }

  set search(v) {
    // TODO: query stuff

    const url = this._url;

    if (v === "") {
      url.query = null;
      return;
    }

    const input = v[0] === "?" ? v.substring(1) : v;
    url.query = "";
    usm.basicURLParse(input, { url, stateOverride: "query" });
  }

  get hash() {
    if (this._url.fragment === null || this._url.fragment === "") {
      return "";
    }

    return "#" + this._url.fragment;
  }

  set hash(v) {
    if (v === "") {
      this._url.fragment = null;
      return;
    }

    const input = v[0] === "#" ? v.substring(1) : v;
    this._url.fragment = "";
    usm.basicURLParse(input, { url: this._url, stateOverride: "fragment" });
  }

  toJSON() {
    return this.href;
  }
};


/***/ }),

/***/ 3394:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";


const conversions = __nccwpck_require__(4886);
const utils = __nccwpck_require__(3185);
const Impl = __nccwpck_require__(7537);

const impl = utils.implSymbol;

function URL(url) {
  if (!this || this[impl] || !(this instanceof URL)) {
    throw new TypeError("Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.");
  }
  if (arguments.length < 1) {
    throw new TypeError("Failed to construct 'URL': 1 argument required, but only " + arguments.length + " present.");
  }
  const args = [];
  for (let i = 0; i < arguments.length && i < 2; ++i) {
    args[i] = arguments[i];
  }
  args[0] = conversions["USVString"](args[0]);
  if (args[1] !== undefined) {
  args[1] = conversions["USVString"](args[1]);
  }

  module.exports.setup(this, args);
}

URL.prototype.toJSON = function toJSON() {
  if (!this || !module.exports.is(this)) {
    throw new TypeError("Illegal invocation");
  }
  const args = [];
  for (let i = 0; i < arguments.length && i < 0; ++i) {
    args[i] = arguments[i];
  }
  return this[impl].toJSON.apply(this[impl], args);
};
Object.defineProperty(URL.prototype, "href", {
  get() {
    return this[impl].href;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].href = V;
  },
  enumerable: true,
  configurable: true
});

URL.prototype.toString = function () {
  if (!this || !module.exports.is(this)) {
    throw new TypeError("Illegal invocation");
  }
  return this.href;
};

Object.defineProperty(URL.prototype, "origin", {
  get() {
    return this[impl].origin;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "protocol", {
  get() {
    return this[impl].protocol;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].protocol = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "username", {
  get() {
    return this[impl].username;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].username = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "password", {
  get() {
    return this[impl].password;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].password = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "host", {
  get() {
    return this[impl].host;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].host = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "hostname", {
  get() {
    return this[impl].hostname;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].hostname = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "port", {
  get() {
    return this[impl].port;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].port = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "pathname", {
  get() {
    return this[impl].pathname;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].pathname = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "search", {
  get() {
    return this[impl].search;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].search = V;
  },
  enumerable: true,
  configurable: true
});

Object.defineProperty(URL.prototype, "hash", {
  get() {
    return this[impl].hash;
  },
  set(V) {
    V = conversions["USVString"](V);
    this[impl].hash = V;
  },
  enumerable: true,
  configurable: true
});


module.exports = {
  is(obj) {
    return !!obj && obj[impl] instanceof Impl.implementation;
  },
  create(constructorArgs, privateData) {
    let obj = Object.create(URL.prototype);
    this.setup(obj, constructorArgs, privateData);
    return obj;
  },
  setup(obj, constructorArgs, privateData) {
    if (!privateData) privateData = {};
    privateData.wrapper = obj;

    obj[impl] = new Impl.implementation(constructorArgs, privateData);
    obj[impl][utils.wrapperSymbol] = obj;
  },
  interface: URL,
  expose: {
    Window: { URL: URL },
    Worker: { URL: URL }
  }
};



/***/ }),

/***/ 8665:
/***/ ((__unused_webpack_module, exports, __nccwpck_require__) => {

"use strict";


exports.URL = __nccwpck_require__(3394).interface;
exports.serializeURL = __nccwpck_require__(2158).serializeURL;
exports.serializeURLOrigin = __nccwpck_require__(2158).serializeURLOrigin;
exports.basicURLParse = __nccwpck_require__(2158).basicURLParse;
exports.setTheUsername = __nccwpck_require__(2158).setTheUsername;
exports.setThePassword = __nccwpck_require__(2158).setThePassword;
exports.serializeHost = __nccwpck_require__(2158).serializeHost;
exports.serializeInteger = __nccwpck_require__(2158).serializeInteger;
exports.parseURL = __nccwpck_require__(2158).parseURL;


/***/ }),

/***/ 2158:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const punycode = __nccwpck_require__(4213);
const tr46 = __nccwpck_require__(4256);

const specialSchemes = {
  ftp: 21,
  file: null,
  gopher: 70,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

const failure = Symbol("failure");

function countSymbols(str) {
  return punycode.ucs2.decode(str).length;
}

function at(input, idx) {
  const c = input[idx];
  return isNaN(c) ? undefined : String.fromCodePoint(c);
}

function isASCIIDigit(c) {
  return c >= 0x30 && c <= 0x39;
}

function isASCIIAlpha(c) {
  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);
}

function isASCIIAlphanumeric(c) {
  return isASCIIAlpha(c) || isASCIIDigit(c);
}

function isASCIIHex(c) {
  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);
}

function isSingleDot(buffer) {
  return buffer === "." || buffer.toLowerCase() === "%2e";
}

function isDoubleDot(buffer) {
  buffer = buffer.toLowerCase();
  return buffer === ".." || buffer === "%2e." || buffer === ".%2e" || buffer === "%2e%2e";
}

function isWindowsDriveLetterCodePoints(cp1, cp2) {
  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);
}

function isWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === ":" || string[1] === "|");
}

function isNormalizedWindowsDriveLetterString(string) {
  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === ":";
}

function containsForbiddenHostCodePoint(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|%|\/|:|\?|@|\[|\\|\]/) !== -1;
}

function containsForbiddenHostCodePointExcludingPercent(string) {
  return string.search(/\u0000|\u0009|\u000A|\u000D|\u0020|#|\/|:|\?|@|\[|\\|\]/) !== -1;
}

function isSpecialScheme(scheme) {
  return specialSchemes[scheme] !== undefined;
}

function isSpecial(url) {
  return isSpecialScheme(url.scheme);
}

function defaultPort(scheme) {
  return specialSchemes[scheme];
}

function percentEncode(c) {
  let hex = c.toString(16).toUpperCase();
  if (hex.length === 1) {
    hex = "0" + hex;
  }

  return "%" + hex;
}

function utf8PercentEncode(c) {
  const buf = new Buffer(c);

  let str = "";

  for (let i = 0; i < buf.length; ++i) {
    str += percentEncode(buf[i]);
  }

  return str;
}

function utf8PercentDecode(str) {
  const input = new Buffer(str);
  const output = [];
  for (let i = 0; i < input.length; ++i) {
    if (input[i] !== 37) {
      output.push(input[i]);
    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {
      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));
      i += 2;
    } else {
      output.push(input[i]);
    }
  }
  return new Buffer(output).toString();
}

function isC0ControlPercentEncode(c) {
  return c <= 0x1F || c > 0x7E;
}

const extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);
function isPathPercentEncode(c) {
  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);
}

const extraUserinfoPercentEncodeSet =
  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);
function isUserinfoPercentEncode(c) {
  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);
}

function percentEncodeChar(c, encodeSetPredicate) {
  const cStr = String.fromCodePoint(c);

  if (encodeSetPredicate(c)) {
    return utf8PercentEncode(cStr);
  }

  return cStr;
}

function parseIPv4Number(input) {
  let R = 10;

  if (input.length >= 2 && input.charAt(0) === "0" && input.charAt(1).toLowerCase() === "x") {
    input = input.substring(2);
    R = 16;
  } else if (input.length >= 2 && input.charAt(0) === "0") {
    input = input.substring(1);
    R = 8;
  }

  if (input === "") {
    return 0;
  }

  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);
  if (regex.test(input)) {
    return failure;
  }

  return parseInt(input, R);
}

function parseIPv4(input) {
  const parts = input.split(".");
  if (parts[parts.length - 1] === "") {
    if (parts.length > 1) {
      parts.pop();
    }
  }

  if (parts.length > 4) {
    return input;
  }

  const numbers = [];
  for (const part of parts) {
    if (part === "") {
      return input;
    }
    const n = parseIPv4Number(part);
    if (n === failure) {
      return input;
    }

    numbers.push(n);
  }

  for (let i = 0; i < numbers.length - 1; ++i) {
    if (numbers[i] > 255) {
      return failure;
    }
  }
  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {
    return failure;
  }

  let ipv4 = numbers.pop();
  let counter = 0;

  for (const n of numbers) {
    ipv4 += n * Math.pow(256, 3 - counter);
    ++counter;
  }

  return ipv4;
}

function serializeIPv4(address) {
  let output = "";
  let n = address;

  for (let i = 1; i <= 4; ++i) {
    output = String(n % 256) + output;
    if (i !== 4) {
      output = "." + output;
    }
    n = Math.floor(n / 256);
  }

  return output;
}

function parseIPv6(input) {
  const address = [0, 0, 0, 0, 0, 0, 0, 0];
  let pieceIndex = 0;
  let compress = null;
  let pointer = 0;

  input = punycode.ucs2.decode(input);

  if (input[pointer] === 58) {
    if (input[pointer + 1] !== 58) {
      return failure;
    }

    pointer += 2;
    ++pieceIndex;
    compress = pieceIndex;
  }

  while (pointer < input.length) {
    if (pieceIndex === 8) {
      return failure;
    }

    if (input[pointer] === 58) {
      if (compress !== null) {
        return failure;
      }
      ++pointer;
      ++pieceIndex;
      compress = pieceIndex;
      continue;
    }

    let value = 0;
    let length = 0;

    while (length < 4 && isASCIIHex(input[pointer])) {
      value = value * 0x10 + parseInt(at(input, pointer), 16);
      ++pointer;
      ++length;
    }

    if (input[pointer] === 46) {
      if (length === 0) {
        return failure;
      }

      pointer -= length;

      if (pieceIndex > 6) {
        return failure;
      }

      let numbersSeen = 0;

      while (input[pointer] !== undefined) {
        let ipv4Piece = null;

        if (numbersSeen > 0) {
          if (input[pointer] === 46 && numbersSeen < 4) {
            ++pointer;
          } else {
            return failure;
          }
        }

        if (!isASCIIDigit(input[pointer])) {
          return failure;
        }

        while (isASCIIDigit(input[pointer])) {
          const number = parseInt(at(input, pointer));
          if (ipv4Piece === null) {
            ipv4Piece = number;
          } else if (ipv4Piece === 0) {
            return failure;
          } else {
            ipv4Piece = ipv4Piece * 10 + number;
          }
          if (ipv4Piece > 255) {
            return failure;
          }
          ++pointer;
        }

        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;

        ++numbersSeen;

        if (numbersSeen === 2 || numbersSeen === 4) {
          ++pieceIndex;
        }
      }

      if (numbersSeen !== 4) {
        return failure;
      }

      break;
    } else if (input[pointer] === 58) {
      ++pointer;
      if (input[pointer] === undefined) {
        return failure;
      }
    } else if (input[pointer] !== undefined) {
      return failure;
    }

    address[pieceIndex] = value;
    ++pieceIndex;
  }

  if (compress !== null) {
    let swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex !== 0 && swaps > 0) {
      const temp = address[compress + swaps - 1];
      address[compress + swaps - 1] = address[pieceIndex];
      address[pieceIndex] = temp;
      --pieceIndex;
      --swaps;
    }
  } else if (compress === null && pieceIndex !== 8) {
    return failure;
  }

  return address;
}

function serializeIPv6(address) {
  let output = "";
  const seqResult = findLongestZeroSequence(address);
  const compress = seqResult.idx;
  let ignore0 = false;

  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {
    if (ignore0 && address[pieceIndex] === 0) {
      continue;
    } else if (ignore0) {
      ignore0 = false;
    }

    if (compress === pieceIndex) {
      const separator = pieceIndex === 0 ? "::" : ":";
      output += separator;
      ignore0 = true;
      continue;
    }

    output += address[pieceIndex].toString(16);

    if (pieceIndex !== 7) {
      output += ":";
    }
  }

  return output;
}

function parseHost(input, isSpecialArg) {
  if (input[0] === "[") {
    if (input[input.length - 1] !== "]") {
      return failure;
    }

    return parseIPv6(input.substring(1, input.length - 1));
  }

  if (!isSpecialArg) {
    return parseOpaqueHost(input);
  }

  const domain = utf8PercentDecode(input);
  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);
  if (asciiDomain === null) {
    return failure;
  }

  if (containsForbiddenHostCodePoint(asciiDomain)) {
    return failure;
  }

  const ipv4Host = parseIPv4(asciiDomain);
  if (typeof ipv4Host === "number" || ipv4Host === failure) {
    return ipv4Host;
  }

  return asciiDomain;
}

function parseOpaqueHost(input) {
  if (containsForbiddenHostCodePointExcludingPercent(input)) {
    return failure;
  }

  let output = "";
  const decoded = punycode.ucs2.decode(input);
  for (let i = 0; i < decoded.length; ++i) {
    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);
  }
  return output;
}

function findLongestZeroSequence(arr) {
  let maxIdx = null;
  let maxLen = 1; // only find elements > 1
  let currStart = null;
  let currLen = 0;

  for (let i = 0; i < arr.length; ++i) {
    if (arr[i] !== 0) {
      if (currLen > maxLen) {
        maxIdx = currStart;
        maxLen = currLen;
      }

      currStart = null;
      currLen = 0;
    } else {
      if (currStart === null) {
        currStart = i;
      }
      ++currLen;
    }
  }

  // if trailing zeros
  if (currLen > maxLen) {
    maxIdx = currStart;
    maxLen = currLen;
  }

  return {
    idx: maxIdx,
    len: maxLen
  };
}

function serializeHost(host) {
  if (typeof host === "number") {
    return serializeIPv4(host);
  }

  // IPv6 serializer
  if (host instanceof Array) {
    return "[" + serializeIPv6(host) + "]";
  }

  return host;
}

function trimControlChars(url) {
  return url.replace(/^[\u0000-\u001F\u0020]+|[\u0000-\u001F\u0020]+$/g, "");
}

function trimTabAndNewline(url) {
  return url.replace(/\u0009|\u000A|\u000D/g, "");
}

function shortenPath(url) {
  const path = url.path;
  if (path.length === 0) {
    return;
  }
  if (url.scheme === "file" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {
    return;
  }

  path.pop();
}

function includesCredentials(url) {
  return url.username !== "" || url.password !== "";
}

function cannotHaveAUsernamePasswordPort(url) {
  return url.host === null || url.host === "" || url.cannotBeABaseURL || url.scheme === "file";
}

function isNormalizedWindowsDriveLetter(string) {
  return /^[A-Za-z]:$/.test(string);
}

function URLStateMachine(input, base, encodingOverride, url, stateOverride) {
  this.pointer = 0;
  this.input = input;
  this.base = base || null;
  this.encodingOverride = encodingOverride || "utf-8";
  this.stateOverride = stateOverride;
  this.url = url;
  this.failure = false;
  this.parseError = false;

  if (!this.url) {
    this.url = {
      scheme: "",
      username: "",
      password: "",
      host: null,
      port: null,
      path: [],
      query: null,
      fragment: null,

      cannotBeABaseURL: false
    };

    const res = trimControlChars(this.input);
    if (res !== this.input) {
      this.parseError = true;
    }
    this.input = res;
  }

  const res = trimTabAndNewline(this.input);
  if (res !== this.input) {
    this.parseError = true;
  }
  this.input = res;

  this.state = stateOverride || "scheme start";

  this.buffer = "";
  this.atFlag = false;
  this.arrFlag = false;
  this.passwordTokenSeenFlag = false;

  this.input = punycode.ucs2.decode(this.input);

  for (; this.pointer <= this.input.length; ++this.pointer) {
    const c = this.input[this.pointer];
    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);

    // exec state machine
    const ret = this["parse " + this.state](c, cStr);
    if (!ret) {
      break; // terminate algorithm
    } else if (ret === failure) {
      this.failure = true;
      break;
    }
  }
}

URLStateMachine.prototype["parse scheme start"] = function parseSchemeStart(c, cStr) {
  if (isASCIIAlpha(c)) {
    this.buffer += cStr.toLowerCase();
    this.state = "scheme";
  } else if (!this.stateOverride) {
    this.state = "no scheme";
    --this.pointer;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

URLStateMachine.prototype["parse scheme"] = function parseScheme(c, cStr) {
  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {
    this.buffer += cStr.toLowerCase();
  } else if (c === 58) {
    if (this.stateOverride) {
      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {
        return false;
      }

      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {
        return false;
      }

      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === "file") {
        return false;
      }

      if (this.url.scheme === "file" && (this.url.host === "" || this.url.host === null)) {
        return false;
      }
    }
    this.url.scheme = this.buffer;
    this.buffer = "";
    if (this.stateOverride) {
      return false;
    }
    if (this.url.scheme === "file") {
      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {
        this.parseError = true;
      }
      this.state = "file";
    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {
      this.state = "special relative or authority";
    } else if (isSpecial(this.url)) {
      this.state = "special authority slashes";
    } else if (this.input[this.pointer + 1] === 47) {
      this.state = "path or authority";
      ++this.pointer;
    } else {
      this.url.cannotBeABaseURL = true;
      this.url.path.push("");
      this.state = "cannot-be-a-base-URL path";
    }
  } else if (!this.stateOverride) {
    this.buffer = "";
    this.state = "no scheme";
    this.pointer = -1;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

URLStateMachine.prototype["parse no scheme"] = function parseNoScheme(c) {
  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {
    return failure;
  } else if (this.base.cannotBeABaseURL && c === 35) {
    this.url.scheme = this.base.scheme;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
    this.url.fragment = "";
    this.url.cannotBeABaseURL = true;
    this.state = "fragment";
  } else if (this.base.scheme === "file") {
    this.state = "file";
    --this.pointer;
  } else {
    this.state = "relative";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special relative or authority"] = function parseSpecialRelativeOrAuthority(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";
    ++this.pointer;
  } else {
    this.parseError = true;
    this.state = "relative";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse path or authority"] = function parsePathOrAuthority(c) {
  if (c === 47) {
    this.state = "authority";
  } else {
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse relative"] = function parseRelative(c) {
  this.url.scheme = this.base.scheme;
  if (isNaN(c)) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
  } else if (c === 47) {
    this.state = "relative slash";
  } else if (c === 63) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = "";
    this.state = "query";
  } else if (c === 35) {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice();
    this.url.query = this.base.query;
    this.url.fragment = "";
    this.state = "fragment";
  } else if (isSpecial(this.url) && c === 92) {
    this.parseError = true;
    this.state = "relative slash";
  } else {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.url.path = this.base.path.slice(0, this.base.path.length - 1);

    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse relative slash"] = function parseRelativeSlash(c) {
  if (isSpecial(this.url) && (c === 47 || c === 92)) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "special authority ignore slashes";
  } else if (c === 47) {
    this.state = "authority";
  } else {
    this.url.username = this.base.username;
    this.url.password = this.base.password;
    this.url.host = this.base.host;
    this.url.port = this.base.port;
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special authority slashes"] = function parseSpecialAuthoritySlashes(c) {
  if (c === 47 && this.input[this.pointer + 1] === 47) {
    this.state = "special authority ignore slashes";
    ++this.pointer;
  } else {
    this.parseError = true;
    this.state = "special authority ignore slashes";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse special authority ignore slashes"] = function parseSpecialAuthorityIgnoreSlashes(c) {
  if (c !== 47 && c !== 92) {
    this.state = "authority";
    --this.pointer;
  } else {
    this.parseError = true;
  }

  return true;
};

URLStateMachine.prototype["parse authority"] = function parseAuthority(c, cStr) {
  if (c === 64) {
    this.parseError = true;
    if (this.atFlag) {
      this.buffer = "%40" + this.buffer;
    }
    this.atFlag = true;

    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars
    const len = countSymbols(this.buffer);
    for (let pointer = 0; pointer < len; ++pointer) {
      const codePoint = this.buffer.codePointAt(pointer);

      if (codePoint === 58 && !this.passwordTokenSeenFlag) {
        this.passwordTokenSeenFlag = true;
        continue;
      }
      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);
      if (this.passwordTokenSeenFlag) {
        this.url.password += encodedCodePoints;
      } else {
        this.url.username += encodedCodePoints;
      }
    }
    this.buffer = "";
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92)) {
    if (this.atFlag && this.buffer === "") {
      this.parseError = true;
      return failure;
    }
    this.pointer -= countSymbols(this.buffer) + 1;
    this.buffer = "";
    this.state = "host";
  } else {
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse hostname"] =
URLStateMachine.prototype["parse host"] = function parseHostName(c, cStr) {
  if (this.stateOverride && this.url.scheme === "file") {
    --this.pointer;
    this.state = "file host";
  } else if (c === 58 && !this.arrFlag) {
    if (this.buffer === "") {
      this.parseError = true;
      return failure;
    }

    const host = parseHost(this.buffer, isSpecial(this.url));
    if (host === failure) {
      return failure;
    }

    this.url.host = host;
    this.buffer = "";
    this.state = "port";
    if (this.stateOverride === "hostname") {
      return false;
    }
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92)) {
    --this.pointer;
    if (isSpecial(this.url) && this.buffer === "") {
      this.parseError = true;
      return failure;
    } else if (this.stateOverride && this.buffer === "" &&
               (includesCredentials(this.url) || this.url.port !== null)) {
      this.parseError = true;
      return false;
    }

    const host = parseHost(this.buffer, isSpecial(this.url));
    if (host === failure) {
      return failure;
    }

    this.url.host = host;
    this.buffer = "";
    this.state = "path start";
    if (this.stateOverride) {
      return false;
    }
  } else {
    if (c === 91) {
      this.arrFlag = true;
    } else if (c === 93) {
      this.arrFlag = false;
    }
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse port"] = function parsePort(c, cStr) {
  if (isASCIIDigit(c)) {
    this.buffer += cStr;
  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||
             (isSpecial(this.url) && c === 92) ||
             this.stateOverride) {
    if (this.buffer !== "") {
      const port = parseInt(this.buffer);
      if (port > Math.pow(2, 16) - 1) {
        this.parseError = true;
        return failure;
      }
      this.url.port = port === defaultPort(this.url.scheme) ? null : port;
      this.buffer = "";
    }
    if (this.stateOverride) {
      return false;
    }
    this.state = "path start";
    --this.pointer;
  } else {
    this.parseError = true;
    return failure;
  }

  return true;
};

const fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);

URLStateMachine.prototype["parse file"] = function parseFile(c) {
  this.url.scheme = "file";

  if (c === 47 || c === 92) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "file slash";
  } else if (this.base !== null && this.base.scheme === "file") {
    if (isNaN(c)) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;
    } else if (c === 63) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = "";
      this.state = "query";
    } else if (c === 35) {
      this.url.host = this.base.host;
      this.url.path = this.base.path.slice();
      this.url.query = this.base.query;
      this.url.fragment = "";
      this.state = "fragment";
    } else {
      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points
          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||
          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points
           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {
        this.url.host = this.base.host;
        this.url.path = this.base.path.slice();
        shortenPath(this.url);
      } else {
        this.parseError = true;
      }

      this.state = "path";
      --this.pointer;
    }
  } else {
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse file slash"] = function parseFileSlash(c) {
  if (c === 47 || c === 92) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "file host";
  } else {
    if (this.base !== null && this.base.scheme === "file") {
      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {
        this.url.path.push(this.base.path[0]);
      } else {
        this.url.host = this.base.host;
      }
    }
    this.state = "path";
    --this.pointer;
  }

  return true;
};

URLStateMachine.prototype["parse file host"] = function parseFileHost(c, cStr) {
  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {
    --this.pointer;
    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {
      this.parseError = true;
      this.state = "path";
    } else if (this.buffer === "") {
      this.url.host = "";
      if (this.stateOverride) {
        return false;
      }
      this.state = "path start";
    } else {
      let host = parseHost(this.buffer, isSpecial(this.url));
      if (host === failure) {
        return failure;
      }
      if (host === "localhost") {
        host = "";
      }
      this.url.host = host;

      if (this.stateOverride) {
        return false;
      }

      this.buffer = "";
      this.state = "path start";
    }
  } else {
    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse path start"] = function parsePathStart(c) {
  if (isSpecial(this.url)) {
    if (c === 92) {
      this.parseError = true;
    }
    this.state = "path";

    if (c !== 47 && c !== 92) {
      --this.pointer;
    }
  } else if (!this.stateOverride && c === 63) {
    this.url.query = "";
    this.state = "query";
  } else if (!this.stateOverride && c === 35) {
    this.url.fragment = "";
    this.state = "fragment";
  } else if (c !== undefined) {
    this.state = "path";
    if (c !== 47) {
      --this.pointer;
    }
  }

  return true;
};

URLStateMachine.prototype["parse path"] = function parsePath(c) {
  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||
      (!this.stateOverride && (c === 63 || c === 35))) {
    if (isSpecial(this.url) && c === 92) {
      this.parseError = true;
    }

    if (isDoubleDot(this.buffer)) {
      shortenPath(this.url);
      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {
        this.url.path.push("");
      }
    } else if (isSingleDot(this.buffer) && c !== 47 &&
               !(isSpecial(this.url) && c === 92)) {
      this.url.path.push("");
    } else if (!isSingleDot(this.buffer)) {
      if (this.url.scheme === "file" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {
        if (this.url.host !== "" && this.url.host !== null) {
          this.parseError = true;
          this.url.host = "";
        }
        this.buffer = this.buffer[0] + ":";
      }
      this.url.path.push(this.buffer);
    }
    this.buffer = "";
    if (this.url.scheme === "file" && (c === undefined || c === 63 || c === 35)) {
      while (this.url.path.length > 1 && this.url.path[0] === "") {
        this.parseError = true;
        this.url.path.shift();
      }
    }
    if (c === 63) {
      this.url.query = "";
      this.state = "query";
    }
    if (c === 35) {
      this.url.fragment = "";
      this.state = "fragment";
    }
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.

    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.buffer += percentEncodeChar(c, isPathPercentEncode);
  }

  return true;
};

URLStateMachine.prototype["parse cannot-be-a-base-URL path"] = function parseCannotBeABaseURLPath(c) {
  if (c === 63) {
    this.url.query = "";
    this.state = "query";
  } else if (c === 35) {
    this.url.fragment = "";
    this.state = "fragment";
  } else {
    // TODO: Add: not a URL code point
    if (!isNaN(c) && c !== 37) {
      this.parseError = true;
    }

    if (c === 37 &&
        (!isASCIIHex(this.input[this.pointer + 1]) ||
         !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    if (!isNaN(c)) {
      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);
    }
  }

  return true;
};

URLStateMachine.prototype["parse query"] = function parseQuery(c, cStr) {
  if (isNaN(c) || (!this.stateOverride && c === 35)) {
    if (!isSpecial(this.url) || this.url.scheme === "ws" || this.url.scheme === "wss") {
      this.encodingOverride = "utf-8";
    }

    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead
    for (let i = 0; i < buffer.length; ++i) {
      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||
          buffer[i] === 0x3C || buffer[i] === 0x3E) {
        this.url.query += percentEncode(buffer[i]);
      } else {
        this.url.query += String.fromCodePoint(buffer[i]);
      }
    }

    this.buffer = "";
    if (c === 35) {
      this.url.fragment = "";
      this.state = "fragment";
    }
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.buffer += cStr;
  }

  return true;
};

URLStateMachine.prototype["parse fragment"] = function parseFragment(c) {
  if (isNaN(c)) { // do nothing
  } else if (c === 0x0) {
    this.parseError = true;
  } else {
    // TODO: If c is not a URL code point and not "%", parse error.
    if (c === 37 &&
      (!isASCIIHex(this.input[this.pointer + 1]) ||
        !isASCIIHex(this.input[this.pointer + 2]))) {
      this.parseError = true;
    }

    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);
  }

  return true;
};

function serializeURL(url, excludeFragment) {
  let output = url.scheme + ":";
  if (url.host !== null) {
    output += "//";

    if (url.username !== "" || url.password !== "") {
      output += url.username;
      if (url.password !== "") {
        output += ":" + url.password;
      }
      output += "@";
    }

    output += serializeHost(url.host);

    if (url.port !== null) {
      output += ":" + url.port;
    }
  } else if (url.host === null && url.scheme === "file") {
    output += "//";
  }

  if (url.cannotBeABaseURL) {
    output += url.path[0];
  } else {
    for (const string of url.path) {
      output += "/" + string;
    }
  }

  if (url.query !== null) {
    output += "?" + url.query;
  }

  if (!excludeFragment && url.fragment !== null) {
    output += "#" + url.fragment;
  }

  return output;
}

function serializeOrigin(tuple) {
  let result = tuple.scheme + "://";
  result += serializeHost(tuple.host);

  if (tuple.port !== null) {
    result += ":" + tuple.port;
  }

  return result;
}

module.exports.serializeURL = serializeURL;

module.exports.serializeURLOrigin = function (url) {
  // https://url.spec.whatwg.org/#concept-url-origin
  switch (url.scheme) {
    case "blob":
      try {
        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));
      } catch (e) {
        // serializing an opaque origin returns "null"
        return "null";
      }
    case "ftp":
    case "gopher":
    case "http":
    case "https":
    case "ws":
    case "wss":
      return serializeOrigin({
        scheme: url.scheme,
        host: url.host,
        port: url.port
      });
    case "file":
      // spec says "exercise to the reader", chrome says "file://"
      return "file://";
    default:
      // serializing an opaque origin returns "null"
      return "null";
  }
};

module.exports.basicURLParse = function (input, options) {
  if (options === undefined) {
    options = {};
  }

  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);
  if (usm.failure) {
    return "failure";
  }

  return usm.url;
};

module.exports.setTheUsername = function (url, username) {
  url.username = "";
  const decoded = punycode.ucs2.decode(username);
  for (let i = 0; i < decoded.length; ++i) {
    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }
};

module.exports.setThePassword = function (url, password) {
  url.password = "";
  const decoded = punycode.ucs2.decode(password);
  for (let i = 0; i < decoded.length; ++i) {
    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);
  }
};

module.exports.serializeHost = serializeHost;

module.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;

module.exports.serializeInteger = function (integer) {
  return String(integer);
};

module.exports.parseURL = function (input, options) {
  if (options === undefined) {
    options = {};
  }

  // We don't handle blobs, so this just delegates:
  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });
};


/***/ }),

/***/ 3185:
/***/ ((module) => {

"use strict";


module.exports.mixin = function mixin(target, source) {
  const keys = Object.getOwnPropertyNames(source);
  for (let i = 0; i < keys.length; ++i) {
    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));
  }
};

module.exports.wrapperSymbol = Symbol("wrapper");
module.exports.implSymbol = Symbol("impl");

module.exports.wrapperForImpl = function (impl) {
  return impl[module.exports.wrapperSymbol];
};

module.exports.implForWrapper = function (wrapper) {
  return wrapper[module.exports.implSymbol];
};



/***/ }),

/***/ 4207:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

module.exports = which
which.sync = whichSync

var isWindows = process.platform === 'win32' ||
    process.env.OSTYPE === 'cygwin' ||
    process.env.OSTYPE === 'msys'

var path = __nccwpck_require__(5622)
var COLON = isWindows ? ';' : ':'
var isexe = __nccwpck_require__(7126)

function getNotFoundError (cmd) {
  var er = new Error('not found: ' + cmd)
  er.code = 'ENOENT'

  return er
}

function getPathInfo (cmd, opt) {
  var colon = opt.colon || COLON
  var pathEnv = opt.path || process.env.PATH || ''
  var pathExt = ['']

  pathEnv = pathEnv.split(colon)

  var pathExtExe = ''
  if (isWindows) {
    pathEnv.unshift(process.cwd())
    pathExtExe = (opt.pathExt || process.env.PATHEXT || '.EXE;.CMD;.BAT;.COM')
    pathExt = pathExtExe.split(colon)


    // Always test the cmd itself first.  isexe will check to make sure
    // it's found in the pathExt set.
    if (cmd.indexOf('.') !== -1 && pathExt[0] !== '')
      pathExt.unshift('')
  }

  // If it has a slash, then we don't bother searching the pathenv.
  // just check the file itself, and that's it.
  if (cmd.match(/\//) || isWindows && cmd.match(/\\/))
    pathEnv = ['']

  return {
    env: pathEnv,
    ext: pathExt,
    extExe: pathExtExe
  }
}

function which (cmd, opt, cb) {
  if (typeof opt === 'function') {
    cb = opt
    opt = {}
  }

  var info = getPathInfo(cmd, opt)
  var pathEnv = info.env
  var pathExt = info.ext
  var pathExtExe = info.extExe
  var found = []

  ;(function F (i, l) {
    if (i === l) {
      if (opt.all && found.length)
        return cb(null, found)
      else
        return cb(getNotFoundError(cmd))
    }

    var pathPart = pathEnv[i]
    if (pathPart.charAt(0) === '"' && pathPart.slice(-1) === '"')
      pathPart = pathPart.slice(1, -1)

    var p = path.join(pathPart, cmd)
    if (!pathPart && (/^\.[\\\/]/).test(cmd)) {
      p = cmd.slice(0, 2) + p
    }
    ;(function E (ii, ll) {
      if (ii === ll) return F(i + 1, l)
      var ext = pathExt[ii]
      isexe(p + ext, { pathExt: pathExtExe }, function (er, is) {
        if (!er && is) {
          if (opt.all)
            found.push(p + ext)
          else
            return cb(null, p + ext)
        }
        return E(ii + 1, ll)
      })
    })(0, pathExt.length)
  })(0, pathEnv.length)
}

function whichSync (cmd, opt) {
  opt = opt || {}

  var info = getPathInfo(cmd, opt)
  var pathEnv = info.env
  var pathExt = info.ext
  var pathExtExe = info.extExe
  var found = []

  for (var i = 0, l = pathEnv.length; i < l; i ++) {
    var pathPart = pathEnv[i]
    if (pathPart.charAt(0) === '"' && pathPart.slice(-1) === '"')
      pathPart = pathPart.slice(1, -1)

    var p = path.join(pathPart, cmd)
    if (!pathPart && /^\.[\\\/]/.test(cmd)) {
      p = cmd.slice(0, 2) + p
    }
    for (var j = 0, ll = pathExt.length; j < ll; j ++) {
      var cur = p + pathExt[j]
      var is
      try {
        is = isexe.sync(cur, { pathExt: pathExtExe })
        if (is) {
          if (opt.all)
            found.push(cur)
          else
            return cur
        }
      } catch (ex) {}
    }
  }

  if (opt.all && found.length)
    return found

  if (opt.nothrow)
    return null

  throw getNotFoundError(cmd)
}


/***/ }),

/***/ 3515:
/***/ ((module, __unused_webpack_exports, __nccwpck_require__) => {

"use strict";

const os = __nccwpck_require__(2087);
const execa = __nccwpck_require__(5447);

// Reference: https://www.gaijin.at/en/lstwinver.php
const names = new Map([
	['10.0', '10'],
	['6.3', '8.1'],
	['6.2', '8'],
	['6.1', '7'],
	['6.0', 'Vista'],
	['5.2', 'Server 2003'],
	['5.1', 'XP'],
	['5.0', '2000'],
	['4.9', 'ME'],
	['4.1', '98'],
	['4.0', '95']
]);

const windowsRelease = release => {
	const version = /\d+\.\d/.exec(release || os.release());

	if (release && !version) {
		throw new Error('`release` argument doesn\'t match `n.n`');
	}

	const ver = (version || [])[0];

	// Server 2008, 2012, 2016, and 2019 versions are ambiguous with desktop versions and must be detected at runtime.
	// If `release` is omitted or we're on a Windows system, and the version number is an ambiguous version
	// then use `wmic` to get the OS caption: https://msdn.microsoft.com/en-us/library/aa394531(v=vs.85).aspx
	// If `wmic` is obsoloete (later versions of Windows 10), use PowerShell instead.
	// If the resulting caption contains the year 2008, 2012, 2016 or 2019, it is a server version, so return a server OS name.
	if ((!release || release === os.release()) && ['6.1', '6.2', '6.3', '10.0'].includes(ver)) {
		let stdout;
		try {
			stdout = execa.sync('wmic', ['os', 'get', 'Caption']).stdout || '';
		} catch (_) {
			stdout = execa.sync('powershell', ['(Get-CimInstance -ClassName Win32_OperatingSystem).caption']).stdout || '';
		}

		const year = (stdout.match(/2008|2012|2016|2019/) || [])[0];

		if (year) {
			return `Server ${year}`;
		}
	}

	return names.get(ver);
};

module.exports = windowsRelease;


/***/ }),

/***/ 2940:
/***/ ((module) => {

// Returns a wrapper function that returns a wrapped callback
// The wrapper function should do some stuff, and return a
// presumably different callback function.
// This makes sure that own properties are retained, so that
// decorations and such are not lost along the way.
module.exports = wrappy
function wrappy (fn, cb) {
  if (fn && cb) return wrappy(fn)(cb)

  if (typeof fn !== 'function')
    throw new TypeError('need wrapper function')

  Object.keys(fn).forEach(function (k) {
    wrapper[k] = fn[k]
  })

  return wrapper

  function wrapper() {
    var args = new Array(arguments.length)
    for (var i = 0; i < args.length; i++) {
      args[i] = arguments[i]
    }
    var ret = fn.apply(this, args)
    var cb = args[args.length-1]
    if (typeof ret === 'function' && ret !== cb) {
      Object.keys(cb).forEach(function (k) {
        ret[k] = cb[k]
      })
    }
    return ret
  }
}


/***/ }),

/***/ 2877:
/***/ ((module) => {

module.exports = eval("require")("encoding");


/***/ }),

/***/ 68:
/***/ ((module) => {

"use strict";
module.exports = JSON.parse('[[[0,44],"disallowed_STD3_valid"],[[45,46],"valid"],[[47,47],"disallowed_STD3_valid"],[[48,57],"valid"],[[58,64],"disallowed_STD3_valid"],[[65,65],"mapped",[97]],[[66,66],"mapped",[98]],[[67,67],"mapped",[99]],[[68,68],"mapped",[100]],[[69,69],"mapped",[101]],[[70,70],"mapped",[102]],[[71,71],"mapped",[103]],[[72,72],"mapped",[104]],[[73,73],"mapped",[105]],[[74,74],"mapped",[106]],[[75,75],"mapped",[107]],[[76,76],"mapped",[108]],[[77,77],"mapped",[109]],[[78,78],"mapped",[110]],[[79,79],"mapped",[111]],[[80,80],"mapped",[112]],[[81,81],"mapped",[113]],[[82,82],"mapped",[114]],[[83,83],"mapped",[115]],[[84,84],"mapped",[116]],[[85,85],"mapped",[117]],[[86,86],"mapped",[118]],[[87,87],"mapped",[119]],[[88,88],"mapped",[120]],[[89,89],"mapped",[121]],[[90,90],"mapped",[122]],[[91,96],"disallowed_STD3_valid"],[[97,122],"valid"],[[123,127],"disallowed_STD3_valid"],[[128,159],"disallowed"],[[160,160],"disallowed_STD3_mapped",[32]],[[161,167],"valid",[],"NV8"],[[168,168],"disallowed_STD3_mapped",[32,776]],[[169,169],"valid",[],"NV8"],[[170,170],"mapped",[97]],[[171,172],"valid",[],"NV8"],[[173,173],"ignored"],[[174,174],"valid",[],"NV8"],[[175,175],"disallowed_STD3_mapped",[32,772]],[[176,177],"valid",[],"NV8"],[[178,178],"mapped",[50]],[[179,179],"mapped",[51]],[[180,180],"disallowed_STD3_mapped",[32,769]],[[181,181],"mapped",[956]],[[182,182],"valid",[],"NV8"],[[183,183],"valid"],[[184,184],"disallowed_STD3_mapped",[32,807]],[[185,185],"mapped",[49]],[[186,186],"mapped",[111]],[[187,187],"valid",[],"NV8"],[[188,188],"mapped",[49,8260,52]],[[189,189],"mapped",[49,8260,50]],[[190,190],"mapped",[51,8260,52]],[[191,191],"valid",[],"NV8"],[[192,192],"mapped",[224]],[[193,193],"mapped",[225]],[[194,194],"mapped",[226]],[[195,195],"mapped",[227]],[[196,196],"mapped",[228]],[[197,197],"mapped",[229]],[[198,198],"mapped",[230]],[[199,199],"mapped",[231]],[[200,200],"mapped",[232]],[[201,201],"mapped",[233]],[[202,202],"mapped",[234]],[[203,203],"mapped",[235]],[[204,204],"mapped",[236]],[[205,205],"mapped",[237]],[[206,206],"mapped",[238]],[[207,207],"mapped",[239]],[[208,208],"mapped",[240]],[[209,209],"mapped",[241]],[[210,210],"mapped",[242]],[[211,211],"mapped",[243]],[[212,212],"mapped",[244]],[[213,213],"mapped",[245]],[[214,214],"mapped",[246]],[[215,215],"valid",[],"NV8"],[[216,216],"mapped",[248]],[[217,217],"mapped",[249]],[[218,218],"mapped",[250]],[[219,219],"mapped",[251]],[[220,220],"mapped",[252]],[[221,221],"mapped",[253]],[[222,222],"mapped",[254]],[[223,223],"deviation",[115,115]],[[224,246],"valid"],[[247,247],"valid",[],"NV8"],[[248,255],"valid"],[[256,256],"mapped",[257]],[[257,257],"valid"],[[258,258],"mapped",[259]],[[259,259],"valid"],[[260,260],"mapped",[261]],[[261,261],"valid"],[[262,262],"mapped",[263]],[[263,263],"valid"],[[264,264],"mapped",[265]],[[265,265],"valid"],[[266,266],"mapped",[267]],[[267,267],"valid"],[[268,268],"mapped",[269]],[[269,269],"valid"],[[270,270],"mapped",[271]],[[271,271],"valid"],[[272,272],"mapped",[273]],[[273,273],"valid"],[[274,274],"mapped",[275]],[[275,275],"valid"],[[276,276],"mapped",[277]],[[277,277],"valid"],[[278,278],"mapped",[279]],[[279,279],"valid"],[[280,280],"mapped",[281]],[[281,281],"valid"],[[282,282],"mapped",[283]],[[283,283],"valid"],[[284,284],"mapped",[285]],[[285,285],"valid"],[[286,286],"mapped",[287]],[[287,287],"valid"],[[288,288],"mapped",[289]],[[289,289],"valid"],[[290,290],"mapped",[291]],[[291,291],"valid"],[[292,292],"mapped",[293]],[[293,293],"valid"],[[294,294],"mapped",[295]],[[295,295],"valid"],[[296,296],"mapped",[297]],[[297,297],"valid"],[[298,298],"mapped",[299]],[[299,299],"valid"],[[300,300],"mapped",[301]],[[301,301],"valid"],[[302,302],"mapped",[303]],[[303,303],"valid"],[[304,304],"mapped",[105,775]],[[305,305],"valid"],[[306,307],"mapped",[105,106]],[[308,308],"mapped",[309]],[[309,309],"valid"],[[310,310],"mapped",[311]],[[311,312],"valid"],[[313,313],"mapped",[314]],[[314,314],"valid"],[[315,315],"mapped",[316]],[[316,316],"valid"],[[317,317],"mapped",[318]],[[318,318],"valid"],[[319,320],"mapped",[108,183]],[[321,321],"mapped",[322]],[[322,322],"valid"],[[323,323],"mapped",[324]],[[324,324],"valid"],[[325,325],"mapped",[326]],[[326,326],"valid"],[[327,327],"mapped",[328]],[[328,328],"valid"],[[329,329],"mapped",[700,110]],[[330,330],"mapped",[331]],[[331,331],"valid"],[[332,332],"mapped",[333]],[[333,333],"valid"],[[334,334],"mapped",[335]],[[335,335],"valid"],[[336,336],"mapped",[337]],[[337,337],"valid"],[[338,338],"mapped",[339]],[[339,339],"valid"],[[340,340],"mapped",[341]],[[341,341],"valid"],[[342,342],"mapped",[343]],[[343,343],"valid"],[[344,344],"mapped",[345]],[[345,345],"valid"],[[346,346],"mapped",[347]],[[347,347],"valid"],[[348,348],"mapped",[349]],[[349,349],"valid"],[[350,350],"mapped",[351]],[[351,351],"valid"],[[352,352],"mapped",[353]],[[353,353],"valid"],[[354,354],"mapped",[355]],[[355,355],"valid"],[[356,356],"mapped",[357]],[[357,357],"valid"],[[358,358],"mapped",[359]],[[359,359],"valid"],[[360,360],"mapped",[361]],[[361,361],"valid"],[[362,362],"mapped",[363]],[[363,363],"valid"],[[364,364],"mapped",[365]],[[365,365],"valid"],[[366,366],"mapped",[367]],[[367,367],"valid"],[[368,368],"mapped",[369]],[[369,369],"valid"],[[370,370],"mapped",[371]],[[371,371],"valid"],[[372,372],"mapped",[373]],[[373,373],"valid"],[[374,374],"mapped",[375]],[[375,375],"valid"],[[376,376],"mapped",[255]],[[377,377],"mapped",[378]],[[378,378],"valid"],[[379,379],"mapped",[380]],[[380,380],"valid"],[[381,381],"mapped",[382]],[[382,382],"valid"],[[383,383],"mapped",[115]],[[384,384],"valid"],[[385,385],"mapped",[595]],[[386,386],"mapped",[387]],[[387,387],"valid"],[[388,388],"mapped",[389]],[[389,389],"valid"],[[390,390],"mapped",[596]],[[391,391],"mapped",[392]],[[392,392],"valid"],[[393,393],"mapped",[598]],[[394,394],"mapped",[599]],[[395,395],"mapped",[396]],[[396,397],"valid"],[[398,398],"mapped",[477]],[[399,399],"mapped",[601]],[[400,400],"mapped",[603]],[[401,401],"mapped",[402]],[[402,402],"valid"],[[403,403],"mapped",[608]],[[404,404],"mapped",[611]],[[405,405],"valid"],[[406,406],"mapped",[617]],[[407,407],"mapped",[616]],[[408,408],"mapped",[409]],[[409,411],"valid"],[[412,412],"mapped",[623]],[[413,413],"mapped",[626]],[[414,414],"valid"],[[415,415],"mapped",[629]],[[416,416],"mapped",[417]],[[417,417],"valid"],[[418,418],"mapped",[419]],[[419,419],"valid"],[[420,420],"mapped",[421]],[[421,421],"valid"],[[422,422],"mapped",[640]],[[423,423],"mapped",[424]],[[424,424],"valid"],[[425,425],"mapped",[643]],[[426,427],"valid"],[[428,428],"mapped",[429]],[[429,429],"valid"],[[430,430],"mapped",[648]],[[431,431],"mapped",[432]],[[432,432],"valid"],[[433,433],"mapped",[650]],[[434,434],"mapped",[651]],[[435,435],"mapped",[436]],[[436,436],"valid"],[[437,437],"mapped",[438]],[[438,438],"valid"],[[439,439],"mapped",[658]],[[440,440],"mapped",[441]],[[441,443],"valid"],[[444,444],"mapped",[445]],[[445,451],"valid"],[[452,454],"mapped",[100,382]],[[455,457],"mapped",[108,106]],[[458,460],"mapped",[110,106]],[[461,461],"mapped",[462]],[[462,462],"valid"],[[463,463],"mapped",[464]],[[464,464],"valid"],[[465,465],"mapped",[466]],[[466,466],"valid"],[[467,467],"mapped",[468]],[[468,468],"valid"],[[469,469],"mapped",[470]],[[470,470],"valid"],[[471,471],"mapped",[472]],[[472,472],"valid"],[[473,473],"mapped",[474]],[[474,474],"valid"],[[475,475],"mapped",[476]],[[476,477],"valid"],[[478,478],"mapped",[479]],[[479,479],"valid"],[[480,480],"mapped",[481]],[[481,481],"valid"],[[482,482],"mapped",[483]],[[483,483],"valid"],[[484,484],"mapped",[485]],[[485,485],"valid"],[[486,486],"mapped",[487]],[[487,487],"valid"],[[488,488],"mapped",[489]],[[489,489],"valid"],[[490,490],"mapped",[491]],[[491,491],"valid"],[[492,492],"mapped",[493]],[[493,493],"valid"],[[494,494],"mapped",[495]],[[495,496],"valid"],[[497,499],"mapped",[100,122]],[[500,500],"mapped",[501]],[[501,501],"valid"],[[502,502],"mapped",[405]],[[503,503],"mapped",[447]],[[504,504],"mapped",[505]],[[505,505],"valid"],[[506,506],"mapped",[507]],[[507,507],"valid"],[[508,508],"mapped",[509]],[[509,509],"valid"],[[510,510],"mapped",[511]],[[511,511],"valid"],[[512,512],"mapped",[513]],[[513,513],"valid"],[[514,514],"mapped",[515]],[[515,515],"valid"],[[516,516],"mapped",[517]],[[517,517],"valid"],[[518,518],"mapped",[519]],[[519,519],"valid"],[[520,520],"mapped",[521]],[[521,521],"valid"],[[522,522],"mapped",[523]],[[523,523],"valid"],[[524,524],"mapped",[525]],[[525,525],"valid"],[[526,526],"mapped",[527]],[[527,527],"valid"],[[528,528],"mapped",[529]],[[529,529],"valid"],[[530,530],"mapped",[531]],[[531,531],"valid"],[[532,532],"mapped",[533]],[[533,533],"valid"],[[534,534],"mapped",[535]],[[535,535],"valid"],[[536,536],"mapped",[537]],[[537,537],"valid"],[[538,538],"mapped",[539]],[[539,539],"valid"],[[540,540],"mapped",[541]],[[541,541],"valid"],[[542,542],"mapped",[543]],[[543,543],"valid"],[[544,544],"mapped",[414]],[[545,545],"valid"],[[546,546],"mapped",[547]],[[547,547],"valid"],[[548,548],"mapped",[549]],[[549,549],"valid"],[[550,550],"mapped",[551]],[[551,551],"valid"],[[552,552],"mapped",[553]],[[553,553],"valid"],[[554,554],"mapped",[555]],[[555,555],"valid"],[[556,556],"mapped",[557]],[[557,557],"valid"],[[558,558],"mapped",[559]],[[559,559],"valid"],[[560,560],"mapped",[561]],[[561,561],"valid"],[[562,562],"mapped",[563]],[[563,563],"valid"],[[564,566],"valid"],[[567,569],"valid"],[[570,570],"mapped",[11365]],[[571,571],"mapped",[572]],[[572,572],"valid"],[[573,573],"mapped",[410]],[[574,574],"mapped",[11366]],[[575,576],"valid"],[[577,577],"mapped",[578]],[[578,578],"valid"],[[579,579],"mapped",[384]],[[580,580],"mapped",[649]],[[581,581],"mapped",[652]],[[582,582],"mapped",[583]],[[583,583],"valid"],[[584,584],"mapped",[585]],[[585,585],"valid"],[[586,586],"mapped",[587]],[[587,587],"valid"],[[588,588],"mapped",[589]],[[589,589],"valid"],[[590,590],"mapped",[591]],[[591,591],"valid"],[[592,680],"valid"],[[681,685],"valid"],[[686,687],"valid"],[[688,688],"mapped",[104]],[[689,689],"mapped",[614]],[[690,690],"mapped",[106]],[[691,691],"mapped",[114]],[[692,692],"mapped",[633]],[[693,693],"mapped",[635]],[[694,694],"mapped",[641]],[[695,695],"mapped",[119]],[[696,696],"mapped",[121]],[[697,705],"valid"],[[706,709],"valid",[],"NV8"],[[710,721],"valid"],[[722,727],"valid",[],"NV8"],[[728,728],"disallowed_STD3_mapped",[32,774]],[[729,729],"disallowed_STD3_mapped",[32,775]],[[730,730],"disallowed_STD3_mapped",[32,778]],[[731,731],"disallowed_STD3_mapped",[32,808]],[[732,732],"disallowed_STD3_mapped",[32,771]],[[733,733],"disallowed_STD3_mapped",[32,779]],[[734,734],"valid",[],"NV8"],[[735,735],"valid",[],"NV8"],[[736,736],"mapped",[611]],[[737,737],"mapped",[108]],[[738,738],"mapped",[115]],[[739,739],"mapped",[120]],[[740,740],"mapped",[661]],[[741,745],"valid",[],"NV8"],[[746,747],"valid",[],"NV8"],[[748,748],"valid"],[[749,749],"valid",[],"NV8"],[[750,750],"valid"],[[751,767],"valid",[],"NV8"],[[768,831],"valid"],[[832,832],"mapped",[768]],[[833,833],"mapped",[769]],[[834,834],"valid"],[[835,835],"mapped",[787]],[[836,836],"mapped",[776,769]],[[837,837],"mapped",[953]],[[838,846],"valid"],[[847,847],"ignored"],[[848,855],"valid"],[[856,860],"valid"],[[861,863],"valid"],[[864,865],"valid"],[[866,866],"valid"],[[867,879],"valid"],[[880,880],"mapped",[881]],[[881,881],"valid"],[[882,882],"mapped",[883]],[[883,883],"valid"],[[884,884],"mapped",[697]],[[885,885],"valid"],[[886,886],"mapped",[887]],[[887,887],"valid"],[[888,889],"disallowed"],[[890,890],"disallowed_STD3_mapped",[32,953]],[[891,893],"valid"],[[894,894],"disallowed_STD3_mapped",[59]],[[895,895],"mapped",[1011]],[[896,899],"disallowed"],[[900,900],"disallowed_STD3_mapped",[32,769]],[[901,901],"disallowed_STD3_mapped",[32,776,769]],[[902,902],"mapped",[940]],[[903,903],"mapped",[183]],[[904,904],"mapped",[941]],[[905,905],"mapped",[942]],[[906,906],"mapped",[943]],[[907,907],"disallowed"],[[908,908],"mapped",[972]],[[909,909],"disallowed"],[[910,910],"mapped",[973]],[[911,911],"mapped",[974]],[[912,912],"valid"],[[913,913],"mapped",[945]],[[914,914],"mapped",[946]],[[915,915],"mapped",[947]],[[916,916],"mapped",[948]],[[917,917],"mapped",[949]],[[918,918],"mapped",[950]],[[919,919],"mapped",[951]],[[920,920],"mapped",[952]],[[921,921],"mapped",[953]],[[922,922],"mapped",[954]],[[923,923],"mapped",[955]],[[924,924],"mapped",[956]],[[925,925],"mapped",[957]],[[926,926],"mapped",[958]],[[927,927],"mapped",[959]],[[928,928],"mapped",[960]],[[929,929],"mapped",[961]],[[930,930],"disallowed"],[[931,931],"mapped",[963]],[[932,932],"mapped",[964]],[[933,933],"mapped",[965]],[[934,934],"mapped",[966]],[[935,935],"mapped",[967]],[[936,936],"mapped",[968]],[[937,937],"mapped",[969]],[[938,938],"mapped",[970]],[[939,939],"mapped",[971]],[[940,961],"valid"],[[962,962],"deviation",[963]],[[963,974],"valid"],[[975,975],"mapped",[983]],[[976,976],"mapped",[946]],[[977,977],"mapped",[952]],[[978,978],"mapped",[965]],[[979,979],"mapped",[973]],[[980,980],"mapped",[971]],[[981,981],"mapped",[966]],[[982,982],"mapped",[960]],[[983,983],"valid"],[[984,984],"mapped",[985]],[[985,985],"valid"],[[986,986],"mapped",[987]],[[987,987],"valid"],[[988,988],"mapped",[989]],[[989,989],"valid"],[[990,990],"mapped",[991]],[[991,991],"valid"],[[992,992],"mapped",[993]],[[993,993],"valid"],[[994,994],"mapped",[995]],[[995,995],"valid"],[[996,996],"mapped",[997]],[[997,997],"valid"],[[998,998],"mapped",[999]],[[999,999],"valid"],[[1000,1000],"mapped",[1001]],[[1001,1001],"valid"],[[1002,1002],"mapped",[1003]],[[1003,1003],"valid"],[[1004,1004],"mapped",[1005]],[[1005,1005],"valid"],[[1006,1006],"mapped",[1007]],[[1007,1007],"valid"],[[1008,1008],"mapped",[954]],[[1009,1009],"mapped",[961]],[[1010,1010],"mapped",[963]],[[1011,1011],"valid"],[[1012,1012],"mapped",[952]],[[1013,1013],"mapped",[949]],[[1014,1014],"valid",[],"NV8"],[[1015,1015],"mapped",[1016]],[[1016,1016],"valid"],[[1017,1017],"mapped",[963]],[[1018,1018],"mapped",[1019]],[[1019,1019],"valid"],[[1020,1020],"valid"],[[1021,1021],"mapped",[891]],[[1022,1022],"mapped",[892]],[[1023,1023],"mapped",[893]],[[1024,1024],"mapped",[1104]],[[1025,1025],"mapped",[1105]],[[1026,1026],"mapped",[1106]],[[1027,1027],"mapped",[1107]],[[1028,1028],"mapped",[1108]],[[1029,1029],"mapped",[1109]],[[1030,1030],"mapped",[1110]],[[1031,1031],"mapped",[1111]],[[1032,1032],"mapped",[1112]],[[1033,1033],"mapped",[1113]],[[1034,1034],"mapped",[1114]],[[1035,1035],"mapped",[1115]],[[1036,1036],"mapped",[1116]],[[1037,1037],"mapped",[1117]],[[1038,1038],"mapped",[1118]],[[1039,1039],"mapped",[1119]],[[1040,1040],"mapped",[1072]],[[1041,1041],"mapped",[1073]],[[1042,1042],"mapped",[1074]],[[1043,1043],"mapped",[1075]],[[1044,1044],"mapped",[1076]],[[1045,1045],"mapped",[1077]],[[1046,1046],"mapped",[1078]],[[1047,1047],"mapped",[1079]],[[1048,1048],"mapped",[1080]],[[1049,1049],"mapped",[1081]],[[1050,1050],"mapped",[1082]],[[1051,1051],"mapped",[1083]],[[1052,1052],"mapped",[1084]],[[1053,1053],"mapped",[1085]],[[1054,1054],"mapped",[1086]],[[1055,1055],"mapped",[1087]],[[1056,1056],"mapped",[1088]],[[1057,1057],"mapped",[1089]],[[1058,1058],"mapped",[1090]],[[1059,1059],"mapped",[1091]],[[1060,1060],"mapped",[1092]],[[1061,1061],"mapped",[1093]],[[1062,1062],"mapped",[1094]],[[1063,1063],"mapped",[1095]],[[1064,1064],"mapped",[1096]],[[1065,1065],"mapped",[1097]],[[1066,1066],"mapped",[1098]],[[1067,1067],"mapped",[1099]],[[1068,1068],"mapped",[1100]],[[1069,1069],"mapped",[1101]],[[1070,1070],"mapped",[1102]],[[1071,1071],"mapped",[1103]],[[1072,1103],"valid"],[[1104,1104],"valid"],[[1105,1116],"valid"],[[1117,1117],"valid"],[[1118,1119],"valid"],[[1120,1120],"mapped",[1121]],[[1121,1121],"valid"],[[1122,1122],"mapped",[1123]],[[1123,1123],"valid"],[[1124,1124],"mapped",[1125]],[[1125,1125],"valid"],[[1126,1126],"mapped",[1127]],[[1127,1127],"valid"],[[1128,1128],"mapped",[1129]],[[1129,1129],"valid"],[[1130,1130],"mapped",[1131]],[[1131,1131],"valid"],[[1132,1132],"mapped",[1133]],[[1133,1133],"valid"],[[1134,1134],"mapped",[1135]],[[1135,1135],"valid"],[[1136,1136],"mapped",[1137]],[[1137,1137],"valid"],[[1138,1138],"mapped",[1139]],[[1139,1139],"valid"],[[1140,1140],"mapped",[1141]],[[1141,1141],"valid"],[[1142,1142],"mapped",[1143]],[[1143,1143],"valid"],[[1144,1144],"mapped",[1145]],[[1145,1145],"valid"],[[1146,1146],"mapped",[1147]],[[1147,1147],"valid"],[[1148,1148],"mapped",[1149]],[[1149,1149],"valid"],[[1150,1150],"mapped",[1151]],[[1151,1151],"valid"],[[1152,1152],"mapped",[1153]],[[1153,1153],"valid"],[[1154,1154],"valid",[],"NV8"],[[1155,1158],"valid"],[[1159,1159],"valid"],[[1160,1161],"valid",[],"NV8"],[[1162,1162],"mapped",[1163]],[[1163,1163],"valid"],[[1164,1164],"mapped",[1165]],[[1165,1165],"valid"],[[1166,1166],"mapped",[1167]],[[1167,1167],"valid"],[[1168,1168],"mapped",[1169]],[[1169,1169],"valid"],[[1170,1170],"mapped",[1171]],[[1171,1171],"valid"],[[1172,1172],"mapped",[1173]],[[1173,1173],"valid"],[[1174,1174],"mapped",[1175]],[[1175,1175],"valid"],[[1176,1176],"mapped",[1177]],[[1177,1177],"valid"],[[1178,1178],"mapped",[1179]],[[1179,1179],"valid"],[[1180,1180],"mapped",[1181]],[[1181,1181],"valid"],[[1182,1182],"mapped",[1183]],[[1183,1183],"valid"],[[1184,1184],"mapped",[1185]],[[1185,1185],"valid"],[[1186,1186],"mapped",[1187]],[[1187,1187],"valid"],[[1188,1188],"mapped",[1189]],[[1189,1189],"valid"],[[1190,1190],"mapped",[1191]],[[1191,1191],"valid"],[[1192,1192],"mapped",[1193]],[[1193,1193],"valid"],[[1194,1194],"mapped",[1195]],[[1195,1195],"valid"],[[1196,1196],"mapped",[1197]],[[1197,1197],"valid"],[[1198,1198],"mapped",[1199]],[[1199,1199],"valid"],[[1200,1200],"mapped",[1201]],[[1201,1201],"valid"],[[1202,1202],"mapped",[1203]],[[1203,1203],"valid"],[[1204,1204],"mapped",[1205]],[[1205,1205],"valid"],[[1206,1206],"mapped",[1207]],[[1207,1207],"valid"],[[1208,1208],"mapped",[1209]],[[1209,1209],"valid"],[[1210,1210],"mapped",[1211]],[[1211,1211],"valid"],[[1212,1212],"mapped",[1213]],[[1213,1213],"valid"],[[1214,1214],"mapped",[1215]],[[1215,1215],"valid"],[[1216,1216],"disallowed"],[[1217,1217],"mapped",[1218]],[[1218,1218],"valid"],[[1219,1219],"mapped",[1220]],[[1220,1220],"valid"],[[1221,1221],"mapped",[1222]],[[1222,1222],"valid"],[[1223,1223],"mapped",[1224]],[[1224,1224],"valid"],[[1225,1225],"mapped",[1226]],[[1226,1226],"valid"],[[1227,1227],"mapped",[1228]],[[1228,1228],"valid"],[[1229,1229],"mapped",[1230]],[[1230,1230],"valid"],[[1231,1231],"valid"],[[1232,1232],"mapped",[1233]],[[1233,1233],"valid"],[[1234,1234],"mapped",[1235]],[[1235,1235],"valid"],[[1236,1236],"mapped",[1237]],[[1237,1237],"valid"],[[1238,1238],"mapped",[1239]],[[1239,1239],"valid"],[[1240,1240],"mapped",[1241]],[[1241,1241],"valid"],[[1242,1242],"mapped",[1243]],[[1243,1243],"valid"],[[1244,1244],"mapped",[1245]],[[1245,1245],"valid"],[[1246,1246],"mapped",[1247]],[[1247,1247],"valid"],[[1248,1248],"mapped",[1249]],[[1249,1249],"valid"],[[1250,1250],"mapped",[1251]],[[1251,1251],"valid"],[[1252,1252],"mapped",[1253]],[[1253,1253],"valid"],[[1254,1254],"mapped",[1255]],[[1255,1255],"valid"],[[1256,1256],"mapped",[1257]],[[1257,1257],"valid"],[[1258,1258],"mapped",[1259]],[[1259,1259],"valid"],[[1260,1260],"mapped",[1261]],[[1261,1261],"valid"],[[1262,1262],"mapped",[1263]],[[1263,1263],"valid"],[[1264,1264],"mapped",[1265]],[[1265,1265],"valid"],[[1266,1266],"mapped",[1267]],[[1267,1267],"valid"],[[1268,1268],"mapped",[1269]],[[1269,1269],"valid"],[[1270,1270],"mapped",[1271]],[[1271,1271],"valid"],[[1272,1272],"mapped",[1273]],[[1273,1273],"valid"],[[1274,1274],"mapped",[1275]],[[1275,1275],"valid"],[[1276,1276],"mapped",[1277]],[[1277,1277],"valid"],[[1278,1278],"mapped",[1279]],[[1279,1279],"valid"],[[1280,1280],"mapped",[1281]],[[1281,1281],"valid"],[[1282,1282],"mapped",[1283]],[[1283,1283],"valid"],[[1284,1284],"mapped",[1285]],[[1285,1285],"valid"],[[1286,1286],"mapped",[1287]],[[1287,1287],"valid"],[[1288,1288],"mapped",[1289]],[[1289,1289],"valid"],[[1290,1290],"mapped",[1291]],[[1291,1291],"valid"],[[1292,1292],"mapped",[1293]],[[1293,1293],"valid"],[[1294,1294],"mapped",[1295]],[[1295,1295],"valid"],[[1296,1296],"mapped",[1297]],[[1297,1297],"valid"],[[1298,1298],"mapped",[1299]],[[1299,1299],"valid"],[[1300,1300],"mapped",[1301]],[[1301,1301],"valid"],[[1302,1302],"mapped",[1303]],[[1303,1303],"valid"],[[1304,1304],"mapped",[1305]],[[1305,1305],"valid"],[[1306,1306],"mapped",[1307]],[[1307,1307],"valid"],[[1308,1308],"mapped",[1309]],[[1309,1309],"valid"],[[1310,1310],"mapped",[1311]],[[1311,1311],"valid"],[[1312,1312],"mapped",[1313]],[[1313,1313],"valid"],[[1314,1314],"mapped",[1315]],[[1315,1315],"valid"],[[1316,1316],"mapped",[1317]],[[1317,1317],"valid"],[[1318,1318],"mapped",[1319]],[[1319,1319],"valid"],[[1320,1320],"mapped",[1321]],[[1321,1321],"valid"],[[1322,1322],"mapped",[1323]],[[1323,1323],"valid"],[[1324,1324],"mapped",[1325]],[[1325,1325],"valid"],[[1326,1326],"mapped",[1327]],[[1327,1327],"valid"],[[1328,1328],"disallowed"],[[1329,1329],"mapped",[1377]],[[1330,1330],"mapped",[1378]],[[1331,1331],"mapped",[1379]],[[1332,1332],"mapped",[1380]],[[1333,1333],"mapped",[1381]],[[1334,1334],"mapped",[1382]],[[1335,1335],"mapped",[1383]],[[1336,1336],"mapped",[1384]],[[1337,1337],"mapped",[1385]],[[1338,1338],"mapped",[1386]],[[1339,1339],"mapped",[1387]],[[1340,1340],"mapped",[1388]],[[1341,1341],"mapped",[1389]],[[1342,1342],"mapped",[1390]],[[1343,1343],"mapped",[1391]],[[1344,1344],"mapped",[1392]],[[1345,1345],"mapped",[1393]],[[1346,1346],"mapped",[1394]],[[1347,1347],"mapped",[1395]],[[1348,1348],"mapped",[1396]],[[1349,1349],"mapped",[1397]],[[1350,1350],"mapped",[1398]],[[1351,1351],"mapped",[1399]],[[1352,1352],"mapped",[1400]],[[1353,1353],"mapped",[1401]],[[1354,1354],"mapped",[1402]],[[1355,1355],"mapped",[1403]],[[1356,1356],"mapped",[1404]],[[1357,1357],"mapped",[1405]],[[1358,1358],"mapped",[1406]],[[1359,1359],"mapped",[1407]],[[1360,1360],"mapped",[1408]],[[1361,1361],"mapped",[1409]],[[1362,1362],"mapped",[1410]],[[1363,1363],"mapped",[1411]],[[1364,1364],"mapped",[1412]],[[1365,1365],"mapped",[1413]],[[1366,1366],"mapped",[1414]],[[1367,1368],"disallowed"],[[1369,1369],"valid"],[[1370,1375],"valid",[],"NV8"],[[1376,1376],"disallowed"],[[1377,1414],"valid"],[[1415,1415],"mapped",[1381,1410]],[[1416,1416],"disallowed"],[[1417,1417],"valid",[],"NV8"],[[1418,1418],"valid",[],"NV8"],[[1419,1420],"disallowed"],[[1421,1422],"valid",[],"NV8"],[[1423,1423],"valid",[],"NV8"],[[1424,1424],"disallowed"],[[1425,1441],"valid"],[[1442,1442],"valid"],[[1443,1455],"valid"],[[1456,1465],"valid"],[[1466,1466],"valid"],[[1467,1469],"valid"],[[1470,1470],"valid",[],"NV8"],[[1471,1471],"valid"],[[1472,1472],"valid",[],"NV8"],[[1473,1474],"valid"],[[1475,1475],"valid",[],"NV8"],[[1476,1476],"valid"],[[1477,1477],"valid"],[[1478,1478],"valid",[],"NV8"],[[1479,1479],"valid"],[[1480,1487],"disallowed"],[[1488,1514],"valid"],[[1515,1519],"disallowed"],[[1520,1524],"valid"],[[1525,1535],"disallowed"],[[1536,1539],"disallowed"],[[1540,1540],"disallowed"],[[1541,1541],"disallowed"],[[1542,1546],"valid",[],"NV8"],[[1547,1547],"valid",[],"NV8"],[[1548,1548],"valid",[],"NV8"],[[1549,1551],"valid",[],"NV8"],[[1552,1557],"valid"],[[1558,1562],"valid"],[[1563,1563],"valid",[],"NV8"],[[1564,1564],"disallowed"],[[1565,1565],"disallowed"],[[1566,1566],"valid",[],"NV8"],[[1567,1567],"valid",[],"NV8"],[[1568,1568],"valid"],[[1569,1594],"valid"],[[1595,1599],"valid"],[[1600,1600],"valid",[],"NV8"],[[1601,1618],"valid"],[[1619,1621],"valid"],[[1622,1624],"valid"],[[1625,1630],"valid"],[[1631,1631],"valid"],[[1632,1641],"valid"],[[1642,1645],"valid",[],"NV8"],[[1646,1647],"valid"],[[1648,1652],"valid"],[[1653,1653],"mapped",[1575,1652]],[[1654,1654],"mapped",[1608,1652]],[[1655,1655],"mapped",[1735,1652]],[[1656,1656],"mapped",[1610,1652]],[[1657,1719],"valid"],[[1720,1721],"valid"],[[1722,1726],"valid"],[[1727,1727],"valid"],[[1728,1742],"valid"],[[1743,1743],"valid"],[[1744,1747],"valid"],[[1748,1748],"valid",[],"NV8"],[[1749,1756],"valid"],[[1757,1757],"disallowed"],[[1758,1758],"valid",[],"NV8"],[[1759,1768],"valid"],[[1769,1769],"valid",[],"NV8"],[[1770,1773],"valid"],[[1774,1775],"valid"],[[1776,1785],"valid"],[[1786,1790],"valid"],[[1791,1791],"valid"],[[1792,1805],"valid",[],"NV8"],[[1806,1806],"disallowed"],[[1807,1807],"disallowed"],[[1808,1836],"valid"],[[1837,1839],"valid"],[[1840,1866],"valid"],[[1867,1868],"disallowed"],[[1869,1871],"valid"],[[1872,1901],"valid"],[[1902,1919],"valid"],[[1920,1968],"valid"],[[1969,1969],"valid"],[[1970,1983],"disallowed"],[[1984,2037],"valid"],[[2038,2042],"valid",[],"NV8"],[[2043,2047],"disallowed"],[[2048,2093],"valid"],[[2094,2095],"disallowed"],[[2096,2110],"valid",[],"NV8"],[[2111,2111],"disallowed"],[[2112,2139],"valid"],[[2140,2141],"disallowed"],[[2142,2142],"valid",[],"NV8"],[[2143,2207],"disallowed"],[[2208,2208],"valid"],[[2209,2209],"valid"],[[2210,2220],"valid"],[[2221,2226],"valid"],[[2227,2228],"valid"],[[2229,2274],"disallowed"],[[2275,2275],"valid"],[[2276,2302],"valid"],[[2303,2303],"valid"],[[2304,2304],"valid"],[[2305,2307],"valid"],[[2308,2308],"valid"],[[2309,2361],"valid"],[[2362,2363],"valid"],[[2364,2381],"valid"],[[2382,2382],"valid"],[[2383,2383],"valid"],[[2384,2388],"valid"],[[2389,2389],"valid"],[[2390,2391],"valid"],[[2392,2392],"mapped",[2325,2364]],[[2393,2393],"mapped",[2326,2364]],[[2394,2394],"mapped",[2327,2364]],[[2395,2395],"mapped",[2332,2364]],[[2396,2396],"mapped",[2337,2364]],[[2397,2397],"mapped",[2338,2364]],[[2398,2398],"mapped",[2347,2364]],[[2399,2399],"mapped",[2351,2364]],[[2400,2403],"valid"],[[2404,2405],"valid",[],"NV8"],[[2406,2415],"valid"],[[2416,2416],"valid",[],"NV8"],[[2417,2418],"valid"],[[2419,2423],"valid"],[[2424,2424],"valid"],[[2425,2426],"valid"],[[2427,2428],"valid"],[[2429,2429],"valid"],[[2430,2431],"valid"],[[2432,2432],"valid"],[[2433,2435],"valid"],[[2436,2436],"disallowed"],[[2437,2444],"valid"],[[2445,2446],"disallowed"],[[2447,2448],"valid"],[[2449,2450],"disallowed"],[[2451,2472],"valid"],[[2473,2473],"disallowed"],[[2474,2480],"valid"],[[2481,2481],"disallowed"],[[2482,2482],"valid"],[[2483,2485],"disallowed"],[[2486,2489],"valid"],[[2490,2491],"disallowed"],[[2492,2492],"valid"],[[2493,2493],"valid"],[[2494,2500],"valid"],[[2501,2502],"disallowed"],[[2503,2504],"valid"],[[2505,2506],"disallowed"],[[2507,2509],"valid"],[[2510,2510],"valid"],[[2511,2518],"disallowed"],[[2519,2519],"valid"],[[2520,2523],"disallowed"],[[2524,2524],"mapped",[2465,2492]],[[2525,2525],"mapped",[2466,2492]],[[2526,2526],"disallowed"],[[2527,2527],"mapped",[2479,2492]],[[2528,2531],"valid"],[[2532,2533],"disallowed"],[[2534,2545],"valid"],[[2546,2554],"valid",[],"NV8"],[[2555,2555],"valid",[],"NV8"],[[2556,2560],"disallowed"],[[2561,2561],"valid"],[[2562,2562],"valid"],[[2563,2563],"valid"],[[2564,2564],"disallowed"],[[2565,2570],"valid"],[[2571,2574],"disallowed"],[[2575,2576],"valid"],[[2577,2578],"disallowed"],[[2579,2600],"valid"],[[2601,2601],"disallowed"],[[2602,2608],"valid"],[[2609,2609],"disallowed"],[[2610,2610],"valid"],[[2611,2611],"mapped",[2610,2620]],[[2612,2612],"disallowed"],[[2613,2613],"valid"],[[2614,2614],"mapped",[2616,2620]],[[2615,2615],"disallowed"],[[2616,2617],"valid"],[[2618,2619],"disallowed"],[[2620,2620],"valid"],[[2621,2621],"disallowed"],[[2622,2626],"valid"],[[2627,2630],"disallowed"],[[2631,2632],"valid"],[[2633,2634],"disallowed"],[[2635,2637],"valid"],[[2638,2640],"disallowed"],[[2641,2641],"valid"],[[2642,2648],"disallowed"],[[2649,2649],"mapped",[2582,2620]],[[2650,2650],"mapped",[2583,2620]],[[2651,2651],"mapped",[2588,2620]],[[2652,2652],"valid"],[[2653,2653],"disallowed"],[[2654,2654],"mapped",[2603,2620]],[[2655,2661],"disallowed"],[[2662,2676],"valid"],[[2677,2677],"valid"],[[2678,2688],"disallowed"],[[2689,2691],"valid"],[[2692,2692],"disallowed"],[[2693,2699],"valid"],[[2700,2700],"valid"],[[2701,2701],"valid"],[[2702,2702],"disallowed"],[[2703,2705],"valid"],[[2706,2706],"disallowed"],[[2707,2728],"valid"],[[2729,2729],"disallowed"],[[2730,2736],"valid"],[[2737,2737],"disallowed"],[[2738,2739],"valid"],[[2740,2740],"disallowed"],[[2741,2745],"valid"],[[2746,2747],"disallowed"],[[2748,2757],"valid"],[[2758,2758],"disallowed"],[[2759,2761],"valid"],[[2762,2762],"disallowed"],[[2763,2765],"valid"],[[2766,2767],"disallowed"],[[2768,2768],"valid"],[[2769,2783],"disallowed"],[[2784,2784],"valid"],[[2785,2787],"valid"],[[2788,2789],"disallowed"],[[2790,2799],"valid"],[[2800,2800],"valid",[],"NV8"],[[2801,2801],"valid",[],"NV8"],[[2802,2808],"disallowed"],[[2809,2809],"valid"],[[2810,2816],"disallowed"],[[2817,2819],"valid"],[[2820,2820],"disallowed"],[[2821,2828],"valid"],[[2829,2830],"disallowed"],[[2831,2832],"valid"],[[2833,2834],"disallowed"],[[2835,2856],"valid"],[[2857,2857],"disallowed"],[[2858,2864],"valid"],[[2865,2865],"disallowed"],[[2866,2867],"valid"],[[2868,2868],"disallowed"],[[2869,2869],"valid"],[[2870,2873],"valid"],[[2874,2875],"disallowed"],[[2876,2883],"valid"],[[2884,2884],"valid"],[[2885,2886],"disallowed"],[[2887,2888],"valid"],[[2889,2890],"disallowed"],[[2891,2893],"valid"],[[2894,2901],"disallowed"],[[2902,2903],"valid"],[[2904,2907],"disallowed"],[[2908,2908],"mapped",[2849,2876]],[[2909,2909],"mapped",[2850,2876]],[[2910,2910],"disallowed"],[[2911,2913],"valid"],[[2914,2915],"valid"],[[2916,2917],"disallowed"],[[2918,2927],"valid"],[[2928,2928],"valid",[],"NV8"],[[2929,2929],"valid"],[[2930,2935],"valid",[],"NV8"],[[2936,2945],"disallowed"],[[2946,2947],"valid"],[[2948,2948],"disallowed"],[[2949,2954],"valid"],[[2955,2957],"disallowed"],[[2958,2960],"valid"],[[2961,2961],"disallowed"],[[2962,2965],"valid"],[[2966,2968],"disallowed"],[[2969,2970],"valid"],[[2971,2971],"disallowed"],[[2972,2972],"valid"],[[2973,2973],"disallowed"],[[2974,2975],"valid"],[[2976,2978],"disallowed"],[[2979,2980],"valid"],[[2981,2983],"disallowed"],[[2984,2986],"valid"],[[2987,2989],"disallowed"],[[2990,2997],"valid"],[[2998,2998],"valid"],[[2999,3001],"valid"],[[3002,3005],"disallowed"],[[3006,3010],"valid"],[[3011,3013],"disallowed"],[[3014,3016],"valid"],[[3017,3017],"disallowed"],[[3018,3021],"valid"],[[3022,3023],"disallowed"],[[3024,3024],"valid"],[[3025,3030],"disallowed"],[[3031,3031],"valid"],[[3032,3045],"disallowed"],[[3046,3046],"valid"],[[3047,3055],"valid"],[[3056,3058],"valid",[],"NV8"],[[3059,3066],"valid",[],"NV8"],[[3067,3071],"disallowed"],[[3072,3072],"valid"],[[3073,3075],"valid"],[[3076,3076],"disallowed"],[[3077,3084],"valid"],[[3085,3085],"disallowed"],[[3086,3088],"valid"],[[3089,3089],"disallowed"],[[3090,3112],"valid"],[[3113,3113],"disallowed"],[[3114,3123],"valid"],[[3124,3124],"valid"],[[3125,3129],"valid"],[[3130,3132],"disallowed"],[[3133,3133],"valid"],[[3134,3140],"valid"],[[3141,3141],"disallowed"],[[3142,3144],"valid"],[[3145,3145],"disallowed"],[[3146,3149],"valid"],[[3150,3156],"disallowed"],[[3157,3158],"valid"],[[3159,3159],"disallowed"],[[3160,3161],"valid"],[[3162,3162],"valid"],[[3163,3167],"disallowed"],[[3168,3169],"valid"],[[3170,3171],"valid"],[[3172,3173],"disallowed"],[[3174,3183],"valid"],[[3184,3191],"disallowed"],[[3192,3199],"valid",[],"NV8"],[[3200,3200],"disallowed"],[[3201,3201],"valid"],[[3202,3203],"valid"],[[3204,3204],"disallowed"],[[3205,3212],"valid"],[[3213,3213],"disallowed"],[[3214,3216],"valid"],[[3217,3217],"disallowed"],[[3218,3240],"valid"],[[3241,3241],"disallowed"],[[3242,3251],"valid"],[[3252,3252],"disallowed"],[[3253,3257],"valid"],[[3258,3259],"disallowed"],[[3260,3261],"valid"],[[3262,3268],"valid"],[[3269,3269],"disallowed"],[[3270,3272],"valid"],[[3273,3273],"disallowed"],[[3274,3277],"valid"],[[3278,3284],"disallowed"],[[3285,3286],"valid"],[[3287,3293],"disallowed"],[[3294,3294],"valid"],[[3295,3295],"disallowed"],[[3296,3297],"valid"],[[3298,3299],"valid"],[[3300,3301],"disallowed"],[[3302,3311],"valid"],[[3312,3312],"disallowed"],[[3313,3314],"valid"],[[3315,3328],"disallowed"],[[3329,3329],"valid"],[[3330,3331],"valid"],[[3332,3332],"disallowed"],[[3333,3340],"valid"],[[3341,3341],"disallowed"],[[3342,3344],"valid"],[[3345,3345],"disallowed"],[[3346,3368],"valid"],[[3369,3369],"valid"],[[3370,3385],"valid"],[[3386,3386],"valid"],[[3387,3388],"disallowed"],[[3389,3389],"valid"],[[3390,3395],"valid"],[[3396,3396],"valid"],[[3397,3397],"disallowed"],[[3398,3400],"valid"],[[3401,3401],"disallowed"],[[3402,3405],"valid"],[[3406,3406],"valid"],[[3407,3414],"disallowed"],[[3415,3415],"valid"],[[3416,3422],"disallowed"],[[3423,3423],"valid"],[[3424,3425],"valid"],[[3426,3427],"valid"],[[3428,3429],"disallowed"],[[3430,3439],"valid"],[[3440,3445],"valid",[],"NV8"],[[3446,3448],"disallowed"],[[3449,3449],"valid",[],"NV8"],[[3450,3455],"valid"],[[3456,3457],"disallowed"],[[3458,3459],"valid"],[[3460,3460],"disallowed"],[[3461,3478],"valid"],[[3479,3481],"disallowed"],[[3482,3505],"valid"],[[3506,3506],"disallowed"],[[3507,3515],"valid"],[[3516,3516],"disallowed"],[[3517,3517],"valid"],[[3518,3519],"disallowed"],[[3520,3526],"valid"],[[3527,3529],"disallowed"],[[3530,3530],"valid"],[[3531,3534],"disallowed"],[[3535,3540],"valid"],[[3541,3541],"disallowed"],[[3542,3542],"valid"],[[3543,3543],"disallowed"],[[3544,3551],"valid"],[[3552,3557],"disallowed"],[[3558,3567],"valid"],[[3568,3569],"disallowed"],[[3570,3571],"valid"],[[3572,3572],"valid",[],"NV8"],[[3573,3584],"disallowed"],[[3585,3634],"valid"],[[3635,3635],"mapped",[3661,3634]],[[3636,3642],"valid"],[[3643,3646],"disallowed"],[[3647,3647],"valid",[],"NV8"],[[3648,3662],"valid"],[[3663,3663],"valid",[],"NV8"],[[3664,3673],"valid"],[[3674,3675],"valid",[],"NV8"],[[3676,3712],"disallowed"],[[3713,3714],"valid"],[[3715,3715],"disallowed"],[[3716,3716],"valid"],[[3717,3718],"disallowed"],[[3719,3720],"valid"],[[3721,3721],"disallowed"],[[3722,3722],"valid"],[[3723,3724],"disallowed"],[[3725,3725],"valid"],[[3726,3731],"disallowed"],[[3732,3735],"valid"],[[3736,3736],"disallowed"],[[3737,3743],"valid"],[[3744,3744],"disallowed"],[[3745,3747],"valid"],[[3748,3748],"disallowed"],[[3749,3749],"valid"],[[3750,3750],"disallowed"],[[3751,3751],"valid"],[[3752,3753],"disallowed"],[[3754,3755],"valid"],[[3756,3756],"disallowed"],[[3757,3762],"valid"],[[3763,3763],"mapped",[3789,3762]],[[3764,3769],"valid"],[[3770,3770],"disallowed"],[[3771,3773],"valid"],[[3774,3775],"disallowed"],[[3776,3780],"valid"],[[3781,3781],"disallowed"],[[3782,3782],"valid"],[[3783,3783],"disallowed"],[[3784,3789],"valid"],[[3790,3791],"disallowed"],[[3792,3801],"valid"],[[3802,3803],"disallowed"],[[3804,3804],"mapped",[3755,3737]],[[3805,3805],"mapped",[3755,3745]],[[3806,3807],"valid"],[[3808,3839],"disallowed"],[[3840,3840],"valid"],[[3841,3850],"valid",[],"NV8"],[[3851,3851],"valid"],[[3852,3852],"mapped",[3851]],[[3853,3863],"valid",[],"NV8"],[[3864,3865],"valid"],[[3866,3871],"valid",[],"NV8"],[[3872,3881],"valid"],[[3882,3892],"valid",[],"NV8"],[[3893,3893],"valid"],[[3894,3894],"valid",[],"NV8"],[[3895,3895],"valid"],[[3896,3896],"valid",[],"NV8"],[[3897,3897],"valid"],[[3898,3901],"valid",[],"NV8"],[[3902,3906],"valid"],[[3907,3907],"mapped",[3906,4023]],[[3908,3911],"valid"],[[3912,3912],"disallowed"],[[3913,3916],"valid"],[[3917,3917],"mapped",[3916,4023]],[[3918,3921],"valid"],[[3922,3922],"mapped",[3921,4023]],[[3923,3926],"valid"],[[3927,3927],"mapped",[3926,4023]],[[3928,3931],"valid"],[[3932,3932],"mapped",[3931,4023]],[[3933,3944],"valid"],[[3945,3945],"mapped",[3904,4021]],[[3946,3946],"valid"],[[3947,3948],"valid"],[[3949,3952],"disallowed"],[[3953,3954],"valid"],[[3955,3955],"mapped",[3953,3954]],[[3956,3956],"valid"],[[3957,3957],"mapped",[3953,3956]],[[3958,3958],"mapped",[4018,3968]],[[3959,3959],"mapped",[4018,3953,3968]],[[3960,3960],"mapped",[4019,3968]],[[3961,3961],"mapped",[4019,3953,3968]],[[3962,3968],"valid"],[[3969,3969],"mapped",[3953,3968]],[[3970,3972],"valid"],[[3973,3973],"valid",[],"NV8"],[[3974,3979],"valid"],[[3980,3983],"valid"],[[3984,3986],"valid"],[[3987,3987],"mapped",[3986,4023]],[[3988,3989],"valid"],[[3990,3990],"valid"],[[3991,3991],"valid"],[[3992,3992],"disallowed"],[[3993,3996],"valid"],[[3997,3997],"mapped",[3996,4023]],[[3998,4001],"valid"],[[4002,4002],"mapped",[4001,4023]],[[4003,4006],"valid"],[[4007,4007],"mapped",[4006,4023]],[[4008,4011],"valid"],[[4012,4012],"mapped",[4011,4023]],[[4013,4013],"valid"],[[4014,4016],"valid"],[[4017,4023],"valid"],[[4024,4024],"valid"],[[4025,4025],"mapped",[3984,4021]],[[4026,4028],"valid"],[[4029,4029],"disallowed"],[[4030,4037],"valid",[],"NV8"],[[4038,4038],"valid"],[[4039,4044],"valid",[],"NV8"],[[4045,4045],"disallowed"],[[4046,4046],"valid",[],"NV8"],[[4047,4047],"valid",[],"NV8"],[[4048,4049],"valid",[],"NV8"],[[4050,4052],"valid",[],"NV8"],[[4053,4056],"valid",[],"NV8"],[[4057,4058],"valid",[],"NV8"],[[4059,4095],"disallowed"],[[4096,4129],"valid"],[[4130,4130],"valid"],[[4131,4135],"valid"],[[4136,4136],"valid"],[[4137,4138],"valid"],[[4139,4139],"valid"],[[4140,4146],"valid"],[[4147,4149],"valid"],[[4150,4153],"valid"],[[4154,4159],"valid"],[[4160,4169],"valid"],[[4170,4175],"valid",[],"NV8"],[[4176,4185],"valid"],[[4186,4249],"valid"],[[4250,4253],"valid"],[[4254,4255],"valid",[],"NV8"],[[4256,4293],"disallowed"],[[4294,4294],"disallowed"],[[4295,4295],"mapped",[11559]],[[4296,4300],"disallowed"],[[4301,4301],"mapped",[11565]],[[4302,4303],"disallowed"],[[4304,4342],"valid"],[[4343,4344],"valid"],[[4345,4346],"valid"],[[4347,4347],"valid",[],"NV8"],[[4348,4348],"mapped",[4316]],[[4349,4351],"valid"],[[4352,4441],"valid",[],"NV8"],[[4442,4446],"valid",[],"NV8"],[[4447,4448],"disallowed"],[[4449,4514],"valid",[],"NV8"],[[4515,4519],"valid",[],"NV8"],[[4520,4601],"valid",[],"NV8"],[[4602,4607],"valid",[],"NV8"],[[4608,4614],"valid"],[[4615,4615],"valid"],[[4616,4678],"valid"],[[4679,4679],"valid"],[[4680,4680],"valid"],[[4681,4681],"disallowed"],[[4682,4685],"valid"],[[4686,4687],"disallowed"],[[4688,4694],"valid"],[[4695,4695],"disallowed"],[[4696,4696],"valid"],[[4697,4697],"disallowed"],[[4698,4701],"valid"],[[4702,4703],"disallowed"],[[4704,4742],"valid"],[[4743,4743],"valid"],[[4744,4744],"valid"],[[4745,4745],"disallowed"],[[4746,4749],"valid"],[[4750,4751],"disallowed"],[[4752,4782],"valid"],[[4783,4783],"valid"],[[4784,4784],"valid"],[[4785,4785],"disallowed"],[[4786,4789],"valid"],[[4790,4791],"disallowed"],[[4792,4798],"valid"],[[4799,4799],"disallowed"],[[4800,4800],"valid"],[[4801,4801],"disallowed"],[[4802,4805],"valid"],[[4806,4807],"disallowed"],[[4808,4814],"valid"],[[4815,4815],"valid"],[[4816,4822],"valid"],[[4823,4823],"disallowed"],[[4824,4846],"valid"],[[4847,4847],"valid"],[[4848,4878],"valid"],[[4879,4879],"valid"],[[4880,4880],"valid"],[[4881,4881],"disallowed"],[[4882,4885],"valid"],[[4886,4887],"disallowed"],[[4888,4894],"valid"],[[4895,4895],"valid"],[[4896,4934],"valid"],[[4935,4935],"valid"],[[4936,4954],"valid"],[[4955,4956],"disallowed"],[[4957,4958],"valid"],[[4959,4959],"valid"],[[4960,4960],"valid",[],"NV8"],[[4961,4988],"valid",[],"NV8"],[[4989,4991],"disallowed"],[[4992,5007],"valid"],[[5008,5017],"valid",[],"NV8"],[[5018,5023],"disallowed"],[[5024,5108],"valid"],[[5109,5109],"valid"],[[5110,5111],"disallowed"],[[5112,5112],"mapped",[5104]],[[5113,5113],"mapped",[5105]],[[5114,5114],"mapped",[5106]],[[5115,5115],"mapped",[5107]],[[5116,5116],"mapped",[5108]],[[5117,5117],"mapped",[5109]],[[5118,5119],"disallowed"],[[5120,5120],"valid",[],"NV8"],[[5121,5740],"valid"],[[5741,5742],"valid",[],"NV8"],[[5743,5750],"valid"],[[5751,5759],"valid"],[[5760,5760],"disallowed"],[[5761,5786],"valid"],[[5787,5788],"valid",[],"NV8"],[[5789,5791],"disallowed"],[[5792,5866],"valid"],[[5867,5872],"valid",[],"NV8"],[[5873,5880],"valid"],[[5881,5887],"disallowed"],[[5888,5900],"valid"],[[5901,5901],"disallowed"],[[5902,5908],"valid"],[[5909,5919],"disallowed"],[[5920,5940],"valid"],[[5941,5942],"valid",[],"NV8"],[[5943,5951],"disallowed"],[[5952,5971],"valid"],[[5972,5983],"disallowed"],[[5984,5996],"valid"],[[5997,5997],"disallowed"],[[5998,6000],"valid"],[[6001,6001],"disallowed"],[[6002,6003],"valid"],[[6004,6015],"disallowed"],[[6016,6067],"valid"],[[6068,6069],"disallowed"],[[6070,6099],"valid"],[[6100,6102],"valid",[],"NV8"],[[6103,6103],"valid"],[[6104,6107],"valid",[],"NV8"],[[6108,6108],"valid"],[[6109,6109],"valid"],[[6110,6111],"disallowed"],[[6112,6121],"valid"],[[6122,6127],"disallowed"],[[6128,6137],"valid",[],"NV8"],[[6138,6143],"disallowed"],[[6144,6149],"valid",[],"NV8"],[[6150,6150],"disallowed"],[[6151,6154],"valid",[],"NV8"],[[6155,6157],"ignored"],[[6158,6158],"disallowed"],[[6159,6159],"disallowed"],[[6160,6169],"valid"],[[6170,6175],"disallowed"],[[6176,6263],"valid"],[[6264,6271],"disallowed"],[[6272,6313],"valid"],[[6314,6314],"valid"],[[6315,6319],"disallowed"],[[6320,6389],"valid"],[[6390,6399],"disallowed"],[[6400,6428],"valid"],[[6429,6430],"valid"],[[6431,6431],"disallowed"],[[6432,6443],"valid"],[[6444,6447],"disallowed"],[[6448,6459],"valid"],[[6460,6463],"disallowed"],[[6464,6464],"valid",[],"NV8"],[[6465,6467],"disallowed"],[[6468,6469],"valid",[],"NV8"],[[6470,6509],"valid"],[[6510,6511],"disallowed"],[[6512,6516],"valid"],[[6517,6527],"disallowed"],[[6528,6569],"valid"],[[6570,6571],"valid"],[[6572,6575],"disallowed"],[[6576,6601],"valid"],[[6602,6607],"disallowed"],[[6608,6617],"valid"],[[6618,6618],"valid",[],"XV8"],[[6619,6621],"disallowed"],[[6622,6623],"valid",[],"NV8"],[[6624,6655],"valid",[],"NV8"],[[6656,6683],"valid"],[[6684,6685],"disallowed"],[[6686,6687],"valid",[],"NV8"],[[6688,6750],"valid"],[[6751,6751],"disallowed"],[[6752,6780],"valid"],[[6781,6782],"disallowed"],[[6783,6793],"valid"],[[6794,6799],"disallowed"],[[6800,6809],"valid"],[[6810,6815],"disallowed"],[[6816,6822],"valid",[],"NV8"],[[6823,6823],"valid"],[[6824,6829],"valid",[],"NV8"],[[6830,6831],"disallowed"],[[6832,6845],"valid"],[[6846,6846],"valid",[],"NV8"],[[6847,6911],"disallowed"],[[6912,6987],"valid"],[[6988,6991],"disallowed"],[[6992,7001],"valid"],[[7002,7018],"valid",[],"NV8"],[[7019,7027],"valid"],[[7028,7036],"valid",[],"NV8"],[[7037,7039],"disallowed"],[[7040,7082],"valid"],[[7083,7085],"valid"],[[7086,7097],"valid"],[[7098,7103],"valid"],[[7104,7155],"valid"],[[7156,7163],"disallowed"],[[7164,7167],"valid",[],"NV8"],[[7168,7223],"valid"],[[7224,7226],"disallowed"],[[7227,7231],"valid",[],"NV8"],[[7232,7241],"valid"],[[7242,7244],"disallowed"],[[7245,7293],"valid"],[[7294,7295],"valid",[],"NV8"],[[7296,7359],"disallowed"],[[7360,7367],"valid",[],"NV8"],[[7368,7375],"disallowed"],[[7376,7378],"valid"],[[7379,7379],"valid",[],"NV8"],[[7380,7410],"valid"],[[7411,7414],"valid"],[[7415,7415],"disallowed"],[[7416,7417],"valid"],[[7418,7423],"disallowed"],[[7424,7467],"valid"],[[7468,7468],"mapped",[97]],[[7469,7469],"mapped",[230]],[[7470,7470],"mapped",[98]],[[7471,7471],"valid"],[[7472,7472],"mapped",[100]],[[7473,7473],"mapped",[101]],[[7474,7474],"mapped",[477]],[[7475,7475],"mapped",[103]],[[7476,7476],"mapped",[104]],[[7477,7477],"mapped",[105]],[[7478,7478],"mapped",[106]],[[7479,7479],"mapped",[107]],[[7480,7480],"mapped",[108]],[[7481,7481],"mapped",[109]],[[7482,7482],"mapped",[110]],[[7483,7483],"valid"],[[7484,7484],"mapped",[111]],[[7485,7485],"mapped",[547]],[[7486,7486],"mapped",[112]],[[7487,7487],"mapped",[114]],[[7488,7488],"mapped",[116]],[[7489,7489],"mapped",[117]],[[7490,7490],"mapped",[119]],[[7491,7491],"mapped",[97]],[[7492,7492],"mapped",[592]],[[7493,7493],"mapped",[593]],[[7494,7494],"mapped",[7426]],[[7495,7495],"mapped",[98]],[[7496,7496],"mapped",[100]],[[7497,7497],"mapped",[101]],[[7498,7498],"mapped",[601]],[[7499,7499],"mapped",[603]],[[7500,7500],"mapped",[604]],[[7501,7501],"mapped",[103]],[[7502,7502],"valid"],[[7503,7503],"mapped",[107]],[[7504,7504],"mapped",[109]],[[7505,7505],"mapped",[331]],[[7506,7506],"mapped",[111]],[[7507,7507],"mapped",[596]],[[7508,7508],"mapped",[7446]],[[7509,7509],"mapped",[7447]],[[7510,7510],"mapped",[112]],[[7511,7511],"mapped",[116]],[[7512,7512],"mapped",[117]],[[7513,7513],"mapped",[7453]],[[7514,7514],"mapped",[623]],[[7515,7515],"mapped",[118]],[[7516,7516],"mapped",[7461]],[[7517,7517],"mapped",[946]],[[7518,7518],"mapped",[947]],[[7519,7519],"mapped",[948]],[[7520,7520],"mapped",[966]],[[7521,7521],"mapped",[967]],[[7522,7522],"mapped",[105]],[[7523,7523],"mapped",[114]],[[7524,7524],"mapped",[117]],[[7525,7525],"mapped",[118]],[[7526,7526],"mapped",[946]],[[7527,7527],"mapped",[947]],[[7528,7528],"mapped",[961]],[[7529,7529],"mapped",[966]],[[7530,7530],"mapped",[967]],[[7531,7531],"valid"],[[7532,7543],"valid"],[[7544,7544],"mapped",[1085]],[[7545,7578],"valid"],[[7579,7579],"mapped",[594]],[[7580,7580],"mapped",[99]],[[7581,7581],"mapped",[597]],[[7582,7582],"mapped",[240]],[[7583,7583],"mapped",[604]],[[7584,7584],"mapped",[102]],[[7585,7585],"mapped",[607]],[[7586,7586],"mapped",[609]],[[7587,7587],"mapped",[613]],[[7588,7588],"mapped",[616]],[[7589,7589],"mapped",[617]],[[7590,7590],"mapped",[618]],[[7591,7591],"mapped",[7547]],[[7592,7592],"mapped",[669]],[[7593,7593],"mapped",[621]],[[7594,7594],"mapped",[7557]],[[7595,7595],"mapped",[671]],[[7596,7596],"mapped",[625]],[[7597,7597],"mapped",[624]],[[7598,7598],"mapped",[626]],[[7599,7599],"mapped",[627]],[[7600,7600],"mapped",[628]],[[7601,7601],"mapped",[629]],[[7602,7602],"mapped",[632]],[[7603,7603],"mapped",[642]],[[7604,7604],"mapped",[643]],[[7605,7605],"mapped",[427]],[[7606,7606],"mapped",[649]],[[7607,7607],"mapped",[650]],[[7608,7608],"mapped",[7452]],[[7609,7609],"mapped",[651]],[[7610,7610],"mapped",[652]],[[7611,7611],"mapped",[122]],[[7612,7612],"mapped",[656]],[[7613,7613],"mapped",[657]],[[7614,7614],"mapped",[658]],[[7615,7615],"mapped",[952]],[[7616,7619],"valid"],[[7620,7626],"valid"],[[7627,7654],"valid"],[[7655,7669],"valid"],[[7670,7675],"disallowed"],[[7676,7676],"valid"],[[7677,7677],"valid"],[[7678,7679],"valid"],[[7680,7680],"mapped",[7681]],[[7681,7681],"valid"],[[7682,7682],"mapped",[7683]],[[7683,7683],"valid"],[[7684,7684],"mapped",[7685]],[[7685,7685],"valid"],[[7686,7686],"mapped",[7687]],[[7687,7687],"valid"],[[7688,7688],"mapped",[7689]],[[7689,7689],"valid"],[[7690,7690],"mapped",[7691]],[[7691,7691],"valid"],[[7692,7692],"mapped",[7693]],[[7693,7693],"valid"],[[7694,7694],"mapped",[7695]],[[7695,7695],"valid"],[[7696,7696],"mapped",[7697]],[[7697,7697],"valid"],[[7698,7698],"mapped",[7699]],[[7699,7699],"valid"],[[7700,7700],"mapped",[7701]],[[7701,7701],"valid"],[[7702,7702],"mapped",[7703]],[[7703,7703],"valid"],[[7704,7704],"mapped",[7705]],[[7705,7705],"valid"],[[7706,7706],"mapped",[7707]],[[7707,7707],"valid"],[[7708,7708],"mapped",[7709]],[[7709,7709],"valid"],[[7710,7710],"mapped",[7711]],[[7711,7711],"valid"],[[7712,7712],"mapped",[7713]],[[7713,7713],"valid"],[[7714,7714],"mapped",[7715]],[[7715,7715],"valid"],[[7716,7716],"mapped",[7717]],[[7717,7717],"valid"],[[7718,7718],"mapped",[7719]],[[7719,7719],"valid"],[[7720,7720],"mapped",[7721]],[[7721,7721],"valid"],[[7722,7722],"mapped",[7723]],[[7723,7723],"valid"],[[7724,7724],"mapped",[7725]],[[7725,7725],"valid"],[[7726,7726],"mapped",[7727]],[[7727,7727],"valid"],[[7728,7728],"mapped",[7729]],[[7729,7729],"valid"],[[7730,7730],"mapped",[7731]],[[7731,7731],"valid"],[[7732,7732],"mapped",[7733]],[[7733,7733],"valid"],[[7734,7734],"mapped",[7735]],[[7735,7735],"valid"],[[7736,7736],"mapped",[7737]],[[7737,7737],"valid"],[[7738,7738],"mapped",[7739]],[[7739,7739],"valid"],[[7740,7740],"mapped",[7741]],[[7741,7741],"valid"],[[7742,7742],"mapped",[7743]],[[7743,7743],"valid"],[[7744,7744],"mapped",[7745]],[[7745,7745],"valid"],[[7746,7746],"mapped",[7747]],[[7747,7747],"valid"],[[7748,7748],"mapped",[7749]],[[7749,7749],"valid"],[[7750,7750],"mapped",[7751]],[[7751,7751],"valid"],[[7752,7752],"mapped",[7753]],[[7753,7753],"valid"],[[7754,7754],"mapped",[7755]],[[7755,7755],"valid"],[[7756,7756],"mapped",[7757]],[[7757,7757],"valid"],[[7758,7758],"mapped",[7759]],[[7759,7759],"valid"],[[7760,7760],"mapped",[7761]],[[7761,7761],"valid"],[[7762,7762],"mapped",[7763]],[[7763,7763],"valid"],[[7764,7764],"mapped",[7765]],[[7765,7765],"valid"],[[7766,7766],"mapped",[7767]],[[7767,7767],"valid"],[[7768,7768],"mapped",[7769]],[[7769,7769],"valid"],[[7770,7770],"mapped",[7771]],[[7771,7771],"valid"],[[7772,7772],"mapped",[7773]],[[7773,7773],"valid"],[[7774,7774],"mapped",[7775]],[[7775,7775],"valid"],[[7776,7776],"mapped",[7777]],[[7777,7777],"valid"],[[7778,7778],"mapped",[7779]],[[7779,7779],"valid"],[[7780,7780],"mapped",[7781]],[[7781,7781],"valid"],[[7782,7782],"mapped",[7783]],[[7783,7783],"valid"],[[7784,7784],"mapped",[7785]],[[7785,7785],"valid"],[[7786,7786],"mapped",[7787]],[[7787,7787],"valid"],[[7788,7788],"mapped",[7789]],[[7789,7789],"valid"],[[7790,7790],"mapped",[7791]],[[7791,7791],"valid"],[[7792,7792],"mapped",[7793]],[[7793,7793],"valid"],[[7794,7794],"mapped",[7795]],[[7795,7795],"valid"],[[7796,7796],"mapped",[7797]],[[7797,7797],"valid"],[[7798,7798],"mapped",[7799]],[[7799,7799],"valid"],[[7800,7800],"mapped",[7801]],[[7801,7801],"valid"],[[7802,7802],"mapped",[7803]],[[7803,7803],"valid"],[[7804,7804],"mapped",[7805]],[[7805,7805],"valid"],[[7806,7806],"mapped",[7807]],[[7807,7807],"valid"],[[7808,7808],"mapped",[7809]],[[7809,7809],"valid"],[[7810,7810],"mapped",[7811]],[[7811,7811],"valid"],[[7812,7812],"mapped",[7813]],[[7813,7813],"valid"],[[7814,7814],"mapped",[7815]],[[7815,7815],"valid"],[[7816,7816],"mapped",[7817]],[[7817,7817],"valid"],[[7818,7818],"mapped",[7819]],[[7819,7819],"valid"],[[7820,7820],"mapped",[7821]],[[7821,7821],"valid"],[[7822,7822],"mapped",[7823]],[[7823,7823],"valid"],[[7824,7824],"mapped",[7825]],[[7825,7825],"valid"],[[7826,7826],"mapped",[7827]],[[7827,7827],"valid"],[[7828,7828],"mapped",[7829]],[[7829,7833],"valid"],[[7834,7834],"mapped",[97,702]],[[7835,7835],"mapped",[7777]],[[7836,7837],"valid"],[[7838,7838],"mapped",[115,115]],[[7839,7839],"valid"],[[7840,7840],"mapped",[7841]],[[7841,7841],"valid"],[[7842,7842],"mapped",[7843]],[[7843,7843],"valid"],[[7844,7844],"mapped",[7845]],[[7845,7845],"valid"],[[7846,7846],"mapped",[7847]],[[7847,7847],"valid"],[[7848,7848],"mapped",[7849]],[[7849,7849],"valid"],[[7850,7850],"mapped",[7851]],[[7851,7851],"valid"],[[7852,7852],"mapped",[7853]],[[7853,7853],"valid"],[[7854,7854],"mapped",[7855]],[[7855,7855],"valid"],[[7856,7856],"mapped",[7857]],[[7857,7857],"valid"],[[7858,7858],"mapped",[7859]],[[7859,7859],"valid"],[[7860,7860],"mapped",[7861]],[[7861,7861],"valid"],[[7862,7862],"mapped",[7863]],[[7863,7863],"valid"],[[7864,7864],"mapped",[7865]],[[7865,7865],"valid"],[[7866,7866],"mapped",[7867]],[[7867,7867],"valid"],[[7868,7868],"mapped",[7869]],[[7869,7869],"valid"],[[7870,7870],"mapped",[7871]],[[7871,7871],"valid"],[[7872,7872],"mapped",[7873]],[[7873,7873],"valid"],[[7874,7874],"mapped",[7875]],[[7875,7875],"valid"],[[7876,7876],"mapped",[7877]],[[7877,7877],"valid"],[[7878,7878],"mapped",[7879]],[[7879,7879],"valid"],[[7880,7880],"mapped",[7881]],[[7881,7881],"valid"],[[7882,7882],"mapped",[7883]],[[7883,7883],"valid"],[[7884,7884],"mapped",[7885]],[[7885,7885],"valid"],[[7886,7886],"mapped",[7887]],[[7887,7887],"valid"],[[7888,7888],"mapped",[7889]],[[7889,7889],"valid"],[[7890,7890],"mapped",[7891]],[[7891,7891],"valid"],[[7892,7892],"mapped",[7893]],[[7893,7893],"valid"],[[7894,7894],"mapped",[7895]],[[7895,7895],"valid"],[[7896,7896],"mapped",[7897]],[[7897,7897],"valid"],[[7898,7898],"mapped",[7899]],[[7899,7899],"valid"],[[7900,7900],"mapped",[7901]],[[7901,7901],"valid"],[[7902,7902],"mapped",[7903]],[[7903,7903],"valid"],[[7904,7904],"mapped",[7905]],[[7905,7905],"valid"],[[7906,7906],"mapped",[7907]],[[7907,7907],"valid"],[[7908,7908],"mapped",[7909]],[[7909,7909],"valid"],[[7910,7910],"mapped",[7911]],[[7911,7911],"valid"],[[7912,7912],"mapped",[7913]],[[7913,7913],"valid"],[[7914,7914],"mapped",[7915]],[[7915,7915],"valid"],[[7916,7916],"mapped",[7917]],[[7917,7917],"valid"],[[7918,7918],"mapped",[7919]],[[7919,7919],"valid"],[[7920,7920],"mapped",[7921]],[[7921,7921],"valid"],[[7922,7922],"mapped",[7923]],[[7923,7923],"valid"],[[7924,7924],"mapped",[7925]],[[7925,7925],"valid"],[[7926,7926],"mapped",[7927]],[[7927,7927],"valid"],[[7928,7928],"mapped",[7929]],[[7929,7929],"valid"],[[7930,7930],"mapped",[7931]],[[7931,7931],"valid"],[[7932,7932],"mapped",[7933]],[[7933,7933],"valid"],[[7934,7934],"mapped",[7935]],[[7935,7935],"valid"],[[7936,7943],"valid"],[[7944,7944],"mapped",[7936]],[[7945,7945],"mapped",[7937]],[[7946,7946],"mapped",[7938]],[[7947,7947],"mapped",[7939]],[[7948,7948],"mapped",[7940]],[[7949,7949],"mapped",[7941]],[[7950,7950],"mapped",[7942]],[[7951,7951],"mapped",[7943]],[[7952,7957],"valid"],[[7958,7959],"disallowed"],[[7960,7960],"mapped",[7952]],[[7961,7961],"mapped",[7953]],[[7962,7962],"mapped",[7954]],[[7963,7963],"mapped",[7955]],[[7964,7964],"mapped",[7956]],[[7965,7965],"mapped",[7957]],[[7966,7967],"disallowed"],[[7968,7975],"valid"],[[7976,7976],"mapped",[7968]],[[7977,7977],"mapped",[7969]],[[7978,7978],"mapped",[7970]],[[7979,7979],"mapped",[7971]],[[7980,7980],"mapped",[7972]],[[7981,7981],"mapped",[7973]],[[7982,7982],"mapped",[7974]],[[7983,7983],"mapped",[7975]],[[7984,7991],"valid"],[[7992,7992],"mapped",[7984]],[[7993,7993],"mapped",[7985]],[[7994,7994],"mapped",[7986]],[[7995,7995],"mapped",[7987]],[[7996,7996],"mapped",[7988]],[[7997,7997],"mapped",[7989]],[[7998,7998],"mapped",[7990]],[[7999,7999],"mapped",[7991]],[[8000,8005],"valid"],[[8006,8007],"disallowed"],[[8008,8008],"mapped",[8000]],[[8009,8009],"mapped",[8001]],[[8010,8010],"mapped",[8002]],[[8011,8011],"mapped",[8003]],[[8012,8012],"mapped",[8004]],[[8013,8013],"mapped",[8005]],[[8014,8015],"disallowed"],[[8016,8023],"valid"],[[8024,8024],"disallowed"],[[8025,8025],"mapped",[8017]],[[8026,8026],"disallowed"],[[8027,8027],"mapped",[8019]],[[8028,8028],"disallowed"],[[8029,8029],"mapped",[8021]],[[8030,8030],"disallowed"],[[8031,8031],"mapped",[8023]],[[8032,8039],"valid"],[[8040,8040],"mapped",[8032]],[[8041,8041],"mapped",[8033]],[[8042,8042],"mapped",[8034]],[[8043,8043],"mapped",[8035]],[[8044,8044],"mapped",[8036]],[[8045,8045],"mapped",[8037]],[[8046,8046],"mapped",[8038]],[[8047,8047],"mapped",[8039]],[[8048,8048],"valid"],[[8049,8049],"mapped",[940]],[[8050,8050],"valid"],[[8051,8051],"mapped",[941]],[[8052,8052],"valid"],[[8053,8053],"mapped",[942]],[[8054,8054],"valid"],[[8055,8055],"mapped",[943]],[[8056,8056],"valid"],[[8057,8057],"mapped",[972]],[[8058,8058],"valid"],[[8059,8059],"mapped",[973]],[[8060,8060],"valid"],[[8061,8061],"mapped",[974]],[[8062,8063],"disallowed"],[[8064,8064],"mapped",[7936,953]],[[8065,8065],"mapped",[7937,953]],[[8066,8066],"mapped",[7938,953]],[[8067,8067],"mapped",[7939,953]],[[8068,8068],"mapped",[7940,953]],[[8069,8069],"mapped",[7941,953]],[[8070,8070],"mapped",[7942,953]],[[8071,8071],"mapped",[7943,953]],[[8072,8072],"mapped",[7936,953]],[[8073,8073],"mapped",[7937,953]],[[8074,8074],"mapped",[7938,953]],[[8075,8075],"mapped",[7939,953]],[[8076,8076],"mapped",[7940,953]],[[8077,8077],"mapped",[7941,953]],[[8078,8078],"mapped",[7942,953]],[[8079,8079],"mapped",[7943,953]],[[8080,8080],"mapped",[7968,953]],[[8081,8081],"mapped",[7969,953]],[[8082,8082],"mapped",[7970,953]],[[8083,8083],"mapped",[7971,953]],[[8084,8084],"mapped",[7972,953]],[[8085,8085],"mapped",[7973,953]],[[8086,8086],"mapped",[7974,953]],[[8087,8087],"mapped",[7975,953]],[[8088,8088],"mapped",[7968,953]],[[8089,8089],"mapped",[7969,953]],[[8090,8090],"mapped",[7970,953]],[[8091,8091],"mapped",[7971,953]],[[8092,8092],"mapped",[7972,953]],[[8093,8093],"mapped",[7973,953]],[[8094,8094],"mapped",[7974,953]],[[8095,8095],"mapped",[7975,953]],[[8096,8096],"mapped",[8032,953]],[[8097,8097],"mapped",[8033,953]],[[8098,8098],"mapped",[8034,953]],[[8099,8099],"mapped",[8035,953]],[[8100,8100],"mapped",[8036,953]],[[8101,8101],"mapped",[8037,953]],[[8102,8102],"mapped",[8038,953]],[[8103,8103],"mapped",[8039,953]],[[8104,8104],"mapped",[8032,953]],[[8105,8105],"mapped",[8033,953]],[[8106,8106],"mapped",[8034,953]],[[8107,8107],"mapped",[8035,953]],[[8108,8108],"mapped",[8036,953]],[[8109,8109],"mapped",[8037,953]],[[8110,8110],"mapped",[8038,953]],[[8111,8111],"mapped",[8039,953]],[[8112,8113],"valid"],[[8114,8114],"mapped",[8048,953]],[[8115,8115],"mapped",[945,953]],[[8116,8116],"mapped",[940,953]],[[8117,8117],"disallowed"],[[8118,8118],"valid"],[[8119,8119],"mapped",[8118,953]],[[8120,8120],"mapped",[8112]],[[8121,8121],"mapped",[8113]],[[8122,8122],"mapped",[8048]],[[8123,8123],"mapped",[940]],[[8124,8124],"mapped",[945,953]],[[8125,8125],"disallowed_STD3_mapped",[32,787]],[[8126,8126],"mapped",[953]],[[8127,8127],"disallowed_STD3_mapped",[32,787]],[[8128,8128],"disallowed_STD3_mapped",[32,834]],[[8129,8129],"disallowed_STD3_mapped",[32,776,834]],[[8130,8130],"mapped",[8052,953]],[[8131,8131],"mapped",[951,953]],[[8132,8132],"mapped",[942,953]],[[8133,8133],"disallowed"],[[8134,8134],"valid"],[[8135,8135],"mapped",[8134,953]],[[8136,8136],"mapped",[8050]],[[8137,8137],"mapped",[941]],[[8138,8138],"mapped",[8052]],[[8139,8139],"mapped",[942]],[[8140,8140],"mapped",[951,953]],[[8141,8141],"disallowed_STD3_mapped",[32,787,768]],[[8142,8142],"disallowed_STD3_mapped",[32,787,769]],[[8143,8143],"disallowed_STD3_mapped",[32,787,834]],[[8144,8146],"valid"],[[8147,8147],"mapped",[912]],[[8148,8149],"disallowed"],[[8150,8151],"valid"],[[8152,8152],"mapped",[8144]],[[8153,8153],"mapped",[8145]],[[8154,8154],"mapped",[8054]],[[8155,8155],"mapped",[943]],[[8156,8156],"disallowed"],[[8157,8157],"disallowed_STD3_mapped",[32,788,768]],[[8158,8158],"disallowed_STD3_mapped",[32,788,769]],[[8159,8159],"disallowed_STD3_mapped",[32,788,834]],[[8160,8162],"valid"],[[8163,8163],"mapped",[944]],[[8164,8167],"valid"],[[8168,8168],"mapped",[8160]],[[8169,8169],"mapped",[8161]],[[8170,8170],"mapped",[8058]],[[8171,8171],"mapped",[973]],[[8172,8172],"mapped",[8165]],[[8173,8173],"disallowed_STD3_mapped",[32,776,768]],[[8174,8174],"disallowed_STD3_mapped",[32,776,769]],[[8175,8175],"disallowed_STD3_mapped",[96]],[[8176,8177],"disallowed"],[[8178,8178],"mapped",[8060,953]],[[8179,8179],"mapped",[969,953]],[[8180,8180],"mapped",[974,953]],[[8181,8181],"disallowed"],[[8182,8182],"valid"],[[8183,8183],"mapped",[8182,953]],[[8184,8184],"mapped",[8056]],[[8185,8185],"mapped",[972]],[[8186,8186],"mapped",[8060]],[[8187,8187],"mapped",[974]],[[8188,8188],"mapped",[969,953]],[[8189,8189],"disallowed_STD3_mapped",[32,769]],[[8190,8190],"disallowed_STD3_mapped",[32,788]],[[8191,8191],"disallowed"],[[8192,8202],"disallowed_STD3_mapped",[32]],[[8203,8203],"ignored"],[[8204,8205],"deviation",[]],[[8206,8207],"disallowed"],[[8208,8208],"valid",[],"NV8"],[[8209,8209],"mapped",[8208]],[[8210,8214],"valid",[],"NV8"],[[8215,8215],"disallowed_STD3_mapped",[32,819]],[[8216,8227],"valid",[],"NV8"],[[8228,8230],"disallowed"],[[8231,8231],"valid",[],"NV8"],[[8232,8238],"disallowed"],[[8239,8239],"disallowed_STD3_mapped",[32]],[[8240,8242],"valid",[],"NV8"],[[8243,8243],"mapped",[8242,8242]],[[8244,8244],"mapped",[8242,8242,8242]],[[8245,8245],"valid",[],"NV8"],[[8246,8246],"mapped",[8245,8245]],[[8247,8247],"mapped",[8245,8245,8245]],[[8248,8251],"valid",[],"NV8"],[[8252,8252],"disallowed_STD3_mapped",[33,33]],[[8253,8253],"valid",[],"NV8"],[[8254,8254],"disallowed_STD3_mapped",[32,773]],[[8255,8262],"valid",[],"NV8"],[[8263,8263],"disallowed_STD3_mapped",[63,63]],[[8264,8264],"disallowed_STD3_mapped",[63,33]],[[8265,8265],"disallowed_STD3_mapped",[33,63]],[[8266,8269],"valid",[],"NV8"],[[8270,8274],"valid",[],"NV8"],[[8275,8276],"valid",[],"NV8"],[[8277,8278],"valid",[],"NV8"],[[8279,8279],"mapped",[8242,8242,8242,8242]],[[8280,8286],"valid",[],"NV8"],[[8287,8287],"disallowed_STD3_mapped",[32]],[[8288,8288],"ignored"],[[8289,8291],"disallowed"],[[8292,8292],"ignored"],[[8293,8293],"disallowed"],[[8294,8297],"disallowed"],[[8298,8303],"disallowed"],[[8304,8304],"mapped",[48]],[[8305,8305],"mapped",[105]],[[8306,8307],"disallowed"],[[8308,8308],"mapped",[52]],[[8309,8309],"mapped",[53]],[[8310,8310],"mapped",[54]],[[8311,8311],"mapped",[55]],[[8312,8312],"mapped",[56]],[[8313,8313],"mapped",[57]],[[8314,8314],"disallowed_STD3_mapped",[43]],[[8315,8315],"mapped",[8722]],[[8316,8316],"disallowed_STD3_mapped",[61]],[[8317,8317],"disallowed_STD3_mapped",[40]],[[8318,8318],"disallowed_STD3_mapped",[41]],[[8319,8319],"mapped",[110]],[[8320,8320],"mapped",[48]],[[8321,8321],"mapped",[49]],[[8322,8322],"mapped",[50]],[[8323,8323],"mapped",[51]],[[8324,8324],"mapped",[52]],[[8325,8325],"mapped",[53]],[[8326,8326],"mapped",[54]],[[8327,8327],"mapped",[55]],[[8328,8328],"mapped",[56]],[[8329,8329],"mapped",[57]],[[8330,8330],"disallowed_STD3_mapped",[43]],[[8331,8331],"mapped",[8722]],[[8332,8332],"disallowed_STD3_mapped",[61]],[[8333,8333],"disallowed_STD3_mapped",[40]],[[8334,8334],"disallowed_STD3_mapped",[41]],[[8335,8335],"disallowed"],[[8336,8336],"mapped",[97]],[[8337,8337],"mapped",[101]],[[8338,8338],"mapped",[111]],[[8339,8339],"mapped",[120]],[[8340,8340],"mapped",[601]],[[8341,8341],"mapped",[104]],[[8342,8342],"mapped",[107]],[[8343,8343],"mapped",[108]],[[8344,8344],"mapped",[109]],[[8345,8345],"mapped",[110]],[[8346,8346],"mapped",[112]],[[8347,8347],"mapped",[115]],[[8348,8348],"mapped",[116]],[[8349,8351],"disallowed"],[[8352,8359],"valid",[],"NV8"],[[8360,8360],"mapped",[114,115]],[[8361,8362],"valid",[],"NV8"],[[8363,8363],"valid",[],"NV8"],[[8364,8364],"valid",[],"NV8"],[[8365,8367],"valid",[],"NV8"],[[8368,8369],"valid",[],"NV8"],[[8370,8373],"valid",[],"NV8"],[[8374,8376],"valid",[],"NV8"],[[8377,8377],"valid",[],"NV8"],[[8378,8378],"valid",[],"NV8"],[[8379,8381],"valid",[],"NV8"],[[8382,8382],"valid",[],"NV8"],[[8383,8399],"disallowed"],[[8400,8417],"valid",[],"NV8"],[[8418,8419],"valid",[],"NV8"],[[8420,8426],"valid",[],"NV8"],[[8427,8427],"valid",[],"NV8"],[[8428,8431],"valid",[],"NV8"],[[8432,8432],"valid",[],"NV8"],[[8433,8447],"disallowed"],[[8448,8448],"disallowed_STD3_mapped",[97,47,99]],[[8449,8449],"disallowed_STD3_mapped",[97,47,115]],[[8450,8450],"mapped",[99]],[[8451,8451],"mapped",[176,99]],[[8452,8452],"valid",[],"NV8"],[[8453,8453],"disallowed_STD3_mapped",[99,47,111]],[[8454,8454],"disallowed_STD3_mapped",[99,47,117]],[[8455,8455],"mapped",[603]],[[8456,8456],"valid",[],"NV8"],[[8457,8457],"mapped",[176,102]],[[8458,8458],"mapped",[103]],[[8459,8462],"mapped",[104]],[[8463,8463],"mapped",[295]],[[8464,8465],"mapped",[105]],[[8466,8467],"mapped",[108]],[[8468,8468],"valid",[],"NV8"],[[8469,8469],"mapped",[110]],[[8470,8470],"mapped",[110,111]],[[8471,8472],"valid",[],"NV8"],[[8473,8473],"mapped",[112]],[[8474,8474],"mapped",[113]],[[8475,8477],"mapped",[114]],[[8478,8479],"valid",[],"NV8"],[[8480,8480],"mapped",[115,109]],[[8481,8481],"mapped",[116,101,108]],[[8482,8482],"mapped",[116,109]],[[8483,8483],"valid",[],"NV8"],[[8484,8484],"mapped",[122]],[[8485,8485],"valid",[],"NV8"],[[8486,8486],"mapped",[969]],[[8487,8487],"valid",[],"NV8"],[[8488,8488],"mapped",[122]],[[8489,8489],"valid",[],"NV8"],[[8490,8490],"mapped",[107]],[[8491,8491],"mapped",[229]],[[8492,8492],"mapped",[98]],[[8493,8493],"mapped",[99]],[[8494,8494],"valid",[],"NV8"],[[8495,8496],"mapped",[101]],[[8497,8497],"mapped",[102]],[[8498,8498],"disallowed"],[[8499,8499],"mapped",[109]],[[8500,8500],"mapped",[111]],[[8501,8501],"mapped",[1488]],[[8502,8502],"mapped",[1489]],[[8503,8503],"mapped",[1490]],[[8504,8504],"mapped",[1491]],[[8505,8505],"mapped",[105]],[[8506,8506],"valid",[],"NV8"],[[8507,8507],"mapped",[102,97,120]],[[8508,8508],"mapped",[960]],[[8509,8510],"mapped",[947]],[[8511,8511],"mapped",[960]],[[8512,8512],"mapped",[8721]],[[8513,8516],"valid",[],"NV8"],[[8517,8518],"mapped",[100]],[[8519,8519],"mapped",[101]],[[8520,8520],"mapped",[105]],[[8521,8521],"mapped",[106]],[[8522,8523],"valid",[],"NV8"],[[8524,8524],"valid",[],"NV8"],[[8525,8525],"valid",[],"NV8"],[[8526,8526],"valid"],[[8527,8527],"valid",[],"NV8"],[[8528,8528],"mapped",[49,8260,55]],[[8529,8529],"mapped",[49,8260,57]],[[8530,8530],"mapped",[49,8260,49,48]],[[8531,8531],"mapped",[49,8260,51]],[[8532,8532],"mapped",[50,8260,51]],[[8533,8533],"mapped",[49,8260,53]],[[8534,8534],"mapped",[50,8260,53]],[[8535,8535],"mapped",[51,8260,53]],[[8536,8536],"mapped",[52,8260,53]],[[8537,8537],"mapped",[49,8260,54]],[[8538,8538],"mapped",[53,8260,54]],[[8539,8539],"mapped",[49,8260,56]],[[8540,8540],"mapped",[51,8260,56]],[[8541,8541],"mapped",[53,8260,56]],[[8542,8542],"mapped",[55,8260,56]],[[8543,8543],"mapped",[49,8260]],[[8544,8544],"mapped",[105]],[[8545,8545],"mapped",[105,105]],[[8546,8546],"mapped",[105,105,105]],[[8547,8547],"mapped",[105,118]],[[8548,8548],"mapped",[118]],[[8549,8549],"mapped",[118,105]],[[8550,8550],"mapped",[118,105,105]],[[8551,8551],"mapped",[118,105,105,105]],[[8552,8552],"mapped",[105,120]],[[8553,8553],"mapped",[120]],[[8554,8554],"mapped",[120,105]],[[8555,8555],"mapped",[120,105,105]],[[8556,8556],"mapped",[108]],[[8557,8557],"mapped",[99]],[[8558,8558],"mapped",[100]],[[8559,8559],"mapped",[109]],[[8560,8560],"mapped",[105]],[[8561,8561],"mapped",[105,105]],[[8562,8562],"mapped",[105,105,105]],[[8563,8563],"mapped",[105,118]],[[8564,8564],"mapped",[118]],[[8565,8565],"mapped",[118,105]],[[8566,8566],"mapped",[118,105,105]],[[8567,8567],"mapped",[118,105,105,105]],[[8568,8568],"mapped",[105,120]],[[8569,8569],"mapped",[120]],[[8570,8570],"mapped",[120,105]],[[8571,8571],"mapped",[120,105,105]],[[8572,8572],"mapped",[108]],[[8573,8573],"mapped",[99]],[[8574,8574],"mapped",[100]],[[8575,8575],"mapped",[109]],[[8576,8578],"valid",[],"NV8"],[[8579,8579],"disallowed"],[[8580,8580],"valid"],[[8581,8584],"valid",[],"NV8"],[[8585,8585],"mapped",[48,8260,51]],[[8586,8587],"valid",[],"NV8"],[[8588,8591],"disallowed"],[[8592,8682],"valid",[],"NV8"],[[8683,8691],"valid",[],"NV8"],[[8692,8703],"valid",[],"NV8"],[[8704,8747],"valid",[],"NV8"],[[8748,8748],"mapped",[8747,8747]],[[8749,8749],"mapped",[8747,8747,8747]],[[8750,8750],"valid",[],"NV8"],[[8751,8751],"mapped",[8750,8750]],[[8752,8752],"mapped",[8750,8750,8750]],[[8753,8799],"valid",[],"NV8"],[[8800,8800],"disallowed_STD3_valid"],[[8801,8813],"valid",[],"NV8"],[[8814,8815],"disallowed_STD3_valid"],[[8816,8945],"valid",[],"NV8"],[[8946,8959],"valid",[],"NV8"],[[8960,8960],"valid",[],"NV8"],[[8961,8961],"valid",[],"NV8"],[[8962,9000],"valid",[],"NV8"],[[9001,9001],"mapped",[12296]],[[9002,9002],"mapped",[12297]],[[9003,9082],"valid",[],"NV8"],[[9083,9083],"valid",[],"NV8"],[[9084,9084],"valid",[],"NV8"],[[9085,9114],"valid",[],"NV8"],[[9115,9166],"valid",[],"NV8"],[[9167,9168],"valid",[],"NV8"],[[9169,9179],"valid",[],"NV8"],[[9180,9191],"valid",[],"NV8"],[[9192,9192],"valid",[],"NV8"],[[9193,9203],"valid",[],"NV8"],[[9204,9210],"valid",[],"NV8"],[[9211,9215],"disallowed"],[[9216,9252],"valid",[],"NV8"],[[9253,9254],"valid",[],"NV8"],[[9255,9279],"disallowed"],[[9280,9290],"valid",[],"NV8"],[[9291,9311],"disallowed"],[[9312,9312],"mapped",[49]],[[9313,9313],"mapped",[50]],[[9314,9314],"mapped",[51]],[[9315,9315],"mapped",[52]],[[9316,9316],"mapped",[53]],[[9317,9317],"mapped",[54]],[[9318,9318],"mapped",[55]],[[9319,9319],"mapped",[56]],[[9320,9320],"mapped",[57]],[[9321,9321],"mapped",[49,48]],[[9322,9322],"mapped",[49,49]],[[9323,9323],"mapped",[49,50]],[[9324,9324],"mapped",[49,51]],[[9325,9325],"mapped",[49,52]],[[9326,9326],"mapped",[49,53]],[[9327,9327],"mapped",[49,54]],[[9328,9328],"mapped",[49,55]],[[9329,9329],"mapped",[49,56]],[[9330,9330],"mapped",[49,57]],[[9331,9331],"mapped",[50,48]],[[9332,9332],"disallowed_STD3_mapped",[40,49,41]],[[9333,9333],"disallowed_STD3_mapped",[40,50,41]],[[9334,9334],"disallowed_STD3_mapped",[40,51,41]],[[9335,9335],"disallowed_STD3_mapped",[40,52,41]],[[9336,9336],"disallowed_STD3_mapped",[40,53,41]],[[9337,9337],"disallowed_STD3_mapped",[40,54,41]],[[9338,9338],"disallowed_STD3_mapped",[40,55,41]],[[9339,9339],"disallowed_STD3_mapped",[40,56,41]],[[9340,9340],"disallowed_STD3_mapped",[40,57,41]],[[9341,9341],"disallowed_STD3_mapped",[40,49,48,41]],[[9342,9342],"disallowed_STD3_mapped",[40,49,49,41]],[[9343,9343],"disallowed_STD3_mapped",[40,49,50,41]],[[9344,9344],"disallowed_STD3_mapped",[40,49,51,41]],[[9345,9345],"disallowed_STD3_mapped",[40,49,52,41]],[[9346,9346],"disallowed_STD3_mapped",[40,49,53,41]],[[9347,9347],"disallowed_STD3_mapped",[40,49,54,41]],[[9348,9348],"disallowed_STD3_mapped",[40,49,55,41]],[[9349,9349],"disallowed_STD3_mapped",[40,49,56,41]],[[9350,9350],"disallowed_STD3_mapped",[40,49,57,41]],[[9351,9351],"disallowed_STD3_mapped",[40,50,48,41]],[[9352,9371],"disallowed"],[[9372,9372],"disallowed_STD3_mapped",[40,97,41]],[[9373,9373],"disallowed_STD3_mapped",[40,98,41]],[[9374,9374],"disallowed_STD3_mapped",[40,99,41]],[[9375,9375],"disallowed_STD3_mapped",[40,100,41]],[[9376,9376],"disallowed_STD3_mapped",[40,101,41]],[[9377,9377],"disallowed_STD3_mapped",[40,102,41]],[[9378,9378],"disallowed_STD3_mapped",[40,103,41]],[[9379,9379],"disallowed_STD3_mapped",[40,104,41]],[[9380,9380],"disallowed_STD3_mapped",[40,105,41]],[[9381,9381],"disallowed_STD3_mapped",[40,106,41]],[[9382,9382],"disallowed_STD3_mapped",[40,107,41]],[[9383,9383],"disallowed_STD3_mapped",[40,108,41]],[[9384,9384],"disallowed_STD3_mapped",[40,109,41]],[[9385,9385],"disallowed_STD3_mapped",[40,110,41]],[[9386,9386],"disallowed_STD3_mapped",[40,111,41]],[[9387,9387],"disallowed_STD3_mapped",[40,112,41]],[[9388,9388],"disallowed_STD3_mapped",[40,113,41]],[[9389,9389],"disallowed_STD3_mapped",[40,114,41]],[[9390,9390],"disallowed_STD3_mapped",[40,115,41]],[[9391,9391],"disallowed_STD3_mapped",[40,116,41]],[[9392,9392],"disallowed_STD3_mapped",[40,117,41]],[[9393,9393],"disallowed_STD3_mapped",[40,118,41]],[[9394,9394],"disallowed_STD3_mapped",[40,119,41]],[[9395,9395],"disallowed_STD3_mapped",[40,120,41]],[[9396,9396],"disallowed_STD3_mapped",[40,121,41]],[[9397,9397],"disallowed_STD3_mapped",[40,122,41]],[[9398,9398],"mapped",[97]],[[9399,9399],"mapped",[98]],[[9400,9400],"mapped",[99]],[[9401,9401],"mapped",[100]],[[9402,9402],"mapped",[101]],[[9403,9403],"mapped",[102]],[[9404,9404],"mapped",[103]],[[9405,9405],"mapped",[104]],[[9406,9406],"mapped",[105]],[[9407,9407],"mapped",[106]],[[9408,9408],"mapped",[107]],[[9409,9409],"mapped",[108]],[[9410,9410],"mapped",[109]],[[9411,9411],"mapped",[110]],[[9412,9412],"mapped",[111]],[[9413,9413],"mapped",[112]],[[9414,9414],"mapped",[113]],[[9415,9415],"mapped",[114]],[[9416,9416],"mapped",[115]],[[9417,9417],"mapped",[116]],[[9418,9418],"mapped",[117]],[[9419,9419],"mapped",[118]],[[9420,9420],"mapped",[119]],[[9421,9421],"mapped",[120]],[[9422,9422],"mapped",[121]],[[9423,9423],"mapped",[122]],[[9424,9424],"mapped",[97]],[[9425,9425],"mapped",[98]],[[9426,9426],"mapped",[99]],[[9427,9427],"mapped",[100]],[[9428,9428],"mapped",[101]],[[9429,9429],"mapped",[102]],[[9430,9430],"mapped",[103]],[[9431,9431],"mapped",[104]],[[9432,9432],"mapped",[105]],[[9433,9433],"mapped",[106]],[[9434,9434],"mapped",[107]],[[9435,9435],"mapped",[108]],[[9436,9436],"mapped",[109]],[[9437,9437],"mapped",[110]],[[9438,9438],"mapped",[111]],[[9439,9439],"mapped",[112]],[[9440,9440],"mapped",[113]],[[9441,9441],"mapped",[114]],[[9442,9442],"mapped",[115]],[[9443,9443],"mapped",[116]],[[9444,9444],"mapped",[117]],[[9445,9445],"mapped",[118]],[[9446,9446],"mapped",[119]],[[9447,9447],"mapped",[120]],[[9448,9448],"mapped",[121]],[[9449,9449],"mapped",[122]],[[9450,9450],"mapped",[48]],[[9451,9470],"valid",[],"NV8"],[[9471,9471],"valid",[],"NV8"],[[9472,9621],"valid",[],"NV8"],[[9622,9631],"valid",[],"NV8"],[[9632,9711],"valid",[],"NV8"],[[9712,9719],"valid",[],"NV8"],[[9720,9727],"valid",[],"NV8"],[[9728,9747],"valid",[],"NV8"],[[9748,9749],"valid",[],"NV8"],[[9750,9751],"valid",[],"NV8"],[[9752,9752],"valid",[],"NV8"],[[9753,9753],"valid",[],"NV8"],[[9754,9839],"valid",[],"NV8"],[[9840,9841],"valid",[],"NV8"],[[9842,9853],"valid",[],"NV8"],[[9854,9855],"valid",[],"NV8"],[[9856,9865],"valid",[],"NV8"],[[9866,9873],"valid",[],"NV8"],[[9874,9884],"valid",[],"NV8"],[[9885,9885],"valid",[],"NV8"],[[9886,9887],"valid",[],"NV8"],[[9888,9889],"valid",[],"NV8"],[[9890,9905],"valid",[],"NV8"],[[9906,9906],"valid",[],"NV8"],[[9907,9916],"valid",[],"NV8"],[[9917,9919],"valid",[],"NV8"],[[9920,9923],"valid",[],"NV8"],[[9924,9933],"valid",[],"NV8"],[[9934,9934],"valid",[],"NV8"],[[9935,9953],"valid",[],"NV8"],[[9954,9954],"valid",[],"NV8"],[[9955,9955],"valid",[],"NV8"],[[9956,9959],"valid",[],"NV8"],[[9960,9983],"valid",[],"NV8"],[[9984,9984],"valid",[],"NV8"],[[9985,9988],"valid",[],"NV8"],[[9989,9989],"valid",[],"NV8"],[[9990,9993],"valid",[],"NV8"],[[9994,9995],"valid",[],"NV8"],[[9996,10023],"valid",[],"NV8"],[[10024,10024],"valid",[],"NV8"],[[10025,10059],"valid",[],"NV8"],[[10060,10060],"valid",[],"NV8"],[[10061,10061],"valid",[],"NV8"],[[10062,10062],"valid",[],"NV8"],[[10063,10066],"valid",[],"NV8"],[[10067,10069],"valid",[],"NV8"],[[10070,10070],"valid",[],"NV8"],[[10071,10071],"valid",[],"NV8"],[[10072,10078],"valid",[],"NV8"],[[10079,10080],"valid",[],"NV8"],[[10081,10087],"valid",[],"NV8"],[[10088,10101],"valid",[],"NV8"],[[10102,10132],"valid",[],"NV8"],[[10133,10135],"valid",[],"NV8"],[[10136,10159],"valid",[],"NV8"],[[10160,10160],"valid",[],"NV8"],[[10161,10174],"valid",[],"NV8"],[[10175,10175],"valid",[],"NV8"],[[10176,10182],"valid",[],"NV8"],[[10183,10186],"valid",[],"NV8"],[[10187,10187],"valid",[],"NV8"],[[10188,10188],"valid",[],"NV8"],[[10189,10189],"valid",[],"NV8"],[[10190,10191],"valid",[],"NV8"],[[10192,10219],"valid",[],"NV8"],[[10220,10223],"valid",[],"NV8"],[[10224,10239],"valid",[],"NV8"],[[10240,10495],"valid",[],"NV8"],[[10496,10763],"valid",[],"NV8"],[[10764,10764],"mapped",[8747,8747,8747,8747]],[[10765,10867],"valid",[],"NV8"],[[10868,10868],"disallowed_STD3_mapped",[58,58,61]],[[10869,10869],"disallowed_STD3_mapped",[61,61]],[[10870,10870],"disallowed_STD3_mapped",[61,61,61]],[[10871,10971],"valid",[],"NV8"],[[10972,10972],"mapped",[10973,824]],[[10973,11007],"valid",[],"NV8"],[[11008,11021],"valid",[],"NV8"],[[11022,11027],"valid",[],"NV8"],[[11028,11034],"valid",[],"NV8"],[[11035,11039],"valid",[],"NV8"],[[11040,11043],"valid",[],"NV8"],[[11044,11084],"valid",[],"NV8"],[[11085,11087],"valid",[],"NV8"],[[11088,11092],"valid",[],"NV8"],[[11093,11097],"valid",[],"NV8"],[[11098,11123],"valid",[],"NV8"],[[11124,11125],"disallowed"],[[11126,11157],"valid",[],"NV8"],[[11158,11159],"disallowed"],[[11160,11193],"valid",[],"NV8"],[[11194,11196],"disallowed"],[[11197,11208],"valid",[],"NV8"],[[11209,11209],"disallowed"],[[11210,11217],"valid",[],"NV8"],[[11218,11243],"disallowed"],[[11244,11247],"valid",[],"NV8"],[[11248,11263],"disallowed"],[[11264,11264],"mapped",[11312]],[[11265,11265],"mapped",[11313]],[[11266,11266],"mapped",[11314]],[[11267,11267],"mapped",[11315]],[[11268,11268],"mapped",[11316]],[[11269,11269],"mapped",[11317]],[[11270,11270],"mapped",[11318]],[[11271,11271],"mapped",[11319]],[[11272,11272],"mapped",[11320]],[[11273,11273],"mapped",[11321]],[[11274,11274],"mapped",[11322]],[[11275,11275],"mapped",[11323]],[[11276,11276],"mapped",[11324]],[[11277,11277],"mapped",[11325]],[[11278,11278],"mapped",[11326]],[[11279,11279],"mapped",[11327]],[[11280,11280],"mapped",[11328]],[[11281,11281],"mapped",[11329]],[[11282,11282],"mapped",[11330]],[[11283,11283],"mapped",[11331]],[[11284,11284],"mapped",[11332]],[[11285,11285],"mapped",[11333]],[[11286,11286],"mapped",[11334]],[[11287,11287],"mapped",[11335]],[[11288,11288],"mapped",[11336]],[[11289,11289],"mapped",[11337]],[[11290,11290],"mapped",[11338]],[[11291,11291],"mapped",[11339]],[[11292,11292],"mapped",[11340]],[[11293,11293],"mapped",[11341]],[[11294,11294],"mapped",[11342]],[[11295,11295],"mapped",[11343]],[[11296,11296],"mapped",[11344]],[[11297,11297],"mapped",[11345]],[[11298,11298],"mapped",[11346]],[[11299,11299],"mapped",[11347]],[[11300,11300],"mapped",[11348]],[[11301,11301],"mapped",[11349]],[[11302,11302],"mapped",[11350]],[[11303,11303],"mapped",[11351]],[[11304,11304],"mapped",[11352]],[[11305,11305],"mapped",[11353]],[[11306,11306],"mapped",[11354]],[[11307,11307],"mapped",[11355]],[[11308,11308],"mapped",[11356]],[[11309,11309],"mapped",[11357]],[[11310,11310],"mapped",[11358]],[[11311,11311],"disallowed"],[[11312,11358],"valid"],[[11359,11359],"disallowed"],[[11360,11360],"mapped",[11361]],[[11361,11361],"valid"],[[11362,11362],"mapped",[619]],[[11363,11363],"mapped",[7549]],[[11364,11364],"mapped",[637]],[[11365,11366],"valid"],[[11367,11367],"mapped",[11368]],[[11368,11368],"valid"],[[11369,11369],"mapped",[11370]],[[11370,11370],"valid"],[[11371,11371],"mapped",[11372]],[[11372,11372],"valid"],[[11373,11373],"mapped",[593]],[[11374,11374],"mapped",[625]],[[11375,11375],"mapped",[592]],[[11376,11376],"mapped",[594]],[[11377,11377],"valid"],[[11378,11378],"mapped",[11379]],[[11379,11379],"valid"],[[11380,11380],"valid"],[[11381,11381],"mapped",[11382]],[[11382,11383],"valid"],[[11384,11387],"valid"],[[11388,11388],"mapped",[106]],[[11389,11389],"mapped",[118]],[[11390,11390],"mapped",[575]],[[11391,11391],"mapped",[576]],[[11392,11392],"mapped",[11393]],[[11393,11393],"valid"],[[11394,11394],"mapped",[11395]],[[11395,11395],"valid"],[[11396,11396],"mapped",[11397]],[[11397,11397],"valid"],[[11398,11398],"mapped",[11399]],[[11399,11399],"valid"],[[11400,11400],"mapped",[11401]],[[11401,11401],"valid"],[[11402,11402],"mapped",[11403]],[[11403,11403],"valid"],[[11404,11404],"mapped",[11405]],[[11405,11405],"valid"],[[11406,11406],"mapped",[11407]],[[11407,11407],"valid"],[[11408,11408],"mapped",[11409]],[[11409,11409],"valid"],[[11410,11410],"mapped",[11411]],[[11411,11411],"valid"],[[11412,11412],"mapped",[11413]],[[11413,11413],"valid"],[[11414,11414],"mapped",[11415]],[[11415,11415],"valid"],[[11416,11416],"mapped",[11417]],[[11417,11417],"valid"],[[11418,11418],"mapped",[11419]],[[11419,11419],"valid"],[[11420,11420],"mapped",[11421]],[[11421,11421],"valid"],[[11422,11422],"mapped",[11423]],[[11423,11423],"valid"],[[11424,11424],"mapped",[11425]],[[11425,11425],"valid"],[[11426,11426],"mapped",[11427]],[[11427,11427],"valid"],[[11428,11428],"mapped",[11429]],[[11429,11429],"valid"],[[11430,11430],"mapped",[11431]],[[11431,11431],"valid"],[[11432,11432],"mapped",[11433]],[[11433,11433],"valid"],[[11434,11434],"mapped",[11435]],[[11435,11435],"valid"],[[11436,11436],"mapped",[11437]],[[11437,11437],"valid"],[[11438,11438],"mapped",[11439]],[[11439,11439],"valid"],[[11440,11440],"mapped",[11441]],[[11441,11441],"valid"],[[11442,11442],"mapped",[11443]],[[11443,11443],"valid"],[[11444,11444],"mapped",[11445]],[[11445,11445],"valid"],[[11446,11446],"mapped",[11447]],[[11447,11447],"valid"],[[11448,11448],"mapped",[11449]],[[11449,11449],"valid"],[[11450,11450],"mapped",[11451]],[[11451,11451],"valid"],[[11452,11452],"mapped",[11453]],[[11453,11453],"valid"],[[11454,11454],"mapped",[11455]],[[11455,11455],"valid"],[[11456,11456],"mapped",[11457]],[[11457,11457],"valid"],[[11458,11458],"mapped",[11459]],[[11459,11459],"valid"],[[11460,11460],"mapped",[11461]],[[11461,11461],"valid"],[[11462,11462],"mapped",[11463]],[[11463,11463],"valid"],[[11464,11464],"mapped",[11465]],[[11465,11465],"valid"],[[11466,11466],"mapped",[11467]],[[11467,11467],"valid"],[[11468,11468],"mapped",[11469]],[[11469,11469],"valid"],[[11470,11470],"mapped",[11471]],[[11471,11471],"valid"],[[11472,11472],"mapped",[11473]],[[11473,11473],"valid"],[[11474,11474],"mapped",[11475]],[[11475,11475],"valid"],[[11476,11476],"mapped",[11477]],[[11477,11477],"valid"],[[11478,11478],"mapped",[11479]],[[11479,11479],"valid"],[[11480,11480],"mapped",[11481]],[[11481,11481],"valid"],[[11482,11482],"mapped",[11483]],[[11483,11483],"valid"],[[11484,11484],"mapped",[11485]],[[11485,11485],"valid"],[[11486,11486],"mapped",[11487]],[[11487,11487],"valid"],[[11488,11488],"mapped",[11489]],[[11489,11489],"valid"],[[11490,11490],"mapped",[11491]],[[11491,11492],"valid"],[[11493,11498],"valid",[],"NV8"],[[11499,11499],"mapped",[11500]],[[11500,11500],"valid"],[[11501,11501],"mapped",[11502]],[[11502,11505],"valid"],[[11506,11506],"mapped",[11507]],[[11507,11507],"valid"],[[11508,11512],"disallowed"],[[11513,11519],"valid",[],"NV8"],[[11520,11557],"valid"],[[11558,11558],"disallowed"],[[11559,11559],"valid"],[[11560,11564],"disallowed"],[[11565,11565],"valid"],[[11566,11567],"disallowed"],[[11568,11621],"valid"],[[11622,11623],"valid"],[[11624,11630],"disallowed"],[[11631,11631],"mapped",[11617]],[[11632,11632],"valid",[],"NV8"],[[11633,11646],"disallowed"],[[11647,11647],"valid"],[[11648,11670],"valid"],[[11671,11679],"disallowed"],[[11680,11686],"valid"],[[11687,11687],"disallowed"],[[11688,11694],"valid"],[[11695,11695],"disallowed"],[[11696,11702],"valid"],[[11703,11703],"disallowed"],[[11704,11710],"valid"],[[11711,11711],"disallowed"],[[11712,11718],"valid"],[[11719,11719],"disallowed"],[[11720,11726],"valid"],[[11727,11727],"disallowed"],[[11728,11734],"valid"],[[11735,11735],"disallowed"],[[11736,11742],"valid"],[[11743,11743],"disallowed"],[[11744,11775],"valid"],[[11776,11799],"valid",[],"NV8"],[[11800,11803],"valid",[],"NV8"],[[11804,11805],"valid",[],"NV8"],[[11806,11822],"valid",[],"NV8"],[[11823,11823],"valid"],[[11824,11824],"valid",[],"NV8"],[[11825,11825],"valid",[],"NV8"],[[11826,11835],"valid",[],"NV8"],[[11836,11842],"valid",[],"NV8"],[[11843,11903],"disallowed"],[[11904,11929],"valid",[],"NV8"],[[11930,11930],"disallowed"],[[11931,11934],"valid",[],"NV8"],[[11935,11935],"mapped",[27597]],[[11936,12018],"valid",[],"NV8"],[[12019,12019],"mapped",[40863]],[[12020,12031],"disallowed"],[[12032,12032],"mapped",[19968]],[[12033,12033],"mapped",[20008]],[[12034,12034],"mapped",[20022]],[[12035,12035],"mapped",[20031]],[[12036,12036],"mapped",[20057]],[[12037,12037],"mapped",[20101]],[[12038,12038],"mapped",[20108]],[[12039,12039],"mapped",[20128]],[[12040,12040],"mapped",[20154]],[[12041,12041],"mapped",[20799]],[[12042,12042],"mapped",[20837]],[[12043,12043],"mapped",[20843]],[[12044,12044],"mapped",[20866]],[[12045,12045],"mapped",[20886]],[[12046,12046],"mapped",[20907]],[[12047,12047],"mapped",[20960]],[[12048,12048],"mapped",[20981]],[[12049,12049],"mapped",[20992]],[[12050,12050],"mapped",[21147]],[[12051,12051],"mapped",[21241]],[[12052,12052],"mapped",[21269]],[[12053,12053],"mapped",[21274]],[[12054,12054],"mapped",[21304]],[[12055,12055],"mapped",[21313]],[[12056,12056],"mapped",[21340]],[[12057,12057],"mapped",[21353]],[[12058,12058],"mapped",[21378]],[[12059,12059],"mapped",[21430]],[[12060,12060],"mapped",[21448]],[[12061,12061],"mapped",[21475]],[[12062,12062],"mapped",[22231]],[[12063,12063],"mapped",[22303]],[[12064,12064],"mapped",[22763]],[[12065,12065],"mapped",[22786]],[[12066,12066],"mapped",[22794]],[[12067,12067],"mapped",[22805]],[[12068,12068],"mapped",[22823]],[[12069,12069],"mapped",[22899]],[[12070,12070],"mapped",[23376]],[[12071,12071],"mapped",[23424]],[[12072,12072],"mapped",[23544]],[[12073,12073],"mapped",[23567]],[[12074,12074],"mapped",[23586]],[[12075,12075],"mapped",[23608]],[[12076,12076],"mapped",[23662]],[[12077,12077],"mapped",[23665]],[[12078,12078],"mapped",[24027]],[[12079,12079],"mapped",[24037]],[[12080,12080],"mapped",[24049]],[[12081,12081],"mapped",[24062]],[[12082,12082],"mapped",[24178]],[[12083,12083],"mapped",[24186]],[[12084,12084],"mapped",[24191]],[[12085,12085],"mapped",[24308]],[[12086,12086],"mapped",[24318]],[[12087,12087],"mapped",[24331]],[[12088,12088],"mapped",[24339]],[[12089,12089],"mapped",[24400]],[[12090,12090],"mapped",[24417]],[[12091,12091],"mapped",[24435]],[[12092,12092],"mapped",[24515]],[[12093,12093],"mapped",[25096]],[[12094,12094],"mapped",[25142]],[[12095,12095],"mapped",[25163]],[[12096,12096],"mapped",[25903]],[[12097,12097],"mapped",[25908]],[[12098,12098],"mapped",[25991]],[[12099,12099],"mapped",[26007]],[[12100,12100],"mapped",[26020]],[[12101,12101],"mapped",[26041]],[[12102,12102],"mapped",[26080]],[[12103,12103],"mapped",[26085]],[[12104,12104],"mapped",[26352]],[[12105,12105],"mapped",[26376]],[[12106,12106],"mapped",[26408]],[[12107,12107],"mapped",[27424]],[[12108,12108],"mapped",[27490]],[[12109,12109],"mapped",[27513]],[[12110,12110],"mapped",[27571]],[[12111,12111],"mapped",[27595]],[[12112,12112],"mapped",[27604]],[[12113,12113],"mapped",[27611]],[[12114,12114],"mapped",[27663]],[[12115,12115],"mapped",[27668]],[[12116,12116],"mapped",[27700]],[[12117,12117],"mapped",[28779]],[[12118,12118],"mapped",[29226]],[[12119,12119],"mapped",[29238]],[[12120,12120],"mapped",[29243]],[[12121,12121],"mapped",[29247]],[[12122,12122],"mapped",[29255]],[[12123,12123],"mapped",[29273]],[[12124,12124],"mapped",[29275]],[[12125,12125],"mapped",[29356]],[[12126,12126],"mapped",[29572]],[[12127,12127],"mapped",[29577]],[[12128,12128],"mapped",[29916]],[[12129,12129],"mapped",[29926]],[[12130,12130],"mapped",[29976]],[[12131,12131],"mapped",[29983]],[[12132,12132],"mapped",[29992]],[[12133,12133],"mapped",[30000]],[[12134,12134],"mapped",[30091]],[[12135,12135],"mapped",[30098]],[[12136,12136],"mapped",[30326]],[[12137,12137],"mapped",[30333]],[[12138,12138],"mapped",[30382]],[[12139,12139],"mapped",[30399]],[[12140,12140],"mapped",[30446]],[[12141,12141],"mapped",[30683]],[[12142,12142],"mapped",[30690]],[[12143,12143],"mapped",[30707]],[[12144,12144],"mapped",[31034]],[[12145,12145],"mapped",[31160]],[[12146,12146],"mapped",[31166]],[[12147,12147],"mapped",[31348]],[[12148,12148],"mapped",[31435]],[[12149,12149],"mapped",[31481]],[[12150,12150],"mapped",[31859]],[[12151,12151],"mapped",[31992]],[[12152,12152],"mapped",[32566]],[[12153,12153],"mapped",[32593]],[[12154,12154],"mapped",[32650]],[[12155,12155],"mapped",[32701]],[[12156,12156],"mapped",[32769]],[[12157,12157],"mapped",[32780]],[[12158,12158],"mapped",[32786]],[[12159,12159],"mapped",[32819]],[[12160,12160],"mapped",[32895]],[[12161,12161],"mapped",[32905]],[[12162,12162],"mapped",[33251]],[[12163,12163],"mapped",[33258]],[[12164,12164],"mapped",[33267]],[[12165,12165],"mapped",[33276]],[[12166,12166],"mapped",[33292]],[[12167,12167],"mapped",[33307]],[[12168,12168],"mapped",[33311]],[[12169,12169],"mapped",[33390]],[[12170,12170],"mapped",[33394]],[[12171,12171],"mapped",[33400]],[[12172,12172],"mapped",[34381]],[[12173,12173],"mapped",[34411]],[[12174,12174],"mapped",[34880]],[[12175,12175],"mapped",[34892]],[[12176,12176],"mapped",[34915]],[[12177,12177],"mapped",[35198]],[[12178,12178],"mapped",[35211]],[[12179,12179],"mapped",[35282]],[[12180,12180],"mapped",[35328]],[[12181,12181],"mapped",[35895]],[[12182,12182],"mapped",[35910]],[[12183,12183],"mapped",[35925]],[[12184,12184],"mapped",[35960]],[[12185,12185],"mapped",[35997]],[[12186,12186],"mapped",[36196]],[[12187,12187],"mapped",[36208]],[[12188,12188],"mapped",[36275]],[[12189,12189],"mapped",[36523]],[[12190,12190],"mapped",[36554]],[[12191,12191],"mapped",[36763]],[[12192,12192],"mapped",[36784]],[[12193,12193],"mapped",[36789]],[[12194,12194],"mapped",[37009]],[[12195,12195],"mapped",[37193]],[[12196,12196],"mapped",[37318]],[[12197,12197],"mapped",[37324]],[[12198,12198],"mapped",[37329]],[[12199,12199],"mapped",[38263]],[[12200,12200],"mapped",[38272]],[[12201,12201],"mapped",[38428]],[[12202,12202],"mapped",[38582]],[[12203,12203],"mapped",[38585]],[[12204,12204],"mapped",[38632]],[[12205,12205],"mapped",[38737]],[[12206,12206],"mapped",[38750]],[[12207,12207],"mapped",[38754]],[[12208,12208],"mapped",[38761]],[[12209,12209],"mapped",[38859]],[[12210,12210],"mapped",[38893]],[[12211,12211],"mapped",[38899]],[[12212,12212],"mapped",[38913]],[[12213,12213],"mapped",[39080]],[[12214,12214],"mapped",[39131]],[[12215,12215],"mapped",[39135]],[[12216,12216],"mapped",[39318]],[[12217,12217],"mapped",[39321]],[[12218,12218],"mapped",[39340]],[[12219,12219],"mapped",[39592]],[[12220,12220],"mapped",[39640]],[[12221,12221],"mapped",[39647]],[[12222,12222],"mapped",[39717]],[[12223,12223],"mapped",[39727]],[[12224,12224],"mapped",[39730]],[[12225,12225],"mapped",[39740]],[[12226,12226],"mapped",[39770]],[[12227,12227],"mapped",[40165]],[[12228,12228],"mapped",[40565]],[[12229,12229],"mapped",[40575]],[[12230,12230],"mapped",[40613]],[[12231,12231],"mapped",[40635]],[[12232,12232],"mapped",[40643]],[[12233,12233],"mapped",[40653]],[[12234,12234],"mapped",[40657]],[[12235,12235],"mapped",[40697]],[[12236,12236],"mapped",[40701]],[[12237,12237],"mapped",[40718]],[[12238,12238],"mapped",[40723]],[[12239,12239],"mapped",[40736]],[[12240,12240],"mapped",[40763]],[[12241,12241],"mapped",[40778]],[[12242,12242],"mapped",[40786]],[[12243,12243],"mapped",[40845]],[[12244,12244],"mapped",[40860]],[[12245,12245],"mapped",[40864]],[[12246,12271],"disallowed"],[[12272,12283],"disallowed"],[[12284,12287],"disallowed"],[[12288,12288],"disallowed_STD3_mapped",[32]],[[12289,12289],"valid",[],"NV8"],[[12290,12290],"mapped",[46]],[[12291,12292],"valid",[],"NV8"],[[12293,12295],"valid"],[[12296,12329],"valid",[],"NV8"],[[12330,12333],"valid"],[[12334,12341],"valid",[],"NV8"],[[12342,12342],"mapped",[12306]],[[12343,12343],"valid",[],"NV8"],[[12344,12344],"mapped",[21313]],[[12345,12345],"mapped",[21316]],[[12346,12346],"mapped",[21317]],[[12347,12347],"valid",[],"NV8"],[[12348,12348],"valid"],[[12349,12349],"valid",[],"NV8"],[[12350,12350],"valid",[],"NV8"],[[12351,12351],"valid",[],"NV8"],[[12352,12352],"disallowed"],[[12353,12436],"valid"],[[12437,12438],"valid"],[[12439,12440],"disallowed"],[[12441,12442],"valid"],[[12443,12443],"disallowed_STD3_mapped",[32,12441]],[[12444,12444],"disallowed_STD3_mapped",[32,12442]],[[12445,12446],"valid"],[[12447,12447],"mapped",[12424,12426]],[[12448,12448],"valid",[],"NV8"],[[12449,12542],"valid"],[[12543,12543],"mapped",[12467,12488]],[[12544,12548],"disallowed"],[[12549,12588],"valid"],[[12589,12589],"valid"],[[12590,12592],"disallowed"],[[12593,12593],"mapped",[4352]],[[12594,12594],"mapped",[4353]],[[12595,12595],"mapped",[4522]],[[12596,12596],"mapped",[4354]],[[12597,12597],"mapped",[4524]],[[12598,12598],"mapped",[4525]],[[12599,12599],"mapped",[4355]],[[12600,12600],"mapped",[4356]],[[12601,12601],"mapped",[4357]],[[12602,12602],"mapped",[4528]],[[12603,12603],"mapped",[4529]],[[12604,12604],"mapped",[4530]],[[12605,12605],"mapped",[4531]],[[12606,12606],"mapped",[4532]],[[12607,12607],"mapped",[4533]],[[12608,12608],"mapped",[4378]],[[12609,12609],"mapped",[4358]],[[12610,12610],"mapped",[4359]],[[12611,12611],"mapped",[4360]],[[12612,12612],"mapped",[4385]],[[12613,12613],"mapped",[4361]],[[12614,12614],"mapped",[4362]],[[12615,12615],"mapped",[4363]],[[12616,12616],"mapped",[4364]],[[12617,12617],"mapped",[4365]],[[12618,12618],"mapped",[4366]],[[12619,12619],"mapped",[4367]],[[12620,12620],"mapped",[4368]],[[12621,12621],"mapped",[4369]],[[12622,12622],"mapped",[4370]],[[12623,12623],"mapped",[4449]],[[12624,12624],"mapped",[4450]],[[12625,12625],"mapped",[4451]],[[12626,12626],"mapped",[4452]],[[12627,12627],"mapped",[4453]],[[12628,12628],"mapped",[4454]],[[12629,12629],"mapped",[4455]],[[12630,12630],"mapped",[4456]],[[12631,12631],"mapped",[4457]],[[12632,12632],"mapped",[4458]],[[12633,12633],"mapped",[4459]],[[12634,12634],"mapped",[4460]],[[12635,12635],"mapped",[4461]],[[12636,12636],"mapped",[4462]],[[12637,12637],"mapped",[4463]],[[12638,12638],"mapped",[4464]],[[12639,12639],"mapped",[4465]],[[12640,12640],"mapped",[4466]],[[12641,12641],"mapped",[4467]],[[12642,12642],"mapped",[4468]],[[12643,12643],"mapped",[4469]],[[12644,12644],"disallowed"],[[12645,12645],"mapped",[4372]],[[12646,12646],"mapped",[4373]],[[12647,12647],"mapped",[4551]],[[12648,12648],"mapped",[4552]],[[12649,12649],"mapped",[4556]],[[12650,12650],"mapped",[4558]],[[12651,12651],"mapped",[4563]],[[12652,12652],"mapped",[4567]],[[12653,12653],"mapped",[4569]],[[12654,12654],"mapped",[4380]],[[12655,12655],"mapped",[4573]],[[12656,12656],"mapped",[4575]],[[12657,12657],"mapped",[4381]],[[12658,12658],"mapped",[4382]],[[12659,12659],"mapped",[4384]],[[12660,12660],"mapped",[4386]],[[12661,12661],"mapped",[4387]],[[12662,12662],"mapped",[4391]],[[12663,12663],"mapped",[4393]],[[12664,12664],"mapped",[4395]],[[12665,12665],"mapped",[4396]],[[12666,12666],"mapped",[4397]],[[12667,12667],"mapped",[4398]],[[12668,12668],"mapped",[4399]],[[12669,12669],"mapped",[4402]],[[12670,12670],"mapped",[4406]],[[12671,12671],"mapped",[4416]],[[12672,12672],"mapped",[4423]],[[12673,12673],"mapped",[4428]],[[12674,12674],"mapped",[4593]],[[12675,12675],"mapped",[4594]],[[12676,12676],"mapped",[4439]],[[12677,12677],"mapped",[4440]],[[12678,12678],"mapped",[4441]],[[12679,12679],"mapped",[4484]],[[12680,12680],"mapped",[4485]],[[12681,12681],"mapped",[4488]],[[12682,12682],"mapped",[4497]],[[12683,12683],"mapped",[4498]],[[12684,12684],"mapped",[4500]],[[12685,12685],"mapped",[4510]],[[12686,12686],"mapped",[4513]],[[12687,12687],"disallowed"],[[12688,12689],"valid",[],"NV8"],[[12690,12690],"mapped",[19968]],[[12691,12691],"mapped",[20108]],[[12692,12692],"mapped",[19977]],[[12693,12693],"mapped",[22235]],[[12694,12694],"mapped",[19978]],[[12695,12695],"mapped",[20013]],[[12696,12696],"mapped",[19979]],[[12697,12697],"mapped",[30002]],[[12698,12698],"mapped",[20057]],[[12699,12699],"mapped",[19993]],[[12700,12700],"mapped",[19969]],[[12701,12701],"mapped",[22825]],[[12702,12702],"mapped",[22320]],[[12703,12703],"mapped",[20154]],[[12704,12727],"valid"],[[12728,12730],"valid"],[[12731,12735],"disallowed"],[[12736,12751],"valid",[],"NV8"],[[12752,12771],"valid",[],"NV8"],[[12772,12783],"disallowed"],[[12784,12799],"valid"],[[12800,12800],"disallowed_STD3_mapped",[40,4352,41]],[[12801,12801],"disallowed_STD3_mapped",[40,4354,41]],[[12802,12802],"disallowed_STD3_mapped",[40,4355,41]],[[12803,12803],"disallowed_STD3_mapped",[40,4357,41]],[[12804,12804],"disallowed_STD3_mapped",[40,4358,41]],[[12805,12805],"disallowed_STD3_mapped",[40,4359,41]],[[12806,12806],"disallowed_STD3_mapped",[40,4361,41]],[[12807,12807],"disallowed_STD3_mapped",[40,4363,41]],[[12808,12808],"disallowed_STD3_mapped",[40,4364,41]],[[12809,12809],"disallowed_STD3_mapped",[40,4366,41]],[[12810,12810],"disallowed_STD3_mapped",[40,4367,41]],[[12811,12811],"disallowed_STD3_mapped",[40,4368,41]],[[12812,12812],"disallowed_STD3_mapped",[40,4369,41]],[[12813,12813],"disallowed_STD3_mapped",[40,4370,41]],[[12814,12814],"disallowed_STD3_mapped",[40,44032,41]],[[12815,12815],"disallowed_STD3_mapped",[40,45208,41]],[[12816,12816],"disallowed_STD3_mapped",[40,45796,41]],[[12817,12817],"disallowed_STD3_mapped",[40,46972,41]],[[12818,12818],"disallowed_STD3_mapped",[40,47560,41]],[[12819,12819],"disallowed_STD3_mapped",[40,48148,41]],[[12820,12820],"disallowed_STD3_mapped",[40,49324,41]],[[12821,12821],"disallowed_STD3_mapped",[40,50500,41]],[[12822,12822],"disallowed_STD3_mapped",[40,51088,41]],[[12823,12823],"disallowed_STD3_mapped",[40,52264,41]],[[12824,12824],"disallowed_STD3_mapped",[40,52852,41]],[[12825,12825],"disallowed_STD3_mapped",[40,53440,41]],[[12826,12826],"disallowed_STD3_mapped",[40,54028,41]],[[12827,12827],"disallowed_STD3_mapped",[40,54616,41]],[[12828,12828],"disallowed_STD3_mapped",[40,51452,41]],[[12829,12829],"disallowed_STD3_mapped",[40,50724,51204,41]],[[12830,12830],"disallowed_STD3_mapped",[40,50724,54980,41]],[[12831,12831],"disallowed"],[[12832,12832],"disallowed_STD3_mapped",[40,19968,41]],[[12833,12833],"disallowed_STD3_mapped",[40,20108,41]],[[12834,12834],"disallowed_STD3_mapped",[40,19977,41]],[[12835,12835],"disallowed_STD3_mapped",[40,22235,41]],[[12836,12836],"disallowed_STD3_mapped",[40,20116,41]],[[12837,12837],"disallowed_STD3_mapped",[40,20845,41]],[[12838,12838],"disallowed_STD3_mapped",[40,19971,41]],[[12839,12839],"disallowed_STD3_mapped",[40,20843,41]],[[12840,12840],"disallowed_STD3_mapped",[40,20061,41]],[[12841,12841],"disallowed_STD3_mapped",[40,21313,41]],[[12842,12842],"disallowed_STD3_mapped",[40,26376,41]],[[12843,12843],"disallowed_STD3_mapped",[40,28779,41]],[[12844,12844],"disallowed_STD3_mapped",[40,27700,41]],[[12845,12845],"disallowed_STD3_mapped",[40,26408,41]],[[12846,12846],"disallowed_STD3_mapped",[40,37329,41]],[[12847,12847],"disallowed_STD3_mapped",[40,22303,41]],[[12848,12848],"disallowed_STD3_mapped",[40,26085,41]],[[12849,12849],"disallowed_STD3_mapped",[40,26666,41]],[[12850,12850],"disallowed_STD3_mapped",[40,26377,41]],[[12851,12851],"disallowed_STD3_mapped",[40,31038,41]],[[12852,12852],"disallowed_STD3_mapped",[40,21517,41]],[[12853,12853],"disallowed_STD3_mapped",[40,29305,41]],[[12854,12854],"disallowed_STD3_mapped",[40,36001,41]],[[12855,12855],"disallowed_STD3_mapped",[40,31069,41]],[[12856,12856],"disallowed_STD3_mapped",[40,21172,41]],[[12857,12857],"disallowed_STD3_mapped",[40,20195,41]],[[12858,12858],"disallowed_STD3_mapped",[40,21628,41]],[[12859,12859],"disallowed_STD3_mapped",[40,23398,41]],[[12860,12860],"disallowed_STD3_mapped",[40,30435,41]],[[12861,12861],"disallowed_STD3_mapped",[40,20225,41]],[[12862,12862],"disallowed_STD3_mapped",[40,36039,41]],[[12863,12863],"disallowed_STD3_mapped",[40,21332,41]],[[12864,12864],"disallowed_STD3_mapped",[40,31085,41]],[[12865,12865],"disallowed_STD3_mapped",[40,20241,41]],[[12866,12866],"disallowed_STD3_mapped",[40,33258,41]],[[12867,12867],"disallowed_STD3_mapped",[40,33267,41]],[[12868,12868],"mapped",[21839]],[[12869,12869],"mapped",[24188]],[[12870,12870],"mapped",[25991]],[[12871,12871],"mapped",[31631]],[[12872,12879],"valid",[],"NV8"],[[12880,12880],"mapped",[112,116,101]],[[12881,12881],"mapped",[50,49]],[[12882,12882],"mapped",[50,50]],[[12883,12883],"mapped",[50,51]],[[12884,12884],"mapped",[50,52]],[[12885,12885],"mapped",[50,53]],[[12886,12886],"mapped",[50,54]],[[12887,12887],"mapped",[50,55]],[[12888,12888],"mapped",[50,56]],[[12889,12889],"mapped",[50,57]],[[12890,12890],"mapped",[51,48]],[[12891,12891],"mapped",[51,49]],[[12892,12892],"mapped",[51,50]],[[12893,12893],"mapped",[51,51]],[[12894,12894],"mapped",[51,52]],[[12895,12895],"mapped",[51,53]],[[12896,12896],"mapped",[4352]],[[12897,12897],"mapped",[4354]],[[12898,12898],"mapped",[4355]],[[12899,12899],"mapped",[4357]],[[12900,12900],"mapped",[4358]],[[12901,12901],"mapped",[4359]],[[12902,12902],"mapped",[4361]],[[12903,12903],"mapped",[4363]],[[12904,12904],"mapped",[4364]],[[12905,12905],"mapped",[4366]],[[12906,12906],"mapped",[4367]],[[12907,12907],"mapped",[4368]],[[12908,12908],"mapped",[4369]],[[12909,12909],"mapped",[4370]],[[12910,12910],"mapped",[44032]],[[12911,12911],"mapped",[45208]],[[12912,12912],"mapped",[45796]],[[12913,12913],"mapped",[46972]],[[12914,12914],"mapped",[47560]],[[12915,12915],"mapped",[48148]],[[12916,12916],"mapped",[49324]],[[12917,12917],"mapped",[50500]],[[12918,12918],"mapped",[51088]],[[12919,12919],"mapped",[52264]],[[12920,12920],"mapped",[52852]],[[12921,12921],"mapped",[53440]],[[12922,12922],"mapped",[54028]],[[12923,12923],"mapped",[54616]],[[12924,12924],"mapped",[52280,44256]],[[12925,12925],"mapped",[51452,51032]],[[12926,12926],"mapped",[50864]],[[12927,12927],"valid",[],"NV8"],[[12928,12928],"mapped",[19968]],[[12929,12929],"mapped",[20108]],[[12930,12930],"mapped",[19977]],[[12931,12931],"mapped",[22235]],[[12932,12932],"mapped",[20116]],[[12933,12933],"mapped",[20845]],[[12934,12934],"mapped",[19971]],[[12935,12935],"mapped",[20843]],[[12936,12936],"mapped",[20061]],[[12937,12937],"mapped",[21313]],[[12938,12938],"mapped",[26376]],[[12939,12939],"mapped",[28779]],[[12940,12940],"mapped",[27700]],[[12941,12941],"mapped",[26408]],[[12942,12942],"mapped",[37329]],[[12943,12943],"mapped",[22303]],[[12944,12944],"mapped",[26085]],[[12945,12945],"mapped",[26666]],[[12946,12946],"mapped",[26377]],[[12947,12947],"mapped",[31038]],[[12948,12948],"mapped",[21517]],[[12949,12949],"mapped",[29305]],[[12950,12950],"mapped",[36001]],[[12951,12951],"mapped",[31069]],[[12952,12952],"mapped",[21172]],[[12953,12953],"mapped",[31192]],[[12954,12954],"mapped",[30007]],[[12955,12955],"mapped",[22899]],[[12956,12956],"mapped",[36969]],[[12957,12957],"mapped",[20778]],[[12958,12958],"mapped",[21360]],[[12959,12959],"mapped",[27880]],[[12960,12960],"mapped",[38917]],[[12961,12961],"mapped",[20241]],[[12962,12962],"mapped",[20889]],[[12963,12963],"mapped",[27491]],[[12964,12964],"mapped",[19978]],[[12965,12965],"mapped",[20013]],[[12966,12966],"mapped",[19979]],[[12967,12967],"mapped",[24038]],[[12968,12968],"mapped",[21491]],[[12969,12969],"mapped",[21307]],[[12970,12970],"mapped",[23447]],[[12971,12971],"mapped",[23398]],[[12972,12972],"mapped",[30435]],[[12973,12973],"mapped",[20225]],[[12974,12974],"mapped",[36039]],[[12975,12975],"mapped",[21332]],[[12976,12976],"mapped",[22812]],[[12977,12977],"mapped",[51,54]],[[12978,12978],"mapped",[51,55]],[[12979,12979],"mapped",[51,56]],[[12980,12980],"mapped",[51,57]],[[12981,12981],"mapped",[52,48]],[[12982,12982],"mapped",[52,49]],[[12983,12983],"mapped",[52,50]],[[12984,12984],"mapped",[52,51]],[[12985,12985],"mapped",[52,52]],[[12986,12986],"mapped",[52,53]],[[12987,12987],"mapped",[52,54]],[[12988,12988],"mapped",[52,55]],[[12989,12989],"mapped",[52,56]],[[12990,12990],"mapped",[52,57]],[[12991,12991],"mapped",[53,48]],[[12992,12992],"mapped",[49,26376]],[[12993,12993],"mapped",[50,26376]],[[12994,12994],"mapped",[51,26376]],[[12995,12995],"mapped",[52,26376]],[[12996,12996],"mapped",[53,26376]],[[12997,12997],"mapped",[54,26376]],[[12998,12998],"mapped",[55,26376]],[[12999,12999],"mapped",[56,26376]],[[13000,13000],"mapped",[57,26376]],[[13001,13001],"mapped",[49,48,26376]],[[13002,13002],"mapped",[49,49,26376]],[[13003,13003],"mapped",[49,50,26376]],[[13004,13004],"mapped",[104,103]],[[13005,13005],"mapped",[101,114,103]],[[13006,13006],"mapped",[101,118]],[[13007,13007],"mapped",[108,116,100]],[[13008,13008],"mapped",[12450]],[[13009,13009],"mapped",[12452]],[[13010,13010],"mapped",[12454]],[[13011,13011],"mapped",[12456]],[[13012,13012],"mapped",[12458]],[[13013,13013],"mapped",[12459]],[[13014,13014],"mapped",[12461]],[[13015,13015],"mapped",[12463]],[[13016,13016],"mapped",[12465]],[[13017,13017],"mapped",[12467]],[[13018,13018],"mapped",[12469]],[[13019,13019],"mapped",[12471]],[[13020,13020],"mapped",[12473]],[[13021,13021],"mapped",[12475]],[[13022,13022],"mapped",[12477]],[[13023,13023],"mapped",[12479]],[[13024,13024],"mapped",[12481]],[[13025,13025],"mapped",[12484]],[[13026,13026],"mapped",[12486]],[[13027,13027],"mapped",[12488]],[[13028,13028],"mapped",[12490]],[[13029,13029],"mapped",[12491]],[[13030,13030],"mapped",[12492]],[[13031,13031],"mapped",[12493]],[[13032,13032],"mapped",[12494]],[[13033,13033],"mapped",[12495]],[[13034,13034],"mapped",[12498]],[[13035,13035],"mapped",[12501]],[[13036,13036],"mapped",[12504]],[[13037,13037],"mapped",[12507]],[[13038,13038],"mapped",[12510]],[[13039,13039],"mapped",[12511]],[[13040,13040],"mapped",[12512]],[[13041,13041],"mapped",[12513]],[[13042,13042],"mapped",[12514]],[[13043,13043],"mapped",[12516]],[[13044,13044],"mapped",[12518]],[[13045,13045],"mapped",[12520]],[[13046,13046],"mapped",[12521]],[[13047,13047],"mapped",[12522]],[[13048,13048],"mapped",[12523]],[[13049,13049],"mapped",[12524]],[[13050,13050],"mapped",[12525]],[[13051,13051],"mapped",[12527]],[[13052,13052],"mapped",[12528]],[[13053,13053],"mapped",[12529]],[[13054,13054],"mapped",[12530]],[[13055,13055],"disallowed"],[[13056,13056],"mapped",[12450,12497,12540,12488]],[[13057,13057],"mapped",[12450,12523,12501,12449]],[[13058,13058],"mapped",[12450,12531,12506,12450]],[[13059,13059],"mapped",[12450,12540,12523]],[[13060,13060],"mapped",[12452,12491,12531,12464]],[[13061,13061],"mapped",[12452,12531,12481]],[[13062,13062],"mapped",[12454,12457,12531]],[[13063,13063],"mapped",[12456,12473,12463,12540,12489]],[[13064,13064],"mapped",[12456,12540,12459,12540]],[[13065,13065],"mapped",[12458,12531,12473]],[[13066,13066],"mapped",[12458,12540,12512]],[[13067,13067],"mapped",[12459,12452,12522]],[[13068,13068],"mapped",[12459,12521,12483,12488]],[[13069,13069],"mapped",[12459,12525,12522,12540]],[[13070,13070],"mapped",[12460,12525,12531]],[[13071,13071],"mapped",[12460,12531,12510]],[[13072,13072],"mapped",[12462,12460]],[[13073,13073],"mapped",[12462,12491,12540]],[[13074,13074],"mapped",[12461,12517,12522,12540]],[[13075,13075],"mapped",[12462,12523,12480,12540]],[[13076,13076],"mapped",[12461,12525]],[[13077,13077],"mapped",[12461,12525,12464,12521,12512]],[[13078,13078],"mapped",[12461,12525,12513,12540,12488,12523]],[[13079,13079],"mapped",[12461,12525,12527,12483,12488]],[[13080,13080],"mapped",[12464,12521,12512]],[[13081,13081],"mapped",[12464,12521,12512,12488,12531]],[[13082,13082],"mapped",[12463,12523,12476,12452,12525]],[[13083,13083],"mapped",[12463,12525,12540,12493]],[[13084,13084],"mapped",[12465,12540,12473]],[[13085,13085],"mapped",[12467,12523,12490]],[[13086,13086],"mapped",[12467,12540,12509]],[[13087,13087],"mapped",[12469,12452,12463,12523]],[[13088,13088],"mapped",[12469,12531,12481,12540,12512]],[[13089,13089],"mapped",[12471,12522,12531,12464]],[[13090,13090],"mapped",[12475,12531,12481]],[[13091,13091],"mapped",[12475,12531,12488]],[[13092,13092],"mapped",[12480,12540,12473]],[[13093,13093],"mapped",[12487,12471]],[[13094,13094],"mapped",[12489,12523]],[[13095,13095],"mapped",[12488,12531]],[[13096,13096],"mapped",[12490,12494]],[[13097,13097],"mapped",[12494,12483,12488]],[[13098,13098],"mapped",[12495,12452,12484]],[[13099,13099],"mapped",[12497,12540,12475,12531,12488]],[[13100,13100],"mapped",[12497,12540,12484]],[[13101,13101],"mapped",[12496,12540,12524,12523]],[[13102,13102],"mapped",[12500,12450,12473,12488,12523]],[[13103,13103],"mapped",[12500,12463,12523]],[[13104,13104],"mapped",[12500,12467]],[[13105,13105],"mapped",[12499,12523]],[[13106,13106],"mapped",[12501,12449,12521,12483,12489]],[[13107,13107],"mapped",[12501,12451,12540,12488]],[[13108,13108],"mapped",[12502,12483,12471,12455,12523]],[[13109,13109],"mapped",[12501,12521,12531]],[[13110,13110],"mapped",[12504,12463,12479,12540,12523]],[[13111,13111],"mapped",[12506,12477]],[[13112,13112],"mapped",[12506,12491,12498]],[[13113,13113],"mapped",[12504,12523,12484]],[[13114,13114],"mapped",[12506,12531,12473]],[[13115,13115],"mapped",[12506,12540,12472]],[[13116,13116],"mapped",[12505,12540,12479]],[[13117,13117],"mapped",[12509,12452,12531,12488]],[[13118,13118],"mapped",[12508,12523,12488]],[[13119,13119],"mapped",[12507,12531]],[[13120,13120],"mapped",[12509,12531,12489]],[[13121,13121],"mapped",[12507,12540,12523]],[[13122,13122],"mapped",[12507,12540,12531]],[[13123,13123],"mapped",[12510,12452,12463,12525]],[[13124,13124],"mapped",[12510,12452,12523]],[[13125,13125],"mapped",[12510,12483,12495]],[[13126,13126],"mapped",[12510,12523,12463]],[[13127,13127],"mapped",[12510,12531,12471,12519,12531]],[[13128,13128],"mapped",[12511,12463,12525,12531]],[[13129,13129],"mapped",[12511,12522]],[[13130,13130],"mapped",[12511,12522,12496,12540,12523]],[[13131,13131],"mapped",[12513,12460]],[[13132,13132],"mapped",[12513,12460,12488,12531]],[[13133,13133],"mapped",[12513,12540,12488,12523]],[[13134,13134],"mapped",[12516,12540,12489]],[[13135,13135],"mapped",[12516,12540,12523]],[[13136,13136],"mapped",[12518,12450,12531]],[[13137,13137],"mapped",[12522,12483,12488,12523]],[[13138,13138],"mapped",[12522,12521]],[[13139,13139],"mapped",[12523,12500,12540]],[[13140,13140],"mapped",[12523,12540,12502,12523]],[[13141,13141],"mapped",[12524,12512]],[[13142,13142],"mapped",[12524,12531,12488,12466,12531]],[[13143,13143],"mapped",[12527,12483,12488]],[[13144,13144],"mapped",[48,28857]],[[13145,13145],"mapped",[49,28857]],[[13146,13146],"mapped",[50,28857]],[[13147,13147],"mapped",[51,28857]],[[13148,13148],"mapped",[52,28857]],[[13149,13149],"mapped",[53,28857]],[[13150,13150],"mapped",[54,28857]],[[13151,13151],"mapped",[55,28857]],[[13152,13152],"mapped",[56,28857]],[[13153,13153],"mapped",[57,28857]],[[13154,13154],"mapped",[49,48,28857]],[[13155,13155],"mapped",[49,49,28857]],[[13156,13156],"mapped",[49,50,28857]],[[13157,13157],"mapped",[49,51,28857]],[[13158,13158],"mapped",[49,52,28857]],[[13159,13159],"mapped",[49,53,28857]],[[13160,13160],"mapped",[49,54,28857]],[[13161,13161],"mapped",[49,55,28857]],[[13162,13162],"mapped",[49,56,28857]],[[13163,13163],"mapped",[49,57,28857]],[[13164,13164],"mapped",[50,48,28857]],[[13165,13165],"mapped",[50,49,28857]],[[13166,13166],"mapped",[50,50,28857]],[[13167,13167],"mapped",[50,51,28857]],[[13168,13168],"mapped",[50,52,28857]],[[13169,13169],"mapped",[104,112,97]],[[13170,13170],"mapped",[100,97]],[[13171,13171],"mapped",[97,117]],[[13172,13172],"mapped",[98,97,114]],[[13173,13173],"mapped",[111,118]],[[13174,13174],"mapped",[112,99]],[[13175,13175],"mapped",[100,109]],[[13176,13176],"mapped",[100,109,50]],[[13177,13177],"mapped",[100,109,51]],[[13178,13178],"mapped",[105,117]],[[13179,13179],"mapped",[24179,25104]],[[13180,13180],"mapped",[26157,21644]],[[13181,13181],"mapped",[22823,27491]],[[13182,13182],"mapped",[26126,27835]],[[13183,13183],"mapped",[26666,24335,20250,31038]],[[13184,13184],"mapped",[112,97]],[[13185,13185],"mapped",[110,97]],[[13186,13186],"mapped",[956,97]],[[13187,13187],"mapped",[109,97]],[[13188,13188],"mapped",[107,97]],[[13189,13189],"mapped",[107,98]],[[13190,13190],"mapped",[109,98]],[[13191,13191],"mapped",[103,98]],[[13192,13192],"mapped",[99,97,108]],[[13193,13193],"mapped",[107,99,97,108]],[[13194,13194],"mapped",[112,102]],[[13195,13195],"mapped",[110,102]],[[13196,13196],"mapped",[956,102]],[[13197,13197],"mapped",[956,103]],[[13198,13198],"mapped",[109,103]],[[13199,13199],"mapped",[107,103]],[[13200,13200],"mapped",[104,122]],[[13201,13201],"mapped",[107,104,122]],[[13202,13202],"mapped",[109,104,122]],[[13203,13203],"mapped",[103,104,122]],[[13204,13204],"mapped",[116,104,122]],[[13205,13205],"mapped",[956,108]],[[13206,13206],"mapped",[109,108]],[[13207,13207],"mapped",[100,108]],[[13208,13208],"mapped",[107,108]],[[13209,13209],"mapped",[102,109]],[[13210,13210],"mapped",[110,109]],[[13211,13211],"mapped",[956,109]],[[13212,13212],"mapped",[109,109]],[[13213,13213],"mapped",[99,109]],[[13214,13214],"mapped",[107,109]],[[13215,13215],"mapped",[109,109,50]],[[13216,13216],"mapped",[99,109,50]],[[13217,13217],"mapped",[109,50]],[[13218,13218],"mapped",[107,109,50]],[[13219,13219],"mapped",[109,109,51]],[[13220,13220],"mapped",[99,109,51]],[[13221,13221],"mapped",[109,51]],[[13222,13222],"mapped",[107,109,51]],[[13223,13223],"mapped",[109,8725,115]],[[13224,13224],"mapped",[109,8725,115,50]],[[13225,13225],"mapped",[112,97]],[[13226,13226],"mapped",[107,112,97]],[[13227,13227],"mapped",[109,112,97]],[[13228,13228],"mapped",[103,112,97]],[[13229,13229],"mapped",[114,97,100]],[[13230,13230],"mapped",[114,97,100,8725,115]],[[13231,13231],"mapped",[114,97,100,8725,115,50]],[[13232,13232],"mapped",[112,115]],[[13233,13233],"mapped",[110,115]],[[13234,13234],"mapped",[956,115]],[[13235,13235],"mapped",[109,115]],[[13236,13236],"mapped",[112,118]],[[13237,13237],"mapped",[110,118]],[[13238,13238],"mapped",[956,118]],[[13239,13239],"mapped",[109,118]],[[13240,13240],"mapped",[107,118]],[[13241,13241],"mapped",[109,118]],[[13242,13242],"mapped",[112,119]],[[13243,13243],"mapped",[110,119]],[[13244,13244],"mapped",[956,119]],[[13245,13245],"mapped",[109,119]],[[13246,13246],"mapped",[107,119]],[[13247,13247],"mapped",[109,119]],[[13248,13248],"mapped",[107,969]],[[13249,13249],"mapped",[109,969]],[[13250,13250],"disallowed"],[[13251,13251],"mapped",[98,113]],[[13252,13252],"mapped",[99,99]],[[13253,13253],"mapped",[99,100]],[[13254,13254],"mapped",[99,8725,107,103]],[[13255,13255],"disallowed"],[[13256,13256],"mapped",[100,98]],[[13257,13257],"mapped",[103,121]],[[13258,13258],"mapped",[104,97]],[[13259,13259],"mapped",[104,112]],[[13260,13260],"mapped",[105,110]],[[13261,13261],"mapped",[107,107]],[[13262,13262],"mapped",[107,109]],[[13263,13263],"mapped",[107,116]],[[13264,13264],"mapped",[108,109]],[[13265,13265],"mapped",[108,110]],[[13266,13266],"mapped",[108,111,103]],[[13267,13267],"mapped",[108,120]],[[13268,13268],"mapped",[109,98]],[[13269,13269],"mapped",[109,105,108]],[[13270,13270],"mapped",[109,111,108]],[[13271,13271],"mapped",[112,104]],[[13272,13272],"disallowed"],[[13273,13273],"mapped",[112,112,109]],[[13274,13274],"mapped",[112,114]],[[13275,13275],"mapped",[115,114]],[[13276,13276],"mapped",[115,118]],[[13277,13277],"mapped",[119,98]],[[13278,13278],"mapped",[118,8725,109]],[[13279,13279],"mapped",[97,8725,109]],[[13280,13280],"mapped",[49,26085]],[[13281,13281],"mapped",[50,26085]],[[13282,13282],"mapped",[51,26085]],[[13283,13283],"mapped",[52,26085]],[[13284,13284],"mapped",[53,26085]],[[13285,13285],"mapped",[54,26085]],[[13286,13286],"mapped",[55,26085]],[[13287,13287],"mapped",[56,26085]],[[13288,13288],"mapped",[57,26085]],[[13289,13289],"mapped",[49,48,26085]],[[13290,13290],"mapped",[49,49,26085]],[[13291,13291],"mapped",[49,50,26085]],[[13292,13292],"mapped",[49,51,26085]],[[13293,13293],"mapped",[49,52,26085]],[[13294,13294],"mapped",[49,53,26085]],[[13295,13295],"mapped",[49,54,26085]],[[13296,13296],"mapped",[49,55,26085]],[[13297,13297],"mapped",[49,56,26085]],[[13298,13298],"mapped",[49,57,26085]],[[13299,13299],"mapped",[50,48,26085]],[[13300,13300],"mapped",[50,49,26085]],[[13301,13301],"mapped",[50,50,26085]],[[13302,13302],"mapped",[50,51,26085]],[[13303,13303],"mapped",[50,52,26085]],[[13304,13304],"mapped",[50,53,26085]],[[13305,13305],"mapped",[50,54,26085]],[[13306,13306],"mapped",[50,55,26085]],[[13307,13307],"mapped",[50,56,26085]],[[13308,13308],"mapped",[50,57,26085]],[[13309,13309],"mapped",[51,48,26085]],[[13310,13310],"mapped",[51,49,26085]],[[13311,13311],"mapped",[103,97,108]],[[13312,19893],"valid"],[[19894,19903],"disallowed"],[[19904,19967],"valid",[],"NV8"],[[19968,40869],"valid"],[[40870,40891],"valid"],[[40892,40899],"valid"],[[40900,40907],"valid"],[[40908,40908],"valid"],[[40909,40917],"valid"],[[40918,40959],"disallowed"],[[40960,42124],"valid"],[[42125,42127],"disallowed"],[[42128,42145],"valid",[],"NV8"],[[42146,42147],"valid",[],"NV8"],[[42148,42163],"valid",[],"NV8"],[[42164,42164],"valid",[],"NV8"],[[42165,42176],"valid",[],"NV8"],[[42177,42177],"valid",[],"NV8"],[[42178,42180],"valid",[],"NV8"],[[42181,42181],"valid",[],"NV8"],[[42182,42182],"valid",[],"NV8"],[[42183,42191],"disallowed"],[[42192,42237],"valid"],[[42238,42239],"valid",[],"NV8"],[[42240,42508],"valid"],[[42509,42511],"valid",[],"NV8"],[[42512,42539],"valid"],[[42540,42559],"disallowed"],[[42560,42560],"mapped",[42561]],[[42561,42561],"valid"],[[42562,42562],"mapped",[42563]],[[42563,42563],"valid"],[[42564,42564],"mapped",[42565]],[[42565,42565],"valid"],[[42566,42566],"mapped",[42567]],[[42567,42567],"valid"],[[42568,42568],"mapped",[42569]],[[42569,42569],"valid"],[[42570,42570],"mapped",[42571]],[[42571,42571],"valid"],[[42572,42572],"mapped",[42573]],[[42573,42573],"valid"],[[42574,42574],"mapped",[42575]],[[42575,42575],"valid"],[[42576,42576],"mapped",[42577]],[[42577,42577],"valid"],[[42578,42578],"mapped",[42579]],[[42579,42579],"valid"],[[42580,42580],"mapped",[42581]],[[42581,42581],"valid"],[[42582,42582],"mapped",[42583]],[[42583,42583],"valid"],[[42584,42584],"mapped",[42585]],[[42585,42585],"valid"],[[42586,42586],"mapped",[42587]],[[42587,42587],"valid"],[[42588,42588],"mapped",[42589]],[[42589,42589],"valid"],[[42590,42590],"mapped",[42591]],[[42591,42591],"valid"],[[42592,42592],"mapped",[42593]],[[42593,42593],"valid"],[[42594,42594],"mapped",[42595]],[[42595,42595],"valid"],[[42596,42596],"mapped",[42597]],[[42597,42597],"valid"],[[42598,42598],"mapped",[42599]],[[42599,42599],"valid"],[[42600,42600],"mapped",[42601]],[[42601,42601],"valid"],[[42602,42602],"mapped",[42603]],[[42603,42603],"valid"],[[42604,42604],"mapped",[42605]],[[42605,42607],"valid"],[[42608,42611],"valid",[],"NV8"],[[42612,42619],"valid"],[[42620,42621],"valid"],[[42622,42622],"valid",[],"NV8"],[[42623,42623],"valid"],[[42624,42624],"mapped",[42625]],[[42625,42625],"valid"],[[42626,42626],"mapped",[42627]],[[42627,42627],"valid"],[[42628,42628],"mapped",[42629]],[[42629,42629],"valid"],[[42630,42630],"mapped",[42631]],[[42631,42631],"valid"],[[42632,42632],"mapped",[42633]],[[42633,42633],"valid"],[[42634,42634],"mapped",[42635]],[[42635,42635],"valid"],[[42636,42636],"mapped",[42637]],[[42637,42637],"valid"],[[42638,42638],"mapped",[42639]],[[42639,42639],"valid"],[[42640,42640],"mapped",[42641]],[[42641,42641],"valid"],[[42642,42642],"mapped",[42643]],[[42643,42643],"valid"],[[42644,42644],"mapped",[42645]],[[42645,42645],"valid"],[[42646,42646],"mapped",[42647]],[[42647,42647],"valid"],[[42648,42648],"mapped",[42649]],[[42649,42649],"valid"],[[42650,42650],"mapped",[42651]],[[42651,42651],"valid"],[[42652,42652],"mapped",[1098]],[[42653,42653],"mapped",[1100]],[[42654,42654],"valid"],[[42655,42655],"valid"],[[42656,42725],"valid"],[[42726,42735],"valid",[],"NV8"],[[42736,42737],"valid"],[[42738,42743],"valid",[],"NV8"],[[42744,42751],"disallowed"],[[42752,42774],"valid",[],"NV8"],[[42775,42778],"valid"],[[42779,42783],"valid"],[[42784,42785],"valid",[],"NV8"],[[42786,42786],"mapped",[42787]],[[42787,42787],"valid"],[[42788,42788],"mapped",[42789]],[[42789,42789],"valid"],[[42790,42790],"mapped",[42791]],[[42791,42791],"valid"],[[42792,42792],"mapped",[42793]],[[42793,42793],"valid"],[[42794,42794],"mapped",[42795]],[[42795,42795],"valid"],[[42796,42796],"mapped",[42797]],[[42797,42797],"valid"],[[42798,42798],"mapped",[42799]],[[42799,42801],"valid"],[[42802,42802],"mapped",[42803]],[[42803,42803],"valid"],[[42804,42804],"mapped",[42805]],[[42805,42805],"valid"],[[42806,42806],"mapped",[42807]],[[42807,42807],"valid"],[[42808,42808],"mapped",[42809]],[[42809,42809],"valid"],[[42810,42810],"mapped",[42811]],[[42811,42811],"valid"],[[42812,42812],"mapped",[42813]],[[42813,42813],"valid"],[[42814,42814],"mapped",[42815]],[[42815,42815],"valid"],[[42816,42816],"mapped",[42817]],[[42817,42817],"valid"],[[42818,42818],"mapped",[42819]],[[42819,42819],"valid"],[[42820,42820],"mapped",[42821]],[[42821,42821],"valid"],[[42822,42822],"mapped",[42823]],[[42823,42823],"valid"],[[42824,42824],"mapped",[42825]],[[42825,42825],"valid"],[[42826,42826],"mapped",[42827]],[[42827,42827],"valid"],[[42828,42828],"mapped",[42829]],[[42829,42829],"valid"],[[42830,42830],"mapped",[42831]],[[42831,42831],"valid"],[[42832,42832],"mapped",[42833]],[[42833,42833],"valid"],[[42834,42834],"mapped",[42835]],[[42835,42835],"valid"],[[42836,42836],"mapped",[42837]],[[42837,42837],"valid"],[[42838,42838],"mapped",[42839]],[[42839,42839],"valid"],[[42840,42840],"mapped",[42841]],[[42841,42841],"valid"],[[42842,42842],"mapped",[42843]],[[42843,42843],"valid"],[[42844,42844],"mapped",[42845]],[[42845,42845],"valid"],[[42846,42846],"mapped",[42847]],[[42847,42847],"valid"],[[42848,42848],"mapped",[42849]],[[42849,42849],"valid"],[[42850,42850],"mapped",[42851]],[[42851,42851],"valid"],[[42852,42852],"mapped",[42853]],[[42853,42853],"valid"],[[42854,42854],"mapped",[42855]],[[42855,42855],"valid"],[[42856,42856],"mapped",[42857]],[[42857,42857],"valid"],[[42858,42858],"mapped",[42859]],[[42859,42859],"valid"],[[42860,42860],"mapped",[42861]],[[42861,42861],"valid"],[[42862,42862],"mapped",[42863]],[[42863,42863],"valid"],[[42864,42864],"mapped",[42863]],[[42865,42872],"valid"],[[42873,42873],"mapped",[42874]],[[42874,42874],"valid"],[[42875,42875],"mapped",[42876]],[[42876,42876],"valid"],[[42877,42877],"mapped",[7545]],[[42878,42878],"mapped",[42879]],[[42879,42879],"valid"],[[42880,42880],"mapped",[42881]],[[42881,42881],"valid"],[[42882,42882],"mapped",[42883]],[[42883,42883],"valid"],[[42884,42884],"mapped",[42885]],[[42885,42885],"valid"],[[42886,42886],"mapped",[42887]],[[42887,42888],"valid"],[[42889,42890],"valid",[],"NV8"],[[42891,42891],"mapped",[42892]],[[42892,42892],"valid"],[[42893,42893],"mapped",[613]],[[42894,42894],"valid"],[[42895,42895],"valid"],[[42896,42896],"mapped",[42897]],[[42897,42897],"valid"],[[42898,42898],"mapped",[42899]],[[42899,42899],"valid"],[[42900,42901],"valid"],[[42902,42902],"mapped",[42903]],[[42903,42903],"valid"],[[42904,42904],"mapped",[42905]],[[42905,42905],"valid"],[[42906,42906],"mapped",[42907]],[[42907,42907],"valid"],[[42908,42908],"mapped",[42909]],[[42909,42909],"valid"],[[42910,42910],"mapped",[42911]],[[42911,42911],"valid"],[[42912,42912],"mapped",[42913]],[[42913,42913],"valid"],[[42914,42914],"mapped",[42915]],[[42915,42915],"valid"],[[42916,42916],"mapped",[42917]],[[42917,42917],"valid"],[[42918,42918],"mapped",[42919]],[[42919,42919],"valid"],[[42920,42920],"mapped",[42921]],[[42921,42921],"valid"],[[42922,42922],"mapped",[614]],[[42923,42923],"mapped",[604]],[[42924,42924],"mapped",[609]],[[42925,42925],"mapped",[620]],[[42926,42927],"disallowed"],[[42928,42928],"mapped",[670]],[[42929,42929],"mapped",[647]],[[42930,42930],"mapped",[669]],[[42931,42931],"mapped",[43859]],[[42932,42932],"mapped",[42933]],[[42933,42933],"valid"],[[42934,42934],"mapped",[42935]],[[42935,42935],"valid"],[[42936,42998],"disallowed"],[[42999,42999],"valid"],[[43000,43000],"mapped",[295]],[[43001,43001],"mapped",[339]],[[43002,43002],"valid"],[[43003,43007],"valid"],[[43008,43047],"valid"],[[43048,43051],"valid",[],"NV8"],[[43052,43055],"disallowed"],[[43056,43065],"valid",[],"NV8"],[[43066,43071],"disallowed"],[[43072,43123],"valid"],[[43124,43127],"valid",[],"NV8"],[[43128,43135],"disallowed"],[[43136,43204],"valid"],[[43205,43213],"disallowed"],[[43214,43215],"valid",[],"NV8"],[[43216,43225],"valid"],[[43226,43231],"disallowed"],[[43232,43255],"valid"],[[43256,43258],"valid",[],"NV8"],[[43259,43259],"valid"],[[43260,43260],"valid",[],"NV8"],[[43261,43261],"valid"],[[43262,43263],"disallowed"],[[43264,43309],"valid"],[[43310,43311],"valid",[],"NV8"],[[43312,43347],"valid"],[[43348,43358],"disallowed"],[[43359,43359],"valid",[],"NV8"],[[43360,43388],"valid",[],"NV8"],[[43389,43391],"disallowed"],[[43392,43456],"valid"],[[43457,43469],"valid",[],"NV8"],[[43470,43470],"disallowed"],[[43471,43481],"valid"],[[43482,43485],"disallowed"],[[43486,43487],"valid",[],"NV8"],[[43488,43518],"valid"],[[43519,43519],"disallowed"],[[43520,43574],"valid"],[[43575,43583],"disallowed"],[[43584,43597],"valid"],[[43598,43599],"disallowed"],[[43600,43609],"valid"],[[43610,43611],"disallowed"],[[43612,43615],"valid",[],"NV8"],[[43616,43638],"valid"],[[43639,43641],"valid",[],"NV8"],[[43642,43643],"valid"],[[43644,43647],"valid"],[[43648,43714],"valid"],[[43715,43738],"disallowed"],[[43739,43741],"valid"],[[43742,43743],"valid",[],"NV8"],[[43744,43759],"valid"],[[43760,43761],"valid",[],"NV8"],[[43762,43766],"valid"],[[43767,43776],"disallowed"],[[43777,43782],"valid"],[[43783,43784],"disallowed"],[[43785,43790],"valid"],[[43791,43792],"disallowed"],[[43793,43798],"valid"],[[43799,43807],"disallowed"],[[43808,43814],"valid"],[[43815,43815],"disallowed"],[[43816,43822],"valid"],[[43823,43823],"disallowed"],[[43824,43866],"valid"],[[43867,43867],"valid",[],"NV8"],[[43868,43868],"mapped",[42791]],[[43869,43869],"mapped",[43831]],[[43870,43870],"mapped",[619]],[[43871,43871],"mapped",[43858]],[[43872,43875],"valid"],[[43876,43877],"valid"],[[43878,43887],"disallowed"],[[43888,43888],"mapped",[5024]],[[43889,43889],"mapped",[5025]],[[43890,43890],"mapped",[5026]],[[43891,43891],"mapped",[5027]],[[43892,43892],"mapped",[5028]],[[43893,43893],"mapped",[5029]],[[43894,43894],"mapped",[5030]],[[43895,43895],"mapped",[5031]],[[43896,43896],"mapped",[5032]],[[43897,43897],"mapped",[5033]],[[43898,43898],"mapped",[5034]],[[43899,43899],"mapped",[5035]],[[43900,43900],"mapped",[5036]],[[43901,43901],"mapped",[5037]],[[43902,43902],"mapped",[5038]],[[43903,43903],"mapped",[5039]],[[43904,43904],"mapped",[5040]],[[43905,43905],"mapped",[5041]],[[43906,43906],"mapped",[5042]],[[43907,43907],"mapped",[5043]],[[43908,43908],"mapped",[5044]],[[43909,43909],"mapped",[5045]],[[43910,43910],"mapped",[5046]],[[43911,43911],"mapped",[5047]],[[43912,43912],"mapped",[5048]],[[43913,43913],"mapped",[5049]],[[43914,43914],"mapped",[5050]],[[43915,43915],"mapped",[5051]],[[43916,43916],"mapped",[5052]],[[43917,43917],"mapped",[5053]],[[43918,43918],"mapped",[5054]],[[43919,43919],"mapped",[5055]],[[43920,43920],"mapped",[5056]],[[43921,43921],"mapped",[5057]],[[43922,43922],"mapped",[5058]],[[43923,43923],"mapped",[5059]],[[43924,43924],"mapped",[5060]],[[43925,43925],"mapped",[5061]],[[43926,43926],"mapped",[5062]],[[43927,43927],"mapped",[5063]],[[43928,43928],"mapped",[5064]],[[43929,43929],"mapped",[5065]],[[43930,43930],"mapped",[5066]],[[43931,43931],"mapped",[5067]],[[43932,43932],"mapped",[5068]],[[43933,43933],"mapped",[5069]],[[43934,43934],"mapped",[5070]],[[43935,43935],"mapped",[5071]],[[43936,43936],"mapped",[5072]],[[43937,43937],"mapped",[5073]],[[43938,43938],"mapped",[5074]],[[43939,43939],"mapped",[5075]],[[43940,43940],"mapped",[5076]],[[43941,43941],"mapped",[5077]],[[43942,43942],"mapped",[5078]],[[43943,43943],"mapped",[5079]],[[43944,43944],"mapped",[5080]],[[43945,43945],"mapped",[5081]],[[43946,43946],"mapped",[5082]],[[43947,43947],"mapped",[5083]],[[43948,43948],"mapped",[5084]],[[43949,43949],"mapped",[5085]],[[43950,43950],"mapped",[5086]],[[43951,43951],"mapped",[5087]],[[43952,43952],"mapped",[5088]],[[43953,43953],"mapped",[5089]],[[43954,43954],"mapped",[5090]],[[43955,43955],"mapped",[5091]],[[43956,43956],"mapped",[5092]],[[43957,43957],"mapped",[5093]],[[43958,43958],"mapped",[5094]],[[43959,43959],"mapped",[5095]],[[43960,43960],"mapped",[5096]],[[43961,43961],"mapped",[5097]],[[43962,43962],"mapped",[5098]],[[43963,43963],"mapped",[5099]],[[43964,43964],"mapped",[5100]],[[43965,43965],"mapped",[5101]],[[43966,43966],"mapped",[5102]],[[43967,43967],"mapped",[5103]],[[43968,44010],"valid"],[[44011,44011],"valid",[],"NV8"],[[44012,44013],"valid"],[[44014,44015],"disallowed"],[[44016,44025],"valid"],[[44026,44031],"disallowed"],[[44032,55203],"valid"],[[55204,55215],"disallowed"],[[55216,55238],"valid",[],"NV8"],[[55239,55242],"disallowed"],[[55243,55291],"valid",[],"NV8"],[[55292,55295],"disallowed"],[[55296,57343],"disallowed"],[[57344,63743],"disallowed"],[[63744,63744],"mapped",[35912]],[[63745,63745],"mapped",[26356]],[[63746,63746],"mapped",[36554]],[[63747,63747],"mapped",[36040]],[[63748,63748],"mapped",[28369]],[[63749,63749],"mapped",[20018]],[[63750,63750],"mapped",[21477]],[[63751,63752],"mapped",[40860]],[[63753,63753],"mapped",[22865]],[[63754,63754],"mapped",[37329]],[[63755,63755],"mapped",[21895]],[[63756,63756],"mapped",[22856]],[[63757,63757],"mapped",[25078]],[[63758,63758],"mapped",[30313]],[[63759,63759],"mapped",[32645]],[[63760,63760],"mapped",[34367]],[[63761,63761],"mapped",[34746]],[[63762,63762],"mapped",[35064]],[[63763,63763],"mapped",[37007]],[[63764,63764],"mapped",[27138]],[[63765,63765],"mapped",[27931]],[[63766,63766],"mapped",[28889]],[[63767,63767],"mapped",[29662]],[[63768,63768],"mapped",[33853]],[[63769,63769],"mapped",[37226]],[[63770,63770],"mapped",[39409]],[[63771,63771],"mapped",[20098]],[[63772,63772],"mapped",[21365]],[[63773,63773],"mapped",[27396]],[[63774,63774],"mapped",[29211]],[[63775,63775],"mapped",[34349]],[[63776,63776],"mapped",[40478]],[[63777,63777],"mapped",[23888]],[[63778,63778],"mapped",[28651]],[[63779,63779],"mapped",[34253]],[[63780,63780],"mapped",[35172]],[[63781,63781],"mapped",[25289]],[[63782,63782],"mapped",[33240]],[[63783,63783],"mapped",[34847]],[[63784,63784],"mapped",[24266]],[[63785,63785],"mapped",[26391]],[[63786,63786],"mapped",[28010]],[[63787,63787],"mapped",[29436]],[[63788,63788],"mapped",[37070]],[[63789,63789],"mapped",[20358]],[[63790,63790],"mapped",[20919]],[[63791,63791],"mapped",[21214]],[[63792,63792],"mapped",[25796]],[[63793,63793],"mapped",[27347]],[[63794,63794],"mapped",[29200]],[[63795,63795],"mapped",[30439]],[[63796,63796],"mapped",[32769]],[[63797,63797],"mapped",[34310]],[[63798,63798],"mapped",[34396]],[[63799,63799],"mapped",[36335]],[[63800,63800],"mapped",[38706]],[[63801,63801],"mapped",[39791]],[[63802,63802],"mapped",[40442]],[[63803,63803],"mapped",[30860]],[[63804,63804],"mapped",[31103]],[[63805,63805],"mapped",[32160]],[[63806,63806],"mapped",[33737]],[[63807,63807],"mapped",[37636]],[[63808,63808],"mapped",[40575]],[[63809,63809],"mapped",[35542]],[[63810,63810],"mapped",[22751]],[[63811,63811],"mapped",[24324]],[[63812,63812],"mapped",[31840]],[[63813,63813],"mapped",[32894]],[[63814,63814],"mapped",[29282]],[[63815,63815],"mapped",[30922]],[[63816,63816],"mapped",[36034]],[[63817,63817],"mapped",[38647]],[[63818,63818],"mapped",[22744]],[[63819,63819],"mapped",[23650]],[[63820,63820],"mapped",[27155]],[[63821,63821],"mapped",[28122]],[[63822,63822],"mapped",[28431]],[[63823,63823],"mapped",[32047]],[[63824,63824],"mapped",[32311]],[[63825,63825],"mapped",[38475]],[[63826,63826],"mapped",[21202]],[[63827,63827],"mapped",[32907]],[[63828,63828],"mapped",[20956]],[[63829,63829],"mapped",[20940]],[[63830,63830],"mapped",[31260]],[[63831,63831],"mapped",[32190]],[[63832,63832],"mapped",[33777]],[[63833,63833],"mapped",[38517]],[[63834,63834],"mapped",[35712]],[[63835,63835],"mapped",[25295]],[[63836,63836],"mapped",[27138]],[[63837,63837],"mapped",[35582]],[[63838,63838],"mapped",[20025]],[[63839,63839],"mapped",[23527]],[[63840,63840],"mapped",[24594]],[[63841,63841],"mapped",[29575]],[[63842,63842],"mapped",[30064]],[[63843,63843],"mapped",[21271]],[[63844,63844],"mapped",[30971]],[[63845,63845],"mapped",[20415]],[[63846,63846],"mapped",[24489]],[[63847,63847],"mapped",[19981]],[[63848,63848],"mapped",[27852]],[[63849,63849],"mapped",[25976]],[[63850,63850],"mapped",[32034]],[[63851,63851],"mapped",[21443]],[[63852,63852],"mapped",[22622]],[[63853,63853],"mapped",[30465]],[[63854,63854],"mapped",[33865]],[[63855,63855],"mapped",[35498]],[[63856,63856],"mapped",[27578]],[[63857,63857],"mapped",[36784]],[[63858,63858],"mapped",[27784]],[[63859,63859],"mapped",[25342]],[[63860,63860],"mapped",[33509]],[[63861,63861],"mapped",[25504]],[[63862,63862],"mapped",[30053]],[[63863,63863],"mapped",[20142]],[[63864,63864],"mapped",[20841]],[[63865,63865],"mapped",[20937]],[[63866,63866],"mapped",[26753]],[[63867,63867],"mapped",[31975]],[[63868,63868],"mapped",[33391]],[[63869,63869],"mapped",[35538]],[[63870,63870],"mapped",[37327]],[[63871,63871],"mapped",[21237]],[[63872,63872],"mapped",[21570]],[[63873,63873],"mapped",[22899]],[[63874,63874],"mapped",[24300]],[[63875,63875],"mapped",[26053]],[[63876,63876],"mapped",[28670]],[[63877,63877],"mapped",[31018]],[[63878,63878],"mapped",[38317]],[[63879,63879],"mapped",[39530]],[[63880,63880],"mapped",[40599]],[[63881,63881],"mapped",[40654]],[[63882,63882],"mapped",[21147]],[[63883,63883],"mapped",[26310]],[[63884,63884],"mapped",[27511]],[[63885,63885],"mapped",[36706]],[[63886,63886],"mapped",[24180]],[[63887,63887],"mapped",[24976]],[[63888,63888],"mapped",[25088]],[[63889,63889],"mapped",[25754]],[[63890,63890],"mapped",[28451]],[[63891,63891],"mapped",[29001]],[[63892,63892],"mapped",[29833]],[[63893,63893],"mapped",[31178]],[[63894,63894],"mapped",[32244]],[[63895,63895],"mapped",[32879]],[[63896,63896],"mapped",[36646]],[[63897,63897],"mapped",[34030]],[[63898,63898],"mapped",[36899]],[[63899,63899],"mapped",[37706]],[[63900,63900],"mapped",[21015]],[[63901,63901],"mapped",[21155]],[[63902,63902],"mapped",[21693]],[[63903,63903],"mapped",[28872]],[[63904,63904],"mapped",[35010]],[[63905,63905],"mapped",[35498]],[[63906,63906],"mapped",[24265]],[[63907,63907],"mapped",[24565]],[[63908,63908],"mapped",[25467]],[[63909,63909],"mapped",[27566]],[[63910,63910],"mapped",[31806]],[[63911,63911],"mapped",[29557]],[[63912,63912],"mapped",[20196]],[[63913,63913],"mapped",[22265]],[[63914,63914],"mapped",[23527]],[[63915,63915],"mapped",[23994]],[[63916,63916],"mapped",[24604]],[[63917,63917],"mapped",[29618]],[[63918,63918],"mapped",[29801]],[[63919,63919],"mapped",[32666]],[[63920,63920],"mapped",[32838]],[[63921,63921],"mapped",[37428]],[[63922,63922],"mapped",[38646]],[[63923,63923],"mapped",[38728]],[[63924,63924],"mapped",[38936]],[[63925,63925],"mapped",[20363]],[[63926,63926],"mapped",[31150]],[[63927,63927],"mapped",[37300]],[[63928,63928],"mapped",[38584]],[[63929,63929],"mapped",[24801]],[[63930,63930],"mapped",[20102]],[[63931,63931],"mapped",[20698]],[[63932,63932],"mapped",[23534]],[[63933,63933],"mapped",[23615]],[[63934,63934],"mapped",[26009]],[[63935,63935],"mapped",[27138]],[[63936,63936],"mapped",[29134]],[[63937,63937],"mapped",[30274]],[[63938,63938],"mapped",[34044]],[[63939,63939],"mapped",[36988]],[[63940,63940],"mapped",[40845]],[[63941,63941],"mapped",[26248]],[[63942,63942],"mapped",[38446]],[[63943,63943],"mapped",[21129]],[[63944,63944],"mapped",[26491]],[[63945,63945],"mapped",[26611]],[[63946,63946],"mapped",[27969]],[[63947,63947],"mapped",[28316]],[[63948,63948],"mapped",[29705]],[[63949,63949],"mapped",[30041]],[[63950,63950],"mapped",[30827]],[[63951,63951],"mapped",[32016]],[[63952,63952],"mapped",[39006]],[[63953,63953],"mapped",[20845]],[[63954,63954],"mapped",[25134]],[[63955,63955],"mapped",[38520]],[[63956,63956],"mapped",[20523]],[[63957,63957],"mapped",[23833]],[[63958,63958],"mapped",[28138]],[[63959,63959],"mapped",[36650]],[[63960,63960],"mapped",[24459]],[[63961,63961],"mapped",[24900]],[[63962,63962],"mapped",[26647]],[[63963,63963],"mapped",[29575]],[[63964,63964],"mapped",[38534]],[[63965,63965],"mapped",[21033]],[[63966,63966],"mapped",[21519]],[[63967,63967],"mapped",[23653]],[[63968,63968],"mapped",[26131]],[[63969,63969],"mapped",[26446]],[[63970,63970],"mapped",[26792]],[[63971,63971],"mapped",[27877]],[[63972,63972],"mapped",[29702]],[[63973,63973],"mapped",[30178]],[[63974,63974],"mapped",[32633]],[[63975,63975],"mapped",[35023]],[[63976,63976],"mapped",[35041]],[[63977,63977],"mapped",[37324]],[[63978,63978],"mapped",[38626]],[[63979,63979],"mapped",[21311]],[[63980,63980],"mapped",[28346]],[[63981,63981],"mapped",[21533]],[[63982,63982],"mapped",[29136]],[[63983,63983],"mapped",[29848]],[[63984,63984],"mapped",[34298]],[[63985,63985],"mapped",[38563]],[[63986,63986],"mapped",[40023]],[[63987,63987],"mapped",[40607]],[[63988,63988],"mapped",[26519]],[[63989,63989],"mapped",[28107]],[[63990,63990],"mapped",[33256]],[[63991,63991],"mapped",[31435]],[[63992,63992],"mapped",[31520]],[[63993,63993],"mapped",[31890]],[[63994,63994],"mapped",[29376]],[[63995,63995],"mapped",[28825]],[[63996,63996],"mapped",[35672]],[[63997,63997],"mapped",[20160]],[[63998,63998],"mapped",[33590]],[[63999,63999],"mapped",[21050]],[[64000,64000],"mapped",[20999]],[[64001,64001],"mapped",[24230]],[[64002,64002],"mapped",[25299]],[[64003,64003],"mapped",[31958]],[[64004,64004],"mapped",[23429]],[[64005,64005],"mapped",[27934]],[[64006,64006],"mapped",[26292]],[[64007,64007],"mapped",[36667]],[[64008,64008],"mapped",[34892]],[[64009,64009],"mapped",[38477]],[[64010,64010],"mapped",[35211]],[[64011,64011],"mapped",[24275]],[[64012,64012],"mapped",[20800]],[[64013,64013],"mapped",[21952]],[[64014,64015],"valid"],[[64016,64016],"mapped",[22618]],[[64017,64017],"valid"],[[64018,64018],"mapped",[26228]],[[64019,64020],"valid"],[[64021,64021],"mapped",[20958]],[[64022,64022],"mapped",[29482]],[[64023,64023],"mapped",[30410]],[[64024,64024],"mapped",[31036]],[[64025,64025],"mapped",[31070]],[[64026,64026],"mapped",[31077]],[[64027,64027],"mapped",[31119]],[[64028,64028],"mapped",[38742]],[[64029,64029],"mapped",[31934]],[[64030,64030],"mapped",[32701]],[[64031,64031],"valid"],[[64032,64032],"mapped",[34322]],[[64033,64033],"valid"],[[64034,64034],"mapped",[35576]],[[64035,64036],"valid"],[[64037,64037],"mapped",[36920]],[[64038,64038],"mapped",[37117]],[[64039,64041],"valid"],[[64042,64042],"mapped",[39151]],[[64043,64043],"mapped",[39164]],[[64044,64044],"mapped",[39208]],[[64045,64045],"mapped",[40372]],[[64046,64046],"mapped",[37086]],[[64047,64047],"mapped",[38583]],[[64048,64048],"mapped",[20398]],[[64049,64049],"mapped",[20711]],[[64050,64050],"mapped",[20813]],[[64051,64051],"mapped",[21193]],[[64052,64052],"mapped",[21220]],[[64053,64053],"mapped",[21329]],[[64054,64054],"mapped",[21917]],[[64055,64055],"mapped",[22022]],[[64056,64056],"mapped",[22120]],[[64057,64057],"mapped",[22592]],[[64058,64058],"mapped",[22696]],[[64059,64059],"mapped",[23652]],[[64060,64060],"mapped",[23662]],[[64061,64061],"mapped",[24724]],[[64062,64062],"mapped",[24936]],[[64063,64063],"mapped",[24974]],[[64064,64064],"mapped",[25074]],[[64065,64065],"mapped",[25935]],[[64066,64066],"mapped",[26082]],[[64067,64067],"mapped",[26257]],[[64068,64068],"mapped",[26757]],[[64069,64069],"mapped",[28023]],[[64070,64070],"mapped",[28186]],[[64071,64071],"mapped",[28450]],[[64072,64072],"mapped",[29038]],[[64073,64073],"mapped",[29227]],[[64074,64074],"mapped",[29730]],[[64075,64075],"mapped",[30865]],[[64076,64076],"mapped",[31038]],[[64077,64077],"mapped",[31049]],[[64078,64078],"mapped",[31048]],[[64079,64079],"mapped",[31056]],[[64080,64080],"mapped",[31062]],[[64081,64081],"mapped",[31069]],[[64082,64082],"mapped",[31117]],[[64083,64083],"mapped",[31118]],[[64084,64084],"mapped",[31296]],[[64085,64085],"mapped",[31361]],[[64086,64086],"mapped",[31680]],[[64087,64087],"mapped",[32244]],[[64088,64088],"mapped",[32265]],[[64089,64089],"mapped",[32321]],[[64090,64090],"mapped",[32626]],[[64091,64091],"mapped",[32773]],[[64092,64092],"mapped",[33261]],[[64093,64094],"mapped",[33401]],[[64095,64095],"mapped",[33879]],[[64096,64096],"mapped",[35088]],[[64097,64097],"mapped",[35222]],[[64098,64098],"mapped",[35585]],[[64099,64099],"mapped",[35641]],[[64100,64100],"mapped",[36051]],[[64101,64101],"mapped",[36104]],[[64102,64102],"mapped",[36790]],[[64103,64103],"mapped",[36920]],[[64104,64104],"mapped",[38627]],[[64105,64105],"mapped",[38911]],[[64106,64106],"mapped",[38971]],[[64107,64107],"mapped",[24693]],[[64108,64108],"mapped",[148206]],[[64109,64109],"mapped",[33304]],[[64110,64111],"disallowed"],[[64112,64112],"mapped",[20006]],[[64113,64113],"mapped",[20917]],[[64114,64114],"mapped",[20840]],[[64115,64115],"mapped",[20352]],[[64116,64116],"mapped",[20805]],[[64117,64117],"mapped",[20864]],[[64118,64118],"mapped",[21191]],[[64119,64119],"mapped",[21242]],[[64120,64120],"mapped",[21917]],[[64121,64121],"mapped",[21845]],[[64122,64122],"mapped",[21913]],[[64123,64123],"mapped",[21986]],[[64124,64124],"mapped",[22618]],[[64125,64125],"mapped",[22707]],[[64126,64126],"mapped",[22852]],[[64127,64127],"mapped",[22868]],[[64128,64128],"mapped",[23138]],[[64129,64129],"mapped",[23336]],[[64130,64130],"mapped",[24274]],[[64131,64131],"mapped",[24281]],[[64132,64132],"mapped",[24425]],[[64133,64133],"mapped",[24493]],[[64134,64134],"mapped",[24792]],[[64135,64135],"mapped",[24910]],[[64136,64136],"mapped",[24840]],[[64137,64137],"mapped",[24974]],[[64138,64138],"mapped",[24928]],[[64139,64139],"mapped",[25074]],[[64140,64140],"mapped",[25140]],[[64141,64141],"mapped",[25540]],[[64142,64142],"mapped",[25628]],[[64143,64143],"mapped",[25682]],[[64144,64144],"mapped",[25942]],[[64145,64145],"mapped",[26228]],[[64146,64146],"mapped",[26391]],[[64147,64147],"mapped",[26395]],[[64148,64148],"mapped",[26454]],[[64149,64149],"mapped",[27513]],[[64150,64150],"mapped",[27578]],[[64151,64151],"mapped",[27969]],[[64152,64152],"mapped",[28379]],[[64153,64153],"mapped",[28363]],[[64154,64154],"mapped",[28450]],[[64155,64155],"mapped",[28702]],[[64156,64156],"mapped",[29038]],[[64157,64157],"mapped",[30631]],[[64158,64158],"mapped",[29237]],[[64159,64159],"mapped",[29359]],[[64160,64160],"mapped",[29482]],[[64161,64161],"mapped",[29809]],[[64162,64162],"mapped",[29958]],[[64163,64163],"mapped",[30011]],[[64164,64164],"mapped",[30237]],[[64165,64165],"mapped",[30239]],[[64166,64166],"mapped",[30410]],[[64167,64167],"mapped",[30427]],[[64168,64168],"mapped",[30452]],[[64169,64169],"mapped",[30538]],[[64170,64170],"mapped",[30528]],[[64171,64171],"mapped",[30924]],[[64172,64172],"mapped",[31409]],[[64173,64173],"mapped",[31680]],[[64174,64174],"mapped",[31867]],[[64175,64175],"mapped",[32091]],[[64176,64176],"mapped",[32244]],[[64177,64177],"mapped",[32574]],[[64178,64178],"mapped",[32773]],[[64179,64179],"mapped",[33618]],[[64180,64180],"mapped",[33775]],[[64181,64181],"mapped",[34681]],[[64182,64182],"mapped",[35137]],[[64183,64183],"mapped",[35206]],[[64184,64184],"mapped",[35222]],[[64185,64185],"mapped",[35519]],[[64186,64186],"mapped",[35576]],[[64187,64187],"mapped",[35531]],[[64188,64188],"mapped",[35585]],[[64189,64189],"mapped",[35582]],[[64190,64190],"mapped",[35565]],[[64191,64191],"mapped",[35641]],[[64192,64192],"mapped",[35722]],[[64193,64193],"mapped",[36104]],[[64194,64194],"mapped",[36664]],[[64195,64195],"mapped",[36978]],[[64196,64196],"mapped",[37273]],[[64197,64197],"mapped",[37494]],[[64198,64198],"mapped",[38524]],[[64199,64199],"mapped",[38627]],[[64200,64200],"mapped",[38742]],[[64201,64201],"mapped",[38875]],[[64202,64202],"mapped",[38911]],[[64203,64203],"mapped",[38923]],[[64204,64204],"mapped",[38971]],[[64205,64205],"mapped",[39698]],[[64206,64206],"mapped",[40860]],[[64207,64207],"mapped",[141386]],[[64208,64208],"mapped",[141380]],[[64209,64209],"mapped",[144341]],[[64210,64210],"mapped",[15261]],[[64211,64211],"mapped",[16408]],[[64212,64212],"mapped",[16441]],[[64213,64213],"mapped",[152137]],[[64214,64214],"mapped",[154832]],[[64215,64215],"mapped",[163539]],[[64216,64216],"mapped",[40771]],[[64217,64217],"mapped",[40846]],[[64218,64255],"disallowed"],[[64256,64256],"mapped",[102,102]],[[64257,64257],"mapped",[102,105]],[[64258,64258],"mapped",[102,108]],[[64259,64259],"mapped",[102,102,105]],[[64260,64260],"mapped",[102,102,108]],[[64261,64262],"mapped",[115,116]],[[64263,64274],"disallowed"],[[64275,64275],"mapped",[1396,1398]],[[64276,64276],"mapped",[1396,1381]],[[64277,64277],"mapped",[1396,1387]],[[64278,64278],"mapped",[1406,1398]],[[64279,64279],"mapped",[1396,1389]],[[64280,64284],"disallowed"],[[64285,64285],"mapped",[1497,1460]],[[64286,64286],"valid"],[[64287,64287],"mapped",[1522,1463]],[[64288,64288],"mapped",[1506]],[[64289,64289],"mapped",[1488]],[[64290,64290],"mapped",[1491]],[[64291,64291],"mapped",[1492]],[[64292,64292],"mapped",[1499]],[[64293,64293],"mapped",[1500]],[[64294,64294],"mapped",[1501]],[[64295,64295],"mapped",[1512]],[[64296,64296],"mapped",[1514]],[[64297,64297],"disallowed_STD3_mapped",[43]],[[64298,64298],"mapped",[1513,1473]],[[64299,64299],"mapped",[1513,1474]],[[64300,64300],"mapped",[1513,1468,1473]],[[64301,64301],"mapped",[1513,1468,1474]],[[64302,64302],"mapped",[1488,1463]],[[64303,64303],"mapped",[1488,1464]],[[64304,64304],"mapped",[1488,1468]],[[64305,64305],"mapped",[1489,1468]],[[64306,64306],"mapped",[1490,1468]],[[64307,64307],"mapped",[1491,1468]],[[64308,64308],"mapped",[1492,1468]],[[64309,64309],"mapped",[1493,1468]],[[64310,64310],"mapped",[1494,1468]],[[64311,64311],"disallowed"],[[64312,64312],"mapped",[1496,1468]],[[64313,64313],"mapped",[1497,1468]],[[64314,64314],"mapped",[1498,1468]],[[64315,64315],"mapped",[1499,1468]],[[64316,64316],"mapped",[1500,1468]],[[64317,64317],"disallowed"],[[64318,64318],"mapped",[1502,1468]],[[64319,64319],"disallowed"],[[64320,64320],"mapped",[1504,1468]],[[64321,64321],"mapped",[1505,1468]],[[64322,64322],"disallowed"],[[64323,64323],"mapped",[1507,1468]],[[64324,64324],"mapped",[1508,1468]],[[64325,64325],"disallowed"],[[64326,64326],"mapped",[1510,1468]],[[64327,64327],"mapped",[1511,1468]],[[64328,64328],"mapped",[1512,1468]],[[64329,64329],"mapped",[1513,1468]],[[64330,64330],"mapped",[1514,1468]],[[64331,64331],"mapped",[1493,1465]],[[64332,64332],"mapped",[1489,1471]],[[64333,64333],"mapped",[1499,1471]],[[64334,64334],"mapped",[1508,1471]],[[64335,64335],"mapped",[1488,1500]],[[64336,64337],"mapped",[1649]],[[64338,64341],"mapped",[1659]],[[64342,64345],"mapped",[1662]],[[64346,64349],"mapped",[1664]],[[64350,64353],"mapped",[1658]],[[64354,64357],"mapped",[1663]],[[64358,64361],"mapped",[1657]],[[64362,64365],"mapped",[1700]],[[64366,64369],"mapped",[1702]],[[64370,64373],"mapped",[1668]],[[64374,64377],"mapped",[1667]],[[64378,64381],"mapped",[1670]],[[64382,64385],"mapped",[1671]],[[64386,64387],"mapped",[1677]],[[64388,64389],"mapped",[1676]],[[64390,64391],"mapped",[1678]],[[64392,64393],"mapped",[1672]],[[64394,64395],"mapped",[1688]],[[64396,64397],"mapped",[1681]],[[64398,64401],"mapped",[1705]],[[64402,64405],"mapped",[1711]],[[64406,64409],"mapped",[1715]],[[64410,64413],"mapped",[1713]],[[64414,64415],"mapped",[1722]],[[64416,64419],"mapped",[1723]],[[64420,64421],"mapped",[1728]],[[64422,64425],"mapped",[1729]],[[64426,64429],"mapped",[1726]],[[64430,64431],"mapped",[1746]],[[64432,64433],"mapped",[1747]],[[64434,64449],"valid",[],"NV8"],[[64450,64466],"disallowed"],[[64467,64470],"mapped",[1709]],[[64471,64472],"mapped",[1735]],[[64473,64474],"mapped",[1734]],[[64475,64476],"mapped",[1736]],[[64477,64477],"mapped",[1735,1652]],[[64478,64479],"mapped",[1739]],[[64480,64481],"mapped",[1733]],[[64482,64483],"mapped",[1737]],[[64484,64487],"mapped",[1744]],[[64488,64489],"mapped",[1609]],[[64490,64491],"mapped",[1574,1575]],[[64492,64493],"mapped",[1574,1749]],[[64494,64495],"mapped",[1574,1608]],[[64496,64497],"mapped",[1574,1735]],[[64498,64499],"mapped",[1574,1734]],[[64500,64501],"mapped",[1574,1736]],[[64502,64504],"mapped",[1574,1744]],[[64505,64507],"mapped",[1574,1609]],[[64508,64511],"mapped",[1740]],[[64512,64512],"mapped",[1574,1580]],[[64513,64513],"mapped",[1574,1581]],[[64514,64514],"mapped",[1574,1605]],[[64515,64515],"mapped",[1574,1609]],[[64516,64516],"mapped",[1574,1610]],[[64517,64517],"mapped",[1576,1580]],[[64518,64518],"mapped",[1576,1581]],[[64519,64519],"mapped",[1576,1582]],[[64520,64520],"mapped",[1576,1605]],[[64521,64521],"mapped",[1576,1609]],[[64522,64522],"mapped",[1576,1610]],[[64523,64523],"mapped",[1578,1580]],[[64524,64524],"mapped",[1578,1581]],[[64525,64525],"mapped",[1578,1582]],[[64526,64526],"mapped",[1578,1605]],[[64527,64527],"mapped",[1578,1609]],[[64528,64528],"mapped",[1578,1610]],[[64529,64529],"mapped",[1579,1580]],[[64530,64530],"mapped",[1579,1605]],[[64531,64531],"mapped",[1579,1609]],[[64532,64532],"mapped",[1579,1610]],[[64533,64533],"mapped",[1580,1581]],[[64534,64534],"mapped",[1580,1605]],[[64535,64535],"mapped",[1581,1580]],[[64536,64536],"mapped",[1581,1605]],[[64537,64537],"mapped",[1582,1580]],[[64538,64538],"mapped",[1582,1581]],[[64539,64539],"mapped",[1582,1605]],[[64540,64540],"mapped",[1587,1580]],[[64541,64541],"mapped",[1587,1581]],[[64542,64542],"mapped",[1587,1582]],[[64543,64543],"mapped",[1587,1605]],[[64544,64544],"mapped",[1589,1581]],[[64545,64545],"mapped",[1589,1605]],[[64546,64546],"mapped",[1590,1580]],[[64547,64547],"mapped",[1590,1581]],[[64548,64548],"mapped",[1590,1582]],[[64549,64549],"mapped",[1590,1605]],[[64550,64550],"mapped",[1591,1581]],[[64551,64551],"mapped",[1591,1605]],[[64552,64552],"mapped",[1592,1605]],[[64553,64553],"mapped",[1593,1580]],[[64554,64554],"mapped",[1593,1605]],[[64555,64555],"mapped",[1594,1580]],[[64556,64556],"mapped",[1594,1605]],[[64557,64557],"mapped",[1601,1580]],[[64558,64558],"mapped",[1601,1581]],[[64559,64559],"mapped",[1601,1582]],[[64560,64560],"mapped",[1601,1605]],[[64561,64561],"mapped",[1601,1609]],[[64562,64562],"mapped",[1601,1610]],[[64563,64563],"mapped",[1602,1581]],[[64564,64564],"mapped",[1602,1605]],[[64565,64565],"mapped",[1602,1609]],[[64566,64566],"mapped",[1602,1610]],[[64567,64567],"mapped",[1603,1575]],[[64568,64568],"mapped",[1603,1580]],[[64569,64569],"mapped",[1603,1581]],[[64570,64570],"mapped",[1603,1582]],[[64571,64571],"mapped",[1603,1604]],[[64572,64572],"mapped",[1603,1605]],[[64573,64573],"mapped",[1603,1609]],[[64574,64574],"mapped",[1603,1610]],[[64575,64575],"mapped",[1604,1580]],[[64576,64576],"mapped",[1604,1581]],[[64577,64577],"mapped",[1604,1582]],[[64578,64578],"mapped",[1604,1605]],[[64579,64579],"mapped",[1604,1609]],[[64580,64580],"mapped",[1604,1610]],[[64581,64581],"mapped",[1605,1580]],[[64582,64582],"mapped",[1605,1581]],[[64583,64583],"mapped",[1605,1582]],[[64584,64584],"mapped",[1605,1605]],[[64585,64585],"mapped",[1605,1609]],[[64586,64586],"mapped",[1605,1610]],[[64587,64587],"mapped",[1606,1580]],[[64588,64588],"mapped",[1606,1581]],[[64589,64589],"mapped",[1606,1582]],[[64590,64590],"mapped",[1606,1605]],[[64591,64591],"mapped",[1606,1609]],[[64592,64592],"mapped",[1606,1610]],[[64593,64593],"mapped",[1607,1580]],[[64594,64594],"mapped",[1607,1605]],[[64595,64595],"mapped",[1607,1609]],[[64596,64596],"mapped",[1607,1610]],[[64597,64597],"mapped",[1610,1580]],[[64598,64598],"mapped",[1610,1581]],[[64599,64599],"mapped",[1610,1582]],[[64600,64600],"mapped",[1610,1605]],[[64601,64601],"mapped",[1610,1609]],[[64602,64602],"mapped",[1610,1610]],[[64603,64603],"mapped",[1584,1648]],[[64604,64604],"mapped",[1585,1648]],[[64605,64605],"mapped",[1609,1648]],[[64606,64606],"disallowed_STD3_mapped",[32,1612,1617]],[[64607,64607],"disallowed_STD3_mapped",[32,1613,1617]],[[64608,64608],"disallowed_STD3_mapped",[32,1614,1617]],[[64609,64609],"disallowed_STD3_mapped",[32,1615,1617]],[[64610,64610],"disallowed_STD3_mapped",[32,1616,1617]],[[64611,64611],"disallowed_STD3_mapped",[32,1617,1648]],[[64612,64612],"mapped",[1574,1585]],[[64613,64613],"mapped",[1574,1586]],[[64614,64614],"mapped",[1574,1605]],[[64615,64615],"mapped",[1574,1606]],[[64616,64616],"mapped",[1574,1609]],[[64617,64617],"mapped",[1574,1610]],[[64618,64618],"mapped",[1576,1585]],[[64619,64619],"mapped",[1576,1586]],[[64620,64620],"mapped",[1576,1605]],[[64621,64621],"mapped",[1576,1606]],[[64622,64622],"mapped",[1576,1609]],[[64623,64623],"mapped",[1576,1610]],[[64624,64624],"mapped",[1578,1585]],[[64625,64625],"mapped",[1578,1586]],[[64626,64626],"mapped",[1578,1605]],[[64627,64627],"mapped",[1578,1606]],[[64628,64628],"mapped",[1578,1609]],[[64629,64629],"mapped",[1578,1610]],[[64630,64630],"mapped",[1579,1585]],[[64631,64631],"mapped",[1579,1586]],[[64632,64632],"mapped",[1579,1605]],[[64633,64633],"mapped",[1579,1606]],[[64634,64634],"mapped",[1579,1609]],[[64635,64635],"mapped",[1579,1610]],[[64636,64636],"mapped",[1601,1609]],[[64637,64637],"mapped",[1601,1610]],[[64638,64638],"mapped",[1602,1609]],[[64639,64639],"mapped",[1602,1610]],[[64640,64640],"mapped",[1603,1575]],[[64641,64641],"mapped",[1603,1604]],[[64642,64642],"mapped",[1603,1605]],[[64643,64643],"mapped",[1603,1609]],[[64644,64644],"mapped",[1603,1610]],[[64645,64645],"mapped",[1604,1605]],[[64646,64646],"mapped",[1604,1609]],[[64647,64647],"mapped",[1604,1610]],[[64648,64648],"mapped",[1605,1575]],[[64649,64649],"mapped",[1605,1605]],[[64650,64650],"mapped",[1606,1585]],[[64651,64651],"mapped",[1606,1586]],[[64652,64652],"mapped",[1606,1605]],[[64653,64653],"mapped",[1606,1606]],[[64654,64654],"mapped",[1606,1609]],[[64655,64655],"mapped",[1606,1610]],[[64656,64656],"mapped",[1609,1648]],[[64657,64657],"mapped",[1610,1585]],[[64658,64658],"mapped",[1610,1586]],[[64659,64659],"mapped",[1610,1605]],[[64660,64660],"mapped",[1610,1606]],[[64661,64661],"mapped",[1610,1609]],[[64662,64662],"mapped",[1610,1610]],[[64663,64663],"mapped",[1574,1580]],[[64664,64664],"mapped",[1574,1581]],[[64665,64665],"mapped",[1574,1582]],[[64666,64666],"mapped",[1574,1605]],[[64667,64667],"mapped",[1574,1607]],[[64668,64668],"mapped",[1576,1580]],[[64669,64669],"mapped",[1576,1581]],[[64670,64670],"mapped",[1576,1582]],[[64671,64671],"mapped",[1576,1605]],[[64672,64672],"mapped",[1576,1607]],[[64673,64673],"mapped",[1578,1580]],[[64674,64674],"mapped",[1578,1581]],[[64675,64675],"mapped",[1578,1582]],[[64676,64676],"mapped",[1578,1605]],[[64677,64677],"mapped",[1578,1607]],[[64678,64678],"mapped",[1579,1605]],[[64679,64679],"mapped",[1580,1581]],[[64680,64680],"mapped",[1580,1605]],[[64681,64681],"mapped",[1581,1580]],[[64682,64682],"mapped",[1581,1605]],[[64683,64683],"mapped",[1582,1580]],[[64684,64684],"mapped",[1582,1605]],[[64685,64685],"mapped",[1587,1580]],[[64686,64686],"mapped",[1587,1581]],[[64687,64687],"mapped",[1587,1582]],[[64688,64688],"mapped",[1587,1605]],[[64689,64689],"mapped",[1589,1581]],[[64690,64690],"mapped",[1589,1582]],[[64691,64691],"mapped",[1589,1605]],[[64692,64692],"mapped",[1590,1580]],[[64693,64693],"mapped",[1590,1581]],[[64694,64694],"mapped",[1590,1582]],[[64695,64695],"mapped",[1590,1605]],[[64696,64696],"mapped",[1591,1581]],[[64697,64697],"mapped",[1592,1605]],[[64698,64698],"mapped",[1593,1580]],[[64699,64699],"mapped",[1593,1605]],[[64700,64700],"mapped",[1594,1580]],[[64701,64701],"mapped",[1594,1605]],[[64702,64702],"mapped",[1601,1580]],[[64703,64703],"mapped",[1601,1581]],[[64704,64704],"mapped",[1601,1582]],[[64705,64705],"mapped",[1601,1605]],[[64706,64706],"mapped",[1602,1581]],[[64707,64707],"mapped",[1602,1605]],[[64708,64708],"mapped",[1603,1580]],[[64709,64709],"mapped",[1603,1581]],[[64710,64710],"mapped",[1603,1582]],[[64711,64711],"mapped",[1603,1604]],[[64712,64712],"mapped",[1603,1605]],[[64713,64713],"mapped",[1604,1580]],[[64714,64714],"mapped",[1604,1581]],[[64715,64715],"mapped",[1604,1582]],[[64716,64716],"mapped",[1604,1605]],[[64717,64717],"mapped",[1604,1607]],[[64718,64718],"mapped",[1605,1580]],[[64719,64719],"mapped",[1605,1581]],[[64720,64720],"mapped",[1605,1582]],[[64721,64721],"mapped",[1605,1605]],[[64722,64722],"mapped",[1606,1580]],[[64723,64723],"mapped",[1606,1581]],[[64724,64724],"mapped",[1606,1582]],[[64725,64725],"mapped",[1606,1605]],[[64726,64726],"mapped",[1606,1607]],[[64727,64727],"mapped",[1607,1580]],[[64728,64728],"mapped",[1607,1605]],[[64729,64729],"mapped",[1607,1648]],[[64730,64730],"mapped",[1610,1580]],[[64731,64731],"mapped",[1610,1581]],[[64732,64732],"mapped",[1610,1582]],[[64733,64733],"mapped",[1610,1605]],[[64734,64734],"mapped",[1610,1607]],[[64735,64735],"mapped",[1574,1605]],[[64736,64736],"mapped",[1574,1607]],[[64737,64737],"mapped",[1576,1605]],[[64738,64738],"mapped",[1576,1607]],[[64739,64739],"mapped",[1578,1605]],[[64740,64740],"mapped",[1578,1607]],[[64741,64741],"mapped",[1579,1605]],[[64742,64742],"mapped",[1579,1607]],[[64743,64743],"mapped",[1587,1605]],[[64744,64744],"mapped",[1587,1607]],[[64745,64745],"mapped",[1588,1605]],[[64746,64746],"mapped",[1588,1607]],[[64747,64747],"mapped",[1603,1604]],[[64748,64748],"mapped",[1603,1605]],[[64749,64749],"mapped",[1604,1605]],[[64750,64750],"mapped",[1606,1605]],[[64751,64751],"mapped",[1606,1607]],[[64752,64752],"mapped",[1610,1605]],[[64753,64753],"mapped",[1610,1607]],[[64754,64754],"mapped",[1600,1614,1617]],[[64755,64755],"mapped",[1600,1615,1617]],[[64756,64756],"mapped",[1600,1616,1617]],[[64757,64757],"mapped",[1591,1609]],[[64758,64758],"mapped",[1591,1610]],[[64759,64759],"mapped",[1593,1609]],[[64760,64760],"mapped",[1593,1610]],[[64761,64761],"mapped",[1594,1609]],[[64762,64762],"mapped",[1594,1610]],[[64763,64763],"mapped",[1587,1609]],[[64764,64764],"mapped",[1587,1610]],[[64765,64765],"mapped",[1588,1609]],[[64766,64766],"mapped",[1588,1610]],[[64767,64767],"mapped",[1581,1609]],[[64768,64768],"mapped",[1581,1610]],[[64769,64769],"mapped",[1580,1609]],[[64770,64770],"mapped",[1580,1610]],[[64771,64771],"mapped",[1582,1609]],[[64772,64772],"mapped",[1582,1610]],[[64773,64773],"mapped",[1589,1609]],[[64774,64774],"mapped",[1589,1610]],[[64775,64775],"mapped",[1590,1609]],[[64776,64776],"mapped",[1590,1610]],[[64777,64777],"mapped",[1588,1580]],[[64778,64778],"mapped",[1588,1581]],[[64779,64779],"mapped",[1588,1582]],[[64780,64780],"mapped",[1588,1605]],[[64781,64781],"mapped",[1588,1585]],[[64782,64782],"mapped",[1587,1585]],[[64783,64783],"mapped",[1589,1585]],[[64784,64784],"mapped",[1590,1585]],[[64785,64785],"mapped",[1591,1609]],[[64786,64786],"mapped",[1591,1610]],[[64787,64787],"mapped",[1593,1609]],[[64788,64788],"mapped",[1593,1610]],[[64789,64789],"mapped",[1594,1609]],[[64790,64790],"mapped",[1594,1610]],[[64791,64791],"mapped",[1587,1609]],[[64792,64792],"mapped",[1587,1610]],[[64793,64793],"mapped",[1588,1609]],[[64794,64794],"mapped",[1588,1610]],[[64795,64795],"mapped",[1581,1609]],[[64796,64796],"mapped",[1581,1610]],[[64797,64797],"mapped",[1580,1609]],[[64798,64798],"mapped",[1580,1610]],[[64799,64799],"mapped",[1582,1609]],[[64800,64800],"mapped",[1582,1610]],[[64801,64801],"mapped",[1589,1609]],[[64802,64802],"mapped",[1589,1610]],[[64803,64803],"mapped",[1590,1609]],[[64804,64804],"mapped",[1590,1610]],[[64805,64805],"mapped",[1588,1580]],[[64806,64806],"mapped",[1588,1581]],[[64807,64807],"mapped",[1588,1582]],[[64808,64808],"mapped",[1588,1605]],[[64809,64809],"mapped",[1588,1585]],[[64810,64810],"mapped",[1587,1585]],[[64811,64811],"mapped",[1589,1585]],[[64812,64812],"mapped",[1590,1585]],[[64813,64813],"mapped",[1588,1580]],[[64814,64814],"mapped",[1588,1581]],[[64815,64815],"mapped",[1588,1582]],[[64816,64816],"mapped",[1588,1605]],[[64817,64817],"mapped",[1587,1607]],[[64818,64818],"mapped",[1588,1607]],[[64819,64819],"mapped",[1591,1605]],[[64820,64820],"mapped",[1587,1580]],[[64821,64821],"mapped",[1587,1581]],[[64822,64822],"mapped",[1587,1582]],[[64823,64823],"mapped",[1588,1580]],[[64824,64824],"mapped",[1588,1581]],[[64825,64825],"mapped",[1588,1582]],[[64826,64826],"mapped",[1591,1605]],[[64827,64827],"mapped",[1592,1605]],[[64828,64829],"mapped",[1575,1611]],[[64830,64831],"valid",[],"NV8"],[[64832,64847],"disallowed"],[[64848,64848],"mapped",[1578,1580,1605]],[[64849,64850],"mapped",[1578,1581,1580]],[[64851,64851],"mapped",[1578,1581,1605]],[[64852,64852],"mapped",[1578,1582,1605]],[[64853,64853],"mapped",[1578,1605,1580]],[[64854,64854],"mapped",[1578,1605,1581]],[[64855,64855],"mapped",[1578,1605,1582]],[[64856,64857],"mapped",[1580,1605,1581]],[[64858,64858],"mapped",[1581,1605,1610]],[[64859,64859],"mapped",[1581,1605,1609]],[[64860,64860],"mapped",[1587,1581,1580]],[[64861,64861],"mapped",[1587,1580,1581]],[[64862,64862],"mapped",[1587,1580,1609]],[[64863,64864],"mapped",[1587,1605,1581]],[[64865,64865],"mapped",[1587,1605,1580]],[[64866,64867],"mapped",[1587,1605,1605]],[[64868,64869],"mapped",[1589,1581,1581]],[[64870,64870],"mapped",[1589,1605,1605]],[[64871,64872],"mapped",[1588,1581,1605]],[[64873,64873],"mapped",[1588,1580,1610]],[[64874,64875],"mapped",[1588,1605,1582]],[[64876,64877],"mapped",[1588,1605,1605]],[[64878,64878],"mapped",[1590,1581,1609]],[[64879,64880],"mapped",[1590,1582,1605]],[[64881,64882],"mapped",[1591,1605,1581]],[[64883,64883],"mapped",[1591,1605,1605]],[[64884,64884],"mapped",[1591,1605,1610]],[[64885,64885],"mapped",[1593,1580,1605]],[[64886,64887],"mapped",[1593,1605,1605]],[[64888,64888],"mapped",[1593,1605,1609]],[[64889,64889],"mapped",[1594,1605,1605]],[[64890,64890],"mapped",[1594,1605,1610]],[[64891,64891],"mapped",[1594,1605,1609]],[[64892,64893],"mapped",[1601,1582,1605]],[[64894,64894],"mapped",[1602,1605,1581]],[[64895,64895],"mapped",[1602,1605,1605]],[[64896,64896],"mapped",[1604,1581,1605]],[[64897,64897],"mapped",[1604,1581,1610]],[[64898,64898],"mapped",[1604,1581,1609]],[[64899,64900],"mapped",[1604,1580,1580]],[[64901,64902],"mapped",[1604,1582,1605]],[[64903,64904],"mapped",[1604,1605,1581]],[[64905,64905],"mapped",[1605,1581,1580]],[[64906,64906],"mapped",[1605,1581,1605]],[[64907,64907],"mapped",[1605,1581,1610]],[[64908,64908],"mapped",[1605,1580,1581]],[[64909,64909],"mapped",[1605,1580,1605]],[[64910,64910],"mapped",[1605,1582,1580]],[[64911,64911],"mapped",[1605,1582,1605]],[[64912,64913],"disallowed"],[[64914,64914],"mapped",[1605,1580,1582]],[[64915,64915],"mapped",[1607,1605,1580]],[[64916,64916],"mapped",[1607,1605,1605]],[[64917,64917],"mapped",[1606,1581,1605]],[[64918,64918],"mapped",[1606,1581,1609]],[[64919,64920],"mapped",[1606,1580,1605]],[[64921,64921],"mapped",[1606,1580,1609]],[[64922,64922],"mapped",[1606,1605,1610]],[[64923,64923],"mapped",[1606,1605,1609]],[[64924,64925],"mapped",[1610,1605,1605]],[[64926,64926],"mapped",[1576,1582,1610]],[[64927,64927],"mapped",[1578,1580,1610]],[[64928,64928],"mapped",[1578,1580,1609]],[[64929,64929],"mapped",[1578,1582,1610]],[[64930,64930],"mapped",[1578,1582,1609]],[[64931,64931],"mapped",[1578,1605,1610]],[[64932,64932],"mapped",[1578,1605,1609]],[[64933,64933],"mapped",[1580,1605,1610]],[[64934,64934],"mapped",[1580,1581,1609]],[[64935,64935],"mapped",[1580,1605,1609]],[[64936,64936],"mapped",[1587,1582,1609]],[[64937,64937],"mapped",[1589,1581,1610]],[[64938,64938],"mapped",[1588,1581,1610]],[[64939,64939],"mapped",[1590,1581,1610]],[[64940,64940],"mapped",[1604,1580,1610]],[[64941,64941],"mapped",[1604,1605,1610]],[[64942,64942],"mapped",[1610,1581,1610]],[[64943,64943],"mapped",[1610,1580,1610]],[[64944,64944],"mapped",[1610,1605,1610]],[[64945,64945],"mapped",[1605,1605,1610]],[[64946,64946],"mapped",[1602,1605,1610]],[[64947,64947],"mapped",[1606,1581,1610]],[[64948,64948],"mapped",[1602,1605,1581]],[[64949,64949],"mapped",[1604,1581,1605]],[[64950,64950],"mapped",[1593,1605,1610]],[[64951,64951],"mapped",[1603,1605,1610]],[[64952,64952],"mapped",[1606,1580,1581]],[[64953,64953],"mapped",[1605,1582,1610]],[[64954,64954],"mapped",[1604,1580,1605]],[[64955,64955],"mapped",[1603,1605,1605]],[[64956,64956],"mapped",[1604,1580,1605]],[[64957,64957],"mapped",[1606,1580,1581]],[[64958,64958],"mapped",[1580,1581,1610]],[[64959,64959],"mapped",[1581,1580,1610]],[[64960,64960],"mapped",[1605,1580,1610]],[[64961,64961],"mapped",[1601,1605,1610]],[[64962,64962],"mapped",[1576,1581,1610]],[[64963,64963],"mapped",[1603,1605,1605]],[[64964,64964],"mapped",[1593,1580,1605]],[[64965,64965],"mapped",[1589,1605,1605]],[[64966,64966],"mapped",[1587,1582,1610]],[[64967,64967],"mapped",[1606,1580,1610]],[[64968,64975],"disallowed"],[[64976,65007],"disallowed"],[[65008,65008],"mapped",[1589,1604,1746]],[[65009,65009],"mapped",[1602,1604,1746]],[[65010,65010],"mapped",[1575,1604,1604,1607]],[[65011,65011],"mapped",[1575,1603,1576,1585]],[[65012,65012],"mapped",[1605,1581,1605,1583]],[[65013,65013],"mapped",[1589,1604,1593,1605]],[[65014,65014],"mapped",[1585,1587,1608,1604]],[[65015,65015],"mapped",[1593,1604,1610,1607]],[[65016,65016],"mapped",[1608,1587,1604,1605]],[[65017,65017],"mapped",[1589,1604,1609]],[[65018,65018],"disallowed_STD3_mapped",[1589,1604,1609,32,1575,1604,1604,1607,32,1593,1604,1610,1607,32,1608,1587,1604,1605]],[[65019,65019],"disallowed_STD3_mapped",[1580,1604,32,1580,1604,1575,1604,1607]],[[65020,65020],"mapped",[1585,1740,1575,1604]],[[65021,65021],"valid",[],"NV8"],[[65022,65023],"disallowed"],[[65024,65039],"ignored"],[[65040,65040],"disallowed_STD3_mapped",[44]],[[65041,65041],"mapped",[12289]],[[65042,65042],"disallowed"],[[65043,65043],"disallowed_STD3_mapped",[58]],[[65044,65044],"disallowed_STD3_mapped",[59]],[[65045,65045],"disallowed_STD3_mapped",[33]],[[65046,65046],"disallowed_STD3_mapped",[63]],[[65047,65047],"mapped",[12310]],[[65048,65048],"mapped",[12311]],[[65049,65049],"disallowed"],[[65050,65055],"disallowed"],[[65056,65059],"valid"],[[65060,65062],"valid"],[[65063,65069],"valid"],[[65070,65071],"valid"],[[65072,65072],"disallowed"],[[65073,65073],"mapped",[8212]],[[65074,65074],"mapped",[8211]],[[65075,65076],"disallowed_STD3_mapped",[95]],[[65077,65077],"disallowed_STD3_mapped",[40]],[[65078,65078],"disallowed_STD3_mapped",[41]],[[65079,65079],"disallowed_STD3_mapped",[123]],[[65080,65080],"disallowed_STD3_mapped",[125]],[[65081,65081],"mapped",[12308]],[[65082,65082],"mapped",[12309]],[[65083,65083],"mapped",[12304]],[[65084,65084],"mapped",[12305]],[[65085,65085],"mapped",[12298]],[[65086,65086],"mapped",[12299]],[[65087,65087],"mapped",[12296]],[[65088,65088],"mapped",[12297]],[[65089,65089],"mapped",[12300]],[[65090,65090],"mapped",[12301]],[[65091,65091],"mapped",[12302]],[[65092,65092],"mapped",[12303]],[[65093,65094],"valid",[],"NV8"],[[65095,65095],"disallowed_STD3_mapped",[91]],[[65096,65096],"disallowed_STD3_mapped",[93]],[[65097,65100],"disallowed_STD3_mapped",[32,773]],[[65101,65103],"disallowed_STD3_mapped",[95]],[[65104,65104],"disallowed_STD3_mapped",[44]],[[65105,65105],"mapped",[12289]],[[65106,65106],"disallowed"],[[65107,65107],"disallowed"],[[65108,65108],"disallowed_STD3_mapped",[59]],[[65109,65109],"disallowed_STD3_mapped",[58]],[[65110,65110],"disallowed_STD3_mapped",[63]],[[65111,65111],"disallowed_STD3_mapped",[33]],[[65112,65112],"mapped",[8212]],[[65113,65113],"disallowed_STD3_mapped",[40]],[[65114,65114],"disallowed_STD3_mapped",[41]],[[65115,65115],"disallowed_STD3_mapped",[123]],[[65116,65116],"disallowed_STD3_mapped",[125]],[[65117,65117],"mapped",[12308]],[[65118,65118],"mapped",[12309]],[[65119,65119],"disallowed_STD3_mapped",[35]],[[65120,65120],"disallowed_STD3_mapped",[38]],[[65121,65121],"disallowed_STD3_mapped",[42]],[[65122,65122],"disallowed_STD3_mapped",[43]],[[65123,65123],"mapped",[45]],[[65124,65124],"disallowed_STD3_mapped",[60]],[[65125,65125],"disallowed_STD3_mapped",[62]],[[65126,65126],"disallowed_STD3_mapped",[61]],[[65127,65127],"disallowed"],[[65128,65128],"disallowed_STD3_mapped",[92]],[[65129,65129],"disallowed_STD3_mapped",[36]],[[65130,65130],"disallowed_STD3_mapped",[37]],[[65131,65131],"disallowed_STD3_mapped",[64]],[[65132,65135],"disallowed"],[[65136,65136],"disallowed_STD3_mapped",[32,1611]],[[65137,65137],"mapped",[1600,1611]],[[65138,65138],"disallowed_STD3_mapped",[32,1612]],[[65139,65139],"valid"],[[65140,65140],"disallowed_STD3_mapped",[32,1613]],[[65141,65141],"disallowed"],[[65142,65142],"disallowed_STD3_mapped",[32,1614]],[[65143,65143],"mapped",[1600,1614]],[[65144,65144],"disallowed_STD3_mapped",[32,1615]],[[65145,65145],"mapped",[1600,1615]],[[65146,65146],"disallowed_STD3_mapped",[32,1616]],[[65147,65147],"mapped",[1600,1616]],[[65148,65148],"disallowed_STD3_mapped",[32,1617]],[[65149,65149],"mapped",[1600,1617]],[[65150,65150],"disallowed_STD3_mapped",[32,1618]],[[65151,65151],"mapped",[1600,1618]],[[65152,65152],"mapped",[1569]],[[65153,65154],"mapped",[1570]],[[65155,65156],"mapped",[1571]],[[65157,65158],"mapped",[1572]],[[65159,65160],"mapped",[1573]],[[65161,65164],"mapped",[1574]],[[65165,65166],"mapped",[1575]],[[65167,65170],"mapped",[1576]],[[65171,65172],"mapped",[1577]],[[65173,65176],"mapped",[1578]],[[65177,65180],"mapped",[1579]],[[65181,65184],"mapped",[1580]],[[65185,65188],"mapped",[1581]],[[65189,65192],"mapped",[1582]],[[65193,65194],"mapped",[1583]],[[65195,65196],"mapped",[1584]],[[65197,65198],"mapped",[1585]],[[65199,65200],"mapped",[1586]],[[65201,65204],"mapped",[1587]],[[65205,65208],"mapped",[1588]],[[65209,65212],"mapped",[1589]],[[65213,65216],"mapped",[1590]],[[65217,65220],"mapped",[1591]],[[65221,65224],"mapped",[1592]],[[65225,65228],"mapped",[1593]],[[65229,65232],"mapped",[1594]],[[65233,65236],"mapped",[1601]],[[65237,65240],"mapped",[1602]],[[65241,65244],"mapped",[1603]],[[65245,65248],"mapped",[1604]],[[65249,65252],"mapped",[1605]],[[65253,65256],"mapped",[1606]],[[65257,65260],"mapped",[1607]],[[65261,65262],"mapped",[1608]],[[65263,65264],"mapped",[1609]],[[65265,65268],"mapped",[1610]],[[65269,65270],"mapped",[1604,1570]],[[65271,65272],"mapped",[1604,1571]],[[65273,65274],"mapped",[1604,1573]],[[65275,65276],"mapped",[1604,1575]],[[65277,65278],"disallowed"],[[65279,65279],"ignored"],[[65280,65280],"disallowed"],[[65281,65281],"disallowed_STD3_mapped",[33]],[[65282,65282],"disallowed_STD3_mapped",[34]],[[65283,65283],"disallowed_STD3_mapped",[35]],[[65284,65284],"disallowed_STD3_mapped",[36]],[[65285,65285],"disallowed_STD3_mapped",[37]],[[65286,65286],"disallowed_STD3_mapped",[38]],[[65287,65287],"disallowed_STD3_mapped",[39]],[[65288,65288],"disallowed_STD3_mapped",[40]],[[65289,65289],"disallowed_STD3_mapped",[41]],[[65290,65290],"disallowed_STD3_mapped",[42]],[[65291,65291],"disallowed_STD3_mapped",[43]],[[65292,65292],"disallowed_STD3_mapped",[44]],[[65293,65293],"mapped",[45]],[[65294,65294],"mapped",[46]],[[65295,65295],"disallowed_STD3_mapped",[47]],[[65296,65296],"mapped",[48]],[[65297,65297],"mapped",[49]],[[65298,65298],"mapped",[50]],[[65299,65299],"mapped",[51]],[[65300,65300],"mapped",[52]],[[65301,65301],"mapped",[53]],[[65302,65302],"mapped",[54]],[[65303,65303],"mapped",[55]],[[65304,65304],"mapped",[56]],[[65305,65305],"mapped",[57]],[[65306,65306],"disallowed_STD3_mapped",[58]],[[65307,65307],"disallowed_STD3_mapped",[59]],[[65308,65308],"disallowed_STD3_mapped",[60]],[[65309,65309],"disallowed_STD3_mapped",[61]],[[65310,65310],"disallowed_STD3_mapped",[62]],[[65311,65311],"disallowed_STD3_mapped",[63]],[[65312,65312],"disallowed_STD3_mapped",[64]],[[65313,65313],"mapped",[97]],[[65314,65314],"mapped",[98]],[[65315,65315],"mapped",[99]],[[65316,65316],"mapped",[100]],[[65317,65317],"mapped",[101]],[[65318,65318],"mapped",[102]],[[65319,65319],"mapped",[103]],[[65320,65320],"mapped",[104]],[[65321,65321],"mapped",[105]],[[65322,65322],"mapped",[106]],[[65323,65323],"mapped",[107]],[[65324,65324],"mapped",[108]],[[65325,65325],"mapped",[109]],[[65326,65326],"mapped",[110]],[[65327,65327],"mapped",[111]],[[65328,65328],"mapped",[112]],[[65329,65329],"mapped",[113]],[[65330,65330],"mapped",[114]],[[65331,65331],"mapped",[115]],[[65332,65332],"mapped",[116]],[[65333,65333],"mapped",[117]],[[65334,65334],"mapped",[118]],[[65335,65335],"mapped",[119]],[[65336,65336],"mapped",[120]],[[65337,65337],"mapped",[121]],[[65338,65338],"mapped",[122]],[[65339,65339],"disallowed_STD3_mapped",[91]],[[65340,65340],"disallowed_STD3_mapped",[92]],[[65341,65341],"disallowed_STD3_mapped",[93]],[[65342,65342],"disallowed_STD3_mapped",[94]],[[65343,65343],"disallowed_STD3_mapped",[95]],[[65344,65344],"disallowed_STD3_mapped",[96]],[[65345,65345],"mapped",[97]],[[65346,65346],"mapped",[98]],[[65347,65347],"mapped",[99]],[[65348,65348],"mapped",[100]],[[65349,65349],"mapped",[101]],[[65350,65350],"mapped",[102]],[[65351,65351],"mapped",[103]],[[65352,65352],"mapped",[104]],[[65353,65353],"mapped",[105]],[[65354,65354],"mapped",[106]],[[65355,65355],"mapped",[107]],[[65356,65356],"mapped",[108]],[[65357,65357],"mapped",[109]],[[65358,65358],"mapped",[110]],[[65359,65359],"mapped",[111]],[[65360,65360],"mapped",[112]],[[65361,65361],"mapped",[113]],[[65362,65362],"mapped",[114]],[[65363,65363],"mapped",[115]],[[65364,65364],"mapped",[116]],[[65365,65365],"mapped",[117]],[[65366,65366],"mapped",[118]],[[65367,65367],"mapped",[119]],[[65368,65368],"mapped",[120]],[[65369,65369],"mapped",[121]],[[65370,65370],"mapped",[122]],[[65371,65371],"disallowed_STD3_mapped",[123]],[[65372,65372],"disallowed_STD3_mapped",[124]],[[65373,65373],"disallowed_STD3_mapped",[125]],[[65374,65374],"disallowed_STD3_mapped",[126]],[[65375,65375],"mapped",[10629]],[[65376,65376],"mapped",[10630]],[[65377,65377],"mapped",[46]],[[65378,65378],"mapped",[12300]],[[65379,65379],"mapped",[12301]],[[65380,65380],"mapped",[12289]],[[65381,65381],"mapped",[12539]],[[65382,65382],"mapped",[12530]],[[65383,65383],"mapped",[12449]],[[65384,65384],"mapped",[12451]],[[65385,65385],"mapped",[12453]],[[65386,65386],"mapped",[12455]],[[65387,65387],"mapped",[12457]],[[65388,65388],"mapped",[12515]],[[65389,65389],"mapped",[12517]],[[65390,65390],"mapped",[12519]],[[65391,65391],"mapped",[12483]],[[65392,65392],"mapped",[12540]],[[65393,65393],"mapped",[12450]],[[65394,65394],"mapped",[12452]],[[65395,65395],"mapped",[12454]],[[65396,65396],"mapped",[12456]],[[65397,65397],"mapped",[12458]],[[65398,65398],"mapped",[12459]],[[65399,65399],"mapped",[12461]],[[65400,65400],"mapped",[12463]],[[65401,65401],"mapped",[12465]],[[65402,65402],"mapped",[12467]],[[65403,65403],"mapped",[12469]],[[65404,65404],"mapped",[12471]],[[65405,65405],"mapped",[12473]],[[65406,65406],"mapped",[12475]],[[65407,65407],"mapped",[12477]],[[65408,65408],"mapped",[12479]],[[65409,65409],"mapped",[12481]],[[65410,65410],"mapped",[12484]],[[65411,65411],"mapped",[12486]],[[65412,65412],"mapped",[12488]],[[65413,65413],"mapped",[12490]],[[65414,65414],"mapped",[12491]],[[65415,65415],"mapped",[12492]],[[65416,65416],"mapped",[12493]],[[65417,65417],"mapped",[12494]],[[65418,65418],"mapped",[12495]],[[65419,65419],"mapped",[12498]],[[65420,65420],"mapped",[12501]],[[65421,65421],"mapped",[12504]],[[65422,65422],"mapped",[12507]],[[65423,65423],"mapped",[12510]],[[65424,65424],"mapped",[12511]],[[65425,65425],"mapped",[12512]],[[65426,65426],"mapped",[12513]],[[65427,65427],"mapped",[12514]],[[65428,65428],"mapped",[12516]],[[65429,65429],"mapped",[12518]],[[65430,65430],"mapped",[12520]],[[65431,65431],"mapped",[12521]],[[65432,65432],"mapped",[12522]],[[65433,65433],"mapped",[12523]],[[65434,65434],"mapped",[12524]],[[65435,65435],"mapped",[12525]],[[65436,65436],"mapped",[12527]],[[65437,65437],"mapped",[12531]],[[65438,65438],"mapped",[12441]],[[65439,65439],"mapped",[12442]],[[65440,65440],"disallowed"],[[65441,65441],"mapped",[4352]],[[65442,65442],"mapped",[4353]],[[65443,65443],"mapped",[4522]],[[65444,65444],"mapped",[4354]],[[65445,65445],"mapped",[4524]],[[65446,65446],"mapped",[4525]],[[65447,65447],"mapped",[4355]],[[65448,65448],"mapped",[4356]],[[65449,65449],"mapped",[4357]],[[65450,65450],"mapped",[4528]],[[65451,65451],"mapped",[4529]],[[65452,65452],"mapped",[4530]],[[65453,65453],"mapped",[4531]],[[65454,65454],"mapped",[4532]],[[65455,65455],"mapped",[4533]],[[65456,65456],"mapped",[4378]],[[65457,65457],"mapped",[4358]],[[65458,65458],"mapped",[4359]],[[65459,65459],"mapped",[4360]],[[65460,65460],"mapped",[4385]],[[65461,65461],"mapped",[4361]],[[65462,65462],"mapped",[4362]],[[65463,65463],"mapped",[4363]],[[65464,65464],"mapped",[4364]],[[65465,65465],"mapped",[4365]],[[65466,65466],"mapped",[4366]],[[65467,65467],"mapped",[4367]],[[65468,65468],"mapped",[4368]],[[65469,65469],"mapped",[4369]],[[65470,65470],"mapped",[4370]],[[65471,65473],"disallowed"],[[65474,65474],"mapped",[4449]],[[65475,65475],"mapped",[4450]],[[65476,65476],"mapped",[4451]],[[65477,65477],"mapped",[4452]],[[65478,65478],"mapped",[4453]],[[65479,65479],"mapped",[4454]],[[65480,65481],"disallowed"],[[65482,65482],"mapped",[4455]],[[65483,65483],"mapped",[4456]],[[65484,65484],"mapped",[4457]],[[65485,65485],"mapped",[4458]],[[65486,65486],"mapped",[4459]],[[65487,65487],"mapped",[4460]],[[65488,65489],"disallowed"],[[65490,65490],"mapped",[4461]],[[65491,65491],"mapped",[4462]],[[65492,65492],"mapped",[4463]],[[65493,65493],"mapped",[4464]],[[65494,65494],"mapped",[4465]],[[65495,65495],"mapped",[4466]],[[65496,65497],"disallowed"],[[65498,65498],"mapped",[4467]],[[65499,65499],"mapped",[4468]],[[65500,65500],"mapped",[4469]],[[65501,65503],"disallowed"],[[65504,65504],"mapped",[162]],[[65505,65505],"mapped",[163]],[[65506,65506],"mapped",[172]],[[65507,65507],"disallowed_STD3_mapped",[32,772]],[[65508,65508],"mapped",[166]],[[65509,65509],"mapped",[165]],[[65510,65510],"mapped",[8361]],[[65511,65511],"disallowed"],[[65512,65512],"mapped",[9474]],[[65513,65513],"mapped",[8592]],[[65514,65514],"mapped",[8593]],[[65515,65515],"mapped",[8594]],[[65516,65516],"mapped",[8595]],[[65517,65517],"mapped",[9632]],[[65518,65518],"mapped",[9675]],[[65519,65528],"disallowed"],[[65529,65531],"disallowed"],[[65532,65532],"disallowed"],[[65533,65533],"disallowed"],[[65534,65535],"disallowed"],[[65536,65547],"valid"],[[65548,65548],"disallowed"],[[65549,65574],"valid"],[[65575,65575],"disallowed"],[[65576,65594],"valid"],[[65595,65595],"disallowed"],[[65596,65597],"valid"],[[65598,65598],"disallowed"],[[65599,65613],"valid"],[[65614,65615],"disallowed"],[[65616,65629],"valid"],[[65630,65663],"disallowed"],[[65664,65786],"valid"],[[65787,65791],"disallowed"],[[65792,65794],"valid",[],"NV8"],[[65795,65798],"disallowed"],[[65799,65843],"valid",[],"NV8"],[[65844,65846],"disallowed"],[[65847,65855],"valid",[],"NV8"],[[65856,65930],"valid",[],"NV8"],[[65931,65932],"valid",[],"NV8"],[[65933,65935],"disallowed"],[[65936,65947],"valid",[],"NV8"],[[65948,65951],"disallowed"],[[65952,65952],"valid",[],"NV8"],[[65953,65999],"disallowed"],[[66000,66044],"valid",[],"NV8"],[[66045,66045],"valid"],[[66046,66175],"disallowed"],[[66176,66204],"valid"],[[66205,66207],"disallowed"],[[66208,66256],"valid"],[[66257,66271],"disallowed"],[[66272,66272],"valid"],[[66273,66299],"valid",[],"NV8"],[[66300,66303],"disallowed"],[[66304,66334],"valid"],[[66335,66335],"valid"],[[66336,66339],"valid",[],"NV8"],[[66340,66351],"disallowed"],[[66352,66368],"valid"],[[66369,66369],"valid",[],"NV8"],[[66370,66377],"valid"],[[66378,66378],"valid",[],"NV8"],[[66379,66383],"disallowed"],[[66384,66426],"valid"],[[66427,66431],"disallowed"],[[66432,66461],"valid"],[[66462,66462],"disallowed"],[[66463,66463],"valid",[],"NV8"],[[66464,66499],"valid"],[[66500,66503],"disallowed"],[[66504,66511],"valid"],[[66512,66517],"valid",[],"NV8"],[[66518,66559],"disallowed"],[[66560,66560],"mapped",[66600]],[[66561,66561],"mapped",[66601]],[[66562,66562],"mapped",[66602]],[[66563,66563],"mapped",[66603]],[[66564,66564],"mapped",[66604]],[[66565,66565],"mapped",[66605]],[[66566,66566],"mapped",[66606]],[[66567,66567],"mapped",[66607]],[[66568,66568],"mapped",[66608]],[[66569,66569],"mapped",[66609]],[[66570,66570],"mapped",[66610]],[[66571,66571],"mapped",[66611]],[[66572,66572],"mapped",[66612]],[[66573,66573],"mapped",[66613]],[[66574,66574],"mapped",[66614]],[[66575,66575],"mapped",[66615]],[[66576,66576],"mapped",[66616]],[[66577,66577],"mapped",[66617]],[[66578,66578],"mapped",[66618]],[[66579,66579],"mapped",[66619]],[[66580,66580],"mapped",[66620]],[[66581,66581],"mapped",[66621]],[[66582,66582],"mapped",[66622]],[[66583,66583],"mapped",[66623]],[[66584,66584],"mapped",[66624]],[[66585,66585],"mapped",[66625]],[[66586,66586],"mapped",[66626]],[[66587,66587],"mapped",[66627]],[[66588,66588],"mapped",[66628]],[[66589,66589],"mapped",[66629]],[[66590,66590],"mapped",[66630]],[[66591,66591],"mapped",[66631]],[[66592,66592],"mapped",[66632]],[[66593,66593],"mapped",[66633]],[[66594,66594],"mapped",[66634]],[[66595,66595],"mapped",[66635]],[[66596,66596],"mapped",[66636]],[[66597,66597],"mapped",[66637]],[[66598,66598],"mapped",[66638]],[[66599,66599],"mapped",[66639]],[[66600,66637],"valid"],[[66638,66717],"valid"],[[66718,66719],"disallowed"],[[66720,66729],"valid"],[[66730,66815],"disallowed"],[[66816,66855],"valid"],[[66856,66863],"disallowed"],[[66864,66915],"valid"],[[66916,66926],"disallowed"],[[66927,66927],"valid",[],"NV8"],[[66928,67071],"disallowed"],[[67072,67382],"valid"],[[67383,67391],"disallowed"],[[67392,67413],"valid"],[[67414,67423],"disallowed"],[[67424,67431],"valid"],[[67432,67583],"disallowed"],[[67584,67589],"valid"],[[67590,67591],"disallowed"],[[67592,67592],"valid"],[[67593,67593],"disallowed"],[[67594,67637],"valid"],[[67638,67638],"disallowed"],[[67639,67640],"valid"],[[67641,67643],"disallowed"],[[67644,67644],"valid"],[[67645,67646],"disallowed"],[[67647,67647],"valid"],[[67648,67669],"valid"],[[67670,67670],"disallowed"],[[67671,67679],"valid",[],"NV8"],[[67680,67702],"valid"],[[67703,67711],"valid",[],"NV8"],[[67712,67742],"valid"],[[67743,67750],"disallowed"],[[67751,67759],"valid",[],"NV8"],[[67760,67807],"disallowed"],[[67808,67826],"valid"],[[67827,67827],"disallowed"],[[67828,67829],"valid"],[[67830,67834],"disallowed"],[[67835,67839],"valid",[],"NV8"],[[67840,67861],"valid"],[[67862,67865],"valid",[],"NV8"],[[67866,67867],"valid",[],"NV8"],[[67868,67870],"disallowed"],[[67871,67871],"valid",[],"NV8"],[[67872,67897],"valid"],[[67898,67902],"disallowed"],[[67903,67903],"valid",[],"NV8"],[[67904,67967],"disallowed"],[[67968,68023],"valid"],[[68024,68027],"disallowed"],[[68028,68029],"valid",[],"NV8"],[[68030,68031],"valid"],[[68032,68047],"valid",[],"NV8"],[[68048,68049],"disallowed"],[[68050,68095],"valid",[],"NV8"],[[68096,68099],"valid"],[[68100,68100],"disallowed"],[[68101,68102],"valid"],[[68103,68107],"disallowed"],[[68108,68115],"valid"],[[68116,68116],"disallowed"],[[68117,68119],"valid"],[[68120,68120],"disallowed"],[[68121,68147],"valid"],[[68148,68151],"disallowed"],[[68152,68154],"valid"],[[68155,68158],"disallowed"],[[68159,68159],"valid"],[[68160,68167],"valid",[],"NV8"],[[68168,68175],"disallowed"],[[68176,68184],"valid",[],"NV8"],[[68185,68191],"disallowed"],[[68192,68220],"valid"],[[68221,68223],"valid",[],"NV8"],[[68224,68252],"valid"],[[68253,68255],"valid",[],"NV8"],[[68256,68287],"disallowed"],[[68288,68295],"valid"],[[68296,68296],"valid",[],"NV8"],[[68297,68326],"valid"],[[68327,68330],"disallowed"],[[68331,68342],"valid",[],"NV8"],[[68343,68351],"disallowed"],[[68352,68405],"valid"],[[68406,68408],"disallowed"],[[68409,68415],"valid",[],"NV8"],[[68416,68437],"valid"],[[68438,68439],"disallowed"],[[68440,68447],"valid",[],"NV8"],[[68448,68466],"valid"],[[68467,68471],"disallowed"],[[68472,68479],"valid",[],"NV8"],[[68480,68497],"valid"],[[68498,68504],"disallowed"],[[68505,68508],"valid",[],"NV8"],[[68509,68520],"disallowed"],[[68521,68527],"valid",[],"NV8"],[[68528,68607],"disallowed"],[[68608,68680],"valid"],[[68681,68735],"disallowed"],[[68736,68736],"mapped",[68800]],[[68737,68737],"mapped",[68801]],[[68738,68738],"mapped",[68802]],[[68739,68739],"mapped",[68803]],[[68740,68740],"mapped",[68804]],[[68741,68741],"mapped",[68805]],[[68742,68742],"mapped",[68806]],[[68743,68743],"mapped",[68807]],[[68744,68744],"mapped",[68808]],[[68745,68745],"mapped",[68809]],[[68746,68746],"mapped",[68810]],[[68747,68747],"mapped",[68811]],[[68748,68748],"mapped",[68812]],[[68749,68749],"mapped",[68813]],[[68750,68750],"mapped",[68814]],[[68751,68751],"mapped",[68815]],[[68752,68752],"mapped",[68816]],[[68753,68753],"mapped",[68817]],[[68754,68754],"mapped",[68818]],[[68755,68755],"mapped",[68819]],[[68756,68756],"mapped",[68820]],[[68757,68757],"mapped",[68821]],[[68758,68758],"mapped",[68822]],[[68759,68759],"mapped",[68823]],[[68760,68760],"mapped",[68824]],[[68761,68761],"mapped",[68825]],[[68762,68762],"mapped",[68826]],[[68763,68763],"mapped",[68827]],[[68764,68764],"mapped",[68828]],[[68765,68765],"mapped",[68829]],[[68766,68766],"mapped",[68830]],[[68767,68767],"mapped",[68831]],[[68768,68768],"mapped",[68832]],[[68769,68769],"mapped",[68833]],[[68770,68770],"mapped",[68834]],[[68771,68771],"mapped",[68835]],[[68772,68772],"mapped",[68836]],[[68773,68773],"mapped",[68837]],[[68774,68774],"mapped",[68838]],[[68775,68775],"mapped",[68839]],[[68776,68776],"mapped",[68840]],[[68777,68777],"mapped",[68841]],[[68778,68778],"mapped",[68842]],[[68779,68779],"mapped",[68843]],[[68780,68780],"mapped",[68844]],[[68781,68781],"mapped",[68845]],[[68782,68782],"mapped",[68846]],[[68783,68783],"mapped",[68847]],[[68784,68784],"mapped",[68848]],[[68785,68785],"mapped",[68849]],[[68786,68786],"mapped",[68850]],[[68787,68799],"disallowed"],[[68800,68850],"valid"],[[68851,68857],"disallowed"],[[68858,68863],"valid",[],"NV8"],[[68864,69215],"disallowed"],[[69216,69246],"valid",[],"NV8"],[[69247,69631],"disallowed"],[[69632,69702],"valid"],[[69703,69709],"valid",[],"NV8"],[[69710,69713],"disallowed"],[[69714,69733],"valid",[],"NV8"],[[69734,69743],"valid"],[[69744,69758],"disallowed"],[[69759,69759],"valid"],[[69760,69818],"valid"],[[69819,69820],"valid",[],"NV8"],[[69821,69821],"disallowed"],[[69822,69825],"valid",[],"NV8"],[[69826,69839],"disallowed"],[[69840,69864],"valid"],[[69865,69871],"disallowed"],[[69872,69881],"valid"],[[69882,69887],"disallowed"],[[69888,69940],"valid"],[[69941,69941],"disallowed"],[[69942,69951],"valid"],[[69952,69955],"valid",[],"NV8"],[[69956,69967],"disallowed"],[[69968,70003],"valid"],[[70004,70005],"valid",[],"NV8"],[[70006,70006],"valid"],[[70007,70015],"disallowed"],[[70016,70084],"valid"],[[70085,70088],"valid",[],"NV8"],[[70089,70089],"valid",[],"NV8"],[[70090,70092],"valid"],[[70093,70093],"valid",[],"NV8"],[[70094,70095],"disallowed"],[[70096,70105],"valid"],[[70106,70106],"valid"],[[70107,70107],"valid",[],"NV8"],[[70108,70108],"valid"],[[70109,70111],"valid",[],"NV8"],[[70112,70112],"disallowed"],[[70113,70132],"valid",[],"NV8"],[[70133,70143],"disallowed"],[[70144,70161],"valid"],[[70162,70162],"disallowed"],[[70163,70199],"valid"],[[70200,70205],"valid",[],"NV8"],[[70206,70271],"disallowed"],[[70272,70278],"valid"],[[70279,70279],"disallowed"],[[70280,70280],"valid"],[[70281,70281],"disallowed"],[[70282,70285],"valid"],[[70286,70286],"disallowed"],[[70287,70301],"valid"],[[70302,70302],"disallowed"],[[70303,70312],"valid"],[[70313,70313],"valid",[],"NV8"],[[70314,70319],"disallowed"],[[70320,70378],"valid"],[[70379,70383],"disallowed"],[[70384,70393],"valid"],[[70394,70399],"disallowed"],[[70400,70400],"valid"],[[70401,70403],"valid"],[[70404,70404],"disallowed"],[[70405,70412],"valid"],[[70413,70414],"disallowed"],[[70415,70416],"valid"],[[70417,70418],"disallowed"],[[70419,70440],"valid"],[[70441,70441],"disallowed"],[[70442,70448],"valid"],[[70449,70449],"disallowed"],[[70450,70451],"valid"],[[70452,70452],"disallowed"],[[70453,70457],"valid"],[[70458,70459],"disallowed"],[[70460,70468],"valid"],[[70469,70470],"disallowed"],[[70471,70472],"valid"],[[70473,70474],"disallowed"],[[70475,70477],"valid"],[[70478,70479],"disallowed"],[[70480,70480],"valid"],[[70481,70486],"disallowed"],[[70487,70487],"valid"],[[70488,70492],"disallowed"],[[70493,70499],"valid"],[[70500,70501],"disallowed"],[[70502,70508],"valid"],[[70509,70511],"disallowed"],[[70512,70516],"valid"],[[70517,70783],"disallowed"],[[70784,70853],"valid"],[[70854,70854],"valid",[],"NV8"],[[70855,70855],"valid"],[[70856,70863],"disallowed"],[[70864,70873],"valid"],[[70874,71039],"disallowed"],[[71040,71093],"valid"],[[71094,71095],"disallowed"],[[71096,71104],"valid"],[[71105,71113],"valid",[],"NV8"],[[71114,71127],"valid",[],"NV8"],[[71128,71133],"valid"],[[71134,71167],"disallowed"],[[71168,71232],"valid"],[[71233,71235],"valid",[],"NV8"],[[71236,71236],"valid"],[[71237,71247],"disallowed"],[[71248,71257],"valid"],[[71258,71295],"disallowed"],[[71296,71351],"valid"],[[71352,71359],"disallowed"],[[71360,71369],"valid"],[[71370,71423],"disallowed"],[[71424,71449],"valid"],[[71450,71452],"disallowed"],[[71453,71467],"valid"],[[71468,71471],"disallowed"],[[71472,71481],"valid"],[[71482,71487],"valid",[],"NV8"],[[71488,71839],"disallowed"],[[71840,71840],"mapped",[71872]],[[71841,71841],"mapped",[71873]],[[71842,71842],"mapped",[71874]],[[71843,71843],"mapped",[71875]],[[71844,71844],"mapped",[71876]],[[71845,71845],"mapped",[71877]],[[71846,71846],"mapped",[71878]],[[71847,71847],"mapped",[71879]],[[71848,71848],"mapped",[71880]],[[71849,71849],"mapped",[71881]],[[71850,71850],"mapped",[71882]],[[71851,71851],"mapped",[71883]],[[71852,71852],"mapped",[71884]],[[71853,71853],"mapped",[71885]],[[71854,71854],"mapped",[71886]],[[71855,71855],"mapped",[71887]],[[71856,71856],"mapped",[71888]],[[71857,71857],"mapped",[71889]],[[71858,71858],"mapped",[71890]],[[71859,71859],"mapped",[71891]],[[71860,71860],"mapped",[71892]],[[71861,71861],"mapped",[71893]],[[71862,71862],"mapped",[71894]],[[71863,71863],"mapped",[71895]],[[71864,71864],"mapped",[71896]],[[71865,71865],"mapped",[71897]],[[71866,71866],"mapped",[71898]],[[71867,71867],"mapped",[71899]],[[71868,71868],"mapped",[71900]],[[71869,71869],"mapped",[71901]],[[71870,71870],"mapped",[71902]],[[71871,71871],"mapped",[71903]],[[71872,71913],"valid"],[[71914,71922],"valid",[],"NV8"],[[71923,71934],"disallowed"],[[71935,71935],"valid"],[[71936,72383],"disallowed"],[[72384,72440],"valid"],[[72441,73727],"disallowed"],[[73728,74606],"valid"],[[74607,74648],"valid"],[[74649,74649],"valid"],[[74650,74751],"disallowed"],[[74752,74850],"valid",[],"NV8"],[[74851,74862],"valid",[],"NV8"],[[74863,74863],"disallowed"],[[74864,74867],"valid",[],"NV8"],[[74868,74868],"valid",[],"NV8"],[[74869,74879],"disallowed"],[[74880,75075],"valid"],[[75076,77823],"disallowed"],[[77824,78894],"valid"],[[78895,82943],"disallowed"],[[82944,83526],"valid"],[[83527,92159],"disallowed"],[[92160,92728],"valid"],[[92729,92735],"disallowed"],[[92736,92766],"valid"],[[92767,92767],"disallowed"],[[92768,92777],"valid"],[[92778,92781],"disallowed"],[[92782,92783],"valid",[],"NV8"],[[92784,92879],"disallowed"],[[92880,92909],"valid"],[[92910,92911],"disallowed"],[[92912,92916],"valid"],[[92917,92917],"valid",[],"NV8"],[[92918,92927],"disallowed"],[[92928,92982],"valid"],[[92983,92991],"valid",[],"NV8"],[[92992,92995],"valid"],[[92996,92997],"valid",[],"NV8"],[[92998,93007],"disallowed"],[[93008,93017],"valid"],[[93018,93018],"disallowed"],[[93019,93025],"valid",[],"NV8"],[[93026,93026],"disallowed"],[[93027,93047],"valid"],[[93048,93052],"disallowed"],[[93053,93071],"valid"],[[93072,93951],"disallowed"],[[93952,94020],"valid"],[[94021,94031],"disallowed"],[[94032,94078],"valid"],[[94079,94094],"disallowed"],[[94095,94111],"valid"],[[94112,110591],"disallowed"],[[110592,110593],"valid"],[[110594,113663],"disallowed"],[[113664,113770],"valid"],[[113771,113775],"disallowed"],[[113776,113788],"valid"],[[113789,113791],"disallowed"],[[113792,113800],"valid"],[[113801,113807],"disallowed"],[[113808,113817],"valid"],[[113818,113819],"disallowed"],[[113820,113820],"valid",[],"NV8"],[[113821,113822],"valid"],[[113823,113823],"valid",[],"NV8"],[[113824,113827],"ignored"],[[113828,118783],"disallowed"],[[118784,119029],"valid",[],"NV8"],[[119030,119039],"disallowed"],[[119040,119078],"valid",[],"NV8"],[[119079,119080],"disallowed"],[[119081,119081],"valid",[],"NV8"],[[119082,119133],"valid",[],"NV8"],[[119134,119134],"mapped",[119127,119141]],[[119135,119135],"mapped",[119128,119141]],[[119136,119136],"mapped",[119128,119141,119150]],[[119137,119137],"mapped",[119128,119141,119151]],[[119138,119138],"mapped",[119128,119141,119152]],[[119139,119139],"mapped",[119128,119141,119153]],[[119140,119140],"mapped",[119128,119141,119154]],[[119141,119154],"valid",[],"NV8"],[[119155,119162],"disallowed"],[[119163,119226],"valid",[],"NV8"],[[119227,119227],"mapped",[119225,119141]],[[119228,119228],"mapped",[119226,119141]],[[119229,119229],"mapped",[119225,119141,119150]],[[119230,119230],"mapped",[119226,119141,119150]],[[119231,119231],"mapped",[119225,119141,119151]],[[119232,119232],"mapped",[119226,119141,119151]],[[119233,119261],"valid",[],"NV8"],[[119262,119272],"valid",[],"NV8"],[[119273,119295],"disallowed"],[[119296,119365],"valid",[],"NV8"],[[119366,119551],"disallowed"],[[119552,119638],"valid",[],"NV8"],[[119639,119647],"disallowed"],[[119648,119665],"valid",[],"NV8"],[[119666,119807],"disallowed"],[[119808,119808],"mapped",[97]],[[119809,119809],"mapped",[98]],[[119810,119810],"mapped",[99]],[[119811,119811],"mapped",[100]],[[119812,119812],"mapped",[101]],[[119813,119813],"mapped",[102]],[[119814,119814],"mapped",[103]],[[119815,119815],"mapped",[104]],[[119816,119816],"mapped",[105]],[[119817,119817],"mapped",[106]],[[119818,119818],"mapped",[107]],[[119819,119819],"mapped",[108]],[[119820,119820],"mapped",[109]],[[119821,119821],"mapped",[110]],[[119822,119822],"mapped",[111]],[[119823,119823],"mapped",[112]],[[119824,119824],"mapped",[113]],[[119825,119825],"mapped",[114]],[[119826,119826],"mapped",[115]],[[119827,119827],"mapped",[116]],[[119828,119828],"mapped",[117]],[[119829,119829],"mapped",[118]],[[119830,119830],"mapped",[119]],[[119831,119831],"mapped",[120]],[[119832,119832],"mapped",[121]],[[119833,119833],"mapped",[122]],[[119834,119834],"mapped",[97]],[[119835,119835],"mapped",[98]],[[119836,119836],"mapped",[99]],[[119837,119837],"mapped",[100]],[[119838,119838],"mapped",[101]],[[119839,119839],"mapped",[102]],[[119840,119840],"mapped",[103]],[[119841,119841],"mapped",[104]],[[119842,119842],"mapped",[105]],[[119843,119843],"mapped",[106]],[[119844,119844],"mapped",[107]],[[119845,119845],"mapped",[108]],[[119846,119846],"mapped",[109]],[[119847,119847],"mapped",[110]],[[119848,119848],"mapped",[111]],[[119849,119849],"mapped",[112]],[[119850,119850],"mapped",[113]],[[119851,119851],"mapped",[114]],[[119852,119852],"mapped",[115]],[[119853,119853],"mapped",[116]],[[119854,119854],"mapped",[117]],[[119855,119855],"mapped",[118]],[[119856,119856],"mapped",[119]],[[119857,119857],"mapped",[120]],[[119858,119858],"mapped",[121]],[[119859,119859],"mapped",[122]],[[119860,119860],"mapped",[97]],[[119861,119861],"mapped",[98]],[[119862,119862],"mapped",[99]],[[119863,119863],"mapped",[100]],[[119864,119864],"mapped",[101]],[[119865,119865],"mapped",[102]],[[119866,119866],"mapped",[103]],[[119867,119867],"mapped",[104]],[[119868,119868],"mapped",[105]],[[119869,119869],"mapped",[106]],[[119870,119870],"mapped",[107]],[[119871,119871],"mapped",[108]],[[119872,119872],"mapped",[109]],[[119873,119873],"mapped",[110]],[[119874,119874],"mapped",[111]],[[119875,119875],"mapped",[112]],[[119876,119876],"mapped",[113]],[[119877,119877],"mapped",[114]],[[119878,119878],"mapped",[115]],[[119879,119879],"mapped",[116]],[[119880,119880],"mapped",[117]],[[119881,119881],"mapped",[118]],[[119882,119882],"mapped",[119]],[[119883,119883],"mapped",[120]],[[119884,119884],"mapped",[121]],[[119885,119885],"mapped",[122]],[[119886,119886],"mapped",[97]],[[119887,119887],"mapped",[98]],[[119888,119888],"mapped",[99]],[[119889,119889],"mapped",[100]],[[119890,119890],"mapped",[101]],[[119891,119891],"mapped",[102]],[[119892,119892],"mapped",[103]],[[119893,119893],"disallowed"],[[119894,119894],"mapped",[105]],[[119895,119895],"mapped",[106]],[[119896,119896],"mapped",[107]],[[119897,119897],"mapped",[108]],[[119898,119898],"mapped",[109]],[[119899,119899],"mapped",[110]],[[119900,119900],"mapped",[111]],[[119901,119901],"mapped",[112]],[[119902,119902],"mapped",[113]],[[119903,119903],"mapped",[114]],[[119904,119904],"mapped",[115]],[[119905,119905],"mapped",[116]],[[119906,119906],"mapped",[117]],[[119907,119907],"mapped",[118]],[[119908,119908],"mapped",[119]],[[119909,119909],"mapped",[120]],[[119910,119910],"mapped",[121]],[[119911,119911],"mapped",[122]],[[119912,119912],"mapped",[97]],[[119913,119913],"mapped",[98]],[[119914,119914],"mapped",[99]],[[119915,119915],"mapped",[100]],[[119916,119916],"mapped",[101]],[[119917,119917],"mapped",[102]],[[119918,119918],"mapped",[103]],[[119919,119919],"mapped",[104]],[[119920,119920],"mapped",[105]],[[119921,119921],"mapped",[106]],[[119922,119922],"mapped",[107]],[[119923,119923],"mapped",[108]],[[119924,119924],"mapped",[109]],[[119925,119925],"mapped",[110]],[[119926,119926],"mapped",[111]],[[119927,119927],"mapped",[112]],[[119928,119928],"mapped",[113]],[[119929,119929],"mapped",[114]],[[119930,119930],"mapped",[115]],[[119931,119931],"mapped",[116]],[[119932,119932],"mapped",[117]],[[119933,119933],"mapped",[118]],[[119934,119934],"mapped",[119]],[[119935,119935],"mapped",[120]],[[119936,119936],"mapped",[121]],[[119937,119937],"mapped",[122]],[[119938,119938],"mapped",[97]],[[119939,119939],"mapped",[98]],[[119940,119940],"mapped",[99]],[[119941,119941],"mapped",[100]],[[119942,119942],"mapped",[101]],[[119943,119943],"mapped",[102]],[[119944,119944],"mapped",[103]],[[119945,119945],"mapped",[104]],[[119946,119946],"mapped",[105]],[[119947,119947],"mapped",[106]],[[119948,119948],"mapped",[107]],[[119949,119949],"mapped",[108]],[[119950,119950],"mapped",[109]],[[119951,119951],"mapped",[110]],[[119952,119952],"mapped",[111]],[[119953,119953],"mapped",[112]],[[119954,119954],"mapped",[113]],[[119955,119955],"mapped",[114]],[[119956,119956],"mapped",[115]],[[119957,119957],"mapped",[116]],[[119958,119958],"mapped",[117]],[[119959,119959],"mapped",[118]],[[119960,119960],"mapped",[119]],[[119961,119961],"mapped",[120]],[[119962,119962],"mapped",[121]],[[119963,119963],"mapped",[122]],[[119964,119964],"mapped",[97]],[[119965,119965],"disallowed"],[[119966,119966],"mapped",[99]],[[119967,119967],"mapped",[100]],[[119968,119969],"disallowed"],[[119970,119970],"mapped",[103]],[[119971,119972],"disallowed"],[[119973,119973],"mapped",[106]],[[119974,119974],"mapped",[107]],[[119975,119976],"disallowed"],[[119977,119977],"mapped",[110]],[[119978,119978],"mapped",[111]],[[119979,119979],"mapped",[112]],[[119980,119980],"mapped",[113]],[[119981,119981],"disallowed"],[[119982,119982],"mapped",[115]],[[119983,119983],"mapped",[116]],[[119984,119984],"mapped",[117]],[[119985,119985],"mapped",[118]],[[119986,119986],"mapped",[119]],[[119987,119987],"mapped",[120]],[[119988,119988],"mapped",[121]],[[119989,119989],"mapped",[122]],[[119990,119990],"mapped",[97]],[[119991,119991],"mapped",[98]],[[119992,119992],"mapped",[99]],[[119993,119993],"mapped",[100]],[[119994,119994],"disallowed"],[[119995,119995],"mapped",[102]],[[119996,119996],"disallowed"],[[119997,119997],"mapped",[104]],[[119998,119998],"mapped",[105]],[[119999,119999],"mapped",[106]],[[120000,120000],"mapped",[107]],[[120001,120001],"mapped",[108]],[[120002,120002],"mapped",[109]],[[120003,120003],"mapped",[110]],[[120004,120004],"disallowed"],[[120005,120005],"mapped",[112]],[[120006,120006],"mapped",[113]],[[120007,120007],"mapped",[114]],[[120008,120008],"mapped",[115]],[[120009,120009],"mapped",[116]],[[120010,120010],"mapped",[117]],[[120011,120011],"mapped",[118]],[[120012,120012],"mapped",[119]],[[120013,120013],"mapped",[120]],[[120014,120014],"mapped",[121]],[[120015,120015],"mapped",[122]],[[120016,120016],"mapped",[97]],[[120017,120017],"mapped",[98]],[[120018,120018],"mapped",[99]],[[120019,120019],"mapped",[100]],[[120020,120020],"mapped",[101]],[[120021,120021],"mapped",[102]],[[120022,120022],"mapped",[103]],[[120023,120023],"mapped",[104]],[[120024,120024],"mapped",[105]],[[120025,120025],"mapped",[106]],[[120026,120026],"mapped",[107]],[[120027,120027],"mapped",[108]],[[120028,120028],"mapped",[109]],[[120029,120029],"mapped",[110]],[[120030,120030],"mapped",[111]],[[120031,120031],"mapped",[112]],[[120032,120032],"mapped",[113]],[[120033,120033],"mapped",[114]],[[120034,120034],"mapped",[115]],[[120035,120035],"mapped",[116]],[[120036,120036],"mapped",[117]],[[120037,120037],"mapped",[118]],[[120038,120038],"mapped",[119]],[[120039,120039],"mapped",[120]],[[120040,120040],"mapped",[121]],[[120041,120041],"mapped",[122]],[[120042,120042],"mapped",[97]],[[120043,120043],"mapped",[98]],[[120044,120044],"mapped",[99]],[[120045,120045],"mapped",[100]],[[120046,120046],"mapped",[101]],[[120047,120047],"mapped",[102]],[[120048,120048],"mapped",[103]],[[120049,120049],"mapped",[104]],[[120050,120050],"mapped",[105]],[[120051,120051],"mapped",[106]],[[120052,120052],"mapped",[107]],[[120053,120053],"mapped",[108]],[[120054,120054],"mapped",[109]],[[120055,120055],"mapped",[110]],[[120056,120056],"mapped",[111]],[[120057,120057],"mapped",[112]],[[120058,120058],"mapped",[113]],[[120059,120059],"mapped",[114]],[[120060,120060],"mapped",[115]],[[120061,120061],"mapped",[116]],[[120062,120062],"mapped",[117]],[[120063,120063],"mapped",[118]],[[120064,120064],"mapped",[119]],[[120065,120065],"mapped",[120]],[[120066,120066],"mapped",[121]],[[120067,120067],"mapped",[122]],[[120068,120068],"mapped",[97]],[[120069,120069],"mapped",[98]],[[120070,120070],"disallowed"],[[120071,120071],"mapped",[100]],[[120072,120072],"mapped",[101]],[[120073,120073],"mapped",[102]],[[120074,120074],"mapped",[103]],[[120075,120076],"disallowed"],[[120077,120077],"mapped",[106]],[[120078,120078],"mapped",[107]],[[120079,120079],"mapped",[108]],[[120080,120080],"mapped",[109]],[[120081,120081],"mapped",[110]],[[120082,120082],"mapped",[111]],[[120083,120083],"mapped",[112]],[[120084,120084],"mapped",[113]],[[120085,120085],"disallowed"],[[120086,120086],"mapped",[115]],[[120087,120087],"mapped",[116]],[[120088,120088],"mapped",[117]],[[120089,120089],"mapped",[118]],[[120090,120090],"mapped",[119]],[[120091,120091],"mapped",[120]],[[120092,120092],"mapped",[121]],[[120093,120093],"disallowed"],[[120094,120094],"mapped",[97]],[[120095,120095],"mapped",[98]],[[120096,120096],"mapped",[99]],[[120097,120097],"mapped",[100]],[[120098,120098],"mapped",[101]],[[120099,120099],"mapped",[102]],[[120100,120100],"mapped",[103]],[[120101,120101],"mapped",[104]],[[120102,120102],"mapped",[105]],[[120103,120103],"mapped",[106]],[[120104,120104],"mapped",[107]],[[120105,120105],"mapped",[108]],[[120106,120106],"mapped",[109]],[[120107,120107],"mapped",[110]],[[120108,120108],"mapped",[111]],[[120109,120109],"mapped",[112]],[[120110,120110],"mapped",[113]],[[120111,120111],"mapped",[114]],[[120112,120112],"mapped",[115]],[[120113,120113],"mapped",[116]],[[120114,120114],"mapped",[117]],[[120115,120115],"mapped",[118]],[[120116,120116],"mapped",[119]],[[120117,120117],"mapped",[120]],[[120118,120118],"mapped",[121]],[[120119,120119],"mapped",[122]],[[120120,120120],"mapped",[97]],[[120121,120121],"mapped",[98]],[[120122,120122],"disallowed"],[[120123,120123],"mapped",[100]],[[120124,120124],"mapped",[101]],[[120125,120125],"mapped",[102]],[[120126,120126],"mapped",[103]],[[120127,120127],"disallowed"],[[120128,120128],"mapped",[105]],[[120129,120129],"mapped",[106]],[[120130,120130],"mapped",[107]],[[120131,120131],"mapped",[108]],[[120132,120132],"mapped",[109]],[[120133,120133],"disallowed"],[[120134,120134],"mapped",[111]],[[120135,120137],"disallowed"],[[120138,120138],"mapped",[115]],[[120139,120139],"mapped",[116]],[[120140,120140],"mapped",[117]],[[120141,120141],"mapped",[118]],[[120142,120142],"mapped",[119]],[[120143,120143],"mapped",[120]],[[120144,120144],"mapped",[121]],[[120145,120145],"disallowed"],[[120146,120146],"mapped",[97]],[[120147,120147],"mapped",[98]],[[120148,120148],"mapped",[99]],[[120149,120149],"mapped",[100]],[[120150,120150],"mapped",[101]],[[120151,120151],"mapped",[102]],[[120152,120152],"mapped",[103]],[[120153,120153],"mapped",[104]],[[120154,120154],"mapped",[105]],[[120155,120155],"mapped",[106]],[[120156,120156],"mapped",[107]],[[120157,120157],"mapped",[108]],[[120158,120158],"mapped",[109]],[[120159,120159],"mapped",[110]],[[120160,120160],"mapped",[111]],[[120161,120161],"mapped",[112]],[[120162,120162],"mapped",[113]],[[120163,120163],"mapped",[114]],[[120164,120164],"mapped",[115]],[[120165,120165],"mapped",[116]],[[120166,120166],"mapped",[117]],[[120167,120167],"mapped",[118]],[[120168,120168],"mapped",[119]],[[120169,120169],"mapped",[120]],[[120170,120170],"mapped",[121]],[[120171,120171],"mapped",[122]],[[120172,120172],"mapped",[97]],[[120173,120173],"mapped",[98]],[[120174,120174],"mapped",[99]],[[120175,120175],"mapped",[100]],[[120176,120176],"mapped",[101]],[[120177,120177],"mapped",[102]],[[120178,120178],"mapped",[103]],[[120179,120179],"mapped",[104]],[[120180,120180],"mapped",[105]],[[120181,120181],"mapped",[106]],[[120182,120182],"mapped",[107]],[[120183,120183],"mapped",[108]],[[120184,120184],"mapped",[109]],[[120185,120185],"mapped",[110]],[[120186,120186],"mapped",[111]],[[120187,120187],"mapped",[112]],[[120188,120188],"mapped",[113]],[[120189,120189],"mapped",[114]],[[120190,120190],"mapped",[115]],[[120191,120191],"mapped",[116]],[[120192,120192],"mapped",[117]],[[120193,120193],"mapped",[118]],[[120194,120194],"mapped",[119]],[[120195,120195],"mapped",[120]],[[120196,120196],"mapped",[121]],[[120197,120197],"mapped",[122]],[[120198,120198],"mapped",[97]],[[120199,120199],"mapped",[98]],[[120200,120200],"mapped",[99]],[[120201,120201],"mapped",[100]],[[120202,120202],"mapped",[101]],[[120203,120203],"mapped",[102]],[[120204,120204],"mapped",[103]],[[120205,120205],"mapped",[104]],[[120206,120206],"mapped",[105]],[[120207,120207],"mapped",[106]],[[120208,120208],"mapped",[107]],[[120209,120209],"mapped",[108]],[[120210,120210],"mapped",[109]],[[120211,120211],"mapped",[110]],[[120212,120212],"mapped",[111]],[[120213,120213],"mapped",[112]],[[120214,120214],"mapped",[113]],[[120215,120215],"mapped",[114]],[[120216,120216],"mapped",[115]],[[120217,120217],"mapped",[116]],[[120218,120218],"mapped",[117]],[[120219,120219],"mapped",[118]],[[120220,120220],"mapped",[119]],[[120221,120221],"mapped",[120]],[[120222,120222],"mapped",[121]],[[120223,120223],"mapped",[122]],[[120224,120224],"mapped",[97]],[[120225,120225],"mapped",[98]],[[120226,120226],"mapped",[99]],[[120227,120227],"mapped",[100]],[[120228,120228],"mapped",[101]],[[120229,120229],"mapped",[102]],[[120230,120230],"mapped",[103]],[[120231,120231],"mapped",[104]],[[120232,120232],"mapped",[105]],[[120233,120233],"mapped",[106]],[[120234,120234],"mapped",[107]],[[120235,120235],"mapped",[108]],[[120236,120236],"mapped",[109]],[[120237,120237],"mapped",[110]],[[120238,120238],"mapped",[111]],[[120239,120239],"mapped",[112]],[[120240,120240],"mapped",[113]],[[120241,120241],"mapped",[114]],[[120242,120242],"mapped",[115]],[[120243,120243],"mapped",[116]],[[120244,120244],"mapped",[117]],[[120245,120245],"mapped",[118]],[[120246,120246],"mapped",[119]],[[120247,120247],"mapped",[120]],[[120248,120248],"mapped",[121]],[[120249,120249],"mapped",[122]],[[120250,120250],"mapped",[97]],[[120251,120251],"mapped",[98]],[[120252,120252],"mapped",[99]],[[120253,120253],"mapped",[100]],[[120254,120254],"mapped",[101]],[[120255,120255],"mapped",[102]],[[120256,120256],"mapped",[103]],[[120257,120257],"mapped",[104]],[[120258,120258],"mapped",[105]],[[120259,120259],"mapped",[106]],[[120260,120260],"mapped",[107]],[[120261,120261],"mapped",[108]],[[120262,120262],"mapped",[109]],[[120263,120263],"mapped",[110]],[[120264,120264],"mapped",[111]],[[120265,120265],"mapped",[112]],[[120266,120266],"mapped",[113]],[[120267,120267],"mapped",[114]],[[120268,120268],"mapped",[115]],[[120269,120269],"mapped",[116]],[[120270,120270],"mapped",[117]],[[120271,120271],"mapped",[118]],[[120272,120272],"mapped",[119]],[[120273,120273],"mapped",[120]],[[120274,120274],"mapped",[121]],[[120275,120275],"mapped",[122]],[[120276,120276],"mapped",[97]],[[120277,120277],"mapped",[98]],[[120278,120278],"mapped",[99]],[[120279,120279],"mapped",[100]],[[120280,120280],"mapped",[101]],[[120281,120281],"mapped",[102]],[[120282,120282],"mapped",[103]],[[120283,120283],"mapped",[104]],[[120284,120284],"mapped",[105]],[[120285,120285],"mapped",[106]],[[120286,120286],"mapped",[107]],[[120287,120287],"mapped",[108]],[[120288,120288],"mapped",[109]],[[120289,120289],"mapped",[110]],[[120290,120290],"mapped",[111]],[[120291,120291],"mapped",[112]],[[120292,120292],"mapped",[113]],[[120293,120293],"mapped",[114]],[[120294,120294],"mapped",[115]],[[120295,120295],"mapped",[116]],[[120296,120296],"mapped",[117]],[[120297,120297],"mapped",[118]],[[120298,120298],"mapped",[119]],[[120299,120299],"mapped",[120]],[[120300,120300],"mapped",[121]],[[120301,120301],"mapped",[122]],[[120302,120302],"mapped",[97]],[[120303,120303],"mapped",[98]],[[120304,120304],"mapped",[99]],[[120305,120305],"mapped",[100]],[[120306,120306],"mapped",[101]],[[120307,120307],"mapped",[102]],[[120308,120308],"mapped",[103]],[[120309,120309],"mapped",[104]],[[120310,120310],"mapped",[105]],[[120311,120311],"mapped",[106]],[[120312,120312],"mapped",[107]],[[120313,120313],"mapped",[108]],[[120314,120314],"mapped",[109]],[[120315,120315],"mapped",[110]],[[120316,120316],"mapped",[111]],[[120317,120317],"mapped",[112]],[[120318,120318],"mapped",[113]],[[120319,120319],"mapped",[114]],[[120320,120320],"mapped",[115]],[[120321,120321],"mapped",[116]],[[120322,120322],"mapped",[117]],[[120323,120323],"mapped",[118]],[[120324,120324],"mapped",[119]],[[120325,120325],"mapped",[120]],[[120326,120326],"mapped",[121]],[[120327,120327],"mapped",[122]],[[120328,120328],"mapped",[97]],[[120329,120329],"mapped",[98]],[[120330,120330],"mapped",[99]],[[120331,120331],"mapped",[100]],[[120332,120332],"mapped",[101]],[[120333,120333],"mapped",[102]],[[120334,120334],"mapped",[103]],[[120335,120335],"mapped",[104]],[[120336,120336],"mapped",[105]],[[120337,120337],"mapped",[106]],[[120338,120338],"mapped",[107]],[[120339,120339],"mapped",[108]],[[120340,120340],"mapped",[109]],[[120341,120341],"mapped",[110]],[[120342,120342],"mapped",[111]],[[120343,120343],"mapped",[112]],[[120344,120344],"mapped",[113]],[[120345,120345],"mapped",[114]],[[120346,120346],"mapped",[115]],[[120347,120347],"mapped",[116]],[[120348,120348],"mapped",[117]],[[120349,120349],"mapped",[118]],[[120350,120350],"mapped",[119]],[[120351,120351],"mapped",[120]],[[120352,120352],"mapped",[121]],[[120353,120353],"mapped",[122]],[[120354,120354],"mapped",[97]],[[120355,120355],"mapped",[98]],[[120356,120356],"mapped",[99]],[[120357,120357],"mapped",[100]],[[120358,120358],"mapped",[101]],[[120359,120359],"mapped",[102]],[[120360,120360],"mapped",[103]],[[120361,120361],"mapped",[104]],[[120362,120362],"mapped",[105]],[[120363,120363],"mapped",[106]],[[120364,120364],"mapped",[107]],[[120365,120365],"mapped",[108]],[[120366,120366],"mapped",[109]],[[120367,120367],"mapped",[110]],[[120368,120368],"mapped",[111]],[[120369,120369],"mapped",[112]],[[120370,120370],"mapped",[113]],[[120371,120371],"mapped",[114]],[[120372,120372],"mapped",[115]],[[120373,120373],"mapped",[116]],[[120374,120374],"mapped",[117]],[[120375,120375],"mapped",[118]],[[120376,120376],"mapped",[119]],[[120377,120377],"mapped",[120]],[[120378,120378],"mapped",[121]],[[120379,120379],"mapped",[122]],[[120380,120380],"mapped",[97]],[[120381,120381],"mapped",[98]],[[120382,120382],"mapped",[99]],[[120383,120383],"mapped",[100]],[[120384,120384],"mapped",[101]],[[120385,120385],"mapped",[102]],[[120386,120386],"mapped",[103]],[[120387,120387],"mapped",[104]],[[120388,120388],"mapped",[105]],[[120389,120389],"mapped",[106]],[[120390,120390],"mapped",[107]],[[120391,120391],"mapped",[108]],[[120392,120392],"mapped",[109]],[[120393,120393],"mapped",[110]],[[120394,120394],"mapped",[111]],[[120395,120395],"mapped",[112]],[[120396,120396],"mapped",[113]],[[120397,120397],"mapped",[114]],[[120398,120398],"mapped",[115]],[[120399,120399],"mapped",[116]],[[120400,120400],"mapped",[117]],[[120401,120401],"mapped",[118]],[[120402,120402],"mapped",[119]],[[120403,120403],"mapped",[120]],[[120404,120404],"mapped",[121]],[[120405,120405],"mapped",[122]],[[120406,120406],"mapped",[97]],[[120407,120407],"mapped",[98]],[[120408,120408],"mapped",[99]],[[120409,120409],"mapped",[100]],[[120410,120410],"mapped",[101]],[[120411,120411],"mapped",[102]],[[120412,120412],"mapped",[103]],[[120413,120413],"mapped",[104]],[[120414,120414],"mapped",[105]],[[120415,120415],"mapped",[106]],[[120416,120416],"mapped",[107]],[[120417,120417],"mapped",[108]],[[120418,120418],"mapped",[109]],[[120419,120419],"mapped",[110]],[[120420,120420],"mapped",[111]],[[120421,120421],"mapped",[112]],[[120422,120422],"mapped",[113]],[[120423,120423],"mapped",[114]],[[120424,120424],"mapped",[115]],[[120425,120425],"mapped",[116]],[[120426,120426],"mapped",[117]],[[120427,120427],"mapped",[118]],[[120428,120428],"mapped",[119]],[[120429,120429],"mapped",[120]],[[120430,120430],"mapped",[121]],[[120431,120431],"mapped",[122]],[[120432,120432],"mapped",[97]],[[120433,120433],"mapped",[98]],[[120434,120434],"mapped",[99]],[[120435,120435],"mapped",[100]],[[120436,120436],"mapped",[101]],[[120437,120437],"mapped",[102]],[[120438,120438],"mapped",[103]],[[120439,120439],"mapped",[104]],[[120440,120440],"mapped",[105]],[[120441,120441],"mapped",[106]],[[120442,120442],"mapped",[107]],[[120443,120443],"mapped",[108]],[[120444,120444],"mapped",[109]],[[120445,120445],"mapped",[110]],[[120446,120446],"mapped",[111]],[[120447,120447],"mapped",[112]],[[120448,120448],"mapped",[113]],[[120449,120449],"mapped",[114]],[[120450,120450],"mapped",[115]],[[120451,120451],"mapped",[116]],[[120452,120452],"mapped",[117]],[[120453,120453],"mapped",[118]],[[120454,120454],"mapped",[119]],[[120455,120455],"mapped",[120]],[[120456,120456],"mapped",[121]],[[120457,120457],"mapped",[122]],[[120458,120458],"mapped",[97]],[[120459,120459],"mapped",[98]],[[120460,120460],"mapped",[99]],[[120461,120461],"mapped",[100]],[[120462,120462],"mapped",[101]],[[120463,120463],"mapped",[102]],[[120464,120464],"mapped",[103]],[[120465,120465],"mapped",[104]],[[120466,120466],"mapped",[105]],[[120467,120467],"mapped",[106]],[[120468,120468],"mapped",[107]],[[120469,120469],"mapped",[108]],[[120470,120470],"mapped",[109]],[[120471,120471],"mapped",[110]],[[120472,120472],"mapped",[111]],[[120473,120473],"mapped",[112]],[[120474,120474],"mapped",[113]],[[120475,120475],"mapped",[114]],[[120476,120476],"mapped",[115]],[[120477,120477],"mapped",[116]],[[120478,120478],"mapped",[117]],[[120479,120479],"mapped",[118]],[[120480,120480],"mapped",[119]],[[120481,120481],"mapped",[120]],[[120482,120482],"mapped",[121]],[[120483,120483],"mapped",[122]],[[120484,120484],"mapped",[305]],[[120485,120485],"mapped",[567]],[[120486,120487],"disallowed"],[[120488,120488],"mapped",[945]],[[120489,120489],"mapped",[946]],[[120490,120490],"mapped",[947]],[[120491,120491],"mapped",[948]],[[120492,120492],"mapped",[949]],[[120493,120493],"mapped",[950]],[[120494,120494],"mapped",[951]],[[120495,120495],"mapped",[952]],[[120496,120496],"mapped",[953]],[[120497,120497],"mapped",[954]],[[120498,120498],"mapped",[955]],[[120499,120499],"mapped",[956]],[[120500,120500],"mapped",[957]],[[120501,120501],"mapped",[958]],[[120502,120502],"mapped",[959]],[[120503,120503],"mapped",[960]],[[120504,120504],"mapped",[961]],[[120505,120505],"mapped",[952]],[[120506,120506],"mapped",[963]],[[120507,120507],"mapped",[964]],[[120508,120508],"mapped",[965]],[[120509,120509],"mapped",[966]],[[120510,120510],"mapped",[967]],[[120511,120511],"mapped",[968]],[[120512,120512],"mapped",[969]],[[120513,120513],"mapped",[8711]],[[120514,120514],"mapped",[945]],[[120515,120515],"mapped",[946]],[[120516,120516],"mapped",[947]],[[120517,120517],"mapped",[948]],[[120518,120518],"mapped",[949]],[[120519,120519],"mapped",[950]],[[120520,120520],"mapped",[951]],[[120521,120521],"mapped",[952]],[[120522,120522],"mapped",[953]],[[120523,120523],"mapped",[954]],[[120524,120524],"mapped",[955]],[[120525,120525],"mapped",[956]],[[120526,120526],"mapped",[957]],[[120527,120527],"mapped",[958]],[[120528,120528],"mapped",[959]],[[120529,120529],"mapped",[960]],[[120530,120530],"mapped",[961]],[[120531,120532],"mapped",[963]],[[120533,120533],"mapped",[964]],[[120534,120534],"mapped",[965]],[[120535,120535],"mapped",[966]],[[120536,120536],"mapped",[967]],[[120537,120537],"mapped",[968]],[[120538,120538],"mapped",[969]],[[120539,120539],"mapped",[8706]],[[120540,120540],"mapped",[949]],[[120541,120541],"mapped",[952]],[[120542,120542],"mapped",[954]],[[120543,120543],"mapped",[966]],[[120544,120544],"mapped",[961]],[[120545,120545],"mapped",[960]],[[120546,120546],"mapped",[945]],[[120547,120547],"mapped",[946]],[[120548,120548],"mapped",[947]],[[120549,120549],"mapped",[948]],[[120550,120550],"mapped",[949]],[[120551,120551],"mapped",[950]],[[120552,120552],"mapped",[951]],[[120553,120553],"mapped",[952]],[[120554,120554],"mapped",[953]],[[120555,120555],"mapped",[954]],[[120556,120556],"mapped",[955]],[[120557,120557],"mapped",[956]],[[120558,120558],"mapped",[957]],[[120559,120559],"mapped",[958]],[[120560,120560],"mapped",[959]],[[120561,120561],"mapped",[960]],[[120562,120562],"mapped",[961]],[[120563,120563],"mapped",[952]],[[120564,120564],"mapped",[963]],[[120565,120565],"mapped",[964]],[[120566,120566],"mapped",[965]],[[120567,120567],"mapped",[966]],[[120568,120568],"mapped",[967]],[[120569,120569],"mapped",[968]],[[120570,120570],"mapped",[969]],[[120571,120571],"mapped",[8711]],[[120572,120572],"mapped",[945]],[[120573,120573],"mapped",[946]],[[120574,120574],"mapped",[947]],[[120575,120575],"mapped",[948]],[[120576,120576],"mapped",[949]],[[120577,120577],"mapped",[950]],[[120578,120578],"mapped",[951]],[[120579,120579],"mapped",[952]],[[120580,120580],"mapped",[953]],[[120581,120581],"mapped",[954]],[[120582,120582],"mapped",[955]],[[120583,120583],"mapped",[956]],[[120584,120584],"mapped",[957]],[[120585,120585],"mapped",[958]],[[120586,120586],"mapped",[959]],[[120587,120587],"mapped",[960]],[[120588,120588],"mapped",[961]],[[120589,120590],"mapped",[963]],[[120591,120591],"mapped",[964]],[[120592,120592],"mapped",[965]],[[120593,120593],"mapped",[966]],[[120594,120594],"mapped",[967]],[[120595,120595],"mapped",[968]],[[120596,120596],"mapped",[969]],[[120597,120597],"mapped",[8706]],[[120598,120598],"mapped",[949]],[[120599,120599],"mapped",[952]],[[120600,120600],"mapped",[954]],[[120601,120601],"mapped",[966]],[[120602,120602],"mapped",[961]],[[120603,120603],"mapped",[960]],[[120604,120604],"mapped",[945]],[[120605,120605],"mapped",[946]],[[120606,120606],"mapped",[947]],[[120607,120607],"mapped",[948]],[[120608,120608],"mapped",[949]],[[120609,120609],"mapped",[950]],[[120610,120610],"mapped",[951]],[[120611,120611],"mapped",[952]],[[120612,120612],"mapped",[953]],[[120613,120613],"mapped",[954]],[[120614,120614],"mapped",[955]],[[120615,120615],"mapped",[956]],[[120616,120616],"mapped",[957]],[[120617,120617],"mapped",[958]],[[120618,120618],"mapped",[959]],[[120619,120619],"mapped",[960]],[[120620,120620],"mapped",[961]],[[120621,120621],"mapped",[952]],[[120622,120622],"mapped",[963]],[[120623,120623],"mapped",[964]],[[120624,120624],"mapped",[965]],[[120625,120625],"mapped",[966]],[[120626,120626],"mapped",[967]],[[120627,120627],"mapped",[968]],[[120628,120628],"mapped",[969]],[[120629,120629],"mapped",[8711]],[[120630,120630],"mapped",[945]],[[120631,120631],"mapped",[946]],[[120632,120632],"mapped",[947]],[[120633,120633],"mapped",[948]],[[120634,120634],"mapped",[949]],[[120635,120635],"mapped",[950]],[[120636,120636],"mapped",[951]],[[120637,120637],"mapped",[952]],[[120638,120638],"mapped",[953]],[[120639,120639],"mapped",[954]],[[120640,120640],"mapped",[955]],[[120641,120641],"mapped",[956]],[[120642,120642],"mapped",[957]],[[120643,120643],"mapped",[958]],[[120644,120644],"mapped",[959]],[[120645,120645],"mapped",[960]],[[120646,120646],"mapped",[961]],[[120647,120648],"mapped",[963]],[[120649,120649],"mapped",[964]],[[120650,120650],"mapped",[965]],[[120651,120651],"mapped",[966]],[[120652,120652],"mapped",[967]],[[120653,120653],"mapped",[968]],[[120654,120654],"mapped",[969]],[[120655,120655],"mapped",[8706]],[[120656,120656],"mapped",[949]],[[120657,120657],"mapped",[952]],[[120658,120658],"mapped",[954]],[[120659,120659],"mapped",[966]],[[120660,120660],"mapped",[961]],[[120661,120661],"mapped",[960]],[[120662,120662],"mapped",[945]],[[120663,120663],"mapped",[946]],[[120664,120664],"mapped",[947]],[[120665,120665],"mapped",[948]],[[120666,120666],"mapped",[949]],[[120667,120667],"mapped",[950]],[[120668,120668],"mapped",[951]],[[120669,120669],"mapped",[952]],[[120670,120670],"mapped",[953]],[[120671,120671],"mapped",[954]],[[120672,120672],"mapped",[955]],[[120673,120673],"mapped",[956]],[[120674,120674],"mapped",[957]],[[120675,120675],"mapped",[958]],[[120676,120676],"mapped",[959]],[[120677,120677],"mapped",[960]],[[120678,120678],"mapped",[961]],[[120679,120679],"mapped",[952]],[[120680,120680],"mapped",[963]],[[120681,120681],"mapped",[964]],[[120682,120682],"mapped",[965]],[[120683,120683],"mapped",[966]],[[120684,120684],"mapped",[967]],[[120685,120685],"mapped",[968]],[[120686,120686],"mapped",[969]],[[120687,120687],"mapped",[8711]],[[120688,120688],"mapped",[945]],[[120689,120689],"mapped",[946]],[[120690,120690],"mapped",[947]],[[120691,120691],"mapped",[948]],[[120692,120692],"mapped",[949]],[[120693,120693],"mapped",[950]],[[120694,120694],"mapped",[951]],[[120695,120695],"mapped",[952]],[[120696,120696],"mapped",[953]],[[120697,120697],"mapped",[954]],[[120698,120698],"mapped",[955]],[[120699,120699],"mapped",[956]],[[120700,120700],"mapped",[957]],[[120701,120701],"mapped",[958]],[[120702,120702],"mapped",[959]],[[120703,120703],"mapped",[960]],[[120704,120704],"mapped",[961]],[[120705,120706],"mapped",[963]],[[120707,120707],"mapped",[964]],[[120708,120708],"mapped",[965]],[[120709,120709],"mapped",[966]],[[120710,120710],"mapped",[967]],[[120711,120711],"mapped",[968]],[[120712,120712],"mapped",[969]],[[120713,120713],"mapped",[8706]],[[120714,120714],"mapped",[949]],[[120715,120715],"mapped",[952]],[[120716,120716],"mapped",[954]],[[120717,120717],"mapped",[966]],[[120718,120718],"mapped",[961]],[[120719,120719],"mapped",[960]],[[120720,120720],"mapped",[945]],[[120721,120721],"mapped",[946]],[[120722,120722],"mapped",[947]],[[120723,120723],"mapped",[948]],[[120724,120724],"mapped",[949]],[[120725,120725],"mapped",[950]],[[120726,120726],"mapped",[951]],[[120727,120727],"mapped",[952]],[[120728,120728],"mapped",[953]],[[120729,120729],"mapped",[954]],[[120730,120730],"mapped",[955]],[[120731,120731],"mapped",[956]],[[120732,120732],"mapped",[957]],[[120733,120733],"mapped",[958]],[[120734,120734],"mapped",[959]],[[120735,120735],"mapped",[960]],[[120736,120736],"mapped",[961]],[[120737,120737],"mapped",[952]],[[120738,120738],"mapped",[963]],[[120739,120739],"mapped",[964]],[[120740,120740],"mapped",[965]],[[120741,120741],"mapped",[966]],[[120742,120742],"mapped",[967]],[[120743,120743],"mapped",[968]],[[120744,120744],"mapped",[969]],[[120745,120745],"mapped",[8711]],[[120746,120746],"mapped",[945]],[[120747,120747],"mapped",[946]],[[120748,120748],"mapped",[947]],[[120749,120749],"mapped",[948]],[[120750,120750],"mapped",[949]],[[120751,120751],"mapped",[950]],[[120752,120752],"mapped",[951]],[[120753,120753],"mapped",[952]],[[120754,120754],"mapped",[953]],[[120755,120755],"mapped",[954]],[[120756,120756],"mapped",[955]],[[120757,120757],"mapped",[956]],[[120758,120758],"mapped",[957]],[[120759,120759],"mapped",[958]],[[120760,120760],"mapped",[959]],[[120761,120761],"mapped",[960]],[[120762,120762],"mapped",[961]],[[120763,120764],"mapped",[963]],[[120765,120765],"mapped",[964]],[[120766,120766],"mapped",[965]],[[120767,120767],"mapped",[966]],[[120768,120768],"mapped",[967]],[[120769,120769],"mapped",[968]],[[120770,120770],"mapped",[969]],[[120771,120771],"mapped",[8706]],[[120772,120772],"mapped",[949]],[[120773,120773],"mapped",[952]],[[120774,120774],"mapped",[954]],[[120775,120775],"mapped",[966]],[[120776,120776],"mapped",[961]],[[120777,120777],"mapped",[960]],[[120778,120779],"mapped",[989]],[[120780,120781],"disallowed"],[[120782,120782],"mapped",[48]],[[120783,120783],"mapped",[49]],[[120784,120784],"mapped",[50]],[[120785,120785],"mapped",[51]],[[120786,120786],"mapped",[52]],[[120787,120787],"mapped",[53]],[[120788,120788],"mapped",[54]],[[120789,120789],"mapped",[55]],[[120790,120790],"mapped",[56]],[[120791,120791],"mapped",[57]],[[120792,120792],"mapped",[48]],[[120793,120793],"mapped",[49]],[[120794,120794],"mapped",[50]],[[120795,120795],"mapped",[51]],[[120796,120796],"mapped",[52]],[[120797,120797],"mapped",[53]],[[120798,120798],"mapped",[54]],[[120799,120799],"mapped",[55]],[[120800,120800],"mapped",[56]],[[120801,120801],"mapped",[57]],[[120802,120802],"mapped",[48]],[[120803,120803],"mapped",[49]],[[120804,120804],"mapped",[50]],[[120805,120805],"mapped",[51]],[[120806,120806],"mapped",[52]],[[120807,120807],"mapped",[53]],[[120808,120808],"mapped",[54]],[[120809,120809],"mapped",[55]],[[120810,120810],"mapped",[56]],[[120811,120811],"mapped",[57]],[[120812,120812],"mapped",[48]],[[120813,120813],"mapped",[49]],[[120814,120814],"mapped",[50]],[[120815,120815],"mapped",[51]],[[120816,120816],"mapped",[52]],[[120817,120817],"mapped",[53]],[[120818,120818],"mapped",[54]],[[120819,120819],"mapped",[55]],[[120820,120820],"mapped",[56]],[[120821,120821],"mapped",[57]],[[120822,120822],"mapped",[48]],[[120823,120823],"mapped",[49]],[[120824,120824],"mapped",[50]],[[120825,120825],"mapped",[51]],[[120826,120826],"mapped",[52]],[[120827,120827],"mapped",[53]],[[120828,120828],"mapped",[54]],[[120829,120829],"mapped",[55]],[[120830,120830],"mapped",[56]],[[120831,120831],"mapped",[57]],[[120832,121343],"valid",[],"NV8"],[[121344,121398],"valid"],[[121399,121402],"valid",[],"NV8"],[[121403,121452],"valid"],[[121453,121460],"valid",[],"NV8"],[[121461,121461],"valid"],[[121462,121475],"valid",[],"NV8"],[[121476,121476],"valid"],[[121477,121483],"valid",[],"NV8"],[[121484,121498],"disallowed"],[[121499,121503],"valid"],[[121504,121504],"disallowed"],[[121505,121519],"valid"],[[121520,124927],"disallowed"],[[124928,125124],"valid"],[[125125,125126],"disallowed"],[[125127,125135],"valid",[],"NV8"],[[125136,125142],"valid"],[[125143,126463],"disallowed"],[[126464,126464],"mapped",[1575]],[[126465,126465],"mapped",[1576]],[[126466,126466],"mapped",[1580]],[[126467,126467],"mapped",[1583]],[[126468,126468],"disallowed"],[[126469,126469],"mapped",[1608]],[[126470,126470],"mapped",[1586]],[[126471,126471],"mapped",[1581]],[[126472,126472],"mapped",[1591]],[[126473,126473],"mapped",[1610]],[[126474,126474],"mapped",[1603]],[[126475,126475],"mapped",[1604]],[[126476,126476],"mapped",[1605]],[[126477,126477],"mapped",[1606]],[[126478,126478],"mapped",[1587]],[[126479,126479],"mapped",[1593]],[[126480,126480],"mapped",[1601]],[[126481,126481],"mapped",[1589]],[[126482,126482],"mapped",[1602]],[[126483,126483],"mapped",[1585]],[[126484,126484],"mapped",[1588]],[[126485,126485],"mapped",[1578]],[[126486,126486],"mapped",[1579]],[[126487,126487],"mapped",[1582]],[[126488,126488],"mapped",[1584]],[[126489,126489],"mapped",[1590]],[[126490,126490],"mapped",[1592]],[[126491,126491],"mapped",[1594]],[[126492,126492],"mapped",[1646]],[[126493,126493],"mapped",[1722]],[[126494,126494],"mapped",[1697]],[[126495,126495],"mapped",[1647]],[[126496,126496],"disallowed"],[[126497,126497],"mapped",[1576]],[[126498,126498],"mapped",[1580]],[[126499,126499],"disallowed"],[[126500,126500],"mapped",[1607]],[[126501,126502],"disallowed"],[[126503,126503],"mapped",[1581]],[[126504,126504],"disallowed"],[[126505,126505],"mapped",[1610]],[[126506,126506],"mapped",[1603]],[[126507,126507],"mapped",[1604]],[[126508,126508],"mapped",[1605]],[[126509,126509],"mapped",[1606]],[[126510,126510],"mapped",[1587]],[[126511,126511],"mapped",[1593]],[[126512,126512],"mapped",[1601]],[[126513,126513],"mapped",[1589]],[[126514,126514],"mapped",[1602]],[[126515,126515],"disallowed"],[[126516,126516],"mapped",[1588]],[[126517,126517],"mapped",[1578]],[[126518,126518],"mapped",[1579]],[[126519,126519],"mapped",[1582]],[[126520,126520],"disallowed"],[[126521,126521],"mapped",[1590]],[[126522,126522],"disallowed"],[[126523,126523],"mapped",[1594]],[[126524,126529],"disallowed"],[[126530,126530],"mapped",[1580]],[[126531,126534],"disallowed"],[[126535,126535],"mapped",[1581]],[[126536,126536],"disallowed"],[[126537,126537],"mapped",[1610]],[[126538,126538],"disallowed"],[[126539,126539],"mapped",[1604]],[[126540,126540],"disallowed"],[[126541,126541],"mapped",[1606]],[[126542,126542],"mapped",[1587]],[[126543,126543],"mapped",[1593]],[[126544,126544],"disallowed"],[[126545,126545],"mapped",[1589]],[[126546,126546],"mapped",[1602]],[[126547,126547],"disallowed"],[[126548,126548],"mapped",[1588]],[[126549,126550],"disallowed"],[[126551,126551],"mapped",[1582]],[[126552,126552],"disallowed"],[[126553,126553],"mapped",[1590]],[[126554,126554],"disallowed"],[[126555,126555],"mapped",[1594]],[[126556,126556],"disallowed"],[[126557,126557],"mapped",[1722]],[[126558,126558],"disallowed"],[[126559,126559],"mapped",[1647]],[[126560,126560],"disallowed"],[[126561,126561],"mapped",[1576]],[[126562,126562],"mapped",[1580]],[[126563,126563],"disallowed"],[[126564,126564],"mapped",[1607]],[[126565,126566],"disallowed"],[[126567,126567],"mapped",[1581]],[[126568,126568],"mapped",[1591]],[[126569,126569],"mapped",[1610]],[[126570,126570],"mapped",[1603]],[[126571,126571],"disallowed"],[[126572,126572],"mapped",[1605]],[[126573,126573],"mapped",[1606]],[[126574,126574],"mapped",[1587]],[[126575,126575],"mapped",[1593]],[[126576,126576],"mapped",[1601]],[[126577,126577],"mapped",[1589]],[[126578,126578],"mapped",[1602]],[[126579,126579],"disallowed"],[[126580,126580],"mapped",[1588]],[[126581,126581],"mapped",[1578]],[[126582,126582],"mapped",[1579]],[[126583,126583],"mapped",[1582]],[[126584,126584],"disallowed"],[[126585,126585],"mapped",[1590]],[[126586,126586],"mapped",[1592]],[[126587,126587],"mapped",[1594]],[[126588,126588],"mapped",[1646]],[[126589,126589],"disallowed"],[[126590,126590],"mapped",[1697]],[[126591,126591],"disallowed"],[[126592,126592],"mapped",[1575]],[[126593,126593],"mapped",[1576]],[[126594,126594],"mapped",[1580]],[[126595,126595],"mapped",[1583]],[[126596,126596],"mapped",[1607]],[[126597,126597],"mapped",[1608]],[[126598,126598],"mapped",[1586]],[[126599,126599],"mapped",[1581]],[[126600,126600],"mapped",[1591]],[[126601,126601],"mapped",[1610]],[[126602,126602],"disallowed"],[[126603,126603],"mapped",[1604]],[[126604,126604],"mapped",[1605]],[[126605,126605],"mapped",[1606]],[[126606,126606],"mapped",[1587]],[[126607,126607],"mapped",[1593]],[[126608,126608],"mapped",[1601]],[[126609,126609],"mapped",[1589]],[[126610,126610],"mapped",[1602]],[[126611,126611],"mapped",[1585]],[[126612,126612],"mapped",[1588]],[[126613,126613],"mapped",[1578]],[[126614,126614],"mapped",[1579]],[[126615,126615],"mapped",[1582]],[[126616,126616],"mapped",[1584]],[[126617,126617],"mapped",[1590]],[[126618,126618],"mapped",[1592]],[[126619,126619],"mapped",[1594]],[[126620,126624],"disallowed"],[[126625,126625],"mapped",[1576]],[[126626,126626],"mapped",[1580]],[[126627,126627],"mapped",[1583]],[[126628,126628],"disallowed"],[[126629,126629],"mapped",[1608]],[[126630,126630],"mapped",[1586]],[[126631,126631],"mapped",[1581]],[[126632,126632],"mapped",[1591]],[[126633,126633],"mapped",[1610]],[[126634,126634],"disallowed"],[[126635,126635],"mapped",[1604]],[[126636,126636],"mapped",[1605]],[[126637,126637],"mapped",[1606]],[[126638,126638],"mapped",[1587]],[[126639,126639],"mapped",[1593]],[[126640,126640],"mapped",[1601]],[[126641,126641],"mapped",[1589]],[[126642,126642],"mapped",[1602]],[[126643,126643],"mapped",[1585]],[[126644,126644],"mapped",[1588]],[[126645,126645],"mapped",[1578]],[[126646,126646],"mapped",[1579]],[[126647,126647],"mapped",[1582]],[[126648,126648],"mapped",[1584]],[[126649,126649],"mapped",[1590]],[[126650,126650],"mapped",[1592]],[[126651,126651],"mapped",[1594]],[[126652,126703],"disallowed"],[[126704,126705],"valid",[],"NV8"],[[126706,126975],"disallowed"],[[126976,127019],"valid",[],"NV8"],[[127020,127023],"disallowed"],[[127024,127123],"valid",[],"NV8"],[[127124,127135],"disallowed"],[[127136,127150],"valid",[],"NV8"],[[127151,127152],"disallowed"],[[127153,127166],"valid",[],"NV8"],[[127167,127167],"valid",[],"NV8"],[[127168,127168],"disallowed"],[[127169,127183],"valid",[],"NV8"],[[127184,127184],"disallowed"],[[127185,127199],"valid",[],"NV8"],[[127200,127221],"valid",[],"NV8"],[[127222,127231],"disallowed"],[[127232,127232],"disallowed"],[[127233,127233],"disallowed_STD3_mapped",[48,44]],[[127234,127234],"disallowed_STD3_mapped",[49,44]],[[127235,127235],"disallowed_STD3_mapped",[50,44]],[[127236,127236],"disallowed_STD3_mapped",[51,44]],[[127237,127237],"disallowed_STD3_mapped",[52,44]],[[127238,127238],"disallowed_STD3_mapped",[53,44]],[[127239,127239],"disallowed_STD3_mapped",[54,44]],[[127240,127240],"disallowed_STD3_mapped",[55,44]],[[127241,127241],"disallowed_STD3_mapped",[56,44]],[[127242,127242],"disallowed_STD3_mapped",[57,44]],[[127243,127244],"valid",[],"NV8"],[[127245,127247],"disallowed"],[[127248,127248],"disallowed_STD3_mapped",[40,97,41]],[[127249,127249],"disallowed_STD3_mapped",[40,98,41]],[[127250,127250],"disallowed_STD3_mapped",[40,99,41]],[[127251,127251],"disallowed_STD3_mapped",[40,100,41]],[[127252,127252],"disallowed_STD3_mapped",[40,101,41]],[[127253,127253],"disallowed_STD3_mapped",[40,102,41]],[[127254,127254],"disallowed_STD3_mapped",[40,103,41]],[[127255,127255],"disallowed_STD3_mapped",[40,104,41]],[[127256,127256],"disallowed_STD3_mapped",[40,105,41]],[[127257,127257],"disallowed_STD3_mapped",[40,106,41]],[[127258,127258],"disallowed_STD3_mapped",[40,107,41]],[[127259,127259],"disallowed_STD3_mapped",[40,108,41]],[[127260,127260],"disallowed_STD3_mapped",[40,109,41]],[[127261,127261],"disallowed_STD3_mapped",[40,110,41]],[[127262,127262],"disallowed_STD3_mapped",[40,111,41]],[[127263,127263],"disallowed_STD3_mapped",[40,112,41]],[[127264,127264],"disallowed_STD3_mapped",[40,113,41]],[[127265,127265],"disallowed_STD3_mapped",[40,114,41]],[[127266,127266],"disallowed_STD3_mapped",[40,115,41]],[[127267,127267],"disallowed_STD3_mapped",[40,116,41]],[[127268,127268],"disallowed_STD3_mapped",[40,117,41]],[[127269,127269],"disallowed_STD3_mapped",[40,118,41]],[[127270,127270],"disallowed_STD3_mapped",[40,119,41]],[[127271,127271],"disallowed_STD3_mapped",[40,120,41]],[[127272,127272],"disallowed_STD3_mapped",[40,121,41]],[[127273,127273],"disallowed_STD3_mapped",[40,122,41]],[[127274,127274],"mapped",[12308,115,12309]],[[127275,127275],"mapped",[99]],[[127276,127276],"mapped",[114]],[[127277,127277],"mapped",[99,100]],[[127278,127278],"mapped",[119,122]],[[127279,127279],"disallowed"],[[127280,127280],"mapped",[97]],[[127281,127281],"mapped",[98]],[[127282,127282],"mapped",[99]],[[127283,127283],"mapped",[100]],[[127284,127284],"mapped",[101]],[[127285,127285],"mapped",[102]],[[127286,127286],"mapped",[103]],[[127287,127287],"mapped",[104]],[[127288,127288],"mapped",[105]],[[127289,127289],"mapped",[106]],[[127290,127290],"mapped",[107]],[[127291,127291],"mapped",[108]],[[127292,127292],"mapped",[109]],[[127293,127293],"mapped",[110]],[[127294,127294],"mapped",[111]],[[127295,127295],"mapped",[112]],[[127296,127296],"mapped",[113]],[[127297,127297],"mapped",[114]],[[127298,127298],"mapped",[115]],[[127299,127299],"mapped",[116]],[[127300,127300],"mapped",[117]],[[127301,127301],"mapped",[118]],[[127302,127302],"mapped",[119]],[[127303,127303],"mapped",[120]],[[127304,127304],"mapped",[121]],[[127305,127305],"mapped",[122]],[[127306,127306],"mapped",[104,118]],[[127307,127307],"mapped",[109,118]],[[127308,127308],"mapped",[115,100]],[[127309,127309],"mapped",[115,115]],[[127310,127310],"mapped",[112,112,118]],[[127311,127311],"mapped",[119,99]],[[127312,127318],"valid",[],"NV8"],[[127319,127319],"valid",[],"NV8"],[[127320,127326],"valid",[],"NV8"],[[127327,127327],"valid",[],"NV8"],[[127328,127337],"valid",[],"NV8"],[[127338,127338],"mapped",[109,99]],[[127339,127339],"mapped",[109,100]],[[127340,127343],"disallowed"],[[127344,127352],"valid",[],"NV8"],[[127353,127353],"valid",[],"NV8"],[[127354,127354],"valid",[],"NV8"],[[127355,127356],"valid",[],"NV8"],[[127357,127358],"valid",[],"NV8"],[[127359,127359],"valid",[],"NV8"],[[127360,127369],"valid",[],"NV8"],[[127370,127373],"valid",[],"NV8"],[[127374,127375],"valid",[],"NV8"],[[127376,127376],"mapped",[100,106]],[[127377,127386],"valid",[],"NV8"],[[127387,127461],"disallowed"],[[127462,127487],"valid",[],"NV8"],[[127488,127488],"mapped",[12411,12363]],[[127489,127489],"mapped",[12467,12467]],[[127490,127490],"mapped",[12469]],[[127491,127503],"disallowed"],[[127504,127504],"mapped",[25163]],[[127505,127505],"mapped",[23383]],[[127506,127506],"mapped",[21452]],[[127507,127507],"mapped",[12487]],[[127508,127508],"mapped",[20108]],[[127509,127509],"mapped",[22810]],[[127510,127510],"mapped",[35299]],[[127511,127511],"mapped",[22825]],[[127512,127512],"mapped",[20132]],[[127513,127513],"mapped",[26144]],[[127514,127514],"mapped",[28961]],[[127515,127515],"mapped",[26009]],[[127516,127516],"mapped",[21069]],[[127517,127517],"mapped",[24460]],[[127518,127518],"mapped",[20877]],[[127519,127519],"mapped",[26032]],[[127520,127520],"mapped",[21021]],[[127521,127521],"mapped",[32066]],[[127522,127522],"mapped",[29983]],[[127523,127523],"mapped",[36009]],[[127524,127524],"mapped",[22768]],[[127525,127525],"mapped",[21561]],[[127526,127526],"mapped",[28436]],[[127527,127527],"mapped",[25237]],[[127528,127528],"mapped",[25429]],[[127529,127529],"mapped",[19968]],[[127530,127530],"mapped",[19977]],[[127531,127531],"mapped",[36938]],[[127532,127532],"mapped",[24038]],[[127533,127533],"mapped",[20013]],[[127534,127534],"mapped",[21491]],[[127535,127535],"mapped",[25351]],[[127536,127536],"mapped",[36208]],[[127537,127537],"mapped",[25171]],[[127538,127538],"mapped",[31105]],[[127539,127539],"mapped",[31354]],[[127540,127540],"mapped",[21512]],[[127541,127541],"mapped",[28288]],[[127542,127542],"mapped",[26377]],[[127543,127543],"mapped",[26376]],[[127544,127544],"mapped",[30003]],[[127545,127545],"mapped",[21106]],[[127546,127546],"mapped",[21942]],[[127547,127551],"disallowed"],[[127552,127552],"mapped",[12308,26412,12309]],[[127553,127553],"mapped",[12308,19977,12309]],[[127554,127554],"mapped",[12308,20108,12309]],[[127555,127555],"mapped",[12308,23433,12309]],[[127556,127556],"mapped",[12308,28857,12309]],[[127557,127557],"mapped",[12308,25171,12309]],[[127558,127558],"mapped",[12308,30423,12309]],[[127559,127559],"mapped",[12308,21213,12309]],[[127560,127560],"mapped",[12308,25943,12309]],[[127561,127567],"disallowed"],[[127568,127568],"mapped",[24471]],[[127569,127569],"mapped",[21487]],[[127570,127743],"disallowed"],[[127744,127776],"valid",[],"NV8"],[[127777,127788],"valid",[],"NV8"],[[127789,127791],"valid",[],"NV8"],[[127792,127797],"valid",[],"NV8"],[[127798,127798],"valid",[],"NV8"],[[127799,127868],"valid",[],"NV8"],[[127869,127869],"valid",[],"NV8"],[[127870,127871],"valid",[],"NV8"],[[127872,127891],"valid",[],"NV8"],[[127892,127903],"valid",[],"NV8"],[[127904,127940],"valid",[],"NV8"],[[127941,127941],"valid",[],"NV8"],[[127942,127946],"valid",[],"NV8"],[[127947,127950],"valid",[],"NV8"],[[127951,127955],"valid",[],"NV8"],[[127956,127967],"valid",[],"NV8"],[[127968,127984],"valid",[],"NV8"],[[127985,127991],"valid",[],"NV8"],[[127992,127999],"valid",[],"NV8"],[[128000,128062],"valid",[],"NV8"],[[128063,128063],"valid",[],"NV8"],[[128064,128064],"valid",[],"NV8"],[[128065,128065],"valid",[],"NV8"],[[128066,128247],"valid",[],"NV8"],[[128248,128248],"valid",[],"NV8"],[[128249,128252],"valid",[],"NV8"],[[128253,128254],"valid",[],"NV8"],[[128255,128255],"valid",[],"NV8"],[[128256,128317],"valid",[],"NV8"],[[128318,128319],"valid",[],"NV8"],[[128320,128323],"valid",[],"NV8"],[[128324,128330],"valid",[],"NV8"],[[128331,128335],"valid",[],"NV8"],[[128336,128359],"valid",[],"NV8"],[[128360,128377],"valid",[],"NV8"],[[128378,128378],"disallowed"],[[128379,128419],"valid",[],"NV8"],[[128420,128420],"disallowed"],[[128421,128506],"valid",[],"NV8"],[[128507,128511],"valid",[],"NV8"],[[128512,128512],"valid",[],"NV8"],[[128513,128528],"valid",[],"NV8"],[[128529,128529],"valid",[],"NV8"],[[128530,128532],"valid",[],"NV8"],[[128533,128533],"valid",[],"NV8"],[[128534,128534],"valid",[],"NV8"],[[128535,128535],"valid",[],"NV8"],[[128536,128536],"valid",[],"NV8"],[[128537,128537],"valid",[],"NV8"],[[128538,128538],"valid",[],"NV8"],[[128539,128539],"valid",[],"NV8"],[[128540,128542],"valid",[],"NV8"],[[128543,128543],"valid",[],"NV8"],[[128544,128549],"valid",[],"NV8"],[[128550,128551],"valid",[],"NV8"],[[128552,128555],"valid",[],"NV8"],[[128556,128556],"valid",[],"NV8"],[[128557,128557],"valid",[],"NV8"],[[128558,128559],"valid",[],"NV8"],[[128560,128563],"valid",[],"NV8"],[[128564,128564],"valid",[],"NV8"],[[128565,128576],"valid",[],"NV8"],[[128577,128578],"valid",[],"NV8"],[[128579,128580],"valid",[],"NV8"],[[128581,128591],"valid",[],"NV8"],[[128592,128639],"valid",[],"NV8"],[[128640,128709],"valid",[],"NV8"],[[128710,128719],"valid",[],"NV8"],[[128720,128720],"valid",[],"NV8"],[[128721,128735],"disallowed"],[[128736,128748],"valid",[],"NV8"],[[128749,128751],"disallowed"],[[128752,128755],"valid",[],"NV8"],[[128756,128767],"disallowed"],[[128768,128883],"valid",[],"NV8"],[[128884,128895],"disallowed"],[[128896,128980],"valid",[],"NV8"],[[128981,129023],"disallowed"],[[129024,129035],"valid",[],"NV8"],[[129036,129039],"disallowed"],[[129040,129095],"valid",[],"NV8"],[[129096,129103],"disallowed"],[[129104,129113],"valid",[],"NV8"],[[129114,129119],"disallowed"],[[129120,129159],"valid",[],"NV8"],[[129160,129167],"disallowed"],[[129168,129197],"valid",[],"NV8"],[[129198,129295],"disallowed"],[[129296,129304],"valid",[],"NV8"],[[129305,129407],"disallowed"],[[129408,129412],"valid",[],"NV8"],[[129413,129471],"disallowed"],[[129472,129472],"valid",[],"NV8"],[[129473,131069],"disallowed"],[[131070,131071],"disallowed"],[[131072,173782],"valid"],[[173783,173823],"disallowed"],[[173824,177972],"valid"],[[177973,177983],"disallowed"],[[177984,178205],"valid"],[[178206,178207],"disallowed"],[[178208,183969],"valid"],[[183970,194559],"disallowed"],[[194560,194560],"mapped",[20029]],[[194561,194561],"mapped",[20024]],[[194562,194562],"mapped",[20033]],[[194563,194563],"mapped",[131362]],[[194564,194564],"mapped",[20320]],[[194565,194565],"mapped",[20398]],[[194566,194566],"mapped",[20411]],[[194567,194567],"mapped",[20482]],[[194568,194568],"mapped",[20602]],[[194569,194569],"mapped",[20633]],[[194570,194570],"mapped",[20711]],[[194571,194571],"mapped",[20687]],[[194572,194572],"mapped",[13470]],[[194573,194573],"mapped",[132666]],[[194574,194574],"mapped",[20813]],[[194575,194575],"mapped",[20820]],[[194576,194576],"mapped",[20836]],[[194577,194577],"mapped",[20855]],[[194578,194578],"mapped",[132380]],[[194579,194579],"mapped",[13497]],[[194580,194580],"mapped",[20839]],[[194581,194581],"mapped",[20877]],[[194582,194582],"mapped",[132427]],[[194583,194583],"mapped",[20887]],[[194584,194584],"mapped",[20900]],[[194585,194585],"mapped",[20172]],[[194586,194586],"mapped",[20908]],[[194587,194587],"mapped",[20917]],[[194588,194588],"mapped",[168415]],[[194589,194589],"mapped",[20981]],[[194590,194590],"mapped",[20995]],[[194591,194591],"mapped",[13535]],[[194592,194592],"mapped",[21051]],[[194593,194593],"mapped",[21062]],[[194594,194594],"mapped",[21106]],[[194595,194595],"mapped",[21111]],[[194596,194596],"mapped",[13589]],[[194597,194597],"mapped",[21191]],[[194598,194598],"mapped",[21193]],[[194599,194599],"mapped",[21220]],[[194600,194600],"mapped",[21242]],[[194601,194601],"mapped",[21253]],[[194602,194602],"mapped",[21254]],[[194603,194603],"mapped",[21271]],[[194604,194604],"mapped",[21321]],[[194605,194605],"mapped",[21329]],[[194606,194606],"mapped",[21338]],[[194607,194607],"mapped",[21363]],[[194608,194608],"mapped",[21373]],[[194609,194611],"mapped",[21375]],[[194612,194612],"mapped",[133676]],[[194613,194613],"mapped",[28784]],[[194614,194614],"mapped",[21450]],[[194615,194615],"mapped",[21471]],[[194616,194616],"mapped",[133987]],[[194617,194617],"mapped",[21483]],[[194618,194618],"mapped",[21489]],[[194619,194619],"mapped",[21510]],[[194620,194620],"mapped",[21662]],[[194621,194621],"mapped",[21560]],[[194622,194622],"mapped",[21576]],[[194623,194623],"mapped",[21608]],[[194624,194624],"mapped",[21666]],[[194625,194625],"mapped",[21750]],[[194626,194626],"mapped",[21776]],[[194627,194627],"mapped",[21843]],[[194628,194628],"mapped",[21859]],[[194629,194630],"mapped",[21892]],[[194631,194631],"mapped",[21913]],[[194632,194632],"mapped",[21931]],[[194633,194633],"mapped",[21939]],[[194634,194634],"mapped",[21954]],[[194635,194635],"mapped",[22294]],[[194636,194636],"mapped",[22022]],[[194637,194637],"mapped",[22295]],[[194638,194638],"mapped",[22097]],[[194639,194639],"mapped",[22132]],[[194640,194640],"mapped",[20999]],[[194641,194641],"mapped",[22766]],[[194642,194642],"mapped",[22478]],[[194643,194643],"mapped",[22516]],[[194644,194644],"mapped",[22541]],[[194645,194645],"mapped",[22411]],[[194646,194646],"mapped",[22578]],[[194647,194647],"mapped",[22577]],[[194648,194648],"mapped",[22700]],[[194649,194649],"mapped",[136420]],[[194650,194650],"mapped",[22770]],[[194651,194651],"mapped",[22775]],[[194652,194652],"mapped",[22790]],[[194653,194653],"mapped",[22810]],[[194654,194654],"mapped",[22818]],[[194655,194655],"mapped",[22882]],[[194656,194656],"mapped",[136872]],[[194657,194657],"mapped",[136938]],[[194658,194658],"mapped",[23020]],[[194659,194659],"mapped",[23067]],[[194660,194660],"mapped",[23079]],[[194661,194661],"mapped",[23000]],[[194662,194662],"mapped",[23142]],[[194663,194663],"mapped",[14062]],[[194664,194664],"disallowed"],[[194665,194665],"mapped",[23304]],[[194666,194667],"mapped",[23358]],[[194668,194668],"mapped",[137672]],[[194669,194669],"mapped",[23491]],[[194670,194670],"mapped",[23512]],[[194671,194671],"mapped",[23527]],[[194672,194672],"mapped",[23539]],[[194673,194673],"mapped",[138008]],[[194674,194674],"mapped",[23551]],[[194675,194675],"mapped",[23558]],[[194676,194676],"disallowed"],[[194677,194677],"mapped",[23586]],[[194678,194678],"mapped",[14209]],[[194679,194679],"mapped",[23648]],[[194680,194680],"mapped",[23662]],[[194681,194681],"mapped",[23744]],[[194682,194682],"mapped",[23693]],[[194683,194683],"mapped",[138724]],[[194684,194684],"mapped",[23875]],[[194685,194685],"mapped",[138726]],[[194686,194686],"mapped",[23918]],[[194687,194687],"mapped",[23915]],[[194688,194688],"mapped",[23932]],[[194689,194689],"mapped",[24033]],[[194690,194690],"mapped",[24034]],[[194691,194691],"mapped",[14383]],[[194692,194692],"mapped",[24061]],[[194693,194693],"mapped",[24104]],[[194694,194694],"mapped",[24125]],[[194695,194695],"mapped",[24169]],[[194696,194696],"mapped",[14434]],[[194697,194697],"mapped",[139651]],[[194698,194698],"mapped",[14460]],[[194699,194699],"mapped",[24240]],[[194700,194700],"mapped",[24243]],[[194701,194701],"mapped",[24246]],[[194702,194702],"mapped",[24266]],[[194703,194703],"mapped",[172946]],[[194704,194704],"mapped",[24318]],[[194705,194706],"mapped",[140081]],[[194707,194707],"mapped",[33281]],[[194708,194709],"mapped",[24354]],[[194710,194710],"mapped",[14535]],[[194711,194711],"mapped",[144056]],[[194712,194712],"mapped",[156122]],[[194713,194713],"mapped",[24418]],[[194714,194714],"mapped",[24427]],[[194715,194715],"mapped",[14563]],[[194716,194716],"mapped",[24474]],[[194717,194717],"mapped",[24525]],[[194718,194718],"mapped",[24535]],[[194719,194719],"mapped",[24569]],[[194720,194720],"mapped",[24705]],[[194721,194721],"mapped",[14650]],[[194722,194722],"mapped",[14620]],[[194723,194723],"mapped",[24724]],[[194724,194724],"mapped",[141012]],[[194725,194725],"mapped",[24775]],[[194726,194726],"mapped",[24904]],[[194727,194727],"mapped",[24908]],[[194728,194728],"mapped",[24910]],[[194729,194729],"mapped",[24908]],[[194730,194730],"mapped",[24954]],[[194731,194731],"mapped",[24974]],[[194732,194732],"mapped",[25010]],[[194733,194733],"mapped",[24996]],[[194734,194734],"mapped",[25007]],[[194735,194735],"mapped",[25054]],[[194736,194736],"mapped",[25074]],[[194737,194737],"mapped",[25078]],[[194738,194738],"mapped",[25104]],[[194739,194739],"mapped",[25115]],[[194740,194740],"mapped",[25181]],[[194741,194741],"mapped",[25265]],[[194742,194742],"mapped",[25300]],[[194743,194743],"mapped",[25424]],[[194744,194744],"mapped",[142092]],[[194745,194745],"mapped",[25405]],[[194746,194746],"mapped",[25340]],[[194747,194747],"mapped",[25448]],[[194748,194748],"mapped",[25475]],[[194749,194749],"mapped",[25572]],[[194750,194750],"mapped",[142321]],[[194751,194751],"mapped",[25634]],[[194752,194752],"mapped",[25541]],[[194753,194753],"mapped",[25513]],[[194754,194754],"mapped",[14894]],[[194755,194755],"mapped",[25705]],[[194756,194756],"mapped",[25726]],[[194757,194757],"mapped",[25757]],[[194758,194758],"mapped",[25719]],[[194759,194759],"mapped",[14956]],[[194760,194760],"mapped",[25935]],[[194761,194761],"mapped",[25964]],[[194762,194762],"mapped",[143370]],[[194763,194763],"mapped",[26083]],[[194764,194764],"mapped",[26360]],[[194765,194765],"mapped",[26185]],[[194766,194766],"mapped",[15129]],[[194767,194767],"mapped",[26257]],[[194768,194768],"mapped",[15112]],[[194769,194769],"mapped",[15076]],[[194770,194770],"mapped",[20882]],[[194771,194771],"mapped",[20885]],[[194772,194772],"mapped",[26368]],[[194773,194773],"mapped",[26268]],[[194774,194774],"mapped",[32941]],[[194775,194775],"mapped",[17369]],[[194776,194776],"mapped",[26391]],[[194777,194777],"mapped",[26395]],[[194778,194778],"mapped",[26401]],[[194779,194779],"mapped",[26462]],[[194780,194780],"mapped",[26451]],[[194781,194781],"mapped",[144323]],[[194782,194782],"mapped",[15177]],[[194783,194783],"mapped",[26618]],[[194784,194784],"mapped",[26501]],[[194785,194785],"mapped",[26706]],[[194786,194786],"mapped",[26757]],[[194787,194787],"mapped",[144493]],[[194788,194788],"mapped",[26766]],[[194789,194789],"mapped",[26655]],[[194790,194790],"mapped",[26900]],[[194791,194791],"mapped",[15261]],[[194792,194792],"mapped",[26946]],[[194793,194793],"mapped",[27043]],[[194794,194794],"mapped",[27114]],[[194795,194795],"mapped",[27304]],[[194796,194796],"mapped",[145059]],[[194797,194797],"mapped",[27355]],[[194798,194798],"mapped",[15384]],[[194799,194799],"mapped",[27425]],[[194800,194800],"mapped",[145575]],[[194801,194801],"mapped",[27476]],[[194802,194802],"mapped",[15438]],[[194803,194803],"mapped",[27506]],[[194804,194804],"mapped",[27551]],[[194805,194805],"mapped",[27578]],[[194806,194806],"mapped",[27579]],[[194807,194807],"mapped",[146061]],[[194808,194808],"mapped",[138507]],[[194809,194809],"mapped",[146170]],[[194810,194810],"mapped",[27726]],[[194811,194811],"mapped",[146620]],[[194812,194812],"mapped",[27839]],[[194813,194813],"mapped",[27853]],[[194814,194814],"mapped",[27751]],[[194815,194815],"mapped",[27926]],[[194816,194816],"mapped",[27966]],[[194817,194817],"mapped",[28023]],[[194818,194818],"mapped",[27969]],[[194819,194819],"mapped",[28009]],[[194820,194820],"mapped",[28024]],[[194821,194821],"mapped",[28037]],[[194822,194822],"mapped",[146718]],[[194823,194823],"mapped",[27956]],[[194824,194824],"mapped",[28207]],[[194825,194825],"mapped",[28270]],[[194826,194826],"mapped",[15667]],[[194827,194827],"mapped",[28363]],[[194828,194828],"mapped",[28359]],[[194829,194829],"mapped",[147153]],[[194830,194830],"mapped",[28153]],[[194831,194831],"mapped",[28526]],[[194832,194832],"mapped",[147294]],[[194833,194833],"mapped",[147342]],[[194834,194834],"mapped",[28614]],[[194835,194835],"mapped",[28729]],[[194836,194836],"mapped",[28702]],[[194837,194837],"mapped",[28699]],[[194838,194838],"mapped",[15766]],[[194839,194839],"mapped",[28746]],[[194840,194840],"mapped",[28797]],[[194841,194841],"mapped",[28791]],[[194842,194842],"mapped",[28845]],[[194843,194843],"mapped",[132389]],[[194844,194844],"mapped",[28997]],[[194845,194845],"mapped",[148067]],[[194846,194846],"mapped",[29084]],[[194847,194847],"disallowed"],[[194848,194848],"mapped",[29224]],[[194849,194849],"mapped",[29237]],[[194850,194850],"mapped",[29264]],[[194851,194851],"mapped",[149000]],[[194852,194852],"mapped",[29312]],[[194853,194853],"mapped",[29333]],[[194854,194854],"mapped",[149301]],[[194855,194855],"mapped",[149524]],[[194856,194856],"mapped",[29562]],[[194857,194857],"mapped",[29579]],[[194858,194858],"mapped",[16044]],[[194859,194859],"mapped",[29605]],[[194860,194861],"mapped",[16056]],[[194862,194862],"mapped",[29767]],[[194863,194863],"mapped",[29788]],[[194864,194864],"mapped",[29809]],[[194865,194865],"mapped",[29829]],[[194866,194866],"mapped",[29898]],[[194867,194867],"mapped",[16155]],[[194868,194868],"mapped",[29988]],[[194869,194869],"mapped",[150582]],[[194870,194870],"mapped",[30014]],[[194871,194871],"mapped",[150674]],[[194872,194872],"mapped",[30064]],[[194873,194873],"mapped",[139679]],[[194874,194874],"mapped",[30224]],[[194875,194875],"mapped",[151457]],[[194876,194876],"mapped",[151480]],[[194877,194877],"mapped",[151620]],[[194878,194878],"mapped",[16380]],[[194879,194879],"mapped",[16392]],[[194880,194880],"mapped",[30452]],[[194881,194881],"mapped",[151795]],[[194882,194882],"mapped",[151794]],[[194883,194883],"mapped",[151833]],[[194884,194884],"mapped",[151859]],[[194885,194885],"mapped",[30494]],[[194886,194887],"mapped",[30495]],[[194888,194888],"mapped",[30538]],[[194889,194889],"mapped",[16441]],[[194890,194890],"mapped",[30603]],[[194891,194891],"mapped",[16454]],[[194892,194892],"mapped",[16534]],[[194893,194893],"mapped",[152605]],[[194894,194894],"mapped",[30798]],[[194895,194895],"mapped",[30860]],[[194896,194896],"mapped",[30924]],[[194897,194897],"mapped",[16611]],[[194898,194898],"mapped",[153126]],[[194899,194899],"mapped",[31062]],[[194900,194900],"mapped",[153242]],[[194901,194901],"mapped",[153285]],[[194902,194902],"mapped",[31119]],[[194903,194903],"mapped",[31211]],[[194904,194904],"mapped",[16687]],[[194905,194905],"mapped",[31296]],[[194906,194906],"mapped",[31306]],[[194907,194907],"mapped",[31311]],[[194908,194908],"mapped",[153980]],[[194909,194910],"mapped",[154279]],[[194911,194911],"disallowed"],[[194912,194912],"mapped",[16898]],[[194913,194913],"mapped",[154539]],[[194914,194914],"mapped",[31686]],[[194915,194915],"mapped",[31689]],[[194916,194916],"mapped",[16935]],[[194917,194917],"mapped",[154752]],[[194918,194918],"mapped",[31954]],[[194919,194919],"mapped",[17056]],[[194920,194920],"mapped",[31976]],[[194921,194921],"mapped",[31971]],[[194922,194922],"mapped",[32000]],[[194923,194923],"mapped",[155526]],[[194924,194924],"mapped",[32099]],[[194925,194925],"mapped",[17153]],[[194926,194926],"mapped",[32199]],[[194927,194927],"mapped",[32258]],[[194928,194928],"mapped",[32325]],[[194929,194929],"mapped",[17204]],[[194930,194930],"mapped",[156200]],[[194931,194931],"mapped",[156231]],[[194932,194932],"mapped",[17241]],[[194933,194933],"mapped",[156377]],[[194934,194934],"mapped",[32634]],[[194935,194935],"mapped",[156478]],[[194936,194936],"mapped",[32661]],[[194937,194937],"mapped",[32762]],[[194938,194938],"mapped",[32773]],[[194939,194939],"mapped",[156890]],[[194940,194940],"mapped",[156963]],[[194941,194941],"mapped",[32864]],[[194942,194942],"mapped",[157096]],[[194943,194943],"mapped",[32880]],[[194944,194944],"mapped",[144223]],[[194945,194945],"mapped",[17365]],[[194946,194946],"mapped",[32946]],[[194947,194947],"mapped",[33027]],[[194948,194948],"mapped",[17419]],[[194949,194949],"mapped",[33086]],[[194950,194950],"mapped",[23221]],[[194951,194951],"mapped",[157607]],[[194952,194952],"mapped",[157621]],[[194953,194953],"mapped",[144275]],[[194954,194954],"mapped",[144284]],[[194955,194955],"mapped",[33281]],[[194956,194956],"mapped",[33284]],[[194957,194957],"mapped",[36766]],[[194958,194958],"mapped",[17515]],[[194959,194959],"mapped",[33425]],[[194960,194960],"mapped",[33419]],[[194961,194961],"mapped",[33437]],[[194962,194962],"mapped",[21171]],[[194963,194963],"mapped",[33457]],[[194964,194964],"mapped",[33459]],[[194965,194965],"mapped",[33469]],[[194966,194966],"mapped",[33510]],[[194967,194967],"mapped",[158524]],[[194968,194968],"mapped",[33509]],[[194969,194969],"mapped",[33565]],[[194970,194970],"mapped",[33635]],[[194971,194971],"mapped",[33709]],[[194972,194972],"mapped",[33571]],[[194973,194973],"mapped",[33725]],[[194974,194974],"mapped",[33767]],[[194975,194975],"mapped",[33879]],[[194976,194976],"mapped",[33619]],[[194977,194977],"mapped",[33738]],[[194978,194978],"mapped",[33740]],[[194979,194979],"mapped",[33756]],[[194980,194980],"mapped",[158774]],[[194981,194981],"mapped",[159083]],[[194982,194982],"mapped",[158933]],[[194983,194983],"mapped",[17707]],[[194984,194984],"mapped",[34033]],[[194985,194985],"mapped",[34035]],[[194986,194986],"mapped",[34070]],[[194987,194987],"mapped",[160714]],[[194988,194988],"mapped",[34148]],[[194989,194989],"mapped",[159532]],[[194990,194990],"mapped",[17757]],[[194991,194991],"mapped",[17761]],[[194992,194992],"mapped",[159665]],[[194993,194993],"mapped",[159954]],[[194994,194994],"mapped",[17771]],[[194995,194995],"mapped",[34384]],[[194996,194996],"mapped",[34396]],[[194997,194997],"mapped",[34407]],[[194998,194998],"mapped",[34409]],[[194999,194999],"mapped",[34473]],[[195000,195000],"mapped",[34440]],[[195001,195001],"mapped",[34574]],[[195002,195002],"mapped",[34530]],[[195003,195003],"mapped",[34681]],[[195004,195004],"mapped",[34600]],[[195005,195005],"mapped",[34667]],[[195006,195006],"mapped",[34694]],[[195007,195007],"disallowed"],[[195008,195008],"mapped",[34785]],[[195009,195009],"mapped",[34817]],[[195010,195010],"mapped",[17913]],[[195011,195011],"mapped",[34912]],[[195012,195012],"mapped",[34915]],[[195013,195013],"mapped",[161383]],[[195014,195014],"mapped",[35031]],[[195015,195015],"mapped",[35038]],[[195016,195016],"mapped",[17973]],[[195017,195017],"mapped",[35066]],[[195018,195018],"mapped",[13499]],[[195019,195019],"mapped",[161966]],[[195020,195020],"mapped",[162150]],[[195021,195021],"mapped",[18110]],[[195022,195022],"mapped",[18119]],[[195023,195023],"mapped",[35488]],[[195024,195024],"mapped",[35565]],[[195025,195025],"mapped",[35722]],[[195026,195026],"mapped",[35925]],[[195027,195027],"mapped",[162984]],[[195028,195028],"mapped",[36011]],[[195029,195029],"mapped",[36033]],[[195030,195030],"mapped",[36123]],[[195031,195031],"mapped",[36215]],[[195032,195032],"mapped",[163631]],[[195033,195033],"mapped",[133124]],[[195034,195034],"mapped",[36299]],[[195035,195035],"mapped",[36284]],[[195036,195036],"mapped",[36336]],[[195037,195037],"mapped",[133342]],[[195038,195038],"mapped",[36564]],[[195039,195039],"mapped",[36664]],[[195040,195040],"mapped",[165330]],[[195041,195041],"mapped",[165357]],[[195042,195042],"mapped",[37012]],[[195043,195043],"mapped",[37105]],[[195044,195044],"mapped",[37137]],[[195045,195045],"mapped",[165678]],[[195046,195046],"mapped",[37147]],[[195047,195047],"mapped",[37432]],[[195048,195048],"mapped",[37591]],[[195049,195049],"mapped",[37592]],[[195050,195050],"mapped",[37500]],[[195051,195051],"mapped",[37881]],[[195052,195052],"mapped",[37909]],[[195053,195053],"mapped",[166906]],[[195054,195054],"mapped",[38283]],[[195055,195055],"mapped",[18837]],[[195056,195056],"mapped",[38327]],[[195057,195057],"mapped",[167287]],[[195058,195058],"mapped",[18918]],[[195059,195059],"mapped",[38595]],[[195060,195060],"mapped",[23986]],[[195061,195061],"mapped",[38691]],[[195062,195062],"mapped",[168261]],[[195063,195063],"mapped",[168474]],[[195064,195064],"mapped",[19054]],[[195065,195065],"mapped",[19062]],[[195066,195066],"mapped",[38880]],[[195067,195067],"mapped",[168970]],[[195068,195068],"mapped",[19122]],[[195069,195069],"mapped",[169110]],[[195070,195071],"mapped",[38923]],[[195072,195072],"mapped",[38953]],[[195073,195073],"mapped",[169398]],[[195074,195074],"mapped",[39138]],[[195075,195075],"mapped",[19251]],[[195076,195076],"mapped",[39209]],[[195077,195077],"mapped",[39335]],[[195078,195078],"mapped",[39362]],[[195079,195079],"mapped",[39422]],[[195080,195080],"mapped",[19406]],[[195081,195081],"mapped",[170800]],[[195082,195082],"mapped",[39698]],[[195083,195083],"mapped",[40000]],[[195084,195084],"mapped",[40189]],[[195085,195085],"mapped",[19662]],[[195086,195086],"mapped",[19693]],[[195087,195087],"mapped",[40295]],[[195088,195088],"mapped",[172238]],[[195089,195089],"mapped",[19704]],[[195090,195090],"mapped",[172293]],[[195091,195091],"mapped",[172558]],[[195092,195092],"mapped",[172689]],[[195093,195093],"mapped",[40635]],[[195094,195094],"mapped",[19798]],[[195095,195095],"mapped",[40697]],[[195096,195096],"mapped",[40702]],[[195097,195097],"mapped",[40709]],[[195098,195098],"mapped",[40719]],[[195099,195099],"mapped",[40726]],[[195100,195100],"mapped",[40763]],[[195101,195101],"mapped",[173568]],[[195102,196605],"disallowed"],[[196606,196607],"disallowed"],[[196608,262141],"disallowed"],[[262142,262143],"disallowed"],[[262144,327677],"disallowed"],[[327678,327679],"disallowed"],[[327680,393213],"disallowed"],[[393214,393215],"disallowed"],[[393216,458749],"disallowed"],[[458750,458751],"disallowed"],[[458752,524285],"disallowed"],[[524286,524287],"disallowed"],[[524288,589821],"disallowed"],[[589822,589823],"disallowed"],[[589824,655357],"disallowed"],[[655358,655359],"disallowed"],[[655360,720893],"disallowed"],[[720894,720895],"disallowed"],[[720896,786429],"disallowed"],[[786430,786431],"disallowed"],[[786432,851965],"disallowed"],[[851966,851967],"disallowed"],[[851968,917501],"disallowed"],[[917502,917503],"disallowed"],[[917504,917504],"disallowed"],[[917505,917505],"disallowed"],[[917506,917535],"disallowed"],[[917536,917631],"disallowed"],[[917632,917759],"disallowed"],[[917760,917999],"ignored"],[[918000,983037],"disallowed"],[[983038,983039],"disallowed"],[[983040,1048573],"disallowed"],[[1048574,1048575],"disallowed"],[[1048576,1114109],"disallowed"],[[1114110,1114111],"disallowed"]]');

/***/ }),

/***/ 2357:
/***/ ((module) => {

"use strict";
module.exports = require("assert");;

/***/ }),

/***/ 3129:
/***/ ((module) => {

"use strict";
module.exports = require("child_process");;

/***/ }),

/***/ 8614:
/***/ ((module) => {

"use strict";
module.exports = require("events");;

/***/ }),

/***/ 5747:
/***/ ((module) => {

"use strict";
module.exports = require("fs");;

/***/ }),

/***/ 8605:
/***/ ((module) => {

"use strict";
module.exports = require("http");;

/***/ }),

/***/ 7211:
/***/ ((module) => {

"use strict";
module.exports = require("https");;

/***/ }),

/***/ 1631:
/***/ ((module) => {

"use strict";
module.exports = require("net");;

/***/ }),

/***/ 2087:
/***/ ((module) => {

"use strict";
module.exports = require("os");;

/***/ }),

/***/ 5622:
/***/ ((module) => {

"use strict";
module.exports = require("path");;

/***/ }),

/***/ 4213:
/***/ ((module) => {

"use strict";
module.exports = require("punycode");;

/***/ }),

/***/ 2413:
/***/ ((module) => {

"use strict";
module.exports = require("stream");;

/***/ }),

/***/ 4016:
/***/ ((module) => {

"use strict";
module.exports = require("tls");;

/***/ }),

/***/ 8835:
/***/ ((module) => {

"use strict";
module.exports = require("url");;

/***/ }),

/***/ 1669:
/***/ ((module) => {

"use strict";
module.exports = require("util");;

/***/ }),

/***/ 8761:
/***/ ((module) => {

"use strict";
module.exports = require("zlib");;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __nccwpck_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			__webpack_modules__[moduleId].call(module.exports, module, module.exports, __nccwpck_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete __webpack_module_cache__[moduleId];
/******/ 		}
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat */
/******/ 	
/******/ 	if (typeof __nccwpck_require__ !== 'undefined') __nccwpck_require__.ab = __dirname + "/";/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __nccwpck_require__(2932);
/******/ 	module.exports = __webpack_exports__;
/******/ 	
/******/ })()
;
//# sourceMappingURL=index.js.map